(undo-tree-save-format-version . 1)
"04b6d85d3ba881f0c6db8144e5a985ec8bb73b99"
[nil nil nil nil (26025 48420 657817 0) 0 nil]
([nil nil ((#("%?" 0 2 (fontified nil)) . -151) (153 . 153) (apply -11 143 154 undo--wrap-and-run-primitive-undo 143 154 (("* " . 143) (145 . 148) (143 . 153)))) nil (26025 48420 657816 0) 0 nil])
([nil nil ((151 . 160)) nil (26025 48420 657815 0) 0 nil])
([nil nil ((#("n" 0 1 (face org-level-2 fontified t)) . -159) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 160) nil (26025 48420 657814 0) 0 nil])
([nil nil ((159 . 172)) nil (26025 48420 657812 0) 0 nil])
([nil nil ((#("garderob" 0 8 (face org-level-2 fontified t)) . -164) (undo-tree-id8 . -8) (undo-tree-id9 . -8) 172) nil (26025 48420 657811 0) 0 nil])
([nil nil ((#("igenom " 0 7 (face org-level-2 fontified t)) . -157) (undo-tree-id6 . -7) (undo-tree-id7 . -7) 164) nil (26025 48420 657804 0) 0 nil])
([nil nil ((#("kolla " 0 6 (face org-level-2 fontified t)) . -151) (undo-tree-id4 . -6) (undo-tree-id5 . -6) 157) nil (26025 48420 657802 0) 0 nil])
([nil nil ((151 . 172)) nil (26025 48420 657800 0) 0 nil])
([nil nil ((172 . 184)) nil (26025 48420 657799 0) 0 nil])
([nil nil ((184 . 204)) nil (26025 48420 657798 0) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-2 fontified t)) . -202) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("+" 0 1 (face org-level-2 fontified t)) . -203) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 204) nil (26025 48420 657797 0) 0 nil])
([nil nil ((202 . 216)) nil (26025 48420 657775 0) 0 nil])
([nil nil ((216 . 217)) nil (26025 48420 657774 0) 0 nil])
([nil nil ((217 . 245)) nil (26025 48420 657769 0) 0 nil])
([nil nil ((nil org-todo-head nil 81 . 114) (nil org-todo-head nil 74 . 81) (nil org-todo-head nil 73 . 74) (75 . 81) (#(" TODO " 0 1 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 5 (face (org-todo org-level-2) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 5 6 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 75) (t 26025 48420 665166 633000) (81 . 81) (t 26025 48420 665166 633000)) nil (26025 48464 362728 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -254) (256 . 256) (apply -11 246 257 undo--wrap-and-run-primitive-undo 246 257 (("* " . 246) (248 . 251) (246 . 256)))) nil (26025 48464 362727 0) 0 nil])
([nil nil ((290 . 318) (278 . 290) (277 . 278) (#("=" 0 1 (face org-level-2 fontified t)) . -277) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 278 (275 . 278) (254 . 275)) nil (26025 48464 362726 0) 0 nil])
([nil nil ((nil face org-date 318 . 319) (nil fontified t 318 . 319) (318 . 319) 317) nil (26025 48464 362715 0) 0 nil])
([nil nil ((319 . 322)) nil (26025 48464 362714 0) 0 nil])
([nil nil ((nil org-todo-head nil 326 . 327) (nil org-todo-head nil 322 . 326) (nil org-todo-head nil 320 . 322) (nil org-todo-head nil 319 . 320) (321 . 327) (#(" " 0 1 (face org-level-2 fontified t)) . 321) (322 . 322)) nil (26025 48464 362712 0) 0 nil])
([nil nil ((327 . 328)) nil (26025 48464 362711 0) 0 nil])
([nil nil ((#("ö" 0 1 (face org-level-2 org-todo-head "TODO" fontified t)) . -327) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 328) nil (26025 48464 362710 0) 0 nil])
([nil nil ((327 . 332)) nil (26025 48464 362708 0) 0 nil])
([nil nil ((332 . 334)) nil (26025 48464 362707 0) 0 nil])
([nil nil ((#("p" 0 1 (face org-level-2 org-todo-head "TODO" fontified t)) . -333) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 334) nil (26025 48464 362706 0) 0 nil])
([nil nil ((333 . 339)) nil (26025 48464 362695 0) 0 nil])
([nil nil ((339 . 367)) nil (26025 48464 362691 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -376) (378 . 378) (apply -11 368 379 undo--wrap-and-run-primitive-undo 368 379 (("* " . 368) (370 . 373) (368 . 378)))) nil (26025 49228 262085 0) 0 nil])
([nil nil ((376 . 397)) nil (26025 49228 262083 0) 0 nil])
([nil nil ((397 . 407)) nil (26025 49228 262079 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -416) (418 . 418) (apply -11 408 419 undo--wrap-and-run-primitive-undo 408 419 (("* " . 408) (410 . 413) (408 . 418)))) nil (26025 50699 93204 0) 0 nil])
([nil nil ((416 . 437)) nil (26025 50699 93203 0) 0 nil])
([nil nil ((437 . 445)) nil (26025 50699 93203 0) 0 nil])
([nil nil ((#("d" 0 1 (face org-level-2 fontified t)) . -444) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 445) nil (26025 50699 93201 0) 0 nil])
([nil nil ((444 . 445)) nil (26025 50699 93191 0) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-2 fontified t)) . -443) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("c" 0 1 (face org-level-2 fontified t)) . -444) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 445) nil (26025 50699 93187 0) 0 nil])
([nil nil ((443 . 449)) nil (26025 50699 93117 0) 0 nil])
([nil nil ((#("** DONE skriv privata förbättningsområden
SCHEDULED: <2024-01-18 Thu>
" 0 1 (face org-level-2 org-todo-head "TODO" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-todo-head "TODO" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-done org-level-2) org-todo-head "TODO" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 8 (face org-level-2 org-todo-head "TODO" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 8 41 (face (org-headline-done org-level-2) org-todo-head "TODO" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 41 42 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 42 52 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline face org-special-keyword fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 52 53 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 53 68 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 68 69 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 69 70 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 73) (undo-tree-id116 . -70) (undo-tree-id117 . -69) (t 26025 50699 100595 911000)) nil (26026 23407 174964 0) 0 nil])
([nil nil ((nil org-todo-head nil 81 . 147) (nil org-todo-head nil 74 . 81) (nil org-todo-head nil 73 . 74) (75 . 81) (#(" TODO " 0 1 (face org-level-2 isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1 5 (face (org-todo org-level-2) isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 5 6 (face org-level-2 isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 75) (t 26026 23407 183575 363000) (81 . 81) (t 26026 23407 183575 363000)) nil (26026 25108 390996 0) 0 nil])
([nil nil ((#("** DONE kolla igenom garderob, prova kombinationer av byxor, jackor & skor
" 0 1 (face org-level-2 org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1 3 (face org-level-2 org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 3 7 (face (org-done org-level-2) org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 7 8 (face org-level-2 org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 8 74 (face (org-headline-done org-level-2) org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 74 75 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 73) (undo-tree-id126 . -74)) nil (26026 25108 390995 0) 0 nil])
([nil nil ((73 . 148)) nil (26026 25108 390995 0) 0 nil])
([nil nil ((#("** DONE kolla igenom garderob, prova kombinationer av byxor, jackor & skor
SCHEDULED: <2024-01-19 Fri>
" 0 1 (face org-level-2 org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1 3 (face org-level-2 org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 3 7 (face (org-done org-level-2) org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 7 8 (face org-level-2 org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 8 74 (face (org-headline-done org-level-2) org-todo-head "TODO" isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 74 75 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 75 76 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline face org-special-keyword isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 76 85 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline face org-special-keyword isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 85 86 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 86 101 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 101 102 (org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t) 102 103 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 73) (undo-tree-id124 . -102) (undo-tree-id125 . 103)) nil (26026 25108 390994 0) 0 nil])
([nil nil ((#("** TODO enable prog mode for .edn files
** TODO kill buffers on close emacsclient
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face org-level-2 fontified t) 1 3 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face org-level-2 fontified t) 3 7 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face (org-todo org-level-2) fontified t) 7 39 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face org-level-2 fontified t) 39 40 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 40 41 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face org-level-2 fontified t) 41 43 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face org-level-2 fontified t) 43 47 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face (org-todo org-level-2) fontified t) 47 81 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show face org-level-2 fontified t) 81 82 (fontified t)) . 195) (undo-tree-id118 . -40) (undo-tree-id119 . -40) (undo-tree-id120 . -40) (undo-tree-id121 . -81) (undo-tree-id122 . -40) (undo-tree-id123 . -40) 235) nil (26026 25108 390990 0) 0 nil])
([nil nil ((129 . 145) (#("<2024-01-19 Fri>" 0 16 (org-category "capture" fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline)) . 129) (t 26026 25108 395674 581000) (145 . 145) (t 26026 25108 395674 581000)) nil (26026 32517 560023 0) 0 nil])
([nil nil ((129 . 145) (#("<2024-01-20 Sat>" 0 16 (org-category "capture" fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline)) . -129) (145 . 145)) nil (26026 32517 560022 0) 0 nil])
([nil nil ((129 . 145) (#("<2024-01-21 Sun>" 0 16 (org-category "capture" fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline)) . -129) (145 . 145)) nil (26026 32517 560021 0) 0 nil])
([nil nil ((#("SCHEDULED: <2024-01-22 Mon>
" 0 10 (face org-special-keyword org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 10 11 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 11 26 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 26 27 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 27 28 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 118) (undo-tree-id114 . 1) (undo-tree-id115 . -26) (undo-tree-id116 . -26) (undo-tree-id117 . -26) (undo-tree-id118 . -26) (undo-tree-id119 . -26) (undo-tree-id120 . -26) (undo-tree-id121 . -26) (undo-tree-id122 . -26) (undo-tree-id123 . -26) (undo-tree-id124 . -26) (undo-tree-id125 . -26) (undo-tree-id126 . -26) (undo-tree-id127 . -26) (undo-tree-id128 . -26) (undo-tree-id129 . -26) (undo-tree-id130 . -26) (undo-tree-id131 . -26) (undo-tree-id132 . -26) (undo-tree-id133 . -26) (undo-tree-id134 . -26) (undo-tree-id135 . -26) (undo-tree-id136 . -26) (undo-tree-id137 . -26) (undo-tree-id138 . -26) (undo-tree-id139 . -26) (undo-tree-id140 . -26) (undo-tree-id141 . -26) (undo-tree-id142 . -26) (undo-tree-id143 . -26) (undo-tree-id144 . -26) (undo-tree-id145 . -26) (undo-tree-id146 . -26) (undo-tree-id147 . -26) (undo-tree-id148 . -26) (undo-tree-id149 . -26) (undo-tree-id150 . -26) (undo-tree-id151 . -26) (undo-tree-id152 . -26) (undo-tree-id153 . -26) (undo-tree-id154 . -26) (undo-tree-id155 . -26) (undo-tree-id156 . -26) (undo-tree-id157 . -26) (undo-tree-id158 . -26) (undo-tree-id159 . -26) (undo-tree-id160 . -26) (undo-tree-id161 . -26) (undo-tree-id162 . -26) (undo-tree-id163 . -26) (undo-tree-id164 . -26) (undo-tree-id165 . -26) (undo-tree-id166 . -26) (undo-tree-id167 . -26) (undo-tree-id168 . -26) (undo-tree-id169 . -26) (undo-tree-id170 . -26) (undo-tree-id171 . -26) (undo-tree-id172 . -26) (undo-tree-id173 . -26) (undo-tree-id174 . -26) (undo-tree-id175 . -26) (undo-tree-id176 . -26) (undo-tree-id177 . -26) (undo-tree-id178 . -26) (undo-tree-id179 . -26) (undo-tree-id180 . -26) (undo-tree-id181 . -26) (undo-tree-id182 . -26) (undo-tree-id183 . -26) (undo-tree-id184 . -26) (undo-tree-id185 . -26) (undo-tree-id186 . -26) (undo-tree-id187 . -26) (undo-tree-id188 . -26) (undo-tree-id189 . -26) (undo-tree-id190 . -26) (undo-tree-id191 . -26) (undo-tree-id192 . -26) (undo-tree-id193 . -26) (undo-tree-id194 . -26) (undo-tree-id195 . -26) (undo-tree-id196 . -26) (undo-tree-id197 . -26) (undo-tree-id198 . -26) (undo-tree-id199 . -26) (undo-tree-id200 . -26) (undo-tree-id201 . -26) (undo-tree-id202 . -26) (undo-tree-id203 . -26) (undo-tree-id204 . -26) (undo-tree-id205 . -26) (undo-tree-id206 . -26) (undo-tree-id207 . -26) (undo-tree-id208 . -26) (undo-tree-id209 . -26) (undo-tree-id210 . -26) (undo-tree-id211 . -26) (undo-tree-id212 . -26) (undo-tree-id213 . -26) (undo-tree-id214 . -26) (undo-tree-id215 . -26) (undo-tree-id216 . -26) (undo-tree-id217 . -26) (undo-tree-id218 . -26) (undo-tree-id219 . -26) (undo-tree-id220 . -26) (undo-tree-id221 . -26) (undo-tree-id222 . -26) (undo-tree-id223 . -26) (undo-tree-id224 . -26) (undo-tree-id225 . -26) (undo-tree-id226 . -26) (undo-tree-id227 . -26) (undo-tree-id228 . -26) (undo-tree-id229 . -26) (undo-tree-id230 . -26) (undo-tree-id231 . -26) (undo-tree-id232 . -26) (undo-tree-id233 . -26) (undo-tree-id234 . -26) (undo-tree-id235 . -26) (undo-tree-id236 . -26) (undo-tree-id237 . -26) (undo-tree-id238 . -26) (undo-tree-id239 . -26) (undo-tree-id240 . -26) (undo-tree-id241 . -26) (undo-tree-id242 . -26) (undo-tree-id243 . -26) (undo-tree-id244 . -26) (undo-tree-id245 . -26) (undo-tree-id246 . -26) (undo-tree-id247 . -26) (undo-tree-id248 . -26) (undo-tree-id249 . -26) (undo-tree-id250 . -26) (undo-tree-id251 . -26) (undo-tree-id252 . -26) (undo-tree-id253 . -26) (undo-tree-id254 . -26) (undo-tree-id255 . -26) (undo-tree-id256 . -26) (undo-tree-id257 . -26) (undo-tree-id258 . -26) (undo-tree-id259 . -26) (undo-tree-id260 . -26) (undo-tree-id261 . -26) (undo-tree-id262 . -26) (undo-tree-id263 . -26) (undo-tree-id264 . -26) (undo-tree-id265 . -26) (undo-tree-id266 . -26) (undo-tree-id267 . -26) (undo-tree-id268 . -26) (undo-tree-id269 . -26) (undo-tree-id270 . -26) (undo-tree-id271 . -26) (undo-tree-id272 . -26) (undo-tree-id273 . -26) (undo-tree-id274 . -26) (undo-tree-id275 . -26) (undo-tree-id276 . -26) (undo-tree-id277 . -26) (undo-tree-id278 . -26) (undo-tree-id279 . -26) (undo-tree-id280 . -26) (undo-tree-id281 . -26) (undo-tree-id282 . -26) (undo-tree-id283 . -26) (undo-tree-id284 . -26) (undo-tree-id285 . -26) (undo-tree-id286 . -26) (undo-tree-id287 . -26) (undo-tree-id288 . -23) (undo-tree-id289 . -23) (undo-tree-id290 . -23) (undo-tree-id291 . -23) (undo-tree-id292 . -23) (undo-tree-id293 . -23) (undo-tree-id294 . -23) (undo-tree-id295 . -23) (undo-tree-id296 . -23) (undo-tree-id297 . -23) (undo-tree-id298 . -23) (undo-tree-id299 . -23) (undo-tree-id300 . -23) (undo-tree-id301 . -23) (undo-tree-id302 . -23) (undo-tree-id303 . -23) (undo-tree-id304 . -23) (undo-tree-id305 . -23) (undo-tree-id306 . -23) (undo-tree-id307 . -23) (undo-tree-id308 . -23) (undo-tree-id309 . -23) (undo-tree-id310 . -23) (undo-tree-id311 . -23) (undo-tree-id312 . -23) (undo-tree-id313 . -23) (undo-tree-id314 . -23) (undo-tree-id315 . -23) (undo-tree-id316 . -23) (undo-tree-id317 . -23) (undo-tree-id318 . -23) (undo-tree-id319 . -23) (undo-tree-id320 . -23) (undo-tree-id321 . -23) (undo-tree-id322 . -23) (undo-tree-id323 . -23) (undo-tree-id324 . -23) (undo-tree-id325 . -23) (undo-tree-id326 . -23) (undo-tree-id327 . -23) (undo-tree-id328 . -23) (undo-tree-id329 . -23) (undo-tree-id330 . -23) (undo-tree-id331 . -23) (undo-tree-id332 . -23) (undo-tree-id333 . -23) (undo-tree-id334 . -23) (undo-tree-id335 . -23) (undo-tree-id336 . -23) (undo-tree-id337 . -23) (undo-tree-id338 . -23) (undo-tree-id339 . -23) (undo-tree-id340 . -23) (undo-tree-id341 . -23) (undo-tree-id342 . -23) (undo-tree-id343 . -23) (undo-tree-id344 . -23) (undo-tree-id345 . -23) (undo-tree-id346 . -23) (undo-tree-id347 . -23) (undo-tree-id348 . -23) (undo-tree-id349 . -23) (undo-tree-id350 . -23) (undo-tree-id351 . -23) (undo-tree-id352 . -23) (undo-tree-id353 . -23) (undo-tree-id354 . -23) (undo-tree-id355 . -23) (undo-tree-id356 . -23) (undo-tree-id357 . -23) (undo-tree-id358 . -23) (undo-tree-id359 . -23) (undo-tree-id360 . -23) (undo-tree-id361 . -23) (undo-tree-id362 . -23) (undo-tree-id363 . -23) (undo-tree-id364 . -23) (undo-tree-id365 . -23) (undo-tree-id366 . -23) (undo-tree-id367 . -23) (undo-tree-id368 . -23) (undo-tree-id369 . -23) (undo-tree-id370 . -23) (undo-tree-id371 . -23) (undo-tree-id372 . -23) (undo-tree-id373 . -23) (undo-tree-id374 . -23) (undo-tree-id375 . -23) (undo-tree-id376 . -23) (undo-tree-id377 . -23) (undo-tree-id378 . -23) (undo-tree-id379 . -23) (undo-tree-id380 . -23) (undo-tree-id381 . -23) (undo-tree-id382 . -23) (undo-tree-id383 . -23) (undo-tree-id384 . -23) (undo-tree-id385 . -23) (undo-tree-id386 . -23) (undo-tree-id387 . -23) (undo-tree-id388 . -23) (undo-tree-id389 . -23) (undo-tree-id390 . -23) (undo-tree-id391 . -23) (undo-tree-id392 . -23) (undo-tree-id393 . -23) (undo-tree-id394 . -23) (undo-tree-id395 . -23) (undo-tree-id396 . -23) (undo-tree-id397 . -23) (undo-tree-id398 . -23) (undo-tree-id399 . -23) (undo-tree-id400 . -23) (undo-tree-id401 . -23) (undo-tree-id402 . -23) (undo-tree-id403 . -23) (undo-tree-id404 . -23) (undo-tree-id405 . -23) (undo-tree-id406 . -23) (undo-tree-id407 . -23) (undo-tree-id408 . -23) (undo-tree-id409 . -23) (undo-tree-id410 . -23) (undo-tree-id411 . -23) (undo-tree-id412 . -23) (undo-tree-id413 . -23) (undo-tree-id414 . -23) (undo-tree-id415 . -23) (undo-tree-id416 . -2) (undo-tree-id417 . -23) (undo-tree-id418 . -23) (undo-tree-id419 . -23) (undo-tree-id420 . -23) (undo-tree-id421 . -23) (undo-tree-id422 . -23) (undo-tree-id423 . -23) (undo-tree-id424 . -23) (undo-tree-id425 . -23) (undo-tree-id426 . -23) (undo-tree-id427 . -23) (undo-tree-id428 . -23) (undo-tree-id429 . -23) (undo-tree-id430 . -23) (undo-tree-id431 . -23) (undo-tree-id432 . -23) (undo-tree-id433 . -23) (undo-tree-id434 . -23) (undo-tree-id435 . -23) (undo-tree-id436 . -23) (undo-tree-id437 . -23) (undo-tree-id438 . -23) (undo-tree-id439 . -23) (undo-tree-id440 . -23) (undo-tree-id441 . -23) (undo-tree-id442 . -23) (undo-tree-id443 . -23) (undo-tree-id444 . -23) (undo-tree-id445 . -23) (undo-tree-id446 . -23) (undo-tree-id447 . -23) (undo-tree-id448 . -23) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -28) (undo-tree-id488 . -27) 120) nil (26026 32517 560016 0) 0 nil])
([nil nil ((144 . 145) (#("<" 0 1 (fontified t)) . -144) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 145 (138 . 145) (127 . 138) (#(";" 0 1 (fontified t)) . -127) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("s" 0 1 (fontified t)) . -128) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 129 (127 . 129) (#("˘" 0 1 (fontified t)) . -127) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 128 (118 . 128) (117 . 118) 75) nil (26026 32517 559866 0) 0 nil])
([nil nil ((203 . 214) (t 26026 32517 565823 973000)) nil (26026 39477 416646 0) 0 nil])
([nil nil ((nil org-todo-head nil 109 . 110) (nil org-todo-head nil 105 . 109) (nil org-todo-head nil 103 . 105) (nil org-todo-head nil 102 . 103) (104 . 110) (#(" " 0 1 (face org-level-2 fontified t)) . 104) (105 . 105) (101 . 105) (81 . 101) (nil org-todo-head nil 80 . 81) (nil org-todo-head nil 76 . 80) (nil org-todo-head nil 74 . 76) (nil org-todo-head nil 73 . 74) (75 . 81) (#(" " 0 1 (face org-level-2 fontified t)) . 75) (76 . 76) (73 . 76) (nil org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline 72 . 73) (nil face org-date 72 . 73) (nil isearch-open-invisible org-fold-core--isearch-show 72 . 73) (nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary 72 . 73) (nil fontified t 72 . 73) (nil org-category "capture" 72 . 73) (72 . 73) 9) nil (26026 39477 416644 0) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-2 org-todo-head "TODO" fontified t)) . -109)) nil (26026 39477 416637 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -240) (242 . 242) (apply -11 232 243 undo--wrap-and-run-primitive-undo 232 243 (("* " . 232) (234 . 237) (232 . 242)))) nil (26026 39623 477747 0) 0 nil])
([nil nil ((#("** TODO 
" 0 1 (face org-level-2 fontified t) 1 3 (face org-level-2 fontified t) 3 7 (face (org-todo org-level-2) fontified t) 7 8 (face org-level-2 fontified t) 8 9 (fontified nil)) . 232) (undo-tree-id0 . -8) (undo-tree-id1 . 1) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -9) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) 240) nil (26026 39623 477743 0) 0 nil])
([nil nil ((109 . 110) (#("
** TODO köp jalingar, strumpor & prova byxor
SCHEDULED: <2024-01-20 Sat>
** TODO köp 20p cola
SCHEDULED: <2024-01-19 Fri>" 0 122 (org-category "capture" fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline)) . 109) (t 26026 39623 483836 936000)) nil (26027 48449 670279 0) 0 nil])
([nil nil ((#("** TODO emacs resize windows
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 28 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 28 29 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 73) (undo-tree-id37 . -28) (t 26026 46515 435075 389000)) nil (26027 48449 670278 0) 0 nil])
([nil nil ((#("** TODO 
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 8 (face org-level-2 fontified t) 8 9 (org-category "capture" fontified t)) . 73) (undo-tree-id35 . -9) (undo-tree-id36 . -8)) nil (26027 48449 670275 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -81) (83 . 83) (apply -11 73 84 undo--wrap-and-run-primitive-undo 73 84 (("* " . 73) (75 . 78) (73 . 83)))) nil (26031 47626 746295 0) 0 nil])
([nil nil ((81 . 90)) nil (26031 47626 746295 0) 0 nil])
([nil nil ((#("~" 0 1 (face org-level-2 fontified t)) . -89) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 90) nil (26031 47626 746294 0) 0 nil])
([nil nil ((89 . 92)) nil (26031 47626 746293 0) 0 nil])
([nil nil ((#("p" 0 1 (face org-level-2 fontified t)) . -91) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 92) nil (26031 47626 746293 0) 0 nil])
([nil nil ((91 . 97)) nil (26031 47626 746291 0) 0 nil])
([nil nil ((97 . 98)) nil (26031 47626 746291 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -97) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 98) nil (26031 47626 746290 0) 0 nil])
([nil nil ((97 . 125)) nil (26031 47626 746274 0) 0 nil])
([nil nil ((nil org-todo-head nil 81 . 97) (nil org-todo-head nil 74 . 81) (nil org-todo-head nil 73 . 74) (75 . 81) (#(" TODO " 0 1 (org-category "capture" face org-level-2 fontified t) 1 5 (org-category "capture" face (org-todo org-level-2) fontified t) 5 6 (org-category "capture" face org-level-2 fontified t)) . 75) (t 26031 47626 750470 272000) (81 . 81) (t 26031 47626 750470 272000)) nil (26031 52170 740707 0) 0 nil])
([nil nil ((75 . 81) (#(" NEXT " 0 6 (org-todo-head "TODO" org-category "capture" face org-level-2 fontified nil)) . 75) (81 . 81)) nil (26031 52170 740702 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -134) (136 . 136) (apply -11 126 137 undo--wrap-and-run-primitive-undo 126 137 (("* " . 126) (128 . 131) (126 . 136)))) nil (26031 60625 334869 0) 0 nil])
([nil nil ((134 . 135)) nil (26031 60625 334868 0) 0 nil])
([nil nil ((#("s" 0 1 (face org-level-2 fontified t)) . -134) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 135) nil (26031 60625 334867 0) 0 nil])
([nil nil ((134 . 138)) nil (26031 60625 334854 0) 0 nil])
([nil nil ((#("-" 0 1 (face org-level-2 fontified t)) . -137) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 138) nil (26031 60625 334853 0) 0 nil])
([nil nil ((137 . 139)) nil (26031 60625 334844 0) 0 nil])
([nil nil ((139 . 157)) nil (26031 60625 334843 0) 0 nil])
([nil nil ((#("t" 0 1 (face org-level-2 fontified t)) . -155) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("i" 0 1 (face org-level-2 fontified t)) . -156) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 157) nil (26031 60625 334840 0) 0 nil])
([nil nil ((155 . 167)) nil (26031 60625 334793 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -176) (178 . 178) (apply -11 168 179 undo--wrap-and-run-primitive-undo 168 179 (("* " . 168) (170 . 173) (168 . 178)))) nil (26032 10443 734936 0) 0 nil])
([nil nil ((#("** TODO 
" 0 1 (face org-level-2 fontified t) 1 3 (face org-level-2 fontified t) 3 7 (face (org-todo org-level-2) fontified t) 7 8 (face org-level-2 fontified t) 8 9 (fontified t)) . 168) (undo-tree-id0 . -7) (undo-tree-id1 . 1) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -9) (undo-tree-id5 . -7) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (undo-tree-id8 . -7) (undo-tree-id9 . -7) (undo-tree-id10 . -7) (undo-tree-id11 . -7) (undo-tree-id12 . -7) (undo-tree-id13 . -7) (undo-tree-id14 . -7) (undo-tree-id15 . -7) (undo-tree-id16 . -7) (undo-tree-id17 . -7) (undo-tree-id18 . -7) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -7) (undo-tree-id24 . -7) (undo-tree-id25 . -7) (undo-tree-id26 . -7) (undo-tree-id27 . -7) (undo-tree-id28 . -7) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -7) (undo-tree-id34 . -7) 175) nil (26032 10443 734931 0) 0 nil])
([nil nil ((#("** DONE skicka v:s paket
SCHEDULED: <2024-01-23 Tue>
" 0 1 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-done org-level-2) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 8 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 8 24 (face (org-headline-done org-level-2) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 24 25 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 25 35 (face org-special-keyword fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 35 36 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 36 51 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 51 52 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 52 53 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 73) (undo-tree-id44 . -52) (t 26032 10443 749344 575000)) nil (26032 11907 270338 0) 0 nil])
([nil nil ((#("** TODO alt+3< not working switch desktop
" 0 1 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 41 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 41 42 (fontified t)) . 73) (undo-tree-id42 . -42) (undo-tree-id43 . -41)) nil (26032 11907 270336 0) 0 nil])
([nil nil ((#("** TODO ansök om e-faktura bredband
SCHEDULED: <2024-02-29 Thu>
" 0 1 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 35 (face org-level-2 fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 35 36 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 36 46 (face org-special-keyword fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 46 47 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 47 62 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 62 63 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 63 64 (fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 9) (undo-tree-id35 . -64) (undo-tree-id36 . -63) (undo-tree-id37 . -64) (undo-tree-id38 . -64) (undo-tree-id39 . -64) (undo-tree-id40 . -64) (undo-tree-id41 . -64)) nil (26032 11907 270331 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -17) (19 . 19) (apply -11 9 20 undo--wrap-and-run-primitive-undo 9 20 (("* " . 9) (11 . 14) (9 . 19)))) nil (26032 15089 552889 0) 0 nil])
([nil nil ((#("** TODO 
" 0 1 (face org-level-2 fontified t) 1 3 (face org-level-2 fontified t) 3 7 (face (org-todo org-level-2) fontified t) 7 8 (face org-level-2 fontified t) 8 9 (fontified nil)) . 9) (undo-tree-id45 . -7) (undo-tree-id46 . 1) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -9) (undo-tree-id50 . -7) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . -7) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7) (undo-tree-id64 . -7) (undo-tree-id65 . -7) (undo-tree-id66 . -7) (undo-tree-id67 . -7) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . 1) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7) (undo-tree-id110 . -7) (undo-tree-id111 . -7) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -7) (undo-tree-id117 . -7) (undo-tree-id118 . -7) (undo-tree-id119 . -7) (undo-tree-id120 . -7) (undo-tree-id121 . -7) (undo-tree-id122 . -7) (undo-tree-id123 . -7) (undo-tree-id124 . -7) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -7) (undo-tree-id128 . -7) (undo-tree-id129 . -7) 16) nil (26032 15089 552883 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -17) (19 . 19) (apply -11 9 20 undo--wrap-and-run-primitive-undo 9 20 (("* " . 9) (11 . 14) (9 . 19)))) nil (26032 23237 762895 0) 0 nil])
([nil nil ((17 . 33)) nil (26032 23237 762894 0) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-2 fontified t)) . -32) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 33) nil (26032 23237 762893 0) 0 nil])
([nil nil ((32 . 42)) nil (26032 23237 762873 0) 0 nil])
([nil nil ((42 . 70)) nil (26032 23237 762869 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -79) (81 . 81) (apply -11 71 82 undo--wrap-and-run-primitive-undo 71 82 (("* " . 71) (73 . 76) (71 . 81)))) nil (26033 10876 688193 0) 0 nil])
([nil nil ((79 . 89)) nil (26033 10876 688192 0) 0 nil])
([nil nil ((#("s" 0 1 (face org-level-2 fontified t)) . -88) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 89) nil (26033 10876 688191 0) 0 nil])
([nil nil ((88 . 91)) nil (26033 10876 688185 0) 0 nil])
([nil nil ((91 . 100)) nil (26033 10876 688185 0) 0 nil])
([nil nil ((100 . 128)) nil (26033 10876 688182 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -137) (139 . 139) (apply -11 129 140 undo--wrap-and-run-primitive-undo 129 140 (("* " . 129) (131 . 134) (129 . 139)))) nil (26033 13654 697156 0) 0 nil])
([nil nil ((137 . 142)) nil (26033 13654 697155 0) 0 nil])
([nil nil ((#("lägg " 0 5 (face org-level-2 fontified t)) . -137) (undo-tree-id4 . -5) (undo-tree-id5 . -5) 142) nil (26033 13654 697154 0) 0 nil])
([nil nil ((137 . 147)) nil (26033 13654 697145 0) 0 nil])
([nil nil ((147 . 175)) nil (26033 13654 697142 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -184) (186 . 186) (apply -11 176 187 undo--wrap-and-run-primitive-undo 176 187 (("* " . 176) (178 . 181) (176 . 186)))) nil (26033 14611 822386 0) 0 nil])
([nil nil ((184 . 205)) nil (26033 14611 822384 0) 0 nil])
([nil nil ((205 . 219)) nil (26033 14611 822381 0) 0 nil])
([nil nil ((nil org-todo-head nil 79 . 100) (nil org-todo-head nil 72 . 79) (nil org-todo-head nil 71 . 72) (73 . 79) (#(" TODO " 0 1 (org-category "capture" face org-level-2 fontified t) 1 5 (org-category "capture" face (org-todo org-level-2) fontified t) 5 6 (org-category "capture" face org-level-2 fontified t)) . 73) (t 26033 14611 829590 874000) (79 . 79) (t 26033 14611 829590 874000)) nil (26033 19608 675977 0) 0 nil])
([nil nil ((73 . 79) (#(" NEXT " 0 6 (org-todo-head "TODO" org-category "capture" face org-level-2 fontified nil)) . 73) (79 . 79)) nil (26033 19608 675976 0) 0 nil])
([nil nil ((159 . 175) (#("<2024-01-24 Wed>" 0 15 (org-category "capture" face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t) 15 16 (org-category "capture" face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight fontified t)) . 159) (175 . 175)) nil (26033 19608 675975 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -228) (230 . 230) (apply -11 220 231 undo--wrap-and-run-primitive-undo 220 231 (("* " . 220) (222 . 225) (220 . 230)))) nil (26033 19608 675974 0) 0 nil])
([nil nil ((228 . 244)) nil (26033 19608 675973 0) 0 nil])
([nil nil ((244 . 253)) nil (26033 19608 675972 0) 0 nil])
([nil nil ((#("s" 0 1 (face org-level-2 fontified t)) . -252) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 253) nil (26033 19608 675970 0) 0 nil])
([nil nil ((252 . 256)) nil (26033 19608 675955 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -265) (267 . 267) (apply -11 257 268 undo--wrap-and-run-primitive-undo 257 268 (("* " . 257) (259 . 262) (257 . 267)))) nil (26033 21034 231817 0) 0 nil])
([nil nil ((265 . 286)) nil (26033 21034 231817 0) 0 nil])
([nil nil ((286 . 293)) nil (26033 21034 231816 0) 0 nil])
([nil nil ((293 . 298)) nil (26033 21034 231813 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -307) (309 . 309) (apply -11 299 310 undo--wrap-and-run-primitive-undo 299 310 (("* " . 299) (301 . 304) (299 . 309)))) nil (26033 21043 526489 0) 0 nil])
([nil nil ((307 . 328)) nil (26033 21043 526488 0) 0 nil])
([nil nil ((328 . 337)) nil (26033 21043 526487 0) 0 nil])
([nil nil ((337 . 340)) nil (26033 21043 526484 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -349) (351 . 351) (apply -11 341 352 undo--wrap-and-run-primitive-undo 341 352 (("* " . 341) (343 . 346) (341 . 351)))) nil (26034 9809 372756 0) 0 nil])
([nil nil ((349 . 350)) nil (26034 9809 372755 0) 0 nil])
([nil nil ((#("a" 0 1 (face org-level-2 fontified t)) . -349) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) 350) nil (26034 9809 372754 0) 0 nil])
([nil nil ((349 . 360)) nil (26034 9809 372746 0) 0 nil])
([nil nil ((360 . 366)) nil (26034 9809 372745 0) 0 nil])
([nil nil ((#("a" 0 1 (face org-level-2 fontified t)) . -365) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 366) nil (26034 9809 372744 0) 0 nil])
([nil nil ((365 . 369)) nil (26034 9809 372736 0) 0 nil])
([nil nil ((#("g" 0 1 (face org-level-2 fontified t)) . -368) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 369) nil (26034 9809 372734 0) 0 nil])
([nil nil ((#("agenda " 0 7 (face org-level-2 fontified t)) . -361) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -5) (undo-tree-id75 . -5) (undo-tree-id76 . -5) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7) (undo-tree-id110 . -7) (undo-tree-id111 . -7) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -7) (undo-tree-id117 . -7) (undo-tree-id118 . -7) (undo-tree-id119 . -7) (undo-tree-id120 . -7) (undo-tree-id121 . -7) (undo-tree-id122 . -7) (undo-tree-id123 . -7) (undo-tree-id124 . -7) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -7) (undo-tree-id128 . -7) (undo-tree-id129 . -7) (undo-tree-id130 . -7) (undo-tree-id131 . -7) (undo-tree-id132 . -7) (undo-tree-id133 . -7) (undo-tree-id134 . -7) (undo-tree-id135 . -7) (undo-tree-id136 . -7) (undo-tree-id137 . -7) (undo-tree-id138 . -7) (undo-tree-id139 . -7) (undo-tree-id140 . -7) (undo-tree-id141 . -7) 368) nil (26034 9809 372714 0) 0 nil])
([nil nil ((361 . 373)) nil (26034 9809 372606 0) 0 nil])
([nil nil ((#("** TODO install org super agenda
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-category "capture" face org-level-2 fontified t) 1 3 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-category "capture" face org-level-2 fontified t) 3 7 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-category "capture" face (org-todo org-level-2) fontified t) 7 32 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-category "capture" face org-level-2 fontified t) 32 33 (org-category "capture" fontified t)) . 341) (undo-tree-id204 . -32) (t 26034 9809 381345 474000)) nil (26034 15001 70984 0) 0 nil])
([nil nil ((#("** TODO font too small on initial startup
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 41 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 41 42 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 257) (undo-tree-id203 . -41)) nil (26034 15001 70982 0) 0 nil])
([nil nil ((#("** DONE svara på svd-formulär
SCHEDULED: <2024-01-24 Wed>
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 8 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 8 29 (face (org-headline-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 29 30 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 30 40 (face org-special-keyword org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 40 41 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 41 56 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 56 57 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 57 58 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 71) (undo-tree-id202 . -57)) nil (26034 15001 70980 0) 0 nil])
([nil nil ((#("** TODO flashcards
SCHEDULED: <2024-01-25 Thu>
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 18 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 18 19 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 19 29 (face org-special-keyword org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 29 30 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 30 45 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 45 46 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 46 47 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 71) (undo-tree-id201 . -46)) nil (26034 15001 70977 0) 0 nil])
([nil nil ((#("** TODO see lisp documentation in org babel
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 43 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 43 44 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 71) (undo-tree-id200 . -43)) nil (26034 15001 70975 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 107 . 108) (#("
" 0 1 (fontified nil isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary org-category "capture")) . -151) (107 . 152) 71) nil (26034 15001 70974 0) 0 nil])
([nil nil ((#("** TODO see lisp documentation in org babel
** TODO disable evil mode in pdfview mode
" 0 1 (face org-level-2 fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary org-category "capture") 1 3 (face org-level-2 fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary org-category "capture") 3 7 (face (org-todo org-level-2) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary org-category "capture") 7 43 (face org-level-2 fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary org-category "capture") 43 44 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 44 45 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 45 47 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 47 51 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 51 85 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 85 86 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-category "capture" fontified t)) . 108) (undo-tree-id194 . -44) (undo-tree-id195 . -86) (undo-tree-id196 . -85) (undo-tree-id197 . -44) (undo-tree-id198 . -44) (undo-tree-id199 . -44) 152) nil (26034 15001 70973 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -116) (118 . 118) (apply -11 108 119 undo--wrap-and-run-primitive-undo 108 119 (("* " . 108) (110 . 113) (108 . 118)))) nil (26034 15001 70957 0) 0 nil])
([nil nil ((116 . 130)) nil (26034 15001 70955 0) 0 nil])
([nil nil ((130 . 158)) nil (26034 15001 70951 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -167) (169 . 169) (apply -11 159 170 undo--wrap-and-run-primitive-undo 159 170 (("* " . 159) (161 . 164) (159 . 169)))) nil (26034 15009 291560 0) 0 nil])
([nil nil ((167 . 169)) nil (26034 15009 291559 0) 0 nil])
([nil nil ((169 . 181)) nil (26034 15009 291558 0) 0 nil])
([nil nil ((181 . 209)) nil (26034 15009 291553 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -218) (220 . 220) (apply -11 210 221 undo--wrap-and-run-primitive-undo 210 221 (("* " . 210) (212 . 215) (210 . 220)))) nil (26034 16490 794487 0) 0 nil])
([nil nil ((218 . 239)) nil (26034 16490 794486 0) 0 nil])
([nil nil ((239 . 258)) nil (26034 16490 794483 0) 0 nil])
([nil nil ((181 . 189) (t 26034 16490 802800 942000)) nil (26034 18610 197200 0) 0 nil])
([nil nil ((nil org-todo-head nil 167 . 189) (nil org-todo-head nil 160 . 167) (nil org-todo-head nil 159 . 160) (161 . 167) (#(" TODO " 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 5 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 5 6 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 161) (t 26034 18610 204181 142000) (167 . 167) (t 26034 18610 204181 142000)) nil (26034 31934 31474 0) 0 nil])
([nil nil ((161 . 167) (#(" NEXT " 0 6 (org-todo-head "TODO" face org-level-2 org-category "capture" fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 161) (167 . 167)) nil (26034 31934 31469 0) 0 nil])
([nil nil ((nil org-todo-head nil 116 . 130) (nil org-todo-head nil 109 . 116) (nil org-todo-head nil 108 . 109) (110 . 116) (#(" TODO " 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 5 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 5 6 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 110) (t 26034 31934 38303 652000) (116 . 116) (t 26034 31934 38303 652000)) nil (26034 37701 63416 0) 0 nil])
([nil nil ((110 . 116) (#(" NEXT " 0 6 (org-todo-head "TODO" face org-level-2 org-category "capture" fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 110) (116 . 116)) nil (26034 37701 63415 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -275) (277 . 277) (apply -11 267 278 undo--wrap-and-run-primitive-undo 267 278 (("* " . 267) (269 . 272) (267 . 277)))) nil (26034 37701 63414 0) 0 nil])
([nil nil ((275 . 283)) nil (26034 37701 63413 0) 0 nil])
([nil nil ((#("d" 0 1 (face org-level-2 fontified t)) . -282) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 283) nil (26034 37701 63412 0) 0 nil])
([nil nil ((#("remove " 0 7 (face org-level-2 fontified t)) . -275) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -7) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -7) (undo-tree-id85 . -7) (undo-tree-id86 . -7) (undo-tree-id87 . -7) (undo-tree-id88 . -7) (undo-tree-id89 . -7) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id92 . -7) (undo-tree-id93 . -7) (undo-tree-id94 . -7) (undo-tree-id95 . -7) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) 282) nil (26034 37701 63400 0) 0 nil])
([nil nil ((275 . 296)) nil (26034 37701 63313 0) 0 nil])
([nil nil ((296 . 307)) nil (26034 37701 63311 0) 0 nil])
([nil nil ((307 . 318)) nil (26034 37701 63307 0) 0 nil])
([nil nil ((nil org-todo-head nil 17 . 42) (nil org-todo-head nil 10 . 17) (nil org-todo-head nil 9 . 10) (11 . 17) (#(" TODO " 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 5 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 5 6 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 11) (t 26034 37701 72365 696000) (17 . 17) (t 26034 37701 72365 696000)) nil (26034 45080 936926 0) 0 nil])
([nil nil ((11 . 17) (#(" NEXT " 0 6 (org-todo-head "TODO" face org-level-2 org-category "capture" fontified nil isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 11) (17 . 17)) nil (26034 45080 936920 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -327) (329 . 329) (apply -11 319 330 undo--wrap-and-run-primitive-undo 319 330 (("* " . 319) (321 . 324) (319 . 329)))) nil (26035 44952 335190 0) 0 nil])
([nil nil ((327 . 333)) nil (26035 44952 335190 0) 0 nil])
([nil nil ((#("s" 0 1 (face org-level-2 fontified t)) . -332) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 333) nil (26035 44952 335188 0) 0 nil])
([nil nil ((332 . 345)) nil (26035 44952 335167 0) 0 nil])
([nil nil ((#("** DONE beställ newbody-kalsonger
SCHEDULED: <2024-01-24 Wed>
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 8 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 8 33 (face (org-headline-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 33 34 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 34 44 (face org-special-keyword org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 44 45 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 45 60 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 60 61 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 61 62 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 9) (undo-tree-id16 . -34) (undo-tree-id17 . -61) (undo-tree-id18 . -62) (undo-tree-id19 . -61) (t 26035 44952 340540 845000)) nil (26035 54433 465897 0) 0 nil])
([nil nil ((#("** DONE skär upp mango
SCHEDULED: <2024-01-25 Thu>
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 8 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 8 22 (face (org-headline-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 22 23 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 23 33 (face org-special-keyword org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 33 34 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 34 49 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 49 50 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 50 51 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 46) (undo-tree-id12 . -23) (undo-tree-id13 . -50) (undo-tree-id14 . -50) (undo-tree-id15 . -51)) nil (26035 54433 465896 0) 0 nil])
([nil nil ((#("** DONE köp havredryck & juice
SCHEDULED: <2024-01-25 Thu>
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 8 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 8 30 (face (org-headline-done org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 30 31 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 31 41 (face org-special-keyword org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 41 42 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 42 57 (face org-date keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 57 58 (face org-date rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline--275027262611743720 org-fold-outline) 58 59 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 46) (undo-tree-id7 . -31) (undo-tree-id8 . -58) (undo-tree-id9 . -58) (undo-tree-id10 . -30) (undo-tree-id11 . -59)) nil (26035 54433 465894 0) 0 nil])
([nil nil ((#("** TODO turn off underline current day in agenda
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 48 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 48 49 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 46) (undo-tree-id4 . -48) (undo-tree-id5 . -48) (undo-tree-id6 . -49)) nil (26035 54433 465890 0) 0 nil])
([nil nil ((#("** TODO move deadline items to its own group agenda
" 0 1 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 1 3 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 3 7 (face (org-todo org-level-2) org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 7 51 (face org-level-2 org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show) 51 52 (org-category "capture" fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show)) . 46) (undo-tree-id0 . -52) (undo-tree-id1 . -51) (undo-tree-id2 . -51) (undo-tree-id3 . -52)) nil (26035 54433 465887 0) 0 nil])
([nil nil ((72 . 100) (t 26035 54433 474336 760000)) nil (26035 54441 615590 0) 0 nil])
([nil nil ((#("%?" 0 2 (fontified nil)) . -112) (114 . 114) (apply -6 109 115 undo--wrap-and-run-primitive-undo 109 115 (("* " . 109) (111 . 114) (109 . 114)))) nil (26035 61250 273075 0) 0 nil])
([nil nil ((112 . 133)) nil (26035 61250 273074 0) 0 nil])
([nil nil ((133 . 149)) nil (26035 61250 273073 0) 0 nil])
([nil nil ((149 . 159)) nil (26035 61250 273069 0) 0 nil])
([nil current ((#("** delete folders older than x in rasp. pi backups
" 0 1 (face org-level-2 fontified t) 1 3 (face org-level-2 fontified t) 3 50 (face org-level-2 fontified t) 50 51 (fontified t)) . 109) (undo-tree-id20 . -50) (t 26035 61250 279497 516000)) nil (26036 220 404708 0) 0 nil])
nil
