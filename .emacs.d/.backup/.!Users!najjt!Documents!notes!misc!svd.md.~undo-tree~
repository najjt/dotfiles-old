(undo-tree-save-format-version . 1)
"f60c0f48789c59d8e06cd06c7378b64378cc28b1"
[nil nil nil nil (26032 15298 19346 0) 0 nil]
([nil nil ((#("- teams assigned to positions/tasks instead of individuals
" 0 1 (face markdown-list-face fontified t markdown-list-item ((1 59 0 2 "- " nil (1 3 1 1 1 2 2 3)))) 1 58 (fontified t markdown-list-item ((1 59 0 2 "- " nil (1 3 1 1 1 2 2 3)))) 58 59 (font-lock-multiline t fontified t)) . 1) (undo-tree-id18 . -59) (undo-tree-id19 . -59) (undo-tree-id20 . -59) (undo-tree-id21 . -59) (undo-tree-id22 . -59) (undo-tree-id23 . -59) (undo-tree-id24 . -59) (undo-tree-id25 . -59) (undo-tree-id26 . -59) (undo-tree-id27 . -59) (undo-tree-id28 . -59) (undo-tree-id29 . -59) (undo-tree-id30 . -59) (undo-tree-id31 . -59) (undo-tree-id32 . -59) (undo-tree-id33 . -59) (undo-tree-id34 . -59) (undo-tree-id35 . -59) (undo-tree-id36 . -59) (undo-tree-id37 . -59) (undo-tree-id38 . -59) (undo-tree-id39 . -58) (t 25942 4325 303179 80000)) nil (26032 15298 19344 0) 0 nil])
([nil nil ((#("- read thru documents in teams
" 0 1 (face markdown-list-face markdown-list-item ((1 31 0 2 "- " nil (1 3 1 1 1 2 2 3))) fontified t) 1 30 (markdown-list-item ((1 31 0 2 "- " nil (1 3 1 1 1 2 2 3))) fontified t) 30 31 (font-lock-multiline t fontified t)) . 1) (undo-tree-id1 . -31) (undo-tree-id2 . -31) (undo-tree-id3 . -31) (undo-tree-id4 . -31) (undo-tree-id5 . -31) (undo-tree-id6 . -31) (undo-tree-id7 . -31) (undo-tree-id8 . -31) (undo-tree-id9 . -31) (undo-tree-id10 . -31) (undo-tree-id11 . -31) (undo-tree-id12 . -31) (undo-tree-id13 . -31) (undo-tree-id14 . -31) (undo-tree-id15 . -31) (undo-tree-id16 . -30) (undo-tree-id17 . -31)) nil (26032 15298 19328 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id0 . -1)) nil (26032 15298 19315 0) 0 nil])
([nil nil ((#("questions:
" 0 11 (fontified t)) . 84) (undo-tree-id116 . -10) (undo-tree-id117 . -11) (undo-tree-id118 . -11) (undo-tree-id119 . -11) (undo-tree-id120 . -11) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -11) (undo-tree-id131 . -11) (undo-tree-id132 . -11) (undo-tree-id133 . -11) (undo-tree-id134 . -11) (undo-tree-id135 . -11) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -11) (undo-tree-id139 . -11) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (t 26032 15298 23250 711000)) nil (26032 15309 751477 0) 0 nil])
([nil nil ((84 . 95)) nil (26032 15309 751455 0) 0 nil])
([nil current ((#("
next steps
- decoration
- catering
" 0 12 (fontified t) 12 13 (face markdown-list-face fontified t markdown-list-item ((168 180 0 2 "- " nil (168 170 168 168 168 169 169 170)))) 13 24 (fontified t markdown-list-item ((168 180 0 2 "- " nil (168 170 168 168 168 169 169 170)))) 24 25 (font-lock-multiline t fontified t) 25 26 (face markdown-list-face fontified t markdown-list-item ((181 191 0 2 "- " nil (181 183 181 181 181 182 182 183)))) 26 35 (fontified t markdown-list-item ((181 191 0 2 "- " nil (181 183 181 181 181 182 182 183)))) 35 36 (font-lock-multiline t fontified t)) . 156) (undo-tree-id40 . -35) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -12) (undo-tree-id52 . -12) (undo-tree-id53 . -12) (undo-tree-id54 . -12) (undo-tree-id55 . -12) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -12) (undo-tree-id59 . -12) (undo-tree-id60 . -12) (undo-tree-id61 . -25) (undo-tree-id62 . -25) (undo-tree-id63 . -25) (undo-tree-id64 . -25) (undo-tree-id65 . -25) (undo-tree-id66 . -25) (undo-tree-id67 . -25) (undo-tree-id68 . -25) (undo-tree-id69 . -25) (undo-tree-id70 . -25) (undo-tree-id71 . -25) (undo-tree-id72 . -25) (undo-tree-id73 . -25) (undo-tree-id74 . -25) (undo-tree-id75 . -25) (undo-tree-id76 . -25) (undo-tree-id77 . -25) (undo-tree-id78 . -25) (undo-tree-id79 . -25) (undo-tree-id80 . -25) (undo-tree-id81 . -25) (undo-tree-id82 . -25) (undo-tree-id83 . -25) (undo-tree-id84 . -25) (undo-tree-id85 . -25) (undo-tree-id86 . -25) (undo-tree-id87 . -25) (undo-tree-id88 . -25) (undo-tree-id89 . -25) (undo-tree-id90 . -25) (undo-tree-id91 . -25) (undo-tree-id92 . -25) (undo-tree-id93 . -25) (undo-tree-id94 . -25) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (undo-tree-id104 . -12) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -36) (t 26032 15298 23250 711000)) nil (26032 15309 751450 0) 0 nil])
nil
