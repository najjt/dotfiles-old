(undo-tree-save-format-version . 1)
"b39f4337435b71bfef572f9d62a30c91b44ad220"
[nil nil nil nil (26026 27067 334788 0) 0 nil]
([nil nil ((412 . 413) (400 . 412) (400 . 401) (#("            // om ja, länka firstNode:s next till denna nod
" 0 12 (fontified t c-is-sws t c-in-sws t) 12 13 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 13 15 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 15 60 (face font-lock-comment-face fontified t c-in-sws t)) . 400) (undo-tree-id40 . -37) (undo-tree-id41 . -59) 437 (t 26025 13144 701965 516000)) nil (26026 27067 334787 0) 0 nil])
([nil nil ((400 . 460) (#("
" 0 1 (fontified nil)) . 400) (undo-tree-id38 . 1) (#("            " 0 12 (fontified nil)) . 400) (undo-tree-id39 . -12) (#("1" 0 1 (fontified t)) . 412)) nil (26026 27067 334785 0) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 437) (t 26025 13144 701965 516000)) nil (26026 27067 334784 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 437)) nil (26026 27067 334784 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 437)) nil (26026 27067 334783 0) 0 nil])
([nil nil ((437 . 438)) nil (26026 27067 334783 0) 0 nil])
([nil nil ((#("denna " 0 6 (face font-lock-comment-face fontified t c-in-sws t)) . 599) (undo-tree-id37 . -5)) nil (26026 27067 334782 0) 0 nil])
([nil nil ((#("nods " 0 5 (face font-lock-comment-face c-in-sws t fontified t)) . 599) (undo-tree-id36 . -4)) nil (26026 27067 334781 0) 0 nil])
([nil nil ((599 . 607)) nil (26026 27067 334780 0) 0 nil])
([nil nil ((420 . 421) (#(";" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 420) (420 . 421) (#("," 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 420)) nil (26026 27067 334780 0) 0 nil])
([nil nil ((472 . 473) (470 . 472) (#("\\" 0 1 (c-is-sws t fontified t)) . -470) (undo-tree-id21 . -1) (#("\\" 0 1 (fontified t)) . -471) (undo-tree-id22 . -1) 472 (470 . 472) (457 . 470) (#("," 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -457) (undo-tree-id23 . -1) 458 (457 . 458) (448 . 457) (445 . 448) (#("index " 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face font-lock-comment-face fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face font-lock-comment-face fontified t)) . -445) (undo-tree-id24 . -6) 451 (445 . 451) (#("första " 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face font-lock-comment-face c-in-sws t fontified t) 6 7 (face font-lock-comment-face c-in-sws t fontified t)) . -445) (undo-tree-id25 . -7) 452 (#("l" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -452) (undo-tree-id26 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -453) (undo-tree-id27 . -1) 454 (452 . 454) (#("p" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -452) (undo-tree-id28 . -1) (#(" " 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -453) (undo-tree-id29 . -1) (#("t" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -454) (undo-tree-id30 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -455) (undo-tree-id31 . -1) 456 (454 . 456) (442 . 453) (#("i" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -442) (undo-tree-id32 . -1) (#(" " 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -443) (undo-tree-id33 . -1) (#("b" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -444) (undo-tree-id34 . -1) (#("ö" 0 1 (face font-lock-comment-face fontified t)) . -445) (undo-tree-id35 . -1) 446 (444 . 446) (442 . 444) (421 . 442)) nil (26026 27067 334778 0) 0 nil])
([nil nil ((479 . 480) (478 . 479) (473 . 478)) nil (26026 27067 334769 0) 0 nil])
([nil nil ((473 . 479) (#("altså" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 5 (c-in-sws t face font-lock-comment-face fontified t)) . -473) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5)) nil (26026 27067 334768 0) 0 nil])
([nil nil ((650 . 651) (#("," 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 650) (undo-tree-id17 . 1)) nil (26026 27067 334766 0) 0 nil])
([nil nil ((672 . 686) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -672) (undo-tree-id16 . -1) 673 (672 . 673) (651 . 672)) nil (26026 27067 334765 0) 0 nil])
([nil nil ((709 . 710) (708 . 709) (703 . 708) (#("l" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -703) (undo-tree-id10 . -1) (#("t" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -704) (undo-tree-id11 . -1) (#("s" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -705) (undo-tree-id12 . -1) (#("å" 0 1 (face font-lock-comment-face fontified t)) . -706) (undo-tree-id13 . -1) 707 (701 . 707) (699 . 701) (687 . 699) (#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified nil)) . 686) (undo-tree-id14 . 1) (undo-tree-id15 . -1) (687 . 688)) nil (26026 27067 334764 0) 0 nil])
([nil nil ((853 . 857)) nil (26026 27067 334760 0) 0 nil])
([nil nil ((856 . 857)) nil (26026 27067 334760 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -896) (undo-tree-id5 . -1) 897 (895 . 897) (893 . 895) (881 . 893) (#(" " 0 1 (face font-lock-comment-face c-in-sws t fontified nil)) . 880) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (881 . 882) (#("och länka om" 0 12 (c-in-sws t face font-lock-comment-face fontified t)) . 881) (undo-tree-id9 . -11)) nil (26026 27067 334759 0) 0 nil])
([nil nil ((#("och" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 3 (face font-lock-comment-face c-in-sws t fontified t)) . 853) (undo-tree-id4 . -2)) nil (26026 27067 334756 0) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . 853)) nil (26026 27067 334755 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 853)) nil (26026 27067 334754 0) 0 nil])
([nil nil ((875 . 879)) nil (26026 27067 334753 0) 0 nil])
([nil nil ((925 . 928) (904 . 925) (#("denn" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t)) . -904) (undo-tree-id1 . -4) 908 (904 . 908) (#("denna" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t)) . -904) (undo-tree-id2 . -5) 909 (904 . 909) (898 . 904) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -898) (undo-tree-id3 . -1) 899 (895 . 899)) nil (26026 27067 334752 0) 0 nil])
([nil nil ((911 . 915) (#("länk" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t)) . 911) (undo-tree-id0 . -3)) nil (26026 27067 334746 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1106) (undo-tree-id1197 . -8) 1114 (1105 . 1114) (t 26026 27067 344103 29000) 1075) nil (26026 28186 697151 0) 0 nil])
([nil nil ((230 . 231) (218 . 230) (200 . 218) (#("My" 0 2 (fontified nil)) . 200) (200 . 202) (#("MyALDAList<E>.MyALDAListIterator" 0 10 (fontified nil) 10 11 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 11 12 (fontified nil) 12 13 (fontified nil category c->-as-paren-syntax) 13 32 (fontified nil)) . -200) (undo-tree-id1194 . -32) (200 . 232) (#("My" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -200) (undo-tree-id1195 . -2) (undo-tree-id1196 . -2) 202 (192 . 202) (187 . 192) 158) nil (26026 28186 697149 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t)) . 218)) nil (26026 28186 697146 0) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 218)) nil (26026 28186 697145 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 218)) nil (26026 28186 697145 0) 0 nil])
([nil nil ((390 . 391) (388 . 390) (386 . 388) (368 . 386) (#("MyALDAListIterator()" 0 20 (fontified nil)) . -368) (undo-tree-id1190 . -20) (368 . 388) (361 . 368) (353 . 361) (#("iterator : MyALDAList<E>.MyALDAListIterator" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax) 24 43 (fontified nil)) . -353) (undo-tree-id1191 . -43) (353 . 396) (#("iterato" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -353) (undo-tree-id1192 . -7) (undo-tree-id1193 . -7) 360 (348 . 360) (339 . 348) 338) nil (26026 28186 697144 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 386)) nil (26026 28186 697141 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 386)) nil (26026 28186 697141 0) 0 nil])
([nil nil ((1246 . 1258) (#("                " 0 16 (fontified nil)) . 1246) (undo-tree-id1178 . -16) (1262 . 1263) (1245 . 1262) (1244 . 1245) (#("f" 0 1 (fontified t)) . -1244) (undo-tree-id1179 . -1) (#("u" 0 1 (fontified t)) . -1245) (undo-tree-id1180 . -1) 1246 (1244 . 1246) (1231 . 1244) (1228 . 1231) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1228) (undo-tree-id1181 . -1) 1229 (1228 . 1229) (1221 . 1228) (#("hasNext() : boolean" 0 19 (fontified nil)) . -1221) (undo-tree-id1182 . -19) (1221 . 1240) (#("has" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1221) (undo-tree-id1183 . -3) (undo-tree-id1184 . -3) 1224 (1220 . 1224) (1212 . 1220) (#("iter" 0 4 (fontified nil)) . 1212) (1212 . 1216) (#("iterator : MyALDAList<E>.MyALDAListIterator" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax) 24 43 (fontified nil)) . -1212) (undo-tree-id1185 . -43) (1212 . 1255) (#("itera" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1212) (undo-tree-id1186 . -5) (undo-tree-id1187 . -5) 1217 (1212 . 1217) (1211 . 1212) (1210 . 1211) (#(" x" 0 2 (fontified nil)) . -1210) (1210 . 1212) (#("while" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 1210) (undo-tree-id1188 . -5) (undo-tree-id1189 . -4) (1205 . 1210) 1210 (1205 . 1210) (1196 . 1205) 1195) nil (26026 28186 697138 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1246) (undo-tree-id1177 . -16) 1262 (1245 . 1262) 1244) nil (26026 28186 697132 0) 0 nil])
([nil nil ((1246 . 1262)) nil (26026 28186 697131 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1240)) nil (26026 28186 697130 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1240)) nil (26026 28186 697130 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1240)) nil (26026 28186 697130 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1240)) nil (26026 28186 697129 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1273)) nil (26026 28186 697129 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1259)) nil (26026 28186 697128 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1259)) nil (26026 28186 697128 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1259)) nil (26026 28186 697127 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1259)) nil (26026 28186 697127 0) 0 nil])
([nil nil ((1242 . 1254) (#("               " 0 15 (fontified nil)) . -1242) (undo-tree-id1176 . -15) (#(" " 0 1 (fontified t)) . 1257)) nil (26026 28186 697126 0) 0 nil])
([nil nil ((1231 . 1232) (#("
" 0 1 (fontified t)) . -1231) (undo-tree-id1174 . -1) 1232 (#("        " 0 8 (fontified t)) . -1232) (undo-tree-id1175 . -8) 1240) nil (26026 28186 697125 0) 0 nil])
([nil nil ((1265 . 1267) (1258 . 1265) (#("current : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -1258) (undo-tree-id1170 . -28) (1258 . 1286) (#("curr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1258) (undo-tree-id1171 . -4) (undo-tree-id1172 . -3) 1262 (1257 . 1262) (1246 . 1257) (1234 . 1246) (#("        " 0 8 (fontified nil)) . -1234) (undo-tree-id1173 . -8) (#("    " 0 4 (fontified t)) . 1242)) nil (26026 28186 697123 0) 0 nil])
([nil nil ((1249 . 1250)) nil (26026 28186 697121 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1269) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) 1270 (1269 . 1270) (1268 . 1269)) nil (26026 28186 697120 0) 0 nil])
([nil nil ((1269 . 1272)) nil (26026 28186 697119 0) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . 1266)) nil (26026 28186 697118 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . 1266)) nil (26026 28186 697118 0) 0 nil])
([nil nil ((1266 . 1271)) nil (26026 28186 697118 0) 0 nil])
([nil nil ((1283 . 1284) (1275 . 1283) (#("las" 0 3 (fontified nil)) . 1275) (1275 . 1278) (#("lastNode : MyALDAList.Node<E>" 0 26 (fontified nil) 26 27 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 27 28 (fontified nil) 28 29 (fontified nil category c->-as-paren-syntax)) . -1275) (undo-tree-id1165 . -29) (1275 . 1304) (#("last" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1275) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) 1279 (1275 . 1279)) nil (26026 28186 697117 0) 0 nil])
([nil nil ((1287 . 1299) (#("                " 0 16 (fontified nil)) . 1287) (undo-tree-id1164 . -16) (1303 . 1304) (1286 . 1303) (1285 . 1286) (1284 . 1285)) nil (26026 28186 697115 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1287) (undo-tree-id1163 . -16) 1303 (1286 . 1303) 1246) nil (26026 28186 697113 0) 0 nil])
([nil nil ((#("            // hitta näst sista noden och
            // länka om dennes next till newNode
            secondToLast().next = newNode;
" 0 12 (fontified t c-is-sws t c-in-sws t) 12 13 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 13 14 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 14 15 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 15 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face font-lock-comment-face fontified t c-in-sws t) 40 41 (face font-lock-comment-face fontified t c-in-sws t) 41 42 (face font-lock-comment-face fontified t c-in-sws t) 42 43 (fontified t c-in-sws t) 43 54 (fontified t c-in-sws t) 54 55 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 55 56 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 56 57 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 57 58 (face font-lock-comment-face fontified t c-in-sws t) 58 59 (face font-lock-comment-face fontified t c-in-sws t) 59 60 (face font-lock-comment-face fontified t c-in-sws t) 60 61 (face font-lock-comment-face fontified t c-in-sws t) 61 62 (face font-lock-comment-face fontified t c-in-sws t) 62 63 (face font-lock-comment-face fontified t c-in-sws t) 63 64 (face font-lock-comment-face fontified t c-in-sws t) 64 65 (face font-lock-comment-face fontified t c-in-sws t) 65 66 (face font-lock-comment-face fontified t c-in-sws t) 66 67 (face font-lock-comment-face fontified t c-in-sws t) 67 68 (face font-lock-comment-face fontified t c-in-sws t) 68 69 (face font-lock-comment-face fontified t c-in-sws t) 69 70 (face font-lock-comment-face fontified t c-in-sws t) 70 71 (face font-lock-comment-face fontified t c-in-sws t) 71 72 (face font-lock-comment-face fontified t c-in-sws t) 72 73 (face font-lock-comment-face fontified t c-in-sws t) 73 74 (face font-lock-comment-face fontified t c-in-sws t) 74 75 (face font-lock-comment-face fontified t c-in-sws t) 75 76 (face font-lock-comment-face fontified t c-in-sws t) 76 77 (face font-lock-comment-face fontified t c-in-sws t) 77 78 (face font-lock-comment-face fontified t c-in-sws t) 78 79 (face font-lock-comment-face fontified t c-in-sws t) 79 80 (face font-lock-comment-face fontified t c-in-sws t) 80 81 (face font-lock-comment-face fontified t c-in-sws t) 81 82 (face font-lock-comment-face fontified t c-in-sws t) 82 83 (face font-lock-comment-face fontified t c-in-sws t) 83 84 (face font-lock-comment-face fontified t c-in-sws t) 84 85 (face font-lock-comment-face fontified t c-in-sws t) 85 86 (face font-lock-comment-face fontified t c-in-sws t) 86 87 (face font-lock-comment-face fontified t c-in-sws t) 87 88 (face font-lock-comment-face fontified t c-in-sws t) 88 89 (face font-lock-comment-face fontified t c-in-sws t) 89 90 (face font-lock-comment-face fontified t c-in-sws t) 90 91 (face font-lock-comment-face fontified t c-in-sws t) 91 92 (fontified t c-is-sws t) 92 103 (fontified t c-is-sws t c-in-sws t) 103 104 (fontified t c-is-sws t) 104 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-4-face) fontified t) 116 117 (face (rainbow-delimiters-depth-4-face) fontified t) 117 134 (fontified t)) . 929) (undo-tree-id1158 . -103) (undo-tree-id1159 . -133) (undo-tree-id1160 . -12) (undo-tree-id1161 . -103) (undo-tree-id1162 . -12) 941) nil (26026 28186 697112 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 845 . 846) (#("
" 0 1 (fontified nil)) . -967) (833 . 968) 786) nil (26026 28186 697110 0) 0 nil])
([nil nil ((#("            // alltså, länka newNode.next till lastNode
" 0 1 (c-is-sws t fontified t) 1 12 (c-is-sws t fontified t c-in-sws t) 12 13 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 13 14 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 14 15 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 55 (face font-lock-comment-face fontified t c-in-sws t) 55 56 (face font-lock-comment-face fontified t c-in-sws t)) . 778) (undo-tree-id1156 . -55) (undo-tree-id1157 . -12) 790) nil (26026 28186 697109 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 880 . 881) (#("
" 0 1 (fontified nil c-in-sws t face font-lock-comment-face)) . -924) (868 . 925) 832) nil (26026 28186 697108 0) 0 nil])
([nil nil ((#("            " 0 12 (c-is-sws t fontified t)) . -870) (undo-tree-id1154 . -12) 882 (870 . 882) (#("            " 0 1 (c-is-sws t fontified nil) 1 12 (c-is-sws t c-in-sws t fontified nil)) . 869) (undo-tree-id1155 . -12) (881 . 882) (868 . 881) 832) nil (26026 28186 697107 0) 0 nil])
([nil nil ((800 . 801) (799 . 800) (793 . 799)) nil (26026 28186 697106 0) 0 nil])
([nil nil ((#("            secondToLast().next = newNode;
" 0 1 (c-is-sws t fontified t c-in-sws t) 1 12 (c-is-sws t fontified t c-in-sws t) 12 13 (fontified t c-is-sws t) 13 24 (fontified t) 24 25 (face (rainbow-delimiters-depth-4-face) fontified t) 25 26 (face (rainbow-delimiters-depth-4-face) fontified t) 26 42 (fontified t) 42 43 (fontified t)) . 935) (undo-tree-id1152 . -42) (undo-tree-id1153 . -22) 957) nil (26026 28186 697105 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 888 . 889) (#("
" 0 1 (fontified nil)) . -919) (876 . 920) 850) nil (26026 28186 697104 0) 0 nil])
([nil nil ((#("alltså" 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 6 (face font-lock-comment-face fontified t c-in-sws t)) . 937) (undo-tree-id1151 . -5)) nil (26026 28186 697103 0) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 937)) nil (26026 28186 697102 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face c-in-sws t fontified t)) . 937)) nil (26026 28186 697102 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-in-sws t)) . 920)) nil (26026 28186 697101 0) 0 nil])
([nil nil ((1288 . 1304)) nil (26026 28186 697101 0) 0 nil])
([nil nil ((1304 . 1311) (#("firstNode" 0 9 (fontified t)) . -1304) (undo-tree-id1141 . -9) (undo-tree-id1142 . -9) 1313 (1304 . 1313) (#("firstNode" 0 9 (fontified nil)) . 1304) (1304 . 1313) (#("firstNode : MyALDAList.Node<E>" 0 27 (fontified nil) 27 28 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 28 29 (fontified nil) 29 30 (fontified nil category c->-as-paren-syntax)) . -1304) (undo-tree-id1143 . -30) (1304 . 1334) (#("firstNode" 0 9 (fontified t)) . -1304) (undo-tree-id1144 . -9) (undo-tree-id1145 . -9) 1313 (1304 . 1313) (#("firstNode" 0 9 (fontified nil)) . 1304) (1304 . 1313) (#("firstNode : MyALDAList.Node<E>" 0 27 (fontified nil) 27 28 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 28 29 (fontified nil) 29 30 (fontified nil category c->-as-paren-syntax)) . -1304) (undo-tree-id1146 . -30) (1304 . 1334) (#("firstNode" 0 9 (fontified t)) . -1304) (undo-tree-id1147 . -9) (undo-tree-id1148 . -9) 1313 (1304 . 1313) (#("firstNode : MyALDAList.Node<E>" 0 27 (fontified nil) 27 28 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 28 29 (fontified nil) 29 30 (fontified nil category c->-as-paren-syntax)) . -1304) (undo-tree-id1149 . -30) (1304 . 1334) (1288 . 1304) (#("               " 0 15 (fontified nil)) . -1288) (undo-tree-id1150 . -15) (#(" " 0 1 (fontified t)) . 1303)) nil (26026 28186 697099 0) 0 nil])
([nil nil ((1281 . 1282) (1274 . 1281) (#("current : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -1274) (undo-tree-id1136 . -28) (1274 . 1302) (#("cur" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1274) (undo-tree-id1137 . -3) (undo-tree-id1138 . -3) 1277 (1268 . 1277) (1247 . 1268) (#("i" 0 1 (fontified t)) . -1247) (undo-tree-id1139 . -1) (#("t" 0 1 (fontified t)) . -1248) (undo-tree-id1140 . -1) 1249 (1247 . 1249) (1234 . 1247) 1220) nil (26026 28186 697094 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1283) (undo-tree-id1135 . -12) 1295 (1282 . 1295) 1281) nil (26026 28186 697091 0) 0 nil])
([nil nil ((#("iterator" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 1300) (undo-tree-id1134 . -7)) nil (26026 28186 697090 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1300)) nil (26026 28186 697089 0) 0 nil])
([nil nil ((1358 . 1359) (1351 . 1358)) nil (26026 28186 697088 0) 0 nil])
([nil nil ((1358 . 1359) (#(":" 0 1 (fontified t)) . 1358)) nil (26026 28186 697088 0) 0 nil])
([nil nil ((#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1378) (1374 . 1378) 1394 (1381 . 1393) (#("                " 0 16 (fontified nil)) . 1381) (undo-tree-id1129 . -16) (1397 . 1398) (1380 . 1397) (1379 . 1380) (#("f" 0 1 (fontified t)) . -1379) (undo-tree-id1130 . -1) (#("u" 0 1 (fontified t)) . -1380) (undo-tree-id1131 . -1) 1381 (1379 . 1381) (1378 . 1379) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1378) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (1374 . 1378) 1378 (1373 . 1378)) nil (26026 28186 697087 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1381) (undo-tree-id1128 . -16) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1378) (1374 . 1378) 1397 (1380 . 1397) 1372) nil (26026 28186 697083 0) 0 nil])
([nil nil ((#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1378) (1374 . 1378) 1397 (1381 . 1397)) nil (26026 28186 697082 0) 0 nil])
([nil nil ((#("            Node<E> current = iterator.current;
" 0 12 (fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face fontified t) 15 16 (face font-lock-type-face fontified t) 16 17 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 17 18 (face font-lock-type-face fontified t) 18 19 (face (rainbow-delimiters-depth-4-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t) 19 20 (fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t)) . 1235) (undo-tree-id1126 . -47) (undo-tree-id1127 . -15) 1250) nil (26026 28186 697081 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1209 . 1210) (#("
" 0 1 (fontified nil)) . -1245) (1197 . 1246) 1167) nil (26026 28186 697080 0) 0 nil])
([nil nil ((1198 . 1206) (#("            " 0 11 (fontified t) 11 12 (rear-nonsticky t fontified t)) . -1198) (undo-tree-id1125 . -12) 1210) nil (26026 28186 697079 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1242) (undo-tree-id1124 . -8) 1250 (1241 . 1250) 1206) nil (26026 28186 697077 0) 0 nil])
([nil nil ((1355 . 1360)) nil (26026 28186 697076 0) 0 nil])
([nil nil ((1270 . 1271) (1262 . 1270) (1255 . 1262) (#("e" 0 1 (face font-lock-type-face fontified t)) . -1255) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) 1256 (1250 . 1256) (1241 . 1250) 1224) nil (26026 28186 697075 0) 0 nil])
([nil nil ((1270 . 1271) (#(":" 0 1 (fontified nil)) . 1270) (1270 . 1271) (#(":" 0 1 (fontified nil)) . 1270) (1270 . 1271) (#(":" 0 1 (fontified nil)) . 1270)) ((1270 . 1271) (#(":" 0 1 (fontified nil)) . 1270) (1270 . 1271) (#(":" 0 1 (fontified nil)) . 1270) (1270 . 1271) (#("s" 0 1 (face font-lock-variable-name-face fontified nil)) . 1270)) (26026 28375 727827 0) 0 nil])
([nil nil ((1270 . 1271) (#("s" 0 1 (face font-lock-variable-name-face fontified nil)) . 1270)) ((1270 . 1271) (#(";" 0 1 (fontified t)) . 1270)) (26026 28377 15948 0) 0 nil])
([nil nil ((1371 . 1395) (#("second" 0 6 (fontified nil)) . 1371) (1371 . 1377) (#("secondToLast : MyALDAList.Node<E>" 0 30 (fontified nil) 30 31 (category c-<-as-paren-syntax fontified nil c-<>-c-types-set t) 31 32 (fontified nil) 32 33 (category c->-as-paren-syntax fontified nil)) . 1371) (1371 . 1404) (#("second" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1371) (1355 . 1377) (1355 . 1356) (#("                return current.data;
" 0 16 (fontified nil) 16 17 (face font-lock-keyword-face fontified nil) 17 18 (face font-lock-keyword-face fontified nil) 18 19 (face font-lock-keyword-face fontified nil) 19 20 (face font-lock-keyword-face fontified nil) 20 21 (face font-lock-keyword-face fontified nil) 21 22 (face font-lock-keyword-face fontified nil) 22 23 (fontified nil) 23 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (fontified nil)) . 1355)) ((1355 . 1392) (#("
" 0 1 (fontified nil)) . 1355) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (#("                second" 0 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil)) . 1355) (undo-tree-id1597 . -16) (undo-tree-id1598 . -16) (undo-tree-id1599 . -16) (undo-tree-id1600 . -16) (undo-tree-id1601 . -16) (undo-tree-id1602 . -16) (undo-tree-id1603 . -16) (undo-tree-id1604 . -16) (undo-tree-id1605 . -16) (undo-tree-id1606 . -16) (undo-tree-id1607 . -16) (undo-tree-id1608 . -16) (undo-tree-id1609 . -16) (undo-tree-id1610 . -16) (undo-tree-id1611 . -16) (undo-tree-id1612 . -16) (undo-tree-id1613 . -16) (undo-tree-id1614 . -16) (undo-tree-id1615 . -16) (undo-tree-id1616 . -16) (undo-tree-id1617 . -16) (undo-tree-id1618 . -16) (undo-tree-id1619 . -16) (undo-tree-id1620 . -16) (undo-tree-id1621 . -16) (undo-tree-id1622 . -16) (undo-tree-id1623 . -16) (undo-tree-id1624 . -16) (undo-tree-id1625 . -16) (undo-tree-id1626 . -16) (undo-tree-id1627 . -16) (undo-tree-id1628 . -16) (undo-tree-id1629 . -16) (undo-tree-id1630 . -16) (undo-tree-id1631 . -16) (1371 . 1377) (#("secondToLast : MyALDAList.Node<E>" 0 30 (fontified nil) 30 31 (category c-<-as-paren-syntax fontified nil c-<>-c-types-set t) 31 32 (fontified nil) 32 33 (category c->-as-paren-syntax fontified nil)) . 1371) (1371 . 1404) (#("second" 0 6 (fontified nil)) . 1371) (1371 . 1377) (#("secondToLast = currentsm" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 24 (fontified t)) . 1371) (undo-tree-id1632 . -22) (undo-tree-id1633 . -22) (undo-tree-id1634 . -22) (undo-tree-id1635 . -22) (undo-tree-id1636 . -22) (undo-tree-id1637 . -22) (undo-tree-id1638 . -22) (undo-tree-id1639 . -22) (undo-tree-id1640 . -22) (undo-tree-id1641 . -22) (undo-tree-id1642 . -22) (undo-tree-id1643 . -22) (undo-tree-id1644 . -22) (undo-tree-id1645 . -22) (undo-tree-id1646 . -22) (undo-tree-id1647 . -22) (undo-tree-id1648 . -22) (undo-tree-id1649 . -22) (undo-tree-id1650 . -22) (undo-tree-id1651 . -22) (undo-tree-id1652 . -22) (undo-tree-id1653 . -22) (undo-tree-id1654 . -22) (undo-tree-id1655 . -22) (undo-tree-id1656 . -22)) (26026 28377 429275 0) 0 nil])
([nil nil ((1393 . 1394) (#("sm" 0 2 (fontified nil)) . 1393)) ((1393 . 1395) (#(";" 0 1 (fontified t)) . 1393) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1)) (26026 28377 821903 0) 0 nil])
([nil nil ((1441 . 1448) (#("next() : E" 0 10 (fontified nil)) . 1441) (1441 . 1451) (#("ne" 0 1 (fontified nil) 1 2 (fontified nil)) . 1441) (1440 . 1443) (#("n" 0 1 (fontified nil)) . 1440) (1416 . 1441) (#("                " 0 15 (fontified nil) 15 16 (fontified nil)) . 1416)) ((1416 . 1432) (#("                iteratorn" 0 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil)) . 1416) (undo-tree-id1670 . -24) (undo-tree-id1671 . -24) (undo-tree-id1672 . -24) (undo-tree-id1673 . -24) (undo-tree-id1674 . -24) (undo-tree-id1675 . -24) (undo-tree-id1676 . -16) (undo-tree-id1677 . -16) (undo-tree-id1678 . -16) (undo-tree-id1679 . -16) (undo-tree-id1680 . -16) (undo-tree-id1681 . -16) (undo-tree-id1682 . -16) (undo-tree-id1683 . -16) (undo-tree-id1684 . -16) (undo-tree-id1685 . -16) (undo-tree-id1686 . -16) (undo-tree-id1687 . -16) (undo-tree-id1688 . -16) (undo-tree-id1689 . -24) (undo-tree-id1690 . -24) (undo-tree-id1691 . -24) (undo-tree-id1692 . -24) (undo-tree-id1693 . -24) (undo-tree-id1694 . -24) (1440 . 1441) (#(".ne" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1440) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (1441 . 1443) (#("next() : E" 0 10 (fontified nil)) . 1441) (1441 . 1451) (#("next();" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-5-face) fontified t) 5 6 (face (rainbow-delimiters-depth-5-face) fontified t) 6 7 (fontified t)) . 1441) (undo-tree-id1707 . -4) (undo-tree-id1708 . -4)) (26026 28378 741016 0) 0 nil])
([nil nil ((1440 . 1443) (#("s" 0 1 (face font-lock-function-name-face fontified nil)) . 1440) (1432 . 1441)) ((#("current s" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (face font-lock-function-name-face fontified nil)) . 1432) (undo-tree-id1709 . -8) (undo-tree-id1710 . -8) (undo-tree-id1711 . -8) (undo-tree-id1712 . -8) (undo-tree-id1713 . -8) (undo-tree-id1714 . -8) (undo-tree-id1715 . -8) (undo-tree-id1716 . -8) (undo-tree-id1717 . -8) (undo-tree-id1718 . -8) (undo-tree-id1719 . -8) (undo-tree-id1720 . -8) (undo-tree-id1721 . -8) (undo-tree-id1722 . -8) (undo-tree-id1723 . -8) (1440 . 1441) (#("dl " 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t) 2 3 (fontified t)) . 1440)) (26026 28379 736625 0) 0 nil])
([nil nil ((1440 . 1441) (#("dl" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil)) . 1440)) ((1440 . 1442) (#("=" 0 1 (fontified t)) . 1440)) (26026 28380 118454 0) 0 nil])
([nil nil ((#(".data;" 0 6 (fontified nil)) . 2986)) ((2986 . 2992)) (26026 28380 420144 0) 0 nil])
([nil nil ((2986 . 2987) (#(":" 0 1 (fontified nil)) . 2986) (undo-tree-id1726 . -1) (2986 . 2987)) ((#(":" 0 1 (fontified nil)) . 2986) (undo-tree-id1725 . -1) (2986 . 2987) (#(";" 0 1 (fontified t)) . 2986)) (26026 28381 812112 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified nil)) . 2986) (2986 . 2987) (#(";" 0 1 (fontified nil)) . 2986)) ((2986 . 2987) (#(":" 0 1 (fontified nil)) . 2986) (2986 . 2987)) (26026 28382 517599 0) 0 nil])
([nil nil ((2986 . 2992)) ((".data;" . 2986)) (26026 28390 546559 0) 0 nil])
([nil nil ((1179 . 1186) (#("E" 0 1 (face font-lock-type-face fontified nil)) . 1179) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1)) ((1179 . 1180) (#("Node<E>" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t)) . 1179)) (26026 28392 901805 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2858) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) 2859 (#("        " 0 1 (fontified t) 1 8 (fontified t)) . -2859) (undo-tree-id1890 . -8) (undo-tree-id1891 . -8) (undo-tree-id1892 . -8) (undo-tree-id1893 . -8) (undo-tree-id1894 . -8) (undo-tree-id1895 . -8) (undo-tree-id1896 . -8) (undo-tree-id1897 . -8) (undo-tree-id1898 . -8) (undo-tree-id1899 . -8) (undo-tree-id1900 . -8) (undo-tree-id1901 . -8) (undo-tree-id1902 . -8) (undo-tree-id1903 . -8) (undo-tree-id1904 . -8) (undo-tree-id1905 . -8) (undo-tree-id1906 . -8) (undo-tree-id1907 . -8) (undo-tree-id1908 . -8) (undo-tree-id1909 . -8) (undo-tree-id1910 . -8) (undo-tree-id1911 . -8) (undo-tree-id1912 . -8) (undo-tree-id1913 . -8) (undo-tree-id1914 . -8) (undo-tree-id1915 . -8) (undo-tree-id1916 . -8) (undo-tree-id1917 . -8) (undo-tree-id1918 . -8) (undo-tree-id1919 . -8) (undo-tree-id1920 . -8) (undo-tree-id1921 . -8) (undo-tree-id1922 . -8) (undo-tree-id1923 . -8) (undo-tree-id1924 . -8) (undo-tree-id1925 . -8) (undo-tree-id1926 . -8) (undo-tree-id1927 . -8) (undo-tree-id1928 . -8) (undo-tree-id1929 . -8) (undo-tree-id1930 . -8) (undo-tree-id1931 . -8) (undo-tree-id1932 . -8) (undo-tree-id1933 . -8) (undo-tree-id1934 . -8) (undo-tree-id1935 . -8) (undo-tree-id1936 . -8) (undo-tree-id1937 . -8) (undo-tree-id1938 . -8) (undo-tree-id1939 . -8) (undo-tree-id1940 . -8) (undo-tree-id1941 . -8) (undo-tree-id1942 . -8) (undo-tree-id1943 . -8) (undo-tree-id1944 . -8) (undo-tree-id1945 . -8) (undo-tree-id1946 . -8) (undo-tree-id1947 . -8) (undo-tree-id1948 . -8) (undo-tree-id1949 . -8) (undo-tree-id1950 . -8) (undo-tree-id1951 . -8) (undo-tree-id1952 . -8) (undo-tree-id1953 . -8) (undo-tree-id1954 . -8) (undo-tree-id1955 . -8) (undo-tree-id1956 . -8) (undo-tree-id1957 . -8) (undo-tree-id1958 . -8) (undo-tree-id1959 . -8) (undo-tree-id1960 . -8) (undo-tree-id1961 . -8) (undo-tree-id1962 . -8) (undo-tree-id1963 . -8) (undo-tree-id1964 . -8) (undo-tree-id1965 . -8) (undo-tree-id1966 . -8) (undo-tree-id1967 . -8) (undo-tree-id1968 . -8) (undo-tree-id1969 . -8) (undo-tree-id1970 . -8) (undo-tree-id1971 . -8) (undo-tree-id1972 . -8) (undo-tree-id1973 . -8) (undo-tree-id1974 . -8) (undo-tree-id1975 . -8) (undo-tree-id1976 . -8) (undo-tree-id1977 . -8) 2867) nil (26026 28447 506533 0) 0 nil] [nil nil ((#("                " 0 16 (fontified nil)) . 1401) (1400 . 1417)) ((#("
                " 0 1 (fontified t) 1 17 (fontified nil)) . 1400) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (1401 . 1417)) (26026 28392 117855 0) 0 nil])
([nil nil ((2858 . 2859)) nil (26026 28447 506458 0) 0 nil])
([nil nil ((2851 . 2858) (#("E" 0 1 (face font-lock-type-face fontified nil)) . 2851)) ((2851 . 2852) (#("Node<E>" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t)) . 2851) (undo-tree-id1399 . -4) (undo-tree-id1400 . -4)) (26026 28368 242109 0) 0 nil])
([nil nil ((#("N" 0 1 (face font-lock-type-face fontified t)) . 1179) (t 26026 28447 513901 568000)) nil (26026 29220 785643 0) 0 nil])
([nil nil ((#(".data;" 0 2 (fontified nil) 2 3 (fontified nil) 3 6 (fontified nil)) . 2999)) ((2999 . 3005)) (26026 28359 794408 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-type-face fontified t)) . 1179)) nil (26026 29220 785642 0) 0 nil])
([nil nil ((2999 . 3000) (2998 . 2999) (#("t" 0 1 (fontified t)) . 2998)) ((2998 . 2999) (#("t" 0 1 (fontified nil)) . 2998) (#(";" 0 1 (fontified t)) . 2999)) (26026 28359 134244 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . 1179)) nil (26026 29220 785642 0) 0 nil])
([nil nil ((2979 . 2986) (#("E" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 2979)) ((2979 . 2980) (#("Node<E>" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 5 6 (face font-lock-type-face fontified t) 6 7 (face (rainbow-delimiters-depth-4-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax)) . 2979)) (26026 28358 713547 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . 1179)) nil (26026 29220 785642 0) 0 nil])
([nil nil ((2865 . 2866) (#("
" 0 1 (fontified t)) . -2865) (undo-tree-id114 . -1) (undo-tree-id116 . -1) (undo-tree-id118 . -1) (undo-tree-id120 . -1) (undo-tree-id122 . -1) (undo-tree-id124 . -1) (undo-tree-id126 . -1) (undo-tree-id128 . -1) (undo-tree-id130 . -1) (undo-tree-id132 . -1) (undo-tree-id134 . -1) (undo-tree-id136 . -1) (undo-tree-id138 . -1) (undo-tree-id140 . -1) (undo-tree-id142 . -1) (undo-tree-id144 . -1) (undo-tree-id146 . -1) (undo-tree-id148 . -1) (undo-tree-id150 . -1) (undo-tree-id152 . -1) (undo-tree-id154 . -1) (undo-tree-id156 . -1) (undo-tree-id158 . -1) (undo-tree-id160 . -1) (undo-tree-id162 . -1) (undo-tree-id164 . -1) (undo-tree-id166 . -1) (undo-tree-id168 . -1) (undo-tree-id170 . -1) (undo-tree-id172 . -1) (undo-tree-id174 . -1) (undo-tree-id176 . -1) (undo-tree-id178 . -1) (undo-tree-id180 . -1) (undo-tree-id182 . -1) (undo-tree-id184 . -1) (undo-tree-id186 . -1) (undo-tree-id188 . -1) (undo-tree-id190 . -1) (undo-tree-id192 . -1) (undo-tree-id194 . -1) (undo-tree-id196 . -1) (undo-tree-id198 . -1) (undo-tree-id200 . -1) (undo-tree-id202 . -1) (undo-tree-id204 . -1) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) (undo-tree-id216 . -1) (undo-tree-id218 . -1) (undo-tree-id220 . -1) (undo-tree-id222 . -1) (undo-tree-id224 . -1) (undo-tree-id226 . -1) (undo-tree-id228 . -1) (undo-tree-id230 . -1) (undo-tree-id232 . -1) (undo-tree-id234 . -1) (undo-tree-id236 . -1) (undo-tree-id238 . -1) (undo-tree-id240 . -1) (undo-tree-id242 . -1) (undo-tree-id244 . -1) (undo-tree-id246 . -1) (undo-tree-id248 . -1) (undo-tree-id250 . -1) (undo-tree-id252 . -1) (undo-tree-id254 . -1) (undo-tree-id256 . -1) (undo-tree-id258 . -1) (undo-tree-id260 . -1) (undo-tree-id262 . -1) (undo-tree-id264 . -1) (undo-tree-id266 . -1) (undo-tree-id268 . -1) (undo-tree-id270 . -1) (undo-tree-id272 . -1) (undo-tree-id274 . -1) (undo-tree-id276 . -1) (undo-tree-id278 . -1) (undo-tree-id280 . -1) (undo-tree-id282 . -1) (undo-tree-id284 . -1) (undo-tree-id286 . -1) (undo-tree-id288 . -1) (undo-tree-id290 . -1) (undo-tree-id292 . -1) (undo-tree-id294 . -1) (undo-tree-id296 . -1) (undo-tree-id298 . -1) (undo-tree-id300 . -1) (undo-tree-id302 . -1) (undo-tree-id304 . -1) (undo-tree-id306 . -1) (undo-tree-id308 . -1) (undo-tree-id310 . -1) (undo-tree-id312 . -1) (undo-tree-id314 . -1) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) (undo-tree-id328 . -1) (undo-tree-id330 . -1) (undo-tree-id332 . -1) (undo-tree-id334 . -1) (undo-tree-id336 . -1) (undo-tree-id338 . -1) 2866 (#("        " 0 8 (fontified t)) . -2866) (undo-tree-id340 . -8) (undo-tree-id342 . -8) (undo-tree-id344 . -8) (undo-tree-id346 . -8) (undo-tree-id348 . -8) (undo-tree-id350 . -8) (undo-tree-id352 . -8) (undo-tree-id354 . -8) (undo-tree-id356 . -8) (undo-tree-id358 . -8) (undo-tree-id360 . -8) (undo-tree-id362 . -8) (undo-tree-id364 . -8) (undo-tree-id366 . -8) (undo-tree-id368 . -8) (undo-tree-id370 . -8) (undo-tree-id372 . -8) (undo-tree-id374 . -8) (undo-tree-id376 . -8) (undo-tree-id378 . -8) (undo-tree-id380 . -8) (undo-tree-id382 . -8) (undo-tree-id384 . -8) (undo-tree-id386 . -8) (undo-tree-id388 . -8) (undo-tree-id390 . -8) (undo-tree-id392 . -8) (undo-tree-id394 . -8) (undo-tree-id396 . -8) (undo-tree-id398 . -8) (undo-tree-id400 . -8) (undo-tree-id402 . -8) (undo-tree-id404 . -8) (undo-tree-id406 . -8) (undo-tree-id408 . -8) (undo-tree-id410 . -8) (undo-tree-id412 . -8) (undo-tree-id414 . -8) (undo-tree-id416 . -8) (undo-tree-id418 . -8) (undo-tree-id420 . -8) (undo-tree-id422 . -8) (undo-tree-id424 . -8) (undo-tree-id426 . -8) (undo-tree-id428 . -8) (undo-tree-id430 . -8) (undo-tree-id432 . -8) (undo-tree-id434 . -8) (undo-tree-id436 . -8) (undo-tree-id438 . -8) (undo-tree-id440 . -8) (undo-tree-id442 . -8) (undo-tree-id444 . -8) (undo-tree-id446 . -8) (undo-tree-id448 . -8) (undo-tree-id450 . -8) (undo-tree-id452 . -8) (undo-tree-id454 . -8) (undo-tree-id456 . -8) (undo-tree-id458 . -8) (undo-tree-id460 . -8) (undo-tree-id462 . -8) (undo-tree-id464 . -8) (undo-tree-id466 . -8) (undo-tree-id468 . -8) (undo-tree-id470 . -8) (undo-tree-id472 . -8) (undo-tree-id474 . -8) (undo-tree-id476 . -8) (undo-tree-id478 . -8) (undo-tree-id480 . -8) (undo-tree-id482 . -8) (undo-tree-id484 . -8) (undo-tree-id486 . -8) (undo-tree-id488 . -8) (undo-tree-id490 . -8) (undo-tree-id492 . -8) (undo-tree-id494 . -8) (undo-tree-id496 . -8) (undo-tree-id498 . -8) (undo-tree-id500 . -8) (undo-tree-id502 . -8) (undo-tree-id504 . -8) (undo-tree-id506 . -8) (undo-tree-id508 . -8) (undo-tree-id510 . -8) (undo-tree-id512 . -8) (undo-tree-id514 . -8) (undo-tree-id516 . -8) (undo-tree-id518 . -8) (undo-tree-id520 . -8) (undo-tree-id522 . -8) (undo-tree-id524 . -8) (undo-tree-id526 . -8) (undo-tree-id528 . -8) (undo-tree-id530 . -8) (undo-tree-id532 . -8) 2874) ((2865 . 2874) (#(" " 0 1 (fontified t)) . 2865)) (26026 28358 385507 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t)) . 1179)) nil (26026 29220 785641 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 2855) (undo-tree-id66 . -1) (undo-tree-id68 . -1) (undo-tree-id70 . -1) (undo-tree-id72 . -1) (undo-tree-id74 . -1) (undo-tree-id76 . -1) (undo-tree-id78 . -1) (undo-tree-id80 . -1) (undo-tree-id82 . -1) (undo-tree-id84 . -1) (undo-tree-id86 . -1) (undo-tree-id88 . -1) (undo-tree-id90 . -1) (undo-tree-id92 . -1) (undo-tree-id94 . -1) (undo-tree-id96 . -1) (undo-tree-id98 . -1) (undo-tree-id100 . -1) (undo-tree-id102 . -1) (undo-tree-id104 . -1) (undo-tree-id106 . -1) (undo-tree-id108 . -1) (undo-tree-id110 . -1) (undo-tree-id112 . -1)) ((2855 . 2856)) (26026 28358 102495 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 1180)) nil (26026 29220 785641 0) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 2855) (undo-tree-id45 . -1) (undo-tree-id47 . -1) (undo-tree-id49 . -1) (undo-tree-id51 . -1) (undo-tree-id53 . -1) (undo-tree-id55 . -1) (undo-tree-id57 . -1) (undo-tree-id59 . -1) (undo-tree-id61 . -1) (undo-tree-id63 . -1)) ((2855 . 2856)) (26026 28357 778865 0) 0 nil])
([nil nil ((1457 . 1458)) nil (26026 29220 785641 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 2855) (undo-tree-id43 . -1)) ((2855 . 2856)) (26026 28357 456560 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1457)) nil (26026 29220 785640 0) 0 nil])
([nil nil ((2855 . 2856)) ((#(">" 0 1 (fontified t)) . 2855)) (26026 28357 91311 0) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . 1455)) nil (26026 29220 785640 0) 0 nil])
([nil nil ((2855 . 2856)) ((#("E" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 2855) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1)) (26026 28356 580023 0) 0 nil])
([nil nil ((#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . 1455) (undo-tree-id2028 . -1)) nil (26026 29220 785639 0) 0 nil])
([nil nil ((2855 . 2856)) ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 2855) (t 26026 28186 703755 487000)) (26026 28355 503547 0) 0 nil])
([nil nil ((#("iterator" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 1442) (undo-tree-id2027 . -7)) nil (26026 29220 785639 0) 0 nil])
([nil nil ((#("            current = current.next;
" 0 21 (fontified t) 21 36 (fontified t)) . 2999) (undo-tree-id1201 . -35) (undo-tree-id1202 . -15) 3014 (t 26026 28186 703755 487000)) ((2999 . 3035)) (26026 28354 498648 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1442) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1)) nil (26026 29220 785638 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2970 . 2971) (#("
" 0 1 (fontified nil)) . -2994) (2958 . 2995)) ((#("
            current = current.next;
" 0 1 (fontified t) 1 12 (fontified nil) 12 13 (rear-nonsticky nil fontified nil) 13 22 (fontified nil) 22 36 (fontified nil) 36 37 (fontified nil)) . 2958) (undo-tree-id1203 . -31) (undo-tree-id1204 . -1) (undo-tree-id1205 . -31) (undo-tree-id1206 . -31) (undo-tree-id1207 . -31) (undo-tree-id1208 . -31) (undo-tree-id1209 . -31) (undo-tree-id1210 . -31) (undo-tree-id1211 . -31) (undo-tree-id1212 . -31) (undo-tree-id1213 . -31) (undo-tree-id1214 . -31) (undo-tree-id1215 . -31) (undo-tree-id1216 . -31) (undo-tree-id1217 . -31) (undo-tree-id1218 . -31) (undo-tree-id1219 . -31) (undo-tree-id1220 . -31) (undo-tree-id1221 . -31) (undo-tree-id1222 . -31) (undo-tree-id1223 . -31) (undo-tree-id1224 . -31) (undo-tree-id1225 . -31) (undo-tree-id1226 . -31) (undo-tree-id1227 . -31) (undo-tree-id1228 . -31) (undo-tree-id1229 . -31) (undo-tree-id1230 . -31) (undo-tree-id1231 . -31) (undo-tree-id1232 . -31) (undo-tree-id1233 . -31) (undo-tree-id1234 . -31) (undo-tree-id1235 . -31) (undo-tree-id1236 . -31) (undo-tree-id1237 . -31) (undo-tree-id1238 . -31) (undo-tree-id1239 . -31) (undo-tree-id1240 . -31) (undo-tree-id1241 . -31) (undo-tree-id1242 . -31) (undo-tree-id1243 . -31) (undo-tree-id1244 . -31) (undo-tree-id1245 . -31) (undo-tree-id1246 . -31) (undo-tree-id1247 . -31) (undo-tree-id1248 . -31) (undo-tree-id1249 . -31) (undo-tree-id1250 . -31) (undo-tree-id1251 . -31) (undo-tree-id1252 . -31) (undo-tree-id1253 . -31) (undo-tree-id1254 . -31) (undo-tree-id1255 . -31) (undo-tree-id1256 . -31) (undo-tree-id1257 . -31) (undo-tree-id1258 . -31) (undo-tree-id1259 . -31) (undo-tree-id1260 . -31) (undo-tree-id1261 . -31) (undo-tree-id1262 . -31) (undo-tree-id1263 . -31) (undo-tree-id1264 . -31) (undo-tree-id1265 . -31) (undo-tree-id1266 . -31) (undo-tree-id1267 . -31) (undo-tree-id1268 . -31) (undo-tree-id1269 . -31) (undo-tree-id1270 . -31) (undo-tree-id1271 . -31) (undo-tree-id1272 . -31) (undo-tree-id1273 . -31) (undo-tree-id1274 . -31) (undo-tree-id1275 . -31) (undo-tree-id1276 . -31) (undo-tree-id1277 . -31) (undo-tree-id1278 . -31) (undo-tree-id1279 . -31) (undo-tree-id1280 . -31) (undo-tree-id1281 . -31) (undo-tree-id1282 . -31) (undo-tree-id1283 . -31) (undo-tree-id1284 . -31) (undo-tree-id1285 . -31) (undo-tree-id1286 . -31) (undo-tree-id1287 . -31) (undo-tree-id1288 . -31) (undo-tree-id1289 . -31) (undo-tree-id1290 . -31) (undo-tree-id1291 . -31) (undo-tree-id1292 . -31) (undo-tree-id1293 . -31) (undo-tree-id1294 . -31) (undo-tree-id1295 . -31) (2994 . 2995) (nil rear-nonsticky t 2970 . 2971)) (26026 28347 760305 0) 0 nil])
([nil nil ((1442 . 1450)) nil (26026 29220 785637 0) 0 nil])
([nil nil ((#("            current = current.next;
" 0 11 (fontified t) 11 12 (rear-nonsticky t fontified t) 12 21 (fontified t) 21 35 (fontified t) 35 36 (fontified t)) . 2959) (undo-tree-id1199 . -35) (undo-tree-id1200 . -30) 2989) ((2959 . 2995)) (26026 28346 916076 0) 0 nil])
([nil nil ((1179 . 1184)) nil (26026 29220 785637 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -3034) (2998 . 3035) 2989) ((#("
            current = current.next;
" 0 1 (fontified t) 1 12 (fontified nil) 12 13 (fontified nil rear-nonsticky t) 13 22 (fontified nil) 22 36 (fontified nil) 36 37 (fontified nil)) . 2998) (3034 . 3035)) (26026 28346 279567 0) 0 nil])
([nil nil ((1185 . 1186)) nil (26026 29220 785636 0) 0 nil])
([nil nil ((#("Node" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . 2851) (undo-tree-id1198 . -3)) ((2851 . 2855)) (26026 28345 817113 0) 0 nil])
([nil nil ((1513 . 1514) (#("s" 0 1 (fontified t)) . -1513) (undo-tree-id2020 . -1) (#("m" 0 1 (fontified t)) . -1514) (undo-tree-id2021 . -1) 1515 (1513 . 1515) (1501 . 1513) (#("sec" 0 3 (fontified nil)) . 1501) (1501 . 1504) (#("secondToLast : MyALDAList.Node<E>" 0 30 (fontified nil) 30 31 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 31 32 (fontified nil) 32 33 (fontified nil category c->-as-paren-syntax)) . -1501) (undo-tree-id2022 . -33) (1501 . 1534) (#("sec" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1501) (undo-tree-id2023 . -3) (undo-tree-id2024 . -3) 1504 (1494 . 1504) (1485 . 1494) 1484) nil (26026 29220 785635 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 2851)) ((2851 . 2852)) (26026 28345 211421 0) 0 nil])
([nil nil ((1277 . 1283) (#("d" 0 1 (fontified t)) . -1277) (undo-tree-id2017 . -1) (#("k" 0 1 (fontified t)) . -1278) (undo-tree-id2018 . -1) (#("d" 0 1 (fontified t)) . -1279) (undo-tree-id2019 . -1) 1280 (1276 . 1280)) nil (26026 29220 785632 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 2852)) ((2852 . 2853)) (26026 28344 577782 0) 0 nil])
([nil nil ((#("            Node<E> newNode = new Node<>(element, null);
" 0 1 (fontified t c-is-sws t c-in-sws t) 1 12 (fontified t c-is-sws t c-in-sws t) 12 13 (face font-lock-type-face fontified t c-is-sws t) 13 16 (face font-lock-type-face fontified t) 16 17 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 17 18 (face font-lock-type-face fontified t) 18 19 (face (rainbow-delimiters-depth-4-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 19 20 (fontified t) 20 27 (face font-lock-variable-name-face fontified t) 27 30 (fontified t) 30 33 (face font-lock-keyword-face fontified t) 33 34 (fontified t) 34 38 (face font-lock-type-face fontified t) 38 39 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 39 40 (face (rainbow-delimiters-depth-4-face) fontified t category c->-as-paren-syntax) 40 41 (face (rainbow-delimiters-depth-4-face) fontified t) 41 50 (fontified t) 50 54 (face font-lock-constant-face fontified t) 54 55 (face (rainbow-delimiters-depth-4-face) fontified t) 55 57 (fontified t)) . 608) (undo-tree-id2015 . -56) (undo-tree-id2016 . -34) 642) nil (26026 29220 785630 0) 0 nil])
([nil nil ((2852 . 2853)) ((#(">" 0 1 (fontified t)) . 2852)) (26026 28343 699468 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 441 . 442) (#("
" 0 1 (fontified nil)) . -486) (429 . 487) 428) nil (26026 29220 785629 0) 0 nil])
([nil nil ((2851 . 2852)) ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 2851)) (26026 28343 23777 0) 0 nil])
([nil nil ((430 . 438) (#("            " 0 1 (fontified t) 1 11 (fontified t) 11 12 (rear-nonsticky t fontified t)) . -430) (undo-tree-id2014 . -12) 442) nil (26026 29220 785628 0) 0 nil])
([nil nil ((2851 . 2855)) ((#("Node" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . 2851)) (26026 28343 22891 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -483) (undo-tree-id2013 . -8) 491 (482 . 491) 438) nil (26026 29220 785627 0) 0 nil])
nil
([nil nil ((#("Node" 0 1 (face font-lock-type-face fontified t c-is-sws t) 1 4 (face font-lock-type-face fontified t)) . 978) (undo-tree-id2012 . -3)) nil (26026 29220 785626 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t c-is-sws t fontified t)) . 978)) nil (26026 29220 785625 0) 0 nil])
([nil nil ((#("E" 0 1 (c-is-sws t fontified t)) . 978)) nil (26026 29220 785625 0) 0 nil])
([nil nil ((#(">" 0 1 (c-is-sws t fontified t)) . 978)) nil (26026 29220 785624 0) 0 nil])
([nil nil ((#(" " 0 1 (c-is-sws t fontified t)) . 978)) nil (26026 29220 785624 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -700) (undo-tree-id1978 . -12) (undo-tree-id1979 . -12) (undo-tree-id1980 . -12) (undo-tree-id1981 . -12) (undo-tree-id1982 . -12) (undo-tree-id1983 . -12) (undo-tree-id1984 . -12) (undo-tree-id1985 . -12) (undo-tree-id1986 . -12) (undo-tree-id1987 . -12) (undo-tree-id1988 . -12) (undo-tree-id1989 . -12) (undo-tree-id1990 . -12) (undo-tree-id1991 . -12) (undo-tree-id1992 . -12) (undo-tree-id1993 . -12) (undo-tree-id1994 . -12) (undo-tree-id1995 . -12) (undo-tree-id1996 . -12) (undo-tree-id1997 . -12) (undo-tree-id1998 . -12) (undo-tree-id1999 . -12) (undo-tree-id2000 . -12) (undo-tree-id2001 . -12) (undo-tree-id2002 . -12) (undo-tree-id2003 . -12) (undo-tree-id2004 . -12) (undo-tree-id2005 . -12) (undo-tree-id2006 . -12) (undo-tree-id2007 . -12) (undo-tree-id2008 . -12) (undo-tree-id2009 . -12) (undo-tree-id2010 . -12) (undo-tree-id2011 . -12) 712 (699 . 712) 674) nil (26026 29220 785620 0) 0 nil])
([nil nil ((2056 . 2063) (2047 . 2056) (t 26026 29220 791421 390000) 1993) nil (26026 32457 557338 0) 0 nil])
([nil nil ((2072 . 2073) (2067 . 2072) (2063 . 2067)) nil (26026 32457 557338 0) 0 nil])
([nil nil ((2072 . 2073) (#(":" 0 1 (fontified t)) . 2072) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1)) nil (26026 32457 557337 0) 0 nil])
([nil nil ((2072 . 2073) (#("s" 0 1 (fontified t)) . 2072) (undo-tree-id2975 . -1)) nil (26026 32457 557322 0) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . 2063) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1)) nil (26026 32457 557320 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2063) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1)) nil (26026 32457 557298 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2063) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1)) nil (26026 32457 557271 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 2063) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1)) nil (26026 32457 557270 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2063) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1)) nil (26026 32457 557255 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 2063) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1)) nil (26026 32457 557246 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2063) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1)) nil (26026 32457 557226 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 2063) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1)) nil (26026 32457 557210 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 2063) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1)) nil (26026 32457 557189 0) 0 nil])
([nil nil ((2063 . 2067)) nil (26026 32457 557083 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2183 . 2184) (#("
" 0 1 (fontified nil)) . -2196) (2175 . 2197) 2135) nil (26026 32457 557083 0) 0 nil])
([nil nil ((2191 . 2195) (#("null" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 2191) (undo-tree-id2310 . -3) (undo-tree-id2311 . -4) (undo-tree-id2312 . -4) (undo-tree-id2313 . -4) (undo-tree-id2314 . -4) (undo-tree-id2315 . -4) (undo-tree-id2316 . -4) (undo-tree-id2317 . -4) (undo-tree-id2318 . -4) (undo-tree-id2319 . -4) (undo-tree-id2320 . -4) (undo-tree-id2321 . -4) (undo-tree-id2322 . -4) (undo-tree-id2323 . -4) (undo-tree-id2324 . -4) (undo-tree-id2325 . -4) (undo-tree-id2326 . -4) (undo-tree-id2327 . -4) (undo-tree-id2328 . -4) (undo-tree-id2329 . -4) (undo-tree-id2330 . -4) (undo-tree-id2331 . -4)) nil (26026 32457 557082 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2262 . 2263) (nil fontified nil 2259 . 2263) (2259 . 2263) 2258) nil (26026 32457 557074 0) 0 nil])
([nil nil ((#("null" 0 3 (face font-lock-comment-face fontified nil c-in-sws t) 3 4 (face font-lock-comment-face fontified nil c-in-sws t rear-nonsticky nil)) . 2259) (undo-tree-id2308 . -3) (undo-tree-id2309 . -3) (nil rear-nonsticky t 2262 . 2263)) nil (26026 32457 557073 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2319) (2298 . 2320) 2258) nil (26026 32457 557072 0) 0 nil])
([nil nil ((2314 . 2318) (#("true" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 2314) (undo-tree-id2307 . -3)) nil (26026 32457 557072 0) 0 nil])
([nil nil ((2314 . 2315) (#("null" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 2314) (undo-tree-id2305 . -3) (undo-tree-id2306 . -3)) nil (26026 32457 557071 0) 0 nil])
([nil nil ((1971 . 1972) (1960 . 1971) (1951 . 1960) 1925) nil (26026 32457 557070 0) 0 nil])
([nil nil ((1823 . 1824) (1812 . 1823) (1803 . 1812) 1781) nil (26026 32457 557069 0) 0 nil])
([nil nil ((#("    private MyALDAListIterator iterator;
" 0 4 (fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 29 (face font-lock-type-face fontified t) 29 30 (face font-lock-type-face c-type c-decl-id-start fontified t) 30 31 (fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (face font-lock-variable-name-face fontified t) 33 34 (face font-lock-variable-name-face fontified t) 34 35 (face font-lock-variable-name-face fontified t) 35 37 (face font-lock-variable-name-face fontified t) 37 38 (face font-lock-variable-name-face fontified t) 38 39 (face font-lock-variable-name-face fontified t) 39 40 (fontified t) 40 41 (fontified t)) . 188) (undo-tree-id2301 . -40) (undo-tree-id2302 . -12) (undo-tree-id2303 . -12) (undo-tree-id2304 . -4) 192) nil (26026 32457 557069 0) 0 nil])
([nil nil ((2543 . 2545) (2542 . 2543) (2540 . 2542) (2530 . 2540) (#("<" 0 1 (fontified t)) . -2530) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) 2531 (2530 . 2531) (#("d" 0 1 (face font-lock-type-face fontified t)) . -2530) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (#("j" 0 1 (face font-lock-type-face fontified t)) . -2531) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) 2532 (2528 . 2532) (#("d" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -2528) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (#("u" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -2529) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (#("E" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -2530) (undo-tree-id2299 . -1) 2531 (2524 . 2531) (2503 . 2524) (2499 . 2503) (#("    " 0 4 (fontified nil)) . 2498) (undo-tree-id2300 . -4) (2502 . 2503) (2497 . 2502) 2492) nil (26026 32457 557066 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2549) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (#("e" 0 1 (fontified t)) . -2550) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) 2551 (2549 . 2551) (2544 . 2549)) nil (26026 32457 557059 0) 0 nil])
([nil nil ((2584 . 2585) (2582 . 2584) (2564 . 2582) (#("MyA" 0 3 (fontified nil)) . 2564) (2564 . 2567) (#("MyALDAListIterator()" 0 20 (fontified nil)) . -2564) (undo-tree-id2282 . -20) (2564 . 2584) (#("MyALDA" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t)) . -2564) (undo-tree-id2283 . -6) (undo-tree-id2284 . -6) 2570 (2566 . 2570) (2553 . 2566) (2544 . 2553) 2502) nil (26026 32457 557057 0) 0 nil])
([nil nil ((#("        this.iterator = new MyALDAListIterator();
" 0 8 (fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (face font-lock-keyword-face fontified t) 25 26 (face font-lock-keyword-face fontified t) 26 27 (face font-lock-keyword-face fontified t) 27 28 (fontified t) 28 46 (face font-lock-type-face fontified t) 46 47 (face (rainbow-delimiters-depth-3-face) fontified t) 47 48 (face (rainbow-delimiters-depth-3-face) fontified t) 48 49 (fontified t) 49 50 (fontified t)) . 299) (undo-tree-id2280 . -49) (undo-tree-id2281 . -39) 338) nil (26026 32457 557055 0) 0 nil])
([nil nil ((1208 . 1210) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -1208) (undo-tree-id2278 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -1209) (undo-tree-id2279 . -1) 1210 (1208 . 1210)) nil (26026 32457 557054 0) 0 nil])
([nil nil ((1137 . 1139)) nil (26026 32457 557052 0) 0 nil])
([nil nil ((#("current" 0 7 (fontified t)) . 1140) (undo-tree-id2277 . -6)) nil (26026 32457 557052 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1140) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (#("u" 0 1 (fontified t)) . -1141) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) 1142 (1139 . 1142) (#("." 0 1 (fontified t)) . -1139) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . 1) (undo-tree-id2276 . -1) 1140) nil (26026 32457 557051 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1139)) nil (26026 32457 557047 0) 0 nil])
([nil nil ((1135 . 1136) (1133 . 1135) (1129 . 1133) (#("iterator();" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-3-face) fontified t) 9 10 (face (rainbow-delimiters-depth-3-face) fontified t) 10 11 (fontified t)) . 1129) (undo-tree-id2264 . -9) (undo-tree-id2265 . -10) (undo-tree-id2266 . 1) (undo-tree-id2267 . -9) (undo-tree-id2268 . -10)) nil (26026 32457 557046 0) 0 nil])
([nil nil ((1129 . 1137) (#("itnext" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1129) (1129 . 1131) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -1129) (undo-tree-id2261 . -24) (1129 . 1153) (#("iterator" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -1129) (undo-tree-id2262 . -8) (undo-tree-id2263 . -8) 1137 (1129 . 1137)) nil (26026 32457 557044 0) 0 nil])
([nil nil ((1140 . 1144) (#("next() : E" 0 10 (fontified nil)) . -1140) (undo-tree-id2258 . -10) (1140 . 1150) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1140) (undo-tree-id2259 . -2) (undo-tree-id2260 . -2) 1142 (1139 . 1142)) nil (26026 32457 557042 0) 0 nil])
([nil nil ((1144 . 1146)) nil (26026 32457 557040 0) 0 nil])
([nil nil ((#("iterator().next();" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-3-face) fontified t) 9 10 (face (rainbow-delimiters-depth-3-face) fontified t) 10 11 (fontified t) 11 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-3-face) fontified t) 16 17 (face (rainbow-delimiters-depth-3-face) fontified t) 17 18 (fontified t)) . 1129) (undo-tree-id2254 . -17) (undo-tree-id2255 . 1) (undo-tree-id2256 . -15) (undo-tree-id2257 . -15)) nil (26026 32457 557039 0) 0 nil])
([nil nil ((#("
    // hitta näst sista noden
    private Node<E> secondToLast() {
        Node<E> current = 
        Node<E> secondToLast = null;

        while (iterator().hasNext()) {

            if (current.next == lastNode) {
                secondToLast = current;
            } else {
                current = current.next;
            }
        }
        return secondToLast;
    }
" 0 1 (fontified t) 1 5 (fontified t c-is-sws t c-in-sws t) 5 6 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 6 8 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 8 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 35 (fontified t c-in-sws t c-is-sws t) 35 36 (face font-lock-keyword-face fontified t c-is-sws t) 36 42 (face font-lock-keyword-face fontified t) 42 43 (fontified t) 43 44 (face font-lock-type-face fontified t) 44 45 (face font-lock-type-face fontified t) 45 46 (face font-lock-type-face fontified t) 46 47 (face font-lock-type-face fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 48 49 (face font-lock-type-face fontified t) 49 50 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 50 51 (fontified t) 51 63 (face font-lock-function-name-face fontified t) 63 64 (face (rainbow-delimiters-depth-2-face) fontified t) 64 65 (face (rainbow-delimiters-depth-2-face) fontified t) 65 66 (fontified t) 66 67 (face (rainbow-delimiters-depth-2-face) fontified t) 67 68 (fontified t) 68 76 (fontified t) 76 77 (face font-lock-type-face fontified t) 77 78 (face font-lock-type-face fontified t) 78 79 (face font-lock-type-face fontified t) 79 80 (face font-lock-type-face fontified t) 80 81 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 81 82 (face font-lock-type-face fontified t) 82 83 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 83 84 (fontified t) 84 85 (face font-lock-variable-name-face fontified t) 85 86 (face font-lock-variable-name-face fontified t) 86 87 (face font-lock-variable-name-face fontified t) 87 88 (face font-lock-variable-name-face fontified t) 88 89 (face font-lock-variable-name-face fontified t) 89 90 (face font-lock-variable-name-face fontified t) 90 91 (face font-lock-variable-name-face fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 103 (fontified t) 103 104 (face font-lock-type-face fontified t) 104 105 (face font-lock-type-face fontified t) 105 106 (face font-lock-type-face fontified t) 106 107 (face font-lock-type-face fontified t) 107 108 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 108 109 (face font-lock-type-face fontified t) 109 110 (face (rainbow-delimiters-depth-3-face) fontified t category c->-as-paren-syntax) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (face font-lock-constant-face fontified t) 127 128 (face font-lock-constant-face fontified t) 128 129 (face font-lock-constant-face fontified t) 129 130 (face font-lock-constant-face fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 141 (fontified t) 141 146 (face font-lock-keyword-face fontified t) 146 147 (fontified t) 147 148 (face (rainbow-delimiters-depth-3-face) fontified t) 148 156 (fontified t) 156 157 (face (rainbow-delimiters-depth-4-face) fontified t) 157 158 (face (rainbow-delimiters-depth-4-face) fontified t) 158 159 (fontified t) 159 166 (fontified t) 166 167 (face (rainbow-delimiters-depth-4-face) fontified t) 167 168 (face (rainbow-delimiters-depth-4-face) fontified t) 168 169 (face (rainbow-delimiters-depth-3-face) fontified t) 169 170 (fontified t) 170 171 (face (rainbow-delimiters-depth-3-face) fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 185 (fontified t) 185 186 (face font-lock-keyword-face fontified t) 186 187 (face font-lock-keyword-face fontified t) 187 188 (fontified t) 188 189 (face (rainbow-delimiters-depth-4-face) fontified t) 189 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 213 (fontified t) 213 214 (face (rainbow-delimiters-depth-4-face) fontified t) 214 215 (fontified t) 215 216 (face (rainbow-delimiters-depth-4-face) fontified t) 216 217 (fontified t) 217 233 (fontified t) 233 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 269 (fontified t) 269 270 (face (rainbow-delimiters-depth-4-face) fontified t) 270 271 (fontified t) 271 275 (face font-lock-keyword-face fontified t) 275 276 (fontified t) 276 277 (face (rainbow-delimiters-depth-4-face) fontified t) 277 278 (fontified t) 278 294 (fontified t) 294 295 (fontified t) 295 296 (fontified t) 296 297 (fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 330 (fontified t) 330 331 (face (rainbow-delimiters-depth-4-face) fontified t) 331 332 (fontified t) 332 340 (fontified t) 340 341 (face (rainbow-delimiters-depth-3-face) fontified t) 341 342 (fontified t) 342 350 (fontified t) 350 351 (face font-lock-keyword-face fontified t) 351 352 (face font-lock-keyword-face fontified t) 352 353 (face font-lock-keyword-face fontified t) 353 354 (face font-lock-keyword-face fontified t) 354 355 (face font-lock-keyword-face fontified t) 355 356 (face font-lock-keyword-face fontified t) 356 357 (fontified t) 357 369 (fontified t) 369 370 (fontified t) 370 371 (fontified t) 371 375 (fontified t) 375 376 (face (rainbow-delimiters-depth-2-face) fontified t) 376 377 (fontified t)) . 1035) (undo-tree-id2231 . -375) (undo-tree-id2232 . -376) (undo-tree-id2233 . 283) (undo-tree-id2234 . -375) (undo-tree-id2235 . -123) (undo-tree-id2236 . -304) (undo-tree-id2237 . -304) (undo-tree-id2238 . -92) (undo-tree-id2239 . -92) (undo-tree-id2240 . -316) (undo-tree-id2241 . -316) (undo-tree-id2242 . -66) (undo-tree-id2243 . -66) (undo-tree-id2244 . -276) (undo-tree-id2245 . -276) (undo-tree-id2246 . -276) (undo-tree-id2247 . -276) (undo-tree-id2248 . -94) (undo-tree-id2249 . -94) (undo-tree-id2250 . -94) (undo-tree-id2251 . -94) (undo-tree-id2252 . -76) (undo-tree-id2253 . -76)) nil (26026 32457 557037 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2803) (undo-tree-id2229 . -8) 2811 (2803 . 2811) (#("        " 0 8 (fontified nil)) . 2802) (undo-tree-id2230 . -8) (2810 . 2811) (2801 . 2810) 2800) nil (26026 32457 557028 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2803 . 2804) (#("
" 0 1 (fontified nil)) . -3180) (2803 . 3181)) nil (26026 32457 557026 0) 0 nil])
([nil nil ((2805 . 2813) (#("    " 0 4 (fontified t c-is-sws t c-in-sws t)) . 2805)) nil (26026 32457 557026 0) 0 nil])
([nil nil ((2839 . 2847) (#("    " 0 4 (fontified t c-in-sws t c-is-sws t)) . 2839) 2847) nil (26026 32457 557025 0) 0 nil])
([nil nil ((2880 . 2892) (#("        " 0 8 (fontified t)) . 2880) 2892) nil (26026 32457 557025 0) 0 nil])
([nil nil ((2911 . 2927) (#("        " 0 8 (fontified t)) . 2911) 2927) nil (26026 32457 557024 0) 0 nil])
([nil nil ((2956 . 2968)) nil (26026 32457 557024 0) 0 nil])
([nil nil ((2969 . 2981) (#("        " 0 8 (fontified t)) . 2969) 2980) nil (26026 32457 557023 0) 0 nil])
([nil nil ((3012 . 3028)) nil (26026 32457 557023 0) 0 nil])
([nil nil ((3029 . 3045) (#("            " 0 12 (fontified t)) . 3029) 3044) nil (26026 32457 557023 0) 0 nil])
([nil nil ((3077 . 3097) (#("                " 0 16 (fontified t)) . 3077) 3096) nil (26026 32457 557022 0) 0 nil])
([nil nil ((3121 . 3137) (#("            " 0 12 (fontified t)) . 3121) 3140) nil (26026 32457 557021 0) 0 nil])
([nil nil ((3146 . 3166) (#("                " 0 16 (fontified t)) . 3146) 3169) nil (26026 32457 557021 0) 0 nil])
([nil nil ((3190 . 3206) (#("            " 0 12 (fontified t)) . -3190) (undo-tree-id2228 . -12) 3202) nil (26026 32457 557020 0) 0 nil])
([nil nil ((3208 . 3220) (#("        " 0 8 (fontified t)) . -3208) (undo-tree-id2227 . -8) 3216) nil (26026 32457 557019 0) 0 nil])
([nil nil ((3222 . 3234) (#("        " 0 8 (fontified t)) . 3222) 3234) nil (26026 32457 557017 0) 0 nil])
([nil nil ((3255 . 3263) (#("    " 0 4 (fontified t)) . -3255) (undo-tree-id2226 . -4) 3259) nil (26026 32457 557017 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2802)) nil (26026 32457 557016 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 2802)) nil (26026 32457 557015 0) 0 nil])
([nil nil ((2845 . 2851) (#("private" 0 1 (face font-lock-keyword-face fontified t c-is-sws t) 1 7 (face font-lock-keyword-face fontified t)) . 2845) (undo-tree-id2225 . -6)) nil (26026 32457 557015 0) 0 nil])
([nil nil ((2860 . 2863)) nil (26026 32457 557014 0) 0 nil])
([nil nil ((2863 . 2864) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . 2863) (undo-tree-id2223 . 1) (undo-tree-id2224 . 1)) nil (26026 32457 557013 0) 0 nil])
([nil nil ((3012 . 3028) (#("               " 0 15 (fontified nil)) . -3012) (undo-tree-id2208 . -15) (undo-tree-id2209 . -15) (undo-tree-id2210 . -15) (undo-tree-id2211 . -15) (undo-tree-id2212 . -15) (undo-tree-id2213 . -15) (undo-tree-id2214 . -15) (undo-tree-id2215 . -15) (undo-tree-id2216 . -15) (undo-tree-id2217 . -15) (undo-tree-id2218 . -15) (undo-tree-id2219 . -15) (undo-tree-id2220 . -15) (undo-tree-id2221 . -15) (undo-tree-id2222 . -15) (#(" " 0 1 (fontified t)) . 3027)) nil (26026 32457 557012 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -2999) (undo-tree-id2029 . -16) (undo-tree-id2030 . -15) (undo-tree-id2031 . -15) (undo-tree-id2032 . -15) (undo-tree-id2033 . -15) (undo-tree-id2034 . -15) (undo-tree-id2035 . -15) (undo-tree-id2036 . -15) (undo-tree-id2037 . -15) (undo-tree-id2038 . -15) (undo-tree-id2039 . -15) (undo-tree-id2040 . -15) (undo-tree-id2041 . -15) (undo-tree-id2042 . -15) (undo-tree-id2043 . -15) (undo-tree-id2044 . -15) (undo-tree-id2045 . -15) (undo-tree-id2046 . -15) (undo-tree-id2047 . -15) (undo-tree-id2048 . -15) (undo-tree-id2049 . -15) (undo-tree-id2050 . -15) (undo-tree-id2051 . -15) (undo-tree-id2052 . -15) (undo-tree-id2053 . -15) (undo-tree-id2054 . -15) (undo-tree-id2055 . -15) (undo-tree-id2056 . -15) (undo-tree-id2057 . -15) (undo-tree-id2058 . -15) (undo-tree-id2059 . -15) (undo-tree-id2060 . -15) (undo-tree-id2061 . -15) (undo-tree-id2062 . -15) (undo-tree-id2063 . -15) (undo-tree-id2064 . -15) (undo-tree-id2065 . -15) (#("            " 0 12 (fontified t)) . -2955) (undo-tree-id2066 . -11) (undo-tree-id2067 . -11) (undo-tree-id2068 . -11) (undo-tree-id2069 . -11) (undo-tree-id2070 . -11) (undo-tree-id2071 . -11) (undo-tree-id2072 . -11) (undo-tree-id2073 . -11) (undo-tree-id2074 . -11) (undo-tree-id2075 . -11) (undo-tree-id2076 . -11) (undo-tree-id2077 . -11) (undo-tree-id2078 . -11) (undo-tree-id2079 . -11) (undo-tree-id2080 . -11) (undo-tree-id2081 . -11) (undo-tree-id2082 . -11) (undo-tree-id2083 . -11) (undo-tree-id2084 . -11) (undo-tree-id2085 . -11) (undo-tree-id2086 . -11) (undo-tree-id2087 . -11) (undo-tree-id2088 . -11) (undo-tree-id2089 . -11) (undo-tree-id2090 . -11) (undo-tree-id2091 . -11) (undo-tree-id2092 . -11) (undo-tree-id2093 . -11) (undo-tree-id2094 . -11) (undo-tree-id2095 . -11) (undo-tree-id2096 . -11) (undo-tree-id2097 . -11) (undo-tree-id2098 . -11) (undo-tree-id2099 . -11) (undo-tree-id2100 . -11) (undo-tree-id2101 . -11) (undo-tree-id2102 . -11) (undo-tree-id2103 . -11) (undo-tree-id2104 . -11) (undo-tree-id2105 . -11) (undo-tree-id2106 . -11) (undo-tree-id2107 . -11) (undo-tree-id2108 . -11) (undo-tree-id2109 . -11) (undo-tree-id2110 . -11) (undo-tree-id2111 . -11) (undo-tree-id2112 . -11) (undo-tree-id2113 . -11) (undo-tree-id2114 . -11) (undo-tree-id2115 . -11) (undo-tree-id2116 . -11) (undo-tree-id2117 . -11) (#(" " 0 1 (fontified t)) . -2909) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1)) nil (26026 32457 557001 0) 0 nil])
([nil nil ((2909 . 2910) (t 26026 32457 569209 822000)) nil (26026 32813 159544 0) 0 nil])
([nil nil ((#("            Node<E> current = 
                Node<E> secondToLast = null;

            while (iterator().hasNext()) {

                if (current.next == lastNode) {
                    secondToLast = current;
                } else {
                    current = current.next;
                }
            }
            return secondToLast;
" 0 12 (fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face fontified t) 15 16 (face font-lock-type-face fontified t) 16 17 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 17 18 (face font-lock-type-face fontified t) 18 19 (face (rainbow-delimiters-depth-4-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 19 20 (fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 47 (fontified t) 47 48 (face font-lock-type-face fontified t) 48 49 (face font-lock-type-face fontified t) 49 50 (face font-lock-type-face fontified t) 50 51 (face font-lock-type-face fontified t) 51 52 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 52 53 (face font-lock-type-face fontified t) 53 54 (face (rainbow-delimiters-depth-4-face) fontified t category c->-as-paren-syntax) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (face font-lock-constant-face fontified t) 71 72 (face font-lock-constant-face fontified t) 72 73 (face font-lock-constant-face fontified t) 73 74 (face font-lock-constant-face fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 89 (fontified t) 89 94 (face font-lock-keyword-face fontified t) 94 95 (fontified t) 95 96 (face (rainbow-delimiters-depth-4-face) fontified t) 96 104 (fontified t) 104 105 (face (rainbow-delimiters-depth-5-face) fontified t) 105 106 (face (rainbow-delimiters-depth-5-face) fontified t) 106 107 (fontified t) 107 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-5-face) fontified t) 115 116 (face (rainbow-delimiters-depth-5-face) fontified t) 116 117 (face (rainbow-delimiters-depth-4-face) fontified t) 117 118 (fontified t) 118 119 (face (rainbow-delimiters-depth-4-face) fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 137 (fontified t) 137 138 (face font-lock-keyword-face fontified t) 138 139 (face font-lock-keyword-face fontified t) 139 140 (fontified t) 140 141 (face (rainbow-delimiters-depth-5-face) fontified t) 141 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 165 (fontified t) 165 166 (face (rainbow-delimiters-depth-5-face) fontified t) 166 167 (fontified t) 167 168 (face (rainbow-delimiters-depth-5-face) fontified t) 168 169 (fontified t) 169 189 (fontified t) 189 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 229 (fontified t) 229 230 (face (rainbow-delimiters-depth-5-face) fontified t) 230 231 (fontified t) 231 235 (face font-lock-keyword-face fontified t) 235 236 (fontified t) 236 237 (face (rainbow-delimiters-depth-5-face) fontified t) 237 238 (fontified t) 238 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (fontified t) 271 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 280 (fontified t) 280 281 (fontified t) 281 282 (fontified t) 282 298 (fontified t) 298 299 (face (rainbow-delimiters-depth-5-face) fontified t) 299 300 (fontified t) 300 312 (fontified t) 312 313 (face (rainbow-delimiters-depth-4-face) fontified t) 313 314 (fontified t) 314 326 (fontified t) 326 327 (face font-lock-keyword-face fontified t) 327 328 (face font-lock-keyword-face fontified t) 328 329 (face font-lock-keyword-face fontified t) 329 330 (face font-lock-keyword-face fontified t) 330 331 (face font-lock-keyword-face fontified t) 331 332 (face font-lock-keyword-face fontified t) 332 333 (fontified t) 333 345 (fontified t) 345 346 (fontified t) 346 347 (fontified t)) . 2880) (undo-tree-id8918 . -343) (undo-tree-id8919 . -346) (undo-tree-id8920 . 317) (undo-tree-id8921 . -29) (undo-tree-id8922 . -343) (undo-tree-id8923 . -28) (undo-tree-id8924 . -28) (undo-tree-id8925 . -28) (undo-tree-id8926 . -343) (undo-tree-id8927 . -28) (undo-tree-id8928 . -28) 3223) nil (26026 32813 159544 0) 0 nil])
([nil nil ((2919 . 2921) (2918 . 2919) (2917 . 2918) (#(":" 0 1 (fontified t)) . -2917) (undo-tree-id8909 . -1) 2918 (2917 . 2918) (2908 . 2917) (#("firs" 0 4 (fontified nil)) . 2908) (2908 . 2912) (#("firstNode : MyALDAList.Node<E>" 0 27 (fontified nil) 27 28 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 28 29 (fontified nil) 29 30 (fontified nil category c->-as-paren-syntax)) . -2908) (undo-tree-id8910 . -30) (2908 . 2938) (#("firs" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2908) (undo-tree-id8911 . -4) (undo-tree-id8912 . -4) 2912 (2905 . 2912) (#("-" 0 1 (fontified t)) . -2905) (undo-tree-id8913 . -1) (#("-" 0 1 (fontified t)) . -2906) (undo-tree-id8914 . -1) (#(" " 0 1 (fontified t)) . -2907) (undo-tree-id8915 . -1) (#("f" 0 1 (fontified t)) . -2908) (undo-tree-id8916 . -1) (#("i" 0 1 (fontified t)) . -2909) (undo-tree-id8917 . -1) 2910 (2896 . 2910) (2895 . 2896) (2892 . 2895) (2879 . 2892) 2845) nil (26026 32813 159537 0) 0 nil])
([nil nil ((2920 . 2933)) nil (26026 32813 159532 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -2922) (undo-tree-id8789 . -16) (undo-tree-id8790 . -16) (undo-tree-id8791 . -16) (undo-tree-id8792 . -16) (undo-tree-id8793 . -16) (undo-tree-id8794 . -16) (undo-tree-id8795 . -16) (undo-tree-id8796 . -16) (undo-tree-id8797 . -16) (undo-tree-id8798 . -16) (undo-tree-id8799 . -16) (undo-tree-id8800 . -16) (undo-tree-id8801 . -16) (undo-tree-id8802 . -16) (undo-tree-id8803 . -16) (undo-tree-id8804 . -16) (undo-tree-id8805 . -16) (undo-tree-id8806 . -16) (undo-tree-id8807 . -16) (undo-tree-id8808 . -16) (undo-tree-id8809 . -16) (undo-tree-id8810 . -16) (undo-tree-id8811 . -16) (undo-tree-id8812 . -16) (undo-tree-id8813 . -16) (undo-tree-id8814 . -16) (undo-tree-id8815 . -16) (undo-tree-id8816 . -16) (undo-tree-id8817 . -16) (undo-tree-id8818 . -16) (undo-tree-id8819 . -16) (undo-tree-id8820 . -16) (undo-tree-id8821 . -16) (undo-tree-id8822 . -16) (undo-tree-id8823 . -16) (undo-tree-id8824 . -16) (undo-tree-id8825 . -16) (undo-tree-id8826 . -16) (undo-tree-id8827 . -16) (undo-tree-id8828 . -16) (undo-tree-id8829 . -16) (undo-tree-id8830 . -16) (undo-tree-id8831 . -16) (undo-tree-id8832 . -16) (undo-tree-id8833 . -16) (undo-tree-id8834 . -16) (undo-tree-id8835 . -16) (undo-tree-id8836 . -16) (undo-tree-id8837 . -16) (undo-tree-id8838 . -16) (undo-tree-id8839 . -16) (undo-tree-id8840 . -16) (undo-tree-id8841 . -16) (undo-tree-id8842 . -16) (undo-tree-id8843 . -16) (undo-tree-id8844 . -16) (undo-tree-id8845 . -16) (undo-tree-id8846 . -16) (undo-tree-id8847 . -16) (undo-tree-id8848 . -16) (undo-tree-id8849 . -16) (undo-tree-id8850 . -16) (undo-tree-id8851 . -16) (undo-tree-id8852 . -16) (undo-tree-id8853 . -16) (undo-tree-id8854 . -16) (undo-tree-id8855 . -16) (undo-tree-id8856 . -16) (undo-tree-id8857 . -16) (undo-tree-id8858 . -16) (undo-tree-id8859 . -16) (undo-tree-id8860 . -16) (undo-tree-id8861 . -16) (undo-tree-id8862 . -16) (undo-tree-id8863 . -16) (undo-tree-id8864 . -16) (undo-tree-id8865 . -16) (undo-tree-id8866 . -16) (undo-tree-id8867 . -16) (undo-tree-id8868 . -16) (undo-tree-id8869 . -16) (undo-tree-id8870 . -16) (undo-tree-id8871 . -16) (undo-tree-id8872 . -16) (undo-tree-id8873 . -16) (undo-tree-id8874 . -16) (undo-tree-id8875 . -16) (undo-tree-id8876 . -16) (undo-tree-id8877 . -16) (undo-tree-id8878 . -16) (undo-tree-id8879 . -16) (undo-tree-id8880 . -16) (undo-tree-id8881 . -16) (undo-tree-id8882 . -16) (undo-tree-id8883 . -16) (undo-tree-id8884 . -16) (undo-tree-id8885 . -16) (undo-tree-id8886 . -16) 2938 (2922 . 2938) (#("                " 0 16 (fontified nil)) . 2921) (undo-tree-id8887 . -16) (undo-tree-id8888 . -16) (undo-tree-id8889 . -16) (undo-tree-id8890 . -16) (undo-tree-id8891 . -16) (undo-tree-id8892 . -16) (undo-tree-id8893 . -16) (undo-tree-id8894 . -16) (undo-tree-id8895 . -16) (undo-tree-id8896 . -16) (undo-tree-id8897 . -16) (undo-tree-id8898 . -16) (undo-tree-id8899 . -16) (undo-tree-id8900 . -16) (undo-tree-id8901 . -16) (undo-tree-id8902 . -16) (undo-tree-id8903 . -16) (undo-tree-id8904 . -16) (undo-tree-id8905 . -16) (undo-tree-id8906 . -16) (undo-tree-id8907 . -16) (undo-tree-id8908 . -16) (2937 . 2938) (2920 . 2937) 2891) nil (26026 32813 159530 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2491 . 2492) (#("
" 0 1 (fontified nil)) . -2533) (2483 . 2534) 2434) nil (26026 32813 159488 0) 0 nil])
([nil nil ((2508 . 2516) (#("current" 0 1 (face font-lock-variable-name-face fontified t) 1 7 (face font-lock-variable-name-face fontified t)) . 2508) (undo-tree-id8786 . -6) (undo-tree-id8787 . -7) (undo-tree-id8788 . -7)) nil (26026 32813 159488 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 2528) (undo-tree-id8757 . -1) (undo-tree-id8758 . -1) (undo-tree-id8759 . -1) (undo-tree-id8760 . -1) (undo-tree-id8761 . -1) (undo-tree-id8762 . -1) (undo-tree-id8763 . -1) (undo-tree-id8764 . -1) (undo-tree-id8765 . -1) (undo-tree-id8766 . -1) (undo-tree-id8767 . -1) (undo-tree-id8768 . -1) (undo-tree-id8769 . -1) (undo-tree-id8770 . -1) (undo-tree-id8771 . -1) (undo-tree-id8772 . -1) (undo-tree-id8773 . -1) (undo-tree-id8774 . -1) (undo-tree-id8775 . -1) (undo-tree-id8776 . -1) (undo-tree-id8777 . -1) (undo-tree-id8778 . -1) (undo-tree-id8779 . -1) (undo-tree-id8780 . -1) (undo-tree-id8781 . -1) (undo-tree-id8782 . -1) (undo-tree-id8783 . -1) (undo-tree-id8784 . -1) (undo-tree-id8785 . -1)) nil (26026 32813 159486 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 2528) (undo-tree-id8755 . -1) (undo-tree-id8756 . -1)) nil (26026 32813 159476 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 2528) (undo-tree-id8753 . -1) (undo-tree-id8754 . -1)) nil (26026 32813 159474 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 2528) (undo-tree-id8751 . -1) (undo-tree-id8752 . -1)) nil (26026 32813 159473 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 2528) (undo-tree-id8749 . -1) (undo-tree-id8750 . -1)) nil (26026 32813 159472 0) 0 nil])
([nil nil ((2791 . 2805) (2785 . 2791) (2772 . 2785) 2771) nil (26026 32813 159470 0) 0 nil])
([nil nil ((2803 . 2804) (#("sm" 0 1 (fontified t) 1 2 (fontified t)) . 2803) (undo-tree-id8668 . -1) (undo-tree-id8669 . -2) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -2) (undo-tree-id8677 . -2) (undo-tree-id8678 . -2) (undo-tree-id8679 . -2) (undo-tree-id8680 . -2) (undo-tree-id8681 . -2) (undo-tree-id8682 . -2) (undo-tree-id8683 . -2) (undo-tree-id8684 . -2) (undo-tree-id8685 . -2) (undo-tree-id8686 . -2) (undo-tree-id8687 . -2) (undo-tree-id8688 . -2) (undo-tree-id8689 . -2) (undo-tree-id8690 . -2) (undo-tree-id8691 . -2) (undo-tree-id8692 . -2) (undo-tree-id8693 . -2) (undo-tree-id8694 . -2) (undo-tree-id8695 . -2) (undo-tree-id8696 . -2) (undo-tree-id8697 . -2) (undo-tree-id8698 . -2) (undo-tree-id8699 . -2) (undo-tree-id8700 . -2) (undo-tree-id8701 . -2) (undo-tree-id8702 . -2) (undo-tree-id8703 . -2) (undo-tree-id8704 . -2) (undo-tree-id8705 . -2) (undo-tree-id8706 . -2) (undo-tree-id8707 . -2) (undo-tree-id8708 . -2) (undo-tree-id8709 . -2) (undo-tree-id8710 . -2) (undo-tree-id8711 . -2) (undo-tree-id8712 . -2) (undo-tree-id8713 . -2) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (undo-tree-id8746 . -1) (undo-tree-id8747 . -2) (undo-tree-id8748 . -2)) nil (26026 32813 159468 0) 0 nil])
([nil nil ((3015 . 3026) (2998 . 3015) 2988) nil (26026 32813 159441 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3027) (undo-tree-id8571 . -1) (undo-tree-id8572 . -1) (undo-tree-id8573 . -1) (undo-tree-id8574 . -1) (undo-tree-id8575 . -1) (undo-tree-id8576 . -1) (undo-tree-id8577 . -1) (undo-tree-id8578 . -1) (undo-tree-id8579 . -1) (undo-tree-id8580 . -1) (undo-tree-id8581 . -1) (undo-tree-id8582 . -1) (undo-tree-id8583 . -1) (undo-tree-id8584 . -1) (undo-tree-id8585 . -1) (undo-tree-id8586 . -1) (undo-tree-id8587 . -1) (undo-tree-id8588 . -1) (undo-tree-id8589 . -1) (undo-tree-id8590 . -1) (undo-tree-id8591 . -1) (undo-tree-id8592 . -1) (undo-tree-id8593 . -1) (undo-tree-id8594 . -1) (undo-tree-id8595 . -1) (undo-tree-id8596 . -1) (undo-tree-id8597 . -1) (undo-tree-id8598 . -1) (undo-tree-id8599 . -1) (undo-tree-id8600 . -1) (undo-tree-id8601 . -1) (undo-tree-id8602 . -1) (undo-tree-id8603 . -1) (undo-tree-id8604 . -1) (undo-tree-id8605 . -1) (undo-tree-id8606 . -1) (undo-tree-id8607 . -1) (undo-tree-id8608 . -1) (undo-tree-id8609 . -1) (undo-tree-id8610 . -1) (undo-tree-id8611 . -1) (undo-tree-id8612 . -1) (undo-tree-id8613 . -1) (undo-tree-id8614 . -1) (undo-tree-id8615 . -1) (undo-tree-id8616 . -1) (undo-tree-id8617 . -1) (undo-tree-id8618 . -1) (undo-tree-id8619 . -1) (undo-tree-id8620 . -1) (undo-tree-id8621 . -1) (undo-tree-id8622 . -1) (undo-tree-id8623 . -1) (undo-tree-id8624 . -1) (undo-tree-id8625 . -1) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1)) nil (26026 32813 159439 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3027) (undo-tree-id8570 . -1)) nil (26026 32813 159405 0) 0 nil])
([nil nil ((3068 . 3069) (3060 . 3068) (#("o" 0 1 (fontified t)) . -3060) (undo-tree-id8564 . -1) (undo-tree-id8565 . -1) (#("p" 0 1 (fontified t)) . -3061) (undo-tree-id8566 . -1) (undo-tree-id8567 . -1) 3062 (3061 . 3062) (#("r" 0 1 (fontified t)) . -3061) (undo-tree-id8568 . -1) (#("e" 0 1 (fontified t)) . -3062) (undo-tree-id8569 . -1) 3063 (3053 . 3063) (3040 . 3053) 3039) nil (26026 32813 159403 0) 0 nil])
([nil nil ((3026 . 3027)) nil (26026 32813 159400 0) 0 nil])
([nil nil ((796 . 804) (#("i" 0 1 (fontified nil c-is-sws t)) . 796) (796 . 797) (#("iterator() : Iterator<E>" 0 1 (fontified nil c-is-sws t) 1 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -796) (undo-tree-id7502 . -24) (796 . 820) (#("iterato" 0 1 (fontified t c-is-sws t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -796) (undo-tree-id7503 . -7) (undo-tree-id7504 . -7) (undo-tree-id7505 . -1) (undo-tree-id7506 . -1) (undo-tree-id7507 . -1) (undo-tree-id7508 . -1) (undo-tree-id7509 . -1) (undo-tree-id7510 . -1) (undo-tree-id7511 . -1) (undo-tree-id7512 . -1) (undo-tree-id7513 . -1) (undo-tree-id7514 . -1) (undo-tree-id7515 . -1) (undo-tree-id7516 . -1) (undo-tree-id7517 . -1) (undo-tree-id7518 . -1) (undo-tree-id7519 . -1) (undo-tree-id7520 . -1) (undo-tree-id7521 . -1) (undo-tree-id7522 . -1) (undo-tree-id7523 . -1) (undo-tree-id7524 . -1) (undo-tree-id7525 . -1) (undo-tree-id7526 . -1) (undo-tree-id7527 . -1) (undo-tree-id7528 . -1) (undo-tree-id7529 . -1) (undo-tree-id7530 . -1) (undo-tree-id7531 . -1) (undo-tree-id7532 . -1) (undo-tree-id7533 . -1) (undo-tree-id7534 . -1) (undo-tree-id7535 . -1) (undo-tree-id7536 . -1) (undo-tree-id7537 . -1) (undo-tree-id7538 . -1) (undo-tree-id7539 . -1) (undo-tree-id7540 . -1) (undo-tree-id7541 . -1) (undo-tree-id7542 . -1) (undo-tree-id7543 . -1) (undo-tree-id7544 . -1) (undo-tree-id7545 . -1) (undo-tree-id7546 . -1) (undo-tree-id7547 . -1) (undo-tree-id7548 . -1) (undo-tree-id7549 . -1) (undo-tree-id7550 . -2) (undo-tree-id7551 . -2) (undo-tree-id7552 . -2) (undo-tree-id7553 . -2) (undo-tree-id7554 . -2) (undo-tree-id7555 . -2) (undo-tree-id7556 . -2) (undo-tree-id7557 . -2) (undo-tree-id7558 . -2) (undo-tree-id7559 . -2) (undo-tree-id7560 . -2) (undo-tree-id7561 . -2) (undo-tree-id7562 . -2) (undo-tree-id7563 . -2) (undo-tree-id7564 . -2) (undo-tree-id7565 . -2) (undo-tree-id7566 . -2) (undo-tree-id7567 . -2) (undo-tree-id7568 . -2) (undo-tree-id7569 . -2) (undo-tree-id7570 . -2) (undo-tree-id7571 . -2) (undo-tree-id7572 . -2) (undo-tree-id7573 . -2) (undo-tree-id7574 . -2) (undo-tree-id7575 . -2) (undo-tree-id7576 . -3) (undo-tree-id7577 . -3) (undo-tree-id7578 . -3) (undo-tree-id7579 . -3) (undo-tree-id7580 . -3) (undo-tree-id7581 . -3) (undo-tree-id7582 . -3) (undo-tree-id7583 . -3) (undo-tree-id7584 . -3) (undo-tree-id7585 . -3) (undo-tree-id7586 . -3) (undo-tree-id7587 . -3) (undo-tree-id7588 . -3) (undo-tree-id7589 . -3) (undo-tree-id7590 . -3) (undo-tree-id7591 . -3) (undo-tree-id7592 . -3) (undo-tree-id7593 . -3) (undo-tree-id7594 . -3) (undo-tree-id7595 . -3) (undo-tree-id7596 . -3) (undo-tree-id7597 . -3) (undo-tree-id7598 . -3) (undo-tree-id7599 . -3) (undo-tree-id7600 . -3) (undo-tree-id7601 . -3) (undo-tree-id7602 . -4) (undo-tree-id7603 . -4) (undo-tree-id7604 . -4) (undo-tree-id7605 . -4) (undo-tree-id7606 . -4) (undo-tree-id7607 . -4) (undo-tree-id7608 . -4) (undo-tree-id7609 . -4) (undo-tree-id7610 . -4) (undo-tree-id7611 . -4) (undo-tree-id7612 . -4) (undo-tree-id7613 . -4) (undo-tree-id7614 . -4) (undo-tree-id7615 . -4) (undo-tree-id7616 . -4) (undo-tree-id7617 . -4) (undo-tree-id7618 . -4) (undo-tree-id7619 . -4) (undo-tree-id7620 . -4) (undo-tree-id7621 . -4) (undo-tree-id7622 . -4) (undo-tree-id7623 . -4) (undo-tree-id7624 . -4) (undo-tree-id7625 . -4) (undo-tree-id7626 . -4) (undo-tree-id7627 . -4) (undo-tree-id7628 . -4) (undo-tree-id7629 . -4) (undo-tree-id7630 . -4) (undo-tree-id7631 . -4) (undo-tree-id7632 . -4) (undo-tree-id7633 . -4) (undo-tree-id7634 . -5) (undo-tree-id7635 . -5) (undo-tree-id7636 . -5) (undo-tree-id7637 . -5) (undo-tree-id7638 . -5) (undo-tree-id7639 . -5) (undo-tree-id7640 . -6) (undo-tree-id7641 . -6) (undo-tree-id7642 . -6) (undo-tree-id7643 . -6) (undo-tree-id7644 . -6) (undo-tree-id7645 . -6) (undo-tree-id7646 . -6) (undo-tree-id7647 . -6) (undo-tree-id7648 . -6) (undo-tree-id7649 . -6) (undo-tree-id7650 . -6) (undo-tree-id7651 . -6) (undo-tree-id7652 . -6) (undo-tree-id7653 . -6) (undo-tree-id7654 . -6) (undo-tree-id7655 . -6) (undo-tree-id7656 . -6) (undo-tree-id7657 . -6) (undo-tree-id7658 . -6) (undo-tree-id7659 . -6) (undo-tree-id7660 . -6) (undo-tree-id7661 . -6) (undo-tree-id7662 . -6) (undo-tree-id7663 . -6) (undo-tree-id7664 . -6) (undo-tree-id7665 . -6) (undo-tree-id7666 . -7) (undo-tree-id7667 . -7) (undo-tree-id7668 . -7) (undo-tree-id7669 . -7) (undo-tree-id7670 . -7) (undo-tree-id7671 . -7) (undo-tree-id7672 . -7) (undo-tree-id7673 . -7) (undo-tree-id7674 . -7) (undo-tree-id7675 . -7) (undo-tree-id7676 . -7) (undo-tree-id7677 . -7) (undo-tree-id7678 . -7) (undo-tree-id7679 . -7) (undo-tree-id7680 . -7) (undo-tree-id7681 . -7) (undo-tree-id7682 . -7) (undo-tree-id7683 . -7) (undo-tree-id7684 . -7) (undo-tree-id7685 . -7) (undo-tree-id7686 . -7) (undo-tree-id7687 . -7) (undo-tree-id7688 . -7) (undo-tree-id7689 . -7) (undo-tree-id7690 . -7) (undo-tree-id7691 . -7) (undo-tree-id7692 . -7) (undo-tree-id7693 . -7) (undo-tree-id7694 . -7) (undo-tree-id7695 . -7) (undo-tree-id7696 . -7) (undo-tree-id7697 . -7) (undo-tree-id7698 . -7) 803 (796 . 803) (#("g" 0 1 (fontified t c-is-sws t)) . -796) (undo-tree-id7699 . -1) (undo-tree-id7700 . -1) (undo-tree-id7701 . -1) (undo-tree-id7702 . -1) (undo-tree-id7703 . -1) (undo-tree-id7704 . -1) (undo-tree-id7705 . -1) (undo-tree-id7706 . -1) (undo-tree-id7707 . -1) (undo-tree-id7708 . -1) (undo-tree-id7709 . -1) (undo-tree-id7710 . -1) (undo-tree-id7711 . -1) (undo-tree-id7712 . -1) (undo-tree-id7713 . -1) (undo-tree-id7714 . -1) (undo-tree-id7715 . -1) (undo-tree-id7716 . -1) (undo-tree-id7717 . -1) (undo-tree-id7718 . -1) (undo-tree-id7719 . -1) (undo-tree-id7720 . -1) (undo-tree-id7721 . -1) (undo-tree-id7722 . -1) (undo-tree-id7723 . -1) (undo-tree-id7724 . -1) (undo-tree-id7725 . -1) (undo-tree-id7726 . -1) (undo-tree-id7727 . -1) (undo-tree-id7728 . -1) (undo-tree-id7729 . -1) (undo-tree-id7730 . -1) (undo-tree-id7731 . -1) (undo-tree-id7732 . -1) (undo-tree-id7733 . -1) (undo-tree-id7734 . -1) (undo-tree-id7735 . -1) (undo-tree-id7736 . -1) (undo-tree-id7737 . -1) (undo-tree-id7738 . -1) (undo-tree-id7739 . -1) (undo-tree-id7740 . -1) (undo-tree-id7741 . -1) (undo-tree-id7742 . -1) (undo-tree-id7743 . -1) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (#("e" 0 1 (fontified t)) . -797) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) (undo-tree-id8053 . -1) (undo-tree-id8054 . -1) (undo-tree-id8055 . -1) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (#("t" 0 1 (fontified t)) . -798) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (undo-tree-id8313 . -1) (undo-tree-id8314 . -1) (undo-tree-id8315 . -1) (undo-tree-id8316 . -1) (undo-tree-id8317 . -1) (undo-tree-id8318 . -1) (undo-tree-id8319 . -1) (undo-tree-id8320 . -1) (undo-tree-id8321 . -1) (undo-tree-id8322 . -1) (undo-tree-id8323 . -1) (undo-tree-id8324 . -1) (undo-tree-id8325 . -1) (undo-tree-id8326 . -1) (undo-tree-id8327 . -1) (undo-tree-id8328 . -1) (undo-tree-id8329 . -1) (undo-tree-id8330 . -1) (undo-tree-id8331 . -1) (undo-tree-id8332 . -1) (undo-tree-id8333 . -1) (undo-tree-id8334 . -1) (undo-tree-id8335 . -1) (undo-tree-id8336 . -1) (undo-tree-id8337 . -1) (undo-tree-id8338 . -1) (undo-tree-id8339 . -1) (undo-tree-id8340 . -1) (undo-tree-id8341 . -1) (undo-tree-id8342 . -1) (undo-tree-id8343 . -1) (undo-tree-id8344 . -1) (undo-tree-id8345 . -1) (undo-tree-id8346 . -1) (undo-tree-id8347 . -1) (undo-tree-id8348 . -1) (undo-tree-id8349 . -1) (undo-tree-id8350 . -1) (undo-tree-id8351 . -1) (undo-tree-id8352 . -1) (undo-tree-id8353 . -1) (undo-tree-id8354 . -1) (undo-tree-id8355 . -1) (undo-tree-id8356 . -1) (undo-tree-id8357 . -1) (undo-tree-id8358 . -1) (undo-tree-id8359 . -1) (undo-tree-id8360 . -1) (undo-tree-id8361 . -1) (#("S" 0 1 (fontified t)) . -799) (undo-tree-id8362 . -1) (undo-tree-id8363 . -1) (undo-tree-id8364 . -1) (undo-tree-id8365 . -1) (undo-tree-id8366 . -1) (undo-tree-id8367 . -1) (undo-tree-id8368 . -1) (undo-tree-id8369 . -1) (undo-tree-id8370 . -1) (undo-tree-id8371 . -1) (undo-tree-id8372 . -1) (undo-tree-id8373 . -1) (undo-tree-id8374 . -1) (undo-tree-id8375 . -1) (undo-tree-id8376 . -1) (undo-tree-id8377 . -1) (undo-tree-id8378 . -1) (undo-tree-id8379 . -1) (undo-tree-id8380 . -1) (undo-tree-id8381 . -1) (undo-tree-id8382 . -1) (undo-tree-id8383 . -1) (undo-tree-id8384 . -1) (undo-tree-id8385 . -1) (undo-tree-id8386 . -1) (undo-tree-id8387 . -1) (undo-tree-id8388 . -1) (undo-tree-id8389 . -1) (undo-tree-id8390 . -1) (undo-tree-id8391 . -1) (undo-tree-id8392 . -1) (undo-tree-id8393 . -1) (undo-tree-id8394 . -1) (undo-tree-id8395 . -1) (undo-tree-id8396 . -1) (undo-tree-id8397 . -1) (undo-tree-id8398 . -1) (undo-tree-id8399 . -1) (undo-tree-id8400 . -1) (undo-tree-id8401 . -1) (undo-tree-id8402 . -1) (undo-tree-id8403 . -1) (undo-tree-id8404 . -1) (undo-tree-id8405 . -1) (undo-tree-id8406 . -1) (undo-tree-id8407 . -1) (undo-tree-id8408 . -1) (undo-tree-id8409 . -1) (undo-tree-id8410 . -1) (undo-tree-id8411 . -1) (undo-tree-id8412 . -1) (undo-tree-id8413 . -1) (undo-tree-id8414 . -1) (undo-tree-id8415 . -1) (undo-tree-id8416 . -1) (undo-tree-id8417 . -1) (undo-tree-id8418 . -1) (undo-tree-id8419 . -1) (undo-tree-id8420 . -1) (undo-tree-id8421 . -1) (undo-tree-id8422 . -1) (undo-tree-id8423 . -1) (undo-tree-id8424 . -1) (undo-tree-id8425 . -1) (undo-tree-id8426 . -1) (undo-tree-id8427 . -1) (undo-tree-id8428 . -1) (undo-tree-id8429 . -1) (undo-tree-id8430 . -1) (undo-tree-id8431 . -1) (undo-tree-id8432 . -1) (undo-tree-id8433 . -1) (undo-tree-id8434 . -1) (undo-tree-id8435 . -1) (undo-tree-id8436 . -1) (undo-tree-id8437 . -1) (undo-tree-id8438 . -1) (undo-tree-id8439 . -1) (undo-tree-id8440 . -1) (undo-tree-id8441 . -1) (undo-tree-id8442 . -1) (undo-tree-id8443 . -1) (undo-tree-id8444 . -1) (undo-tree-id8445 . -1) (undo-tree-id8446 . -1) (undo-tree-id8447 . -1) (undo-tree-id8448 . -1) (undo-tree-id8449 . -1) (undo-tree-id8450 . -1) (undo-tree-id8451 . -1) (undo-tree-id8452 . -1) (undo-tree-id8453 . -1) (undo-tree-id8454 . -1) (undo-tree-id8455 . -1) (undo-tree-id8456 . -1) (undo-tree-id8457 . -1) (undo-tree-id8458 . -1) (undo-tree-id8459 . -1) (undo-tree-id8460 . -1) (undo-tree-id8461 . -1) (undo-tree-id8462 . -1) (undo-tree-id8463 . -1) (undo-tree-id8464 . -1) (undo-tree-id8465 . -1) (undo-tree-id8466 . -1) (undo-tree-id8467 . -1) (undo-tree-id8468 . -1) (undo-tree-id8469 . -1) (undo-tree-id8470 . -1) (undo-tree-id8471 . -1) (undo-tree-id8472 . -1) (undo-tree-id8473 . -1) (undo-tree-id8474 . -1) (#("e" 0 1 (fontified t)) . -800) (undo-tree-id8475 . -1) (undo-tree-id8476 . -1) (undo-tree-id8477 . -1) (undo-tree-id8478 . -1) (undo-tree-id8479 . -1) (undo-tree-id8480 . -1) (undo-tree-id8481 . -1) (undo-tree-id8482 . -1) (undo-tree-id8483 . -1) (undo-tree-id8484 . -1) (undo-tree-id8485 . -1) (undo-tree-id8486 . -1) (undo-tree-id8487 . -1) (undo-tree-id8488 . -1) (undo-tree-id8489 . -1) (undo-tree-id8490 . -1) (undo-tree-id8491 . -1) (undo-tree-id8492 . -1) (undo-tree-id8493 . -1) (undo-tree-id8494 . -1) (undo-tree-id8495 . -1) (undo-tree-id8496 . -1) (undo-tree-id8497 . -1) (undo-tree-id8498 . -1) (undo-tree-id8499 . -1) (undo-tree-id8500 . -1) (undo-tree-id8501 . -1) (undo-tree-id8502 . -1) (undo-tree-id8503 . -1) (undo-tree-id8504 . -1) (undo-tree-id8505 . -1) (undo-tree-id8506 . -1) (undo-tree-id8507 . -1) (undo-tree-id8508 . -1) (undo-tree-id8509 . -1) (undo-tree-id8510 . -1) (undo-tree-id8511 . -1) (undo-tree-id8512 . -1) (undo-tree-id8513 . -1) (undo-tree-id8514 . -1) (undo-tree-id8515 . -1) (undo-tree-id8516 . -1) (undo-tree-id8517 . -1) (undo-tree-id8518 . -1) (undo-tree-id8519 . -1) (undo-tree-id8520 . -1) (undo-tree-id8521 . -1) (undo-tree-id8522 . -1) 801 (796 . 801) (#("secondToLast" 0 1 (fontified t c-is-sws t) 1 12 (fontified t)) . 796) (undo-tree-id8523 . -11) (undo-tree-id8524 . -12) (undo-tree-id8525 . -12) (undo-tree-id8526 . -12) (undo-tree-id8527 . -12) (undo-tree-id8528 . -12) (undo-tree-id8529 . -12) (undo-tree-id8530 . -12) (undo-tree-id8531 . -12) (undo-tree-id8532 . -12) (undo-tree-id8533 . -12) (undo-tree-id8534 . -12) (undo-tree-id8535 . -12) (undo-tree-id8536 . -12) (undo-tree-id8537 . -12) (undo-tree-id8538 . -12) (undo-tree-id8539 . -12) (undo-tree-id8540 . -12) (undo-tree-id8541 . -12) (undo-tree-id8542 . -12) (undo-tree-id8543 . -12) (undo-tree-id8544 . -12) (undo-tree-id8545 . -12) (undo-tree-id8546 . -12) (undo-tree-id8547 . -12) (undo-tree-id8548 . -12) (undo-tree-id8549 . -12) (undo-tree-id8550 . -12) (undo-tree-id8551 . -12) (undo-tree-id8552 . -12) (undo-tree-id8553 . -12) (undo-tree-id8554 . -12) (undo-tree-id8555 . -12) (undo-tree-id8556 . -12) (undo-tree-id8557 . -12) (undo-tree-id8558 . -12) (undo-tree-id8559 . -12) (undo-tree-id8560 . -12) (undo-tree-id8561 . -12) (undo-tree-id8562 . -12) (undo-tree-id8563 . -12)) nil (26026 32813 159385 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -806) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (undo-tree-id6477 . -1) (undo-tree-id6478 . -1) (undo-tree-id6479 . -1) (undo-tree-id6480 . -1) (undo-tree-id6481 . -1) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (#("g" 0 1 (fontified t)) . -807) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (#("e" 0 1 (fontified t)) . -808) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1) (#("t" 0 1 (fontified t)) . -809) (undo-tree-id7141 . -1) (undo-tree-id7142 . -1) (undo-tree-id7143 . -1) (undo-tree-id7144 . -1) (undo-tree-id7145 . -1) (undo-tree-id7146 . -1) (undo-tree-id7147 . -1) (undo-tree-id7148 . -1) (undo-tree-id7149 . -1) (undo-tree-id7150 . -1) (undo-tree-id7151 . -1) (undo-tree-id7152 . -1) (undo-tree-id7153 . -1) (undo-tree-id7154 . -1) (undo-tree-id7155 . -1) (undo-tree-id7156 . -1) (undo-tree-id7157 . -1) (undo-tree-id7158 . -1) (undo-tree-id7159 . -1) (undo-tree-id7160 . -1) (undo-tree-id7161 . -1) (undo-tree-id7162 . -1) (undo-tree-id7163 . -1) (undo-tree-id7164 . -1) (undo-tree-id7165 . -1) (undo-tree-id7166 . -1) (undo-tree-id7167 . -1) (undo-tree-id7168 . -1) (undo-tree-id7169 . -1) (undo-tree-id7170 . -1) (undo-tree-id7171 . -1) (undo-tree-id7172 . -1) (undo-tree-id7173 . -1) (undo-tree-id7174 . -1) (undo-tree-id7175 . -1) (undo-tree-id7176 . -1) (undo-tree-id7177 . -1) (undo-tree-id7178 . -1) (undo-tree-id7179 . -1) (undo-tree-id7180 . -1) (undo-tree-id7181 . -1) (undo-tree-id7182 . -1) (undo-tree-id7183 . -1) (undo-tree-id7184 . -1) (undo-tree-id7185 . -1) (undo-tree-id7186 . -1) (undo-tree-id7187 . -1) (undo-tree-id7188 . -1) (undo-tree-id7189 . -1) (undo-tree-id7190 . -1) (undo-tree-id7191 . -1) (undo-tree-id7192 . -1) (undo-tree-id7193 . -1) (undo-tree-id7194 . -1) (undo-tree-id7195 . -1) (undo-tree-id7196 . -1) (undo-tree-id7197 . -1) (undo-tree-id7198 . -1) (undo-tree-id7199 . -1) (undo-tree-id7200 . -1) (undo-tree-id7201 . -1) (undo-tree-id7202 . -1) (undo-tree-id7203 . -1) (undo-tree-id7204 . -1) (undo-tree-id7205 . -1) (undo-tree-id7206 . -1) (undo-tree-id7207 . -1) (undo-tree-id7208 . -1) (undo-tree-id7209 . -1) (undo-tree-id7210 . -1) (undo-tree-id7211 . -1) (undo-tree-id7212 . -1) (undo-tree-id7213 . -1) (undo-tree-id7214 . -1) (undo-tree-id7215 . -1) (undo-tree-id7216 . -1) (undo-tree-id7217 . -1) (undo-tree-id7218 . -1) (undo-tree-id7219 . -1) (undo-tree-id7220 . -1) (undo-tree-id7221 . -1) (undo-tree-id7222 . -1) (undo-tree-id7223 . -1) (undo-tree-id7224 . -1) (undo-tree-id7225 . -1) (undo-tree-id7226 . -1) (undo-tree-id7227 . -1) (undo-tree-id7228 . -1) (undo-tree-id7229 . -1) (undo-tree-id7230 . -1) (undo-tree-id7231 . -1) (undo-tree-id7232 . -1) (undo-tree-id7233 . -1) (undo-tree-id7234 . -1) (undo-tree-id7235 . -1) (undo-tree-id7236 . -1) (undo-tree-id7237 . -1) (undo-tree-id7238 . -1) (undo-tree-id7239 . -1) (undo-tree-id7240 . -1) (undo-tree-id7241 . -1) (undo-tree-id7242 . -1) (undo-tree-id7243 . -1) (undo-tree-id7244 . -1) (undo-tree-id7245 . -1) (undo-tree-id7246 . -1) (undo-tree-id7247 . -1) (undo-tree-id7248 . -1) (undo-tree-id7249 . -1) (undo-tree-id7250 . -1) (undo-tree-id7251 . -1) (undo-tree-id7252 . -1) (undo-tree-id7253 . -1) (undo-tree-id7254 . -1) (undo-tree-id7255 . -1) (undo-tree-id7256 . -1) (undo-tree-id7257 . -1) (undo-tree-id7258 . -1) (undo-tree-id7259 . -1) (undo-tree-id7260 . -1) (undo-tree-id7261 . -1) (undo-tree-id7262 . -1) (undo-tree-id7263 . -1) (undo-tree-id7264 . -1) (undo-tree-id7265 . -1) (undo-tree-id7266 . -1) (undo-tree-id7267 . -1) (undo-tree-id7268 . -1) (undo-tree-id7269 . -1) (undo-tree-id7270 . -1) (undo-tree-id7271 . -1) (undo-tree-id7272 . -1) (undo-tree-id7273 . -1) (undo-tree-id7274 . -1) (undo-tree-id7275 . -1) (undo-tree-id7276 . -1) (undo-tree-id7277 . -1) (undo-tree-id7278 . -1) (undo-tree-id7279 . -1) (undo-tree-id7280 . -1) (undo-tree-id7281 . -1) (undo-tree-id7282 . -1) (undo-tree-id7283 . -1) (undo-tree-id7284 . -1) (undo-tree-id7285 . -1) (undo-tree-id7286 . -1) (undo-tree-id7287 . -1) (undo-tree-id7288 . -1) (undo-tree-id7289 . -1) (undo-tree-id7290 . -1) (undo-tree-id7291 . -1) (undo-tree-id7292 . -1) (undo-tree-id7293 . -1) (undo-tree-id7294 . -1) (undo-tree-id7295 . -1) (undo-tree-id7296 . -1) (undo-tree-id7297 . -1) (undo-tree-id7298 . -1) (undo-tree-id7299 . -1) (undo-tree-id7300 . -1) (undo-tree-id7301 . -1) (undo-tree-id7302 . -1) (undo-tree-id7303 . -1) (undo-tree-id7304 . -1) (undo-tree-id7305 . -1) (undo-tree-id7306 . -1) (undo-tree-id7307 . -1) (undo-tree-id7308 . -1) (undo-tree-id7309 . -1) (undo-tree-id7310 . -1) (undo-tree-id7311 . -1) (undo-tree-id7312 . -1) (undo-tree-id7313 . -1) (undo-tree-id7314 . -1) (undo-tree-id7315 . -1) (undo-tree-id7316 . -1) (undo-tree-id7317 . -1) (undo-tree-id7318 . -1) (undo-tree-id7319 . -1) (undo-tree-id7320 . -1) (undo-tree-id7321 . -1) (undo-tree-id7322 . -1) (undo-tree-id7323 . -1) (undo-tree-id7324 . -1) (undo-tree-id7325 . -1) (undo-tree-id7326 . -1) (undo-tree-id7327 . -1) (undo-tree-id7328 . -1) (undo-tree-id7329 . -1) (undo-tree-id7330 . -1) (undo-tree-id7331 . -1) (undo-tree-id7332 . -1) (undo-tree-id7333 . -1) (undo-tree-id7334 . -1) (undo-tree-id7335 . -1) (undo-tree-id7336 . -1) (undo-tree-id7337 . -1) (undo-tree-id7338 . -1) (#("S" 0 1 (fontified t)) . -810) (undo-tree-id7339 . -1) (undo-tree-id7340 . -1) (undo-tree-id7341 . -1) (undo-tree-id7342 . -1) (undo-tree-id7343 . -1) (undo-tree-id7344 . -1) (undo-tree-id7345 . -1) (undo-tree-id7346 . -1) (undo-tree-id7347 . -1) (undo-tree-id7348 . -1) (undo-tree-id7349 . -1) (undo-tree-id7350 . -1) (undo-tree-id7351 . -1) (undo-tree-id7352 . -1) (undo-tree-id7353 . -1) (undo-tree-id7354 . -1) (undo-tree-id7355 . -1) (undo-tree-id7356 . -1) (undo-tree-id7357 . -1) (undo-tree-id7358 . -1) (undo-tree-id7359 . -1) (undo-tree-id7360 . -1) (undo-tree-id7361 . -1) (undo-tree-id7362 . -1) (undo-tree-id7363 . -1) (undo-tree-id7364 . -1) (undo-tree-id7365 . -1) (undo-tree-id7366 . -1) (undo-tree-id7367 . -1) (undo-tree-id7368 . -1) (undo-tree-id7369 . -1) (undo-tree-id7370 . -1) (undo-tree-id7371 . -1) (undo-tree-id7372 . -1) (undo-tree-id7373 . -1) (undo-tree-id7374 . -1) (undo-tree-id7375 . -1) (undo-tree-id7376 . -1) (undo-tree-id7377 . -1) (undo-tree-id7378 . -1) (undo-tree-id7379 . -1) (undo-tree-id7380 . -1) (undo-tree-id7381 . -1) (undo-tree-id7382 . -1) (undo-tree-id7383 . -1) (undo-tree-id7384 . -1) (undo-tree-id7385 . -1) (undo-tree-id7386 . -1) (undo-tree-id7387 . -1) (undo-tree-id7388 . -1) (undo-tree-id7389 . -1) (undo-tree-id7390 . -1) (undo-tree-id7391 . -1) (undo-tree-id7392 . -1) (undo-tree-id7393 . -1) (undo-tree-id7394 . -1) (undo-tree-id7395 . -1) (undo-tree-id7396 . -1) (undo-tree-id7397 . -1) (undo-tree-id7398 . -1) (undo-tree-id7399 . -1) (undo-tree-id7400 . -1) (undo-tree-id7401 . -1) (undo-tree-id7402 . -1) (undo-tree-id7403 . -1) (undo-tree-id7404 . -1) (undo-tree-id7405 . -1) (undo-tree-id7406 . -1) (undo-tree-id7407 . -1) (undo-tree-id7408 . -1) (undo-tree-id7409 . -1) (undo-tree-id7410 . -1) (undo-tree-id7411 . -1) (undo-tree-id7412 . -1) (undo-tree-id7413 . -1) (undo-tree-id7414 . -1) (undo-tree-id7415 . -1) (undo-tree-id7416 . -1) (undo-tree-id7417 . -1) (undo-tree-id7418 . -1) (undo-tree-id7419 . -1) (undo-tree-id7420 . -1) (undo-tree-id7421 . -1) (undo-tree-id7422 . -1) (undo-tree-id7423 . -1) (undo-tree-id7424 . -1) (undo-tree-id7425 . -1) (undo-tree-id7426 . -1) (undo-tree-id7427 . -1) (undo-tree-id7428 . -1) (undo-tree-id7429 . -1) (undo-tree-id7430 . -1) (undo-tree-id7431 . -1) (undo-tree-id7432 . -1) (undo-tree-id7433 . -1) (undo-tree-id7434 . -1) (undo-tree-id7435 . -1) (undo-tree-id7436 . -1) (undo-tree-id7437 . -1) (undo-tree-id7438 . -1) (undo-tree-id7439 . -1) (undo-tree-id7440 . -1) (undo-tree-id7441 . -1) (undo-tree-id7442 . -1) (undo-tree-id7443 . -1) (undo-tree-id7444 . -1) (undo-tree-id7445 . -1) (undo-tree-id7446 . -1) (undo-tree-id7447 . -1) (undo-tree-id7448 . -1) (undo-tree-id7449 . -1) (undo-tree-id7450 . -1) (undo-tree-id7451 . -1) (undo-tree-id7452 . -1) (undo-tree-id7453 . -1) (undo-tree-id7454 . -1) (undo-tree-id7455 . -1) (undo-tree-id7456 . -1) (undo-tree-id7457 . -1) (undo-tree-id7458 . -1) (undo-tree-id7459 . -1) (undo-tree-id7460 . -1) (undo-tree-id7461 . -1) (undo-tree-id7462 . -1) (undo-tree-id7463 . -1) (undo-tree-id7464 . -1) (undo-tree-id7465 . -1) (#("e" 0 1 (fontified t)) . -811) (undo-tree-id7466 . -1) (undo-tree-id7467 . -1) (undo-tree-id7468 . -1) (undo-tree-id7469 . -1) (undo-tree-id7470 . -1) (undo-tree-id7471 . -1) (undo-tree-id7472 . -1) (undo-tree-id7473 . -1) (undo-tree-id7474 . -1) (undo-tree-id7475 . -1) (undo-tree-id7476 . -1) (undo-tree-id7477 . -1) (undo-tree-id7478 . -1) (undo-tree-id7479 . -1) (undo-tree-id7480 . -1) (undo-tree-id7481 . -1) (undo-tree-id7482 . -1) (undo-tree-id7483 . -1) (undo-tree-id7484 . -1) (undo-tree-id7485 . -1) (undo-tree-id7486 . -1) (undo-tree-id7487 . -1) (undo-tree-id7488 . -1) (undo-tree-id7489 . -1) (undo-tree-id7490 . -1) (undo-tree-id7491 . -1) (undo-tree-id7492 . -1) (undo-tree-id7493 . -1) (undo-tree-id7494 . -1) (undo-tree-id7495 . -1) (undo-tree-id7496 . -1) (undo-tree-id7497 . -1) (undo-tree-id7498 . -1) (undo-tree-id7499 . -1) (undo-tree-id7500 . -1) (undo-tree-id7501 . -1) 812 (811 . 812) (806 . 811)) nil (26026 32813 158995 0) 0 nil])
([nil nil ((805 . 806) (#("C" 0 1 (face font-lock-type-face fontified t)) . -805) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) 806 (805 . 806) (#(").next = newNode;" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t) 1 8 (fontified t) 8 17 (fontified t)) . 805) (undo-tree-id5711 . -16) (undo-tree-id5712 . 16) (undo-tree-id5713 . -1) (undo-tree-id5714 . -2) (undo-tree-id5715 . -2) (undo-tree-id5716 . -2) (undo-tree-id5717 . -2) (undo-tree-id5718 . -2) (undo-tree-id5719 . -2) (undo-tree-id5720 . -2) (undo-tree-id5721 . -2) (undo-tree-id5722 . -2) (undo-tree-id5723 . -2) (undo-tree-id5724 . -2) (undo-tree-id5725 . -2) (undo-tree-id5726 . -2) (undo-tree-id5727 . -2) (undo-tree-id5728 . -2) (undo-tree-id5729 . -2) (undo-tree-id5730 . -2) (undo-tree-id5731 . -2) (undo-tree-id5732 . -2) (undo-tree-id5733 . -2) (undo-tree-id5734 . -2) (undo-tree-id5735 . -2) (undo-tree-id5736 . -2) (undo-tree-id5737 . -2) (undo-tree-id5738 . -2) (undo-tree-id5739 . -2) (undo-tree-id5740 . -2) (undo-tree-id5741 . -2) (undo-tree-id5742 . -2) (undo-tree-id5743 . -2) (undo-tree-id5744 . -2) (undo-tree-id5745 . -2) (undo-tree-id5746 . -2) (undo-tree-id5747 . -2) (undo-tree-id5748 . -2) (undo-tree-id5749 . -2) (undo-tree-id5750 . -2) (undo-tree-id5751 . -2) (undo-tree-id5752 . -2) (undo-tree-id5753 . -2) (undo-tree-id5754 . -2) (undo-tree-id5755 . -2) (undo-tree-id5756 . -2) (undo-tree-id5757 . -2) (undo-tree-id5758 . -2) (undo-tree-id5759 . -2) (undo-tree-id5760 . -2) (undo-tree-id5761 . -2) (undo-tree-id5762 . -2) (undo-tree-id5763 . -2) (undo-tree-id5764 . -2) (undo-tree-id5765 . -2) (undo-tree-id5766 . -2) (undo-tree-id5767 . -2) (undo-tree-id5768 . -2) (undo-tree-id5769 . -2) (undo-tree-id5770 . -2) (undo-tree-id5771 . -2) (undo-tree-id5772 . -2) (undo-tree-id5773 . -2) (undo-tree-id5774 . -2) (undo-tree-id5775 . -2) (undo-tree-id5776 . -2) (undo-tree-id5777 . -2) (undo-tree-id5778 . -2) (undo-tree-id5779 . -2) (undo-tree-id5780 . -2) (undo-tree-id5781 . -2) (undo-tree-id5782 . -2) (undo-tree-id5783 . -2) (undo-tree-id5784 . -2) (undo-tree-id5785 . -2) (undo-tree-id5786 . -2) (undo-tree-id5787 . -2) (undo-tree-id5788 . -2) (undo-tree-id5789 . -2) (undo-tree-id5790 . -2) (undo-tree-id5791 . -2) (undo-tree-id5792 . -2) (undo-tree-id5793 . -2) (undo-tree-id5794 . -2) (undo-tree-id5795 . -2) (undo-tree-id5796 . -2) (undo-tree-id5797 . -2) (undo-tree-id5798 . -16) (undo-tree-id5799 . -16) (undo-tree-id5800 . -16) (undo-tree-id5801 . -16) (undo-tree-id5802 . -16) (undo-tree-id5803 . -16) (undo-tree-id5804 . -16) (undo-tree-id5805 . -16) (undo-tree-id5806 . -16) (undo-tree-id5807 . -16) (undo-tree-id5808 . -16) (undo-tree-id5809 . -16) (undo-tree-id5810 . -16) (undo-tree-id5811 . -16) (undo-tree-id5812 . -16) (undo-tree-id5813 . -16) (undo-tree-id5814 . -16) (undo-tree-id5815 . -16) (undo-tree-id5816 . -9) (undo-tree-id5817 . -9) (undo-tree-id5818 . -9) (undo-tree-id5819 . -9) (undo-tree-id5820 . -9) (undo-tree-id5821 . -9) (undo-tree-id5822 . -9) (undo-tree-id5823 . -9) (undo-tree-id5824 . -9) (undo-tree-id5825 . -9) (undo-tree-id5826 . -9) (undo-tree-id5827 . -9) (undo-tree-id5828 . -9) (undo-tree-id5829 . -9) (undo-tree-id5830 . -9) (undo-tree-id5831 . -9) (undo-tree-id5832 . -9) (undo-tree-id5833 . -9) (undo-tree-id5834 . -9) (undo-tree-id5835 . -7) (undo-tree-id5836 . -7) (undo-tree-id5837 . -7) (undo-tree-id5838 . -7) (undo-tree-id5839 . -7) (undo-tree-id5840 . -7) (undo-tree-id5841 . -7) (undo-tree-id5842 . -7) (undo-tree-id5843 . -7) (undo-tree-id5844 . -7) (undo-tree-id5845 . -7) (undo-tree-id5846 . -7) (undo-tree-id5847 . -7) (undo-tree-id5848 . -7) (undo-tree-id5849 . -7) (undo-tree-id5850 . -7) (undo-tree-id5851 . -7) (undo-tree-id5852 . -7) (undo-tree-id5853 . -7) (undo-tree-id5854 . -2) (undo-tree-id5855 . -2) (undo-tree-id5856 . -2) (undo-tree-id5857 . -2) (undo-tree-id5858 . -2) (undo-tree-id5859 . -2) (undo-tree-id5860 . -2) (undo-tree-id5861 . -2) (undo-tree-id5862 . -2) (undo-tree-id5863 . -2) (undo-tree-id5864 . -2) (undo-tree-id5865 . -2) (undo-tree-id5866 . -2) (undo-tree-id5867 . -2) (undo-tree-id5868 . -2) (undo-tree-id5869 . -2) (undo-tree-id5870 . -2) (undo-tree-id5871 . -2) (undo-tree-id5872 . -2) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . 16) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (undo-tree-id6073 . -1) (undo-tree-id6074 . -1) (undo-tree-id6075 . -1) (undo-tree-id6076 . -1) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) (undo-tree-id6130 . -1) (undo-tree-id6131 . -1) (undo-tree-id6132 . -1) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -17) (undo-tree-id6273 . -17) (undo-tree-id6274 . -17) (undo-tree-id6275 . -17)) nil (26026 32813 158573 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start c-is-sws t fontified t)) . -796) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) 797 (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -797) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) 798 (796 . 798) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start c-is-sws t fontified t)) . -796) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) 797 (796 . 797) (784 . 796) (784 . 785) (#("            iterator(c
" 0 1 (fontified t c-in-sws t c-is-sws t) 1 11 (fontified t c-in-sws t c-is-sws t) 11 12 (fontified t c-in-sws t c-is-sws t rear-nonsticky t) 12 13 (fontified t c-is-sws t) 13 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-4-face) c-is-sws t fontified t) 21 22 (face font-lock-type-face fontified t) 22 23 (fontified t)) . 784) (undo-tree-id3918 . -22) (undo-tree-id3919 . 1) (undo-tree-id3920 . -21) (undo-tree-id3921 . -21) (undo-tree-id3922 . -23) (undo-tree-id3923 . -23) (undo-tree-id3924 . -23) (undo-tree-id3925 . -23) (undo-tree-id3926 . -23) (undo-tree-id3927 . -23) (undo-tree-id3928 . -23) (undo-tree-id3929 . -23) (undo-tree-id3930 . -23) (undo-tree-id3931 . -23) (undo-tree-id3932 . -23) (undo-tree-id3933 . -23) (undo-tree-id3934 . -23) (undo-tree-id3935 . -21) (undo-tree-id3936 . -21) (undo-tree-id3937 . -21) (undo-tree-id3938 . -21) (undo-tree-id3939 . -21) (undo-tree-id3940 . -21) (undo-tree-id3941 . -21) (undo-tree-id3942 . -21) (undo-tree-id3943 . -21) (undo-tree-id3944 . -21) (undo-tree-id3945 . -21) (undo-tree-id3946 . -21) (undo-tree-id3947 . -21) (undo-tree-id3948 . -21) (undo-tree-id3949 . -21) (undo-tree-id3950 . -21) (undo-tree-id3951 . -21) (undo-tree-id3952 . -21) (undo-tree-id3953 . -21) (undo-tree-id3954 . -21) (undo-tree-id3955 . -21) (undo-tree-id3956 . -21) (undo-tree-id3957 . -21) (undo-tree-id3958 . -21) (undo-tree-id3959 . -21) (undo-tree-id3960 . -21) (undo-tree-id3961 . -21) (undo-tree-id3962 . -21) (undo-tree-id3963 . -21) (undo-tree-id3964 . -21) (undo-tree-id3965 . -21) (undo-tree-id3966 . -23) (undo-tree-id3967 . -23) (undo-tree-id3968 . -23) (undo-tree-id3969 . -23) (undo-tree-id3970 . -23) (undo-tree-id3971 . -23) (undo-tree-id3972 . -23) (undo-tree-id3973 . -23) (undo-tree-id3974 . -23) (undo-tree-id3975 . -23) (undo-tree-id3976 . -23) (undo-tree-id3977 . -23) (undo-tree-id3978 . -23) (undo-tree-id3979 . -23) (undo-tree-id3980 . -23) (undo-tree-id3981 . -23) (undo-tree-id3982 . -23) (undo-tree-id3983 . -23) (undo-tree-id3984 . -23) (undo-tree-id3985 . -23) (undo-tree-id3986 . -23) (undo-tree-id3987 . -23) (undo-tree-id3988 . -23) (undo-tree-id3989 . -23) (undo-tree-id3990 . -23) (undo-tree-id3991 . -21) (undo-tree-id3992 . -21) (undo-tree-id3993 . -21) (undo-tree-id3994 . -21) (undo-tree-id3995 . -21) (undo-tree-id3996 . -21) (undo-tree-id3997 . -21) (undo-tree-id3998 . -21) (undo-tree-id3999 . -21) (undo-tree-id4000 . -21) (undo-tree-id4001 . -21) (undo-tree-id4002 . -21) (undo-tree-id4003 . -21) (undo-tree-id4004 . -21) (undo-tree-id4005 . -21) (undo-tree-id4006 . -21) (undo-tree-id4007 . -21) (undo-tree-id4008 . -21) (undo-tree-id4009 . -21) (undo-tree-id4010 . -21) (undo-tree-id4011 . -21) (undo-tree-id4012 . -21) (undo-tree-id4013 . -21) (undo-tree-id4014 . -21) (undo-tree-id4015 . -21) (undo-tree-id4016 . -21) (undo-tree-id4017 . -21) (undo-tree-id4018 . -21) (undo-tree-id4019 . -21) (undo-tree-id4020 . -21) (undo-tree-id4021 . -21) (undo-tree-id4022 . -21) (undo-tree-id4023 . -21) (undo-tree-id4024 . -21) (undo-tree-id4025 . -21) (undo-tree-id4026 . -21) (undo-tree-id4027 . -21) (undo-tree-id4028 . -21) (undo-tree-id4029 . -21) (undo-tree-id4030 . -21) (undo-tree-id4031 . -21) (undo-tree-id4032 . -21) (undo-tree-id4033 . -21) (undo-tree-id4034 . -21) (undo-tree-id4035 . -21) (undo-tree-id4036 . -21) (undo-tree-id4037 . -21) (undo-tree-id4038 . -21) (undo-tree-id4039 . -21) (undo-tree-id4040 . -21) (undo-tree-id4041 . -21) (undo-tree-id4042 . -21) (undo-tree-id4043 . -21) (undo-tree-id4044 . -12) (undo-tree-id4045 . -12) (undo-tree-id4046 . -12) (undo-tree-id4047 . -12) (undo-tree-id4048 . -12) (undo-tree-id4049 . -12) (undo-tree-id4050 . -12) (undo-tree-id4051 . -12) (undo-tree-id4052 . -12) (undo-tree-id4053 . -12) (undo-tree-id4054 . -12) (undo-tree-id4055 . -12) (undo-tree-id4056 . -12) (undo-tree-id4057 . -12) (undo-tree-id4058 . -12) (undo-tree-id4059 . -12) (undo-tree-id4060 . -12) (undo-tree-id4061 . -12) (undo-tree-id4062 . -12) (undo-tree-id4063 . -12) (undo-tree-id4064 . -12) (undo-tree-id4065 . -12) (undo-tree-id4066 . -12) (undo-tree-id4067 . -12) (undo-tree-id4068 . -12) (undo-tree-id4069 . -12) (undo-tree-id4070 . -12) (undo-tree-id4071 . -12) (undo-tree-id4072 . -12) (undo-tree-id4073 . -12) (undo-tree-id4074 . -12) (undo-tree-id4075 . -12) (undo-tree-id4076 . -12) (undo-tree-id4077 . -12) (undo-tree-id4078 . -12) (undo-tree-id4079 . -12) (undo-tree-id4080 . -12) (undo-tree-id4081 . -12) (undo-tree-id4082 . -21) (undo-tree-id4083 . -21) (undo-tree-id4084 . -21) (undo-tree-id4085 . -21) (undo-tree-id4086 . -21) (undo-tree-id4087 . -21) (undo-tree-id4088 . -21) (undo-tree-id4089 . -21) (undo-tree-id4090 . -21) (undo-tree-id4091 . -21) (undo-tree-id4092 . -21) (undo-tree-id4093 . -21) (undo-tree-id4094 . -21) (undo-tree-id4095 . -21) (undo-tree-id4096 . -21) (undo-tree-id4097 . -21) (undo-tree-id4098 . -21) (undo-tree-id4099 . -21) (undo-tree-id4100 . -21) (undo-tree-id4101 . -21) (undo-tree-id4102 . -21) (undo-tree-id4103 . -21) (undo-tree-id4104 . -21) (undo-tree-id4105 . -21) (undo-tree-id4106 . -21) (undo-tree-id4107 . -21) (undo-tree-id4108 . -21) (undo-tree-id4109 . -21) (undo-tree-id4110 . -21) (undo-tree-id4111 . -21) (undo-tree-id4112 . -21) (undo-tree-id4113 . -21) (undo-tree-id4114 . -21) (undo-tree-id4115 . -21) (undo-tree-id4116 . -21) (undo-tree-id4117 . -21) (undo-tree-id4118 . -21) (undo-tree-id4119 . -21) (undo-tree-id4120 . -21) (undo-tree-id4121 . -21) (undo-tree-id4122 . -21) (undo-tree-id4123 . -21) (undo-tree-id4124 . -21) (undo-tree-id4125 . -21) (undo-tree-id4126 . -21) (undo-tree-id4127 . -21) (undo-tree-id4128 . -21) (undo-tree-id4129 . -21) (undo-tree-id4130 . -21) (undo-tree-id4131 . -21) (undo-tree-id4132 . -21) (undo-tree-id4133 . -21) (undo-tree-id4134 . -21) (undo-tree-id4135 . -21) (undo-tree-id4136 . -21) (undo-tree-id4137 . -21) (undo-tree-id4138 . -21) (undo-tree-id4139 . -21) (undo-tree-id4140 . -21) (undo-tree-id4141 . -21) (undo-tree-id4142 . -21) (undo-tree-id4143 . -21) (undo-tree-id4144 . -21) (undo-tree-id4145 . -21) (undo-tree-id4146 . -21) (undo-tree-id4147 . -21) (undo-tree-id4148 . -21) (undo-tree-id4149 . -21) (undo-tree-id4150 . -21) (undo-tree-id4151 . -21) (undo-tree-id4152 . -21) (undo-tree-id4153 . -21) (undo-tree-id4154 . -21) (undo-tree-id4155 . -21) (undo-tree-id4156 . -21) (undo-tree-id4157 . -12) (undo-tree-id4158 . -12) (undo-tree-id4159 . -12) (undo-tree-id4160 . -12) (undo-tree-id4161 . -12) (undo-tree-id4162 . -12) (undo-tree-id4163 . -12) (undo-tree-id4164 . -12) (undo-tree-id4165 . -12) (undo-tree-id4166 . -12) (undo-tree-id4167 . -12) (undo-tree-id4168 . -12) (undo-tree-id4169 . -12) (undo-tree-id4170 . -12) (undo-tree-id4171 . -12) (undo-tree-id4172 . -12) (undo-tree-id4173 . -12) (undo-tree-id4174 . -12) (undo-tree-id4175 . -12) (undo-tree-id4176 . -12) (undo-tree-id4177 . -12) (undo-tree-id4178 . -12) (undo-tree-id4179 . -12) (undo-tree-id4180 . -12) (undo-tree-id4181 . -12) (undo-tree-id4182 . -12) (undo-tree-id4183 . -12) (undo-tree-id4184 . -12) (undo-tree-id4185 . -12) (undo-tree-id4186 . -12) (undo-tree-id4187 . -12) (undo-tree-id4188 . -12) (undo-tree-id4189 . -12) (undo-tree-id4190 . -12) (undo-tree-id4191 . -12) (undo-tree-id4192 . -12) (undo-tree-id4193 . -12) (undo-tree-id4194 . -12) (undo-tree-id4195 . -12) (undo-tree-id4196 . -12) (undo-tree-id4197 . -12) (undo-tree-id4198 . -12) (undo-tree-id4199 . -12) (undo-tree-id4200 . -12) (undo-tree-id4201 . -12) (undo-tree-id4202 . -12) (undo-tree-id4203 . -12) (undo-tree-id4204 . -12) (undo-tree-id4205 . -12) (undo-tree-id4206 . -12) (undo-tree-id4207 . -12) (undo-tree-id4208 . -12) (undo-tree-id4209 . -12) (undo-tree-id4210 . -12) (undo-tree-id4211 . -12) (undo-tree-id4212 . -12) (undo-tree-id4213 . -12) (undo-tree-id4214 . -12) (undo-tree-id4215 . -12) (undo-tree-id4216 . -12) (undo-tree-id4217 . -12) (undo-tree-id4218 . -12) (undo-tree-id4219 . -12) (undo-tree-id4220 . -12) (undo-tree-id4221 . -12) (undo-tree-id4222 . -12) (undo-tree-id4223 . -12) (undo-tree-id4224 . -12) (undo-tree-id4225 . -12) (undo-tree-id4226 . -12) (undo-tree-id4227 . -12) (undo-tree-id4228 . -12) (undo-tree-id4229 . -12) (undo-tree-id4230 . -12) (undo-tree-id4231 . -12) (undo-tree-id4232 . -12) (undo-tree-id4233 . -12) (undo-tree-id4234 . -12) (undo-tree-id4235 . -12) (undo-tree-id4236 . -12) (undo-tree-id4237 . -12) (undo-tree-id4238 . -12) (undo-tree-id4239 . -12) (undo-tree-id4240 . -12) (undo-tree-id4241 . -12) (undo-tree-id4242 . -12) (undo-tree-id4243 . -12) (undo-tree-id4244 . -12) (undo-tree-id4245 . -12) (undo-tree-id4246 . -12) (undo-tree-id4247 . -12) (undo-tree-id4248 . -12) (undo-tree-id4249 . -12) (undo-tree-id4250 . -12) (undo-tree-id4251 . -12) (undo-tree-id4252 . -12) (undo-tree-id4253 . -12) (undo-tree-id4254 . -12) (undo-tree-id4255 . -12) (undo-tree-id4256 . -12) (undo-tree-id4257 . -12) (undo-tree-id4258 . -12) (undo-tree-id4259 . -12) (undo-tree-id4260 . -12) (undo-tree-id4261 . -12) (undo-tree-id4262 . -12) (undo-tree-id4263 . -12) (undo-tree-id4264 . -12) (undo-tree-id4265 . -12) (undo-tree-id4266 . -12) (undo-tree-id4267 . -12) (undo-tree-id4268 . -12) (undo-tree-id4269 . -12) (undo-tree-id4270 . -12) (undo-tree-id4271 . -12) (undo-tree-id4272 . -12) (undo-tree-id4273 . -12) (undo-tree-id4274 . -12) (undo-tree-id4275 . -12) (undo-tree-id4276 . -12) (undo-tree-id4277 . -12) (undo-tree-id4278 . -12) (undo-tree-id4279 . -12) (undo-tree-id4280 . -12) (undo-tree-id4281 . -12) (undo-tree-id4282 . -12) (undo-tree-id4283 . -12) (undo-tree-id4284 . -12) (undo-tree-id4285 . -12) (undo-tree-id4286 . -12) (undo-tree-id4287 . -12) (undo-tree-id4288 . -12) (undo-tree-id4289 . -12) (undo-tree-id4290 . -12) (undo-tree-id4291 . -12) (undo-tree-id4292 . -12) (undo-tree-id4293 . -12) (undo-tree-id4294 . -12) (undo-tree-id4295 . -12) (undo-tree-id4296 . -12) (undo-tree-id4297 . -12) (undo-tree-id4298 . -12) (undo-tree-id4299 . -12) (undo-tree-id4300 . -12) (undo-tree-id4301 . -12) (undo-tree-id4302 . -12) (undo-tree-id4303 . -12) (undo-tree-id4304 . -12) (undo-tree-id4305 . -12) (undo-tree-id4306 . -12) (undo-tree-id4307 . -12) (undo-tree-id4308 . -12) (undo-tree-id4309 . -12) (undo-tree-id4310 . -12) (undo-tree-id4311 . -12) (undo-tree-id4312 . -12) (undo-tree-id4313 . -12) (undo-tree-id4314 . -12) (undo-tree-id4315 . -12) (undo-tree-id4316 . -12) (undo-tree-id4317 . -12) (undo-tree-id4318 . -12) (undo-tree-id4319 . -12) (undo-tree-id4320 . -12) (undo-tree-id4321 . -12) (undo-tree-id4322 . -12) (undo-tree-id4323 . -12) (undo-tree-id4324 . -12) (undo-tree-id4325 . -12) (undo-tree-id4326 . -12) (undo-tree-id4327 . -12) (undo-tree-id4328 . -12) (undo-tree-id4329 . -12) (undo-tree-id4330 . -12) (undo-tree-id4331 . -12) (undo-tree-id4332 . -12) (undo-tree-id4333 . -12) (undo-tree-id4334 . -12) (undo-tree-id4335 . -12) (undo-tree-id4336 . -12) (undo-tree-id4337 . -12) (undo-tree-id4338 . -12) (undo-tree-id4339 . -12) (undo-tree-id4340 . -12) (undo-tree-id4341 . -12) (undo-tree-id4342 . -12) (undo-tree-id4343 . -12) (undo-tree-id4344 . -12) (undo-tree-id4345 . -12) (undo-tree-id4346 . -12) (undo-tree-id4347 . -12) (undo-tree-id4348 . -12) (undo-tree-id4349 . -12) (undo-tree-id4350 . -12) (undo-tree-id4351 . -12) (undo-tree-id4352 . -12) (undo-tree-id4353 . -12) (undo-tree-id4354 . -12) (undo-tree-id4355 . -12) (undo-tree-id4356 . -12) (undo-tree-id4357 . -12) (undo-tree-id4358 . -12) (undo-tree-id4359 . -12) (undo-tree-id4360 . -12) (undo-tree-id4361 . -12) (undo-tree-id4362 . -12) (undo-tree-id4363 . -12) (undo-tree-id4364 . -12) (undo-tree-id4365 . -12) (undo-tree-id4366 . -12) (undo-tree-id4367 . -12) (undo-tree-id4368 . -12) (undo-tree-id4369 . -12) (undo-tree-id4370 . -12) (undo-tree-id4371 . -12) (undo-tree-id4372 . -12) (undo-tree-id4373 . -12) (undo-tree-id4374 . -12) (undo-tree-id4375 . -12) (undo-tree-id4376 . -12) (undo-tree-id4377 . -12) (undo-tree-id4378 . -12) (undo-tree-id4379 . -12) (undo-tree-id4380 . -12) (undo-tree-id4381 . -12) (undo-tree-id4382 . -12) (undo-tree-id4383 . -12) (undo-tree-id4384 . -12) (undo-tree-id4385 . -12) (undo-tree-id4386 . -12) (undo-tree-id4387 . -12) (undo-tree-id4388 . -12) (undo-tree-id4389 . -12) (undo-tree-id4390 . -12) (undo-tree-id4391 . -12) (undo-tree-id4392 . -12) (undo-tree-id4393 . -12) (undo-tree-id4394 . -12) (undo-tree-id4395 . -12) (undo-tree-id4396 . -12) (undo-tree-id4397 . -12) (undo-tree-id4398 . -12) (undo-tree-id4399 . -12) (undo-tree-id4400 . -12) (undo-tree-id4401 . -12) (undo-tree-id4402 . -12) (undo-tree-id4403 . -12) (undo-tree-id4404 . -12) (undo-tree-id4405 . -12) (undo-tree-id4406 . -12) (undo-tree-id4407 . -12) (undo-tree-id4408 . -12) (undo-tree-id4409 . -12) (undo-tree-id4410 . -12) (undo-tree-id4411 . -12) (undo-tree-id4412 . -12) (undo-tree-id4413 . -12) (undo-tree-id4414 . -12) (undo-tree-id4415 . -12) (undo-tree-id4416 . -12) (undo-tree-id4417 . -12) (undo-tree-id4418 . -12) (undo-tree-id4419 . -12) (undo-tree-id4420 . -12) (undo-tree-id4421 . -12) (undo-tree-id4422 . -12) (undo-tree-id4423 . -12) (undo-tree-id4424 . -12) (undo-tree-id4425 . -12) (undo-tree-id4426 . -12) (undo-tree-id4427 . -12) (undo-tree-id4428 . -12) (undo-tree-id4429 . -12) (undo-tree-id4430 . -12) (undo-tree-id4431 . -12) (undo-tree-id4432 . -12) (undo-tree-id4433 . -12) (undo-tree-id4434 . -12) (undo-tree-id4435 . -12) (undo-tree-id4436 . -12) (undo-tree-id4437 . -12) (undo-tree-id4438 . -12) (undo-tree-id4439 . -12) (undo-tree-id4440 . -12) (undo-tree-id4441 . -12) (undo-tree-id4442 . -12) (undo-tree-id4443 . -12) (undo-tree-id4444 . -12) (undo-tree-id4445 . -12) (undo-tree-id4446 . -12) (undo-tree-id4447 . -12) (undo-tree-id4448 . -12) (undo-tree-id4449 . -12) (undo-tree-id4450 . -12) (undo-tree-id4451 . -12) (undo-tree-id4452 . -12) (undo-tree-id4453 . -12) (undo-tree-id4454 . -12) (undo-tree-id4455 . -12) (undo-tree-id4456 . -12) (undo-tree-id4457 . -12) (undo-tree-id4458 . -12) (undo-tree-id4459 . -12) (undo-tree-id4460 . -12) (undo-tree-id4461 . -12) (undo-tree-id4462 . -12) (undo-tree-id4463 . -12) (undo-tree-id4464 . -12) (undo-tree-id4465 . -12) (undo-tree-id4466 . -12) (undo-tree-id4467 . -12) (undo-tree-id4468 . -12) (undo-tree-id4469 . -12) (undo-tree-id4470 . -12) (undo-tree-id4471 . -12) (undo-tree-id4472 . -12) (undo-tree-id4473 . -12) (undo-tree-id4474 . -12) (undo-tree-id4475 . -12) (undo-tree-id4476 . -12) (undo-tree-id4477 . -12) (undo-tree-id4478 . -12) (undo-tree-id4479 . -12) (undo-tree-id4480 . -12) (undo-tree-id4481 . -12) (undo-tree-id4482 . -12) (undo-tree-id4483 . -12) (undo-tree-id4484 . -12) (undo-tree-id4485 . -12) (undo-tree-id4486 . -12) (undo-tree-id4487 . -12) (undo-tree-id4488 . -12) (undo-tree-id4489 . -12) (undo-tree-id4490 . -12) (undo-tree-id4491 . -12) (undo-tree-id4492 . -12) (undo-tree-id4493 . -12) (undo-tree-id4494 . -12) (undo-tree-id4495 . -12) (undo-tree-id4496 . -12) (undo-tree-id4497 . -12) (undo-tree-id4498 . -12) (undo-tree-id4499 . -12) (undo-tree-id4500 . -12) (undo-tree-id4501 . -12) (undo-tree-id4502 . -12) (undo-tree-id4503 . -12) (undo-tree-id4504 . -12) (undo-tree-id4505 . -12) (undo-tree-id4506 . -12) (undo-tree-id4507 . -12) (undo-tree-id4508 . -12) (undo-tree-id4509 . -12) (undo-tree-id4510 . -12) (undo-tree-id4511 . -12) (undo-tree-id4512 . -12) (undo-tree-id4513 . -12) (undo-tree-id4514 . -12) (undo-tree-id4515 . -12) (undo-tree-id4516 . -12) (undo-tree-id4517 . -12) (undo-tree-id4518 . -12) (undo-tree-id4519 . -12) (undo-tree-id4520 . -12) (undo-tree-id4521 . -12) (undo-tree-id4522 . -12) (undo-tree-id4523 . -12) (undo-tree-id4524 . -12) (undo-tree-id4525 . -12) (undo-tree-id4526 . -12) (undo-tree-id4527 . -12) (undo-tree-id4528 . -12) (undo-tree-id4529 . -12) (undo-tree-id4530 . -12) (undo-tree-id4531 . -12) (undo-tree-id4532 . -12) (undo-tree-id4533 . -12) (undo-tree-id4534 . -12) (undo-tree-id4535 . -12) (undo-tree-id4536 . -12) (undo-tree-id4537 . -12) (undo-tree-id4538 . -12) (undo-tree-id4539 . -12) (undo-tree-id4540 . -12) (undo-tree-id4541 . -12) (undo-tree-id4542 . -12) (undo-tree-id4543 . -12) (undo-tree-id4544 . -12) (undo-tree-id4545 . -12) (undo-tree-id4546 . -12) (undo-tree-id4547 . -12) (undo-tree-id4548 . -12) (undo-tree-id4549 . -12) (undo-tree-id4550 . -12) (undo-tree-id4551 . -12) (undo-tree-id4552 . -12) (undo-tree-id4553 . -12) (undo-tree-id4554 . -12) (undo-tree-id4555 . -12) (undo-tree-id4556 . -12) (undo-tree-id4557 . -12) (undo-tree-id4558 . -12) (undo-tree-id4559 . -12) (undo-tree-id4560 . -12) (undo-tree-id4561 . -12) (undo-tree-id4562 . -12) (undo-tree-id4563 . -12) (undo-tree-id4564 . -12) (undo-tree-id4565 . -12) (undo-tree-id4566 . -12) (undo-tree-id4567 . -12) (undo-tree-id4568 . -12) (undo-tree-id4569 . -12) (undo-tree-id4570 . -12) (undo-tree-id4571 . -12) (undo-tree-id4572 . -12) (undo-tree-id4573 . -12) (undo-tree-id4574 . -12) (undo-tree-id4575 . -12) (undo-tree-id4576 . -12) (undo-tree-id4577 . -12) (undo-tree-id4578 . -12) (undo-tree-id4579 . -12) (undo-tree-id4580 . -12) (undo-tree-id4581 . -12) (undo-tree-id4582 . -12) (undo-tree-id4583 . -12) (undo-tree-id4584 . -12) (undo-tree-id4585 . -12) (undo-tree-id4586 . -12) (undo-tree-id4587 . -12) (undo-tree-id4588 . -12) (undo-tree-id4589 . -12) (undo-tree-id4590 . -12) (undo-tree-id4591 . -12) (undo-tree-id4592 . -12) (undo-tree-id4593 . -12) (undo-tree-id4594 . -12) (undo-tree-id4595 . -12) (undo-tree-id4596 . -12) (undo-tree-id4597 . -12) (undo-tree-id4598 . -12) (undo-tree-id4599 . -12) (undo-tree-id4600 . -12) (undo-tree-id4601 . -12) (undo-tree-id4602 . -12) (undo-tree-id4603 . -12) (undo-tree-id4604 . -12) (undo-tree-id4605 . -12) (undo-tree-id4606 . -12) (undo-tree-id4607 . -12) (undo-tree-id4608 . -12) (undo-tree-id4609 . -12) (undo-tree-id4610 . -12) (undo-tree-id4611 . -12) (undo-tree-id4612 . -12) (undo-tree-id4613 . -12) (undo-tree-id4614 . -12) (undo-tree-id4615 . -12) (undo-tree-id4616 . -12) (undo-tree-id4617 . -12) (undo-tree-id4618 . -12) (undo-tree-id4619 . -12) (undo-tree-id4620 . -12) (undo-tree-id4621 . -12) (undo-tree-id4622 . -12) (undo-tree-id4623 . -12) (undo-tree-id4624 . -12) (undo-tree-id4625 . -12) (undo-tree-id4626 . -12) (undo-tree-id4627 . -12) (undo-tree-id4628 . -12) (undo-tree-id4629 . -12) (undo-tree-id4630 . -12) (undo-tree-id4631 . -12) (undo-tree-id4632 . -12) (undo-tree-id4633 . -12) (undo-tree-id4634 . -12) (undo-tree-id4635 . -12) (undo-tree-id4636 . -12) (undo-tree-id4637 . -12) (undo-tree-id4638 . -12) (undo-tree-id4639 . -12) (undo-tree-id4640 . -12) (undo-tree-id4641 . -12) (undo-tree-id4642 . -12) (undo-tree-id4643 . -12) (undo-tree-id4644 . -12) (undo-tree-id4645 . -12) (undo-tree-id4646 . -12) (undo-tree-id4647 . -12) (undo-tree-id4648 . -12) (undo-tree-id4649 . -12) (undo-tree-id4650 . -12) (undo-tree-id4651 . -12) (undo-tree-id4652 . -12) (undo-tree-id4653 . -12) (undo-tree-id4654 . -12) (undo-tree-id4655 . -12) (undo-tree-id4656 . -12) (undo-tree-id4657 . -12) (undo-tree-id4658 . -12) (undo-tree-id4659 . -12) (undo-tree-id4660 . -12) (undo-tree-id4661 . -12) (undo-tree-id4662 . -12) (undo-tree-id4663 . -12) (undo-tree-id4664 . -12) (undo-tree-id4665 . -12) (undo-tree-id4666 . -12) (undo-tree-id4667 . -12) (undo-tree-id4668 . -12) (undo-tree-id4669 . -12) (undo-tree-id4670 . -12) (undo-tree-id4671 . -12) (undo-tree-id4672 . -12) (undo-tree-id4673 . -12) (undo-tree-id4674 . -12) (undo-tree-id4675 . -12) (undo-tree-id4676 . -12) (undo-tree-id4677 . -12) (undo-tree-id4678 . -12) (undo-tree-id4679 . -12) (undo-tree-id4680 . -12) (undo-tree-id4681 . -12) (undo-tree-id4682 . -12) (undo-tree-id4683 . -12) (undo-tree-id4684 . -12) (undo-tree-id4685 . -12) (undo-tree-id4686 . -12) (undo-tree-id4687 . -12) (undo-tree-id4688 . -12) (undo-tree-id4689 . -12) (undo-tree-id4690 . -12) (undo-tree-id4691 . -12) (undo-tree-id4692 . -12) (undo-tree-id4693 . -12) (undo-tree-id4694 . -12) (undo-tree-id4695 . -12) (undo-tree-id4696 . -12) (undo-tree-id4697 . -12) (undo-tree-id4698 . -12) (undo-tree-id4699 . -12) (undo-tree-id4700 . -12) (undo-tree-id4701 . -12) (undo-tree-id4702 . -12) (undo-tree-id4703 . -12) (undo-tree-id4704 . -12) (undo-tree-id4705 . -12) (undo-tree-id4706 . -12) (undo-tree-id4707 . -12) (undo-tree-id4708 . -12) (undo-tree-id4709 . -12) (undo-tree-id4710 . -12) (undo-tree-id4711 . -12) (undo-tree-id4712 . -12) (undo-tree-id4713 . -12) (undo-tree-id4714 . -12) (undo-tree-id4715 . -12) (undo-tree-id4716 . -20) (undo-tree-id4717 . -20) (undo-tree-id4718 . -20) (undo-tree-id4719 . -20) (undo-tree-id4720 . -20) (undo-tree-id4721 . -20) (undo-tree-id4722 . -20) (undo-tree-id4723 . -20) (undo-tree-id4724 . -20) (undo-tree-id4725 . -20) (undo-tree-id4726 . -20) (undo-tree-id4727 . -20) (undo-tree-id4728 . -20) (undo-tree-id4729 . -20) (undo-tree-id4730 . -20) (undo-tree-id4731 . -20) (undo-tree-id4732 . -20) (undo-tree-id4733 . -20) (undo-tree-id4734 . -20) (undo-tree-id4735 . -20) (undo-tree-id4736 . -20) (undo-tree-id4737 . -20) (undo-tree-id4738 . -20) (undo-tree-id4739 . -20) (undo-tree-id4740 . -20) (undo-tree-id4741 . -20) (undo-tree-id4742 . -20) (undo-tree-id4743 . -20) (undo-tree-id4744 . -20) (undo-tree-id4745 . -20) (undo-tree-id4746 . -20) (undo-tree-id4747 . -20) (undo-tree-id4748 . -20) (undo-tree-id4749 . -20) (undo-tree-id4750 . -20) (undo-tree-id4751 . -20) (undo-tree-id4752 . -20) (undo-tree-id4753 . -20) (undo-tree-id4754 . -20) (undo-tree-id4755 . -20) (undo-tree-id4756 . -20) (undo-tree-id4757 . -20) (undo-tree-id4758 . -20) (undo-tree-id4759 . -20) (undo-tree-id4760 . -20) (undo-tree-id4761 . -20) (undo-tree-id4762 . -20) (undo-tree-id4763 . -20) (undo-tree-id4764 . -20) (undo-tree-id4765 . -20) (undo-tree-id4766 . -20) (undo-tree-id4767 . -20) (undo-tree-id4768 . -20) (undo-tree-id4769 . -20) (undo-tree-id4770 . -20) (undo-tree-id4771 . -20) (undo-tree-id4772 . -20) (undo-tree-id4773 . -20) (undo-tree-id4774 . -20) (undo-tree-id4775 . -20) (undo-tree-id4776 . -20) (undo-tree-id4777 . -20) (undo-tree-id4778 . -20) (undo-tree-id4779 . -20) (undo-tree-id4780 . -20) (undo-tree-id4781 . -20) (undo-tree-id4782 . -20) (undo-tree-id4783 . -20) (undo-tree-id4784 . -20) (undo-tree-id4785 . -20) (undo-tree-id4786 . -20) (undo-tree-id4787 . -20) (undo-tree-id4788 . -20) (undo-tree-id4789 . -20) (undo-tree-id4790 . -20) (undo-tree-id4791 . -20) (undo-tree-id4792 . -20) (undo-tree-id4793 . -20) (undo-tree-id4794 . -20) (undo-tree-id4795 . -19) (undo-tree-id4796 . -19) (undo-tree-id4797 . -19) (undo-tree-id4798 . -19) (undo-tree-id4799 . -19) (undo-tree-id4800 . -19) (undo-tree-id4801 . -19) (undo-tree-id4802 . -19) (undo-tree-id4803 . -19) (undo-tree-id4804 . -19) (undo-tree-id4805 . -19) (undo-tree-id4806 . -19) (undo-tree-id4807 . -19) (undo-tree-id4808 . -19) (undo-tree-id4809 . -19) (undo-tree-id4810 . -19) (undo-tree-id4811 . -19) (undo-tree-id4812 . -19) (undo-tree-id4813 . -19) (undo-tree-id4814 . -19) (undo-tree-id4815 . -20) (undo-tree-id4816 . -20) (undo-tree-id4817 . -20) (undo-tree-id4818 . -20) (undo-tree-id4819 . -20) (undo-tree-id4820 . -20) (undo-tree-id4821 . -20) (undo-tree-id4822 . -20) (undo-tree-id4823 . -20) (undo-tree-id4824 . -20) (undo-tree-id4825 . -20) (undo-tree-id4826 . -20) (undo-tree-id4827 . -20) (undo-tree-id4828 . -20) (undo-tree-id4829 . -20) (undo-tree-id4830 . -20) (undo-tree-id4831 . -20) (undo-tree-id4832 . -20) (undo-tree-id4833 . -20) (undo-tree-id4834 . -21) (undo-tree-id4835 . -21) (undo-tree-id4836 . -21) (undo-tree-id4837 . -21) (undo-tree-id4838 . -21) (undo-tree-id4839 . -21) (undo-tree-id4840 . -21) (undo-tree-id4841 . -21) (undo-tree-id4842 . -21) (undo-tree-id4843 . -21) (undo-tree-id4844 . -21) (undo-tree-id4845 . -21) (undo-tree-id4846 . -21) (undo-tree-id4847 . -21) (undo-tree-id4848 . -21) (undo-tree-id4849 . -21) (undo-tree-id4850 . -21) (undo-tree-id4851 . -21) (undo-tree-id4852 . -21) (undo-tree-id4853 . -21) (undo-tree-id4854 . -21) (undo-tree-id4855 . -21) (undo-tree-id4856 . -21) (undo-tree-id4857 . -21) (undo-tree-id4858 . -21) (undo-tree-id4859 . -21) (undo-tree-id4860 . -21) (undo-tree-id4861 . -21) (undo-tree-id4862 . -21) (undo-tree-id4863 . -21) (undo-tree-id4864 . -21) (undo-tree-id4865 . -21) (undo-tree-id4866 . -21) (undo-tree-id4867 . -21) (undo-tree-id4868 . -21) (undo-tree-id4869 . -21) (undo-tree-id4870 . -21) (undo-tree-id4871 . -21) (undo-tree-id4872 . -21) (undo-tree-id4873 . -21) (undo-tree-id4874 . -21) (undo-tree-id4875 . -21) (undo-tree-id4876 . -21) (undo-tree-id4877 . -21) (undo-tree-id4878 . -21) (undo-tree-id4879 . -21) (undo-tree-id4880 . -21) (undo-tree-id4881 . -21) (undo-tree-id4882 . -21) (undo-tree-id4883 . -21) (undo-tree-id4884 . -21) (undo-tree-id4885 . -21) (undo-tree-id4886 . -21) (undo-tree-id4887 . -21) (undo-tree-id4888 . -21) (undo-tree-id4889 . -21) (undo-tree-id4890 . -21) (undo-tree-id4891 . -21) (undo-tree-id4892 . -21) (undo-tree-id4893 . -21) (undo-tree-id4894 . -21) (undo-tree-id4895 . -21) (undo-tree-id4896 . -21) (undo-tree-id4897 . -21) (undo-tree-id4898 . -21) (undo-tree-id4899 . -21) (undo-tree-id4900 . -21) (undo-tree-id4901 . -21) (undo-tree-id4902 . -21) (undo-tree-id4903 . -21) (undo-tree-id4904 . -21) (undo-tree-id4905 . -21) (undo-tree-id4906 . -21) (undo-tree-id4907 . -21) (undo-tree-id4908 . -21) (undo-tree-id4909 . -21) (undo-tree-id4910 . -21) (undo-tree-id4911 . -21) (undo-tree-id4912 . -21) (undo-tree-id4913 . -21) (undo-tree-id4914 . -21) (undo-tree-id4915 . -21) (undo-tree-id4916 . -21) (undo-tree-id4917 . -21) (undo-tree-id4918 . -21) (undo-tree-id4919 . -21) (undo-tree-id4920 . -21) (undo-tree-id4921 . -21) (undo-tree-id4922 . -21) (undo-tree-id4923 . -21) (undo-tree-id4924 . -21) (undo-tree-id4925 . -21) (undo-tree-id4926 . -21) (undo-tree-id4927 . -21) (undo-tree-id4928 . -21) (undo-tree-id4929 . -21) (undo-tree-id4930 . -21) (undo-tree-id4931 . -21) (undo-tree-id4932 . -21) (undo-tree-id4933 . -21) (undo-tree-id4934 . -21) (undo-tree-id4935 . -21) (undo-tree-id4936 . -21) (undo-tree-id4937 . -21) (undo-tree-id4938 . -21) (undo-tree-id4939 . -21) (undo-tree-id4940 . -21) (undo-tree-id4941 . -21) (undo-tree-id4942 . -21) (undo-tree-id4943 . -21) (undo-tree-id4944 . -21) (undo-tree-id4945 . -21) (undo-tree-id4946 . -21) (undo-tree-id4947 . -21) (undo-tree-id4948 . -21) (undo-tree-id4949 . -21) (undo-tree-id4950 . -21) (undo-tree-id4951 . -21) (undo-tree-id4952 . -21) (undo-tree-id4953 . -21) (undo-tree-id4954 . -21) (undo-tree-id4955 . -21) (undo-tree-id4956 . -21) (undo-tree-id4957 . -21) (undo-tree-id4958 . -21) (undo-tree-id4959 . -21) (undo-tree-id4960 . -21) (undo-tree-id4961 . -21) (undo-tree-id4962 . -21) (undo-tree-id4963 . -21) (undo-tree-id4964 . -21) (undo-tree-id4965 . -21) (undo-tree-id4966 . -21) (undo-tree-id4967 . -21) (undo-tree-id4968 . -21) (undo-tree-id4969 . -21) (undo-tree-id4970 . -21) (undo-tree-id4971 . -21) (undo-tree-id4972 . -21) (undo-tree-id4973 . -21) (undo-tree-id4974 . -21) (undo-tree-id4975 . -21) (undo-tree-id4976 . -21) (undo-tree-id4977 . -21) (undo-tree-id4978 . -21) (undo-tree-id4979 . -21) (undo-tree-id4980 . -21) (undo-tree-id4981 . -21) (undo-tree-id4982 . -21) (undo-tree-id4983 . -21) (undo-tree-id4984 . -21) (undo-tree-id4985 . -21) (undo-tree-id4986 . -21) (undo-tree-id4987 . -21) (undo-tree-id4988 . -21) (undo-tree-id4989 . -21) (undo-tree-id4990 . -21) (undo-tree-id4991 . -21) (undo-tree-id4992 . -21) (undo-tree-id4993 . -21) (undo-tree-id4994 . -21) (undo-tree-id4995 . -21) (undo-tree-id4996 . -21) (undo-tree-id4997 . -21) (undo-tree-id4998 . -21) (undo-tree-id4999 . -21) (undo-tree-id5000 . -21) (undo-tree-id5001 . -21) (undo-tree-id5002 . -21) (undo-tree-id5003 . -21) (undo-tree-id5004 . -21) (undo-tree-id5005 . -21) (undo-tree-id5006 . -21) (undo-tree-id5007 . -21) (undo-tree-id5008 . -21) (undo-tree-id5009 . -21) (undo-tree-id5010 . -21) (undo-tree-id5011 . -21) (undo-tree-id5012 . -21) (undo-tree-id5013 . -21) (undo-tree-id5014 . -21) (undo-tree-id5015 . -21) (undo-tree-id5016 . -21) (undo-tree-id5017 . -21) (undo-tree-id5018 . -21) (undo-tree-id5019 . -21) (undo-tree-id5020 . -21) (undo-tree-id5021 . -21) (undo-tree-id5022 . -21) (undo-tree-id5023 . -21) (undo-tree-id5024 . -21) (undo-tree-id5025 . -21) (undo-tree-id5026 . -21) (undo-tree-id5027 . -21) (undo-tree-id5028 . -21) (undo-tree-id5029 . -21) (undo-tree-id5030 . -21) (undo-tree-id5031 . -21) (undo-tree-id5032 . -21) (undo-tree-id5033 . -21) (undo-tree-id5034 . -21) (undo-tree-id5035 . -21) (undo-tree-id5036 . -21) (undo-tree-id5037 . -21) (undo-tree-id5038 . -21) (undo-tree-id5039 . -21) (undo-tree-id5040 . -21) (undo-tree-id5041 . -21) (undo-tree-id5042 . -21) (undo-tree-id5043 . -21) (undo-tree-id5044 . -21) (undo-tree-id5045 . -21) (undo-tree-id5046 . -21) (undo-tree-id5047 . -21) (undo-tree-id5048 . -21) (undo-tree-id5049 . -21) (undo-tree-id5050 . -21) (undo-tree-id5051 . -21) (undo-tree-id5052 . -21) (undo-tree-id5053 . -21) (undo-tree-id5054 . -21) (undo-tree-id5055 . -21) (undo-tree-id5056 . -21) (undo-tree-id5057 . -21) (undo-tree-id5058 . -21) (undo-tree-id5059 . -21) (undo-tree-id5060 . -21) (undo-tree-id5061 . -21) (undo-tree-id5062 . -21) (undo-tree-id5063 . -21) (undo-tree-id5064 . -21) (undo-tree-id5065 . -21) (undo-tree-id5066 . -21) (undo-tree-id5067 . -21) (undo-tree-id5068 . -21) (undo-tree-id5069 . -21) (undo-tree-id5070 . -21) (undo-tree-id5071 . -21) (undo-tree-id5072 . -21) (undo-tree-id5073 . -21) (undo-tree-id5074 . -21) (undo-tree-id5075 . -21) (undo-tree-id5076 . -21) (undo-tree-id5077 . -21) (undo-tree-id5078 . -21) (undo-tree-id5079 . -21) (undo-tree-id5080 . -21) (undo-tree-id5081 . -21) (undo-tree-id5082 . -21) (undo-tree-id5083 . -21) (undo-tree-id5084 . -21) (undo-tree-id5085 . -21) (undo-tree-id5086 . -21) (undo-tree-id5087 . -21) (undo-tree-id5088 . -21) (undo-tree-id5089 . -21) (undo-tree-id5090 . -21) (undo-tree-id5091 . -21) (undo-tree-id5092 . -21) (undo-tree-id5093 . -21) (undo-tree-id5094 . -21) (undo-tree-id5095 . -21) (undo-tree-id5096 . -21) (undo-tree-id5097 . -21) (undo-tree-id5098 . -21) (undo-tree-id5099 . -21) (undo-tree-id5100 . -21) (undo-tree-id5101 . -21) (undo-tree-id5102 . -21) (undo-tree-id5103 . -21) (undo-tree-id5104 . -21) (undo-tree-id5105 . -21) (undo-tree-id5106 . -21) (undo-tree-id5107 . -21) (undo-tree-id5108 . -21) (undo-tree-id5109 . -21) (undo-tree-id5110 . -21) (undo-tree-id5111 . -21) (undo-tree-id5112 . -21) (undo-tree-id5113 . -21) (undo-tree-id5114 . -21) (undo-tree-id5115 . -21) (undo-tree-id5116 . -21) (undo-tree-id5117 . -21) (undo-tree-id5118 . -21) (undo-tree-id5119 . -21) (undo-tree-id5120 . -21) (undo-tree-id5121 . -21) (undo-tree-id5122 . -21) (undo-tree-id5123 . -21) (undo-tree-id5124 . -21) (undo-tree-id5125 . -21) (undo-tree-id5126 . -21) (undo-tree-id5127 . -21) (undo-tree-id5128 . -21) (undo-tree-id5129 . -21) (undo-tree-id5130 . -21) (undo-tree-id5131 . -21) (undo-tree-id5132 . -21) (undo-tree-id5133 . -21) (undo-tree-id5134 . -21) (undo-tree-id5135 . -21) (undo-tree-id5136 . -21) (undo-tree-id5137 . -21) (undo-tree-id5138 . -21) (undo-tree-id5139 . -21) (undo-tree-id5140 . -21) (undo-tree-id5141 . -21) (undo-tree-id5142 . -21) (undo-tree-id5143 . -21) (undo-tree-id5144 . -21) (undo-tree-id5145 . -21) (undo-tree-id5146 . -21) (undo-tree-id5147 . -21) (undo-tree-id5148 . -21) (undo-tree-id5149 . -21) (undo-tree-id5150 . -21) (undo-tree-id5151 . -21) (undo-tree-id5152 . -21) (undo-tree-id5153 . -21) (undo-tree-id5154 . -21) (undo-tree-id5155 . -21) (undo-tree-id5156 . -21) (undo-tree-id5157 . -21) (undo-tree-id5158 . -21) (undo-tree-id5159 . -21) (undo-tree-id5160 . -21) (undo-tree-id5161 . -21) (undo-tree-id5162 . -21) (undo-tree-id5163 . -21) (undo-tree-id5164 . -21) (undo-tree-id5165 . -21) (undo-tree-id5166 . -21) (undo-tree-id5167 . -21) (undo-tree-id5168 . -21) (undo-tree-id5169 . -21) (undo-tree-id5170 . -21) (undo-tree-id5171 . -21) (undo-tree-id5172 . -21) (undo-tree-id5173 . -21) (undo-tree-id5174 . -21) (undo-tree-id5175 . -21) (undo-tree-id5176 . -21) (undo-tree-id5177 . -21) (undo-tree-id5178 . -21) (undo-tree-id5179 . -21) (undo-tree-id5180 . -21) (undo-tree-id5181 . -21) (undo-tree-id5182 . -21) (undo-tree-id5183 . -21) (undo-tree-id5184 . -21) (undo-tree-id5185 . -21) (undo-tree-id5186 . -21) (undo-tree-id5187 . -21) (undo-tree-id5188 . -21) (undo-tree-id5189 . -21) (undo-tree-id5190 . -21) (undo-tree-id5191 . -21) (undo-tree-id5192 . -21) (undo-tree-id5193 . -21) (undo-tree-id5194 . -21) (undo-tree-id5195 . -21) (undo-tree-id5196 . -21) (undo-tree-id5197 . -21) (undo-tree-id5198 . -21) (undo-tree-id5199 . -21) (undo-tree-id5200 . -21) (undo-tree-id5201 . -21) (undo-tree-id5202 . -21) (undo-tree-id5203 . -21) (undo-tree-id5204 . -21) (undo-tree-id5205 . -21) (undo-tree-id5206 . -21) (undo-tree-id5207 . -21) (undo-tree-id5208 . -21) (undo-tree-id5209 . -21) (undo-tree-id5210 . -21) (undo-tree-id5211 . -21) (undo-tree-id5212 . -21) (undo-tree-id5213 . -21) (undo-tree-id5214 . -21) (undo-tree-id5215 . -21) (undo-tree-id5216 . -21) (undo-tree-id5217 . -21) (undo-tree-id5218 . -21) (undo-tree-id5219 . -21) (undo-tree-id5220 . -21) (undo-tree-id5221 . -21) (undo-tree-id5222 . -21) (undo-tree-id5223 . -21) (undo-tree-id5224 . -21) (undo-tree-id5225 . -21) (undo-tree-id5226 . -21) (undo-tree-id5227 . -21) (undo-tree-id5228 . -21) (undo-tree-id5229 . -21) (undo-tree-id5230 . -21) (undo-tree-id5231 . -21) (undo-tree-id5232 . -21) (undo-tree-id5233 . -21) (undo-tree-id5234 . -21) (undo-tree-id5235 . -21) (undo-tree-id5236 . -21) (undo-tree-id5237 . -21) (undo-tree-id5238 . -21) (undo-tree-id5239 . -21) (undo-tree-id5240 . -21) (undo-tree-id5241 . -21) (undo-tree-id5242 . -21) (undo-tree-id5243 . -21) (undo-tree-id5244 . -21) (undo-tree-id5245 . -21) (undo-tree-id5246 . -21) (undo-tree-id5247 . -21) (undo-tree-id5248 . -21) (undo-tree-id5249 . -21) (undo-tree-id5250 . -21) (undo-tree-id5251 . -21) (undo-tree-id5252 . -21) (undo-tree-id5253 . -21) (undo-tree-id5254 . -21) (undo-tree-id5255 . -21) (undo-tree-id5256 . -21) (undo-tree-id5257 . -21) (undo-tree-id5258 . -21) (undo-tree-id5259 . -21) (undo-tree-id5260 . -21) (undo-tree-id5261 . -21) (undo-tree-id5262 . -21) (undo-tree-id5263 . -21) (undo-tree-id5264 . -21) (undo-tree-id5265 . -21) (undo-tree-id5266 . -21) (undo-tree-id5267 . -21) (undo-tree-id5268 . -21) (undo-tree-id5269 . -21) (undo-tree-id5270 . -21) (undo-tree-id5271 . -21) (undo-tree-id5272 . -21) (undo-tree-id5273 . -21) (undo-tree-id5274 . -21) (undo-tree-id5275 . -21) (undo-tree-id5276 . -21) (undo-tree-id5277 . -21) (undo-tree-id5278 . -21) (undo-tree-id5279 . -21) (undo-tree-id5280 . -21) (undo-tree-id5281 . -21) (undo-tree-id5282 . -21) (undo-tree-id5283 . -21) (undo-tree-id5284 . -21) (undo-tree-id5285 . -21) (undo-tree-id5286 . -21) (undo-tree-id5287 . -21) (undo-tree-id5288 . -21) (undo-tree-id5289 . -21) (undo-tree-id5290 . -21) (undo-tree-id5291 . -21) (undo-tree-id5292 . -21) (undo-tree-id5293 . -21) (undo-tree-id5294 . -21) (undo-tree-id5295 . -21) (undo-tree-id5296 . -21) (undo-tree-id5297 . -21) (undo-tree-id5298 . -21) (undo-tree-id5299 . -21) (undo-tree-id5300 . -21) (undo-tree-id5301 . -21) (undo-tree-id5302 . -21) (undo-tree-id5303 . -21) (undo-tree-id5304 . -21) (undo-tree-id5305 . -21) (undo-tree-id5306 . -21) (undo-tree-id5307 . -21) (undo-tree-id5308 . -21) (undo-tree-id5309 . -21) (undo-tree-id5310 . -21) (undo-tree-id5311 . -21) (undo-tree-id5312 . -21) (undo-tree-id5313 . -21) (undo-tree-id5314 . -21) (undo-tree-id5315 . -21) (undo-tree-id5316 . -21) (undo-tree-id5317 . -21) (undo-tree-id5318 . -21) (undo-tree-id5319 . -21) (undo-tree-id5320 . -21) (undo-tree-id5321 . -21) (undo-tree-id5322 . -21) (undo-tree-id5323 . -21) (undo-tree-id5324 . -21) (undo-tree-id5325 . -21) (undo-tree-id5326 . -21) (undo-tree-id5327 . -21) (undo-tree-id5328 . -21) (undo-tree-id5329 . -21) (undo-tree-id5330 . -21) (undo-tree-id5331 . -21) (undo-tree-id5332 . -21) (undo-tree-id5333 . -21) (undo-tree-id5334 . -21) (undo-tree-id5335 . -21) (undo-tree-id5336 . -21) (undo-tree-id5337 . -21) (undo-tree-id5338 . -21) (undo-tree-id5339 . -21) (undo-tree-id5340 . -21) (undo-tree-id5341 . -21) (undo-tree-id5342 . -21) (undo-tree-id5343 . -21) (undo-tree-id5344 . -21) (undo-tree-id5345 . -21) (undo-tree-id5346 . -21) (undo-tree-id5347 . -21) (undo-tree-id5348 . -21) (undo-tree-id5349 . -21) (undo-tree-id5350 . -21) (undo-tree-id5351 . -21) (undo-tree-id5352 . -21) (undo-tree-id5353 . -21) (undo-tree-id5354 . -21) (undo-tree-id5355 . -21) (undo-tree-id5356 . -21) (undo-tree-id5357 . -21) (undo-tree-id5358 . -21) (undo-tree-id5359 . -21) (undo-tree-id5360 . -21) (undo-tree-id5361 . -21) (undo-tree-id5362 . -21) (undo-tree-id5363 . -21) (undo-tree-id5364 . -21) (undo-tree-id5365 . -21) (undo-tree-id5366 . -21) (undo-tree-id5367 . -21) (undo-tree-id5368 . -21) (undo-tree-id5369 . -21) (undo-tree-id5370 . -21) (undo-tree-id5371 . -21) (undo-tree-id5372 . -21) (undo-tree-id5373 . -21) (undo-tree-id5374 . -21) (undo-tree-id5375 . -21) (undo-tree-id5376 . -21) (undo-tree-id5377 . -21) (undo-tree-id5378 . -21) (undo-tree-id5379 . -21) (undo-tree-id5380 . -21) (undo-tree-id5381 . -21) (undo-tree-id5382 . -21) (undo-tree-id5383 . -21) (undo-tree-id5384 . -21) (undo-tree-id5385 . -21) (undo-tree-id5386 . -21) (undo-tree-id5387 . -21) (undo-tree-id5388 . -21) (undo-tree-id5389 . -21) (undo-tree-id5390 . -21) (undo-tree-id5391 . -21) (undo-tree-id5392 . -21) (undo-tree-id5393 . -21) (undo-tree-id5394 . -21) (undo-tree-id5395 . -21) (undo-tree-id5396 . -21) (undo-tree-id5397 . -21) (undo-tree-id5398 . -21) (undo-tree-id5399 . -21) (undo-tree-id5400 . -21) (undo-tree-id5401 . -21) (undo-tree-id5402 . -21) (undo-tree-id5403 . -21) (undo-tree-id5404 . -21) (undo-tree-id5405 . -21) (undo-tree-id5406 . -21) (undo-tree-id5407 . -21) (undo-tree-id5408 . -21) (undo-tree-id5409 . -21) (undo-tree-id5410 . -21) (undo-tree-id5411 . -21) (undo-tree-id5412 . -21) (undo-tree-id5413 . -21) (undo-tree-id5414 . -21) (undo-tree-id5415 . -21) (undo-tree-id5416 . -21) (undo-tree-id5417 . -21) (undo-tree-id5418 . -21) (undo-tree-id5419 . -21) (undo-tree-id5420 . -21) (undo-tree-id5421 . -21) (undo-tree-id5422 . -21) (undo-tree-id5423 . -21) (undo-tree-id5424 . -21) (undo-tree-id5425 . -21) (undo-tree-id5426 . -21) (undo-tree-id5427 . -21) (undo-tree-id5428 . -21) (undo-tree-id5429 . -21) (undo-tree-id5430 . -21) (undo-tree-id5431 . -21) (undo-tree-id5432 . -21) (undo-tree-id5433 . -21) (undo-tree-id5434 . -21) (undo-tree-id5435 . -21) (undo-tree-id5436 . -21) (undo-tree-id5437 . -21) (undo-tree-id5438 . -21) (undo-tree-id5439 . -21) (undo-tree-id5440 . -21) (undo-tree-id5441 . -21) (undo-tree-id5442 . -21) (undo-tree-id5443 . -21) (undo-tree-id5444 . -21) (undo-tree-id5445 . -21) (undo-tree-id5446 . -21) (undo-tree-id5447 . -21) (undo-tree-id5448 . -21) (undo-tree-id5449 . -21) (undo-tree-id5450 . -21) (undo-tree-id5451 . -21) (undo-tree-id5452 . -21) (undo-tree-id5453 . -21) (undo-tree-id5454 . -21) (undo-tree-id5455 . -21) (undo-tree-id5456 . -21) (undo-tree-id5457 . -21) (undo-tree-id5458 . -21) (undo-tree-id5459 . -21) (undo-tree-id5460 . -21) (undo-tree-id5461 . -21) (undo-tree-id5462 . -21) (undo-tree-id5463 . -21) (undo-tree-id5464 . -21) (undo-tree-id5465 . -21) (undo-tree-id5466 . -21) (undo-tree-id5467 . -21) (undo-tree-id5468 . -21) (undo-tree-id5469 . -21) (undo-tree-id5470 . -21) (undo-tree-id5471 . -21) (undo-tree-id5472 . -21) (undo-tree-id5473 . -21) (undo-tree-id5474 . -21) (undo-tree-id5475 . -21) (undo-tree-id5476 . -21) (undo-tree-id5477 . -21) (undo-tree-id5478 . -21) (undo-tree-id5479 . -21) (undo-tree-id5480 . -21) (undo-tree-id5481 . -21) (undo-tree-id5482 . -21) (undo-tree-id5483 . -21) (undo-tree-id5484 . -21) (undo-tree-id5485 . -21) (undo-tree-id5486 . -21) (undo-tree-id5487 . -21) (undo-tree-id5488 . -21) (undo-tree-id5489 . -21) (undo-tree-id5490 . -21) (undo-tree-id5491 . -21) (undo-tree-id5492 . -21) (undo-tree-id5493 . -21) (undo-tree-id5494 . -21) (undo-tree-id5495 . -21) (undo-tree-id5496 . -21) (undo-tree-id5497 . -21) (undo-tree-id5498 . -21) (undo-tree-id5499 . -21) (undo-tree-id5500 . -21) (undo-tree-id5501 . -21) (undo-tree-id5502 . -21) (undo-tree-id5503 . -21) (undo-tree-id5504 . -21) (undo-tree-id5505 . -21) (undo-tree-id5506 . -21) (undo-tree-id5507 . -21) (undo-tree-id5508 . -21) (undo-tree-id5509 . -21) (undo-tree-id5510 . -21) (undo-tree-id5511 . -21) (undo-tree-id5512 . -21) (undo-tree-id5513 . -21) (undo-tree-id5514 . -21) (undo-tree-id5515 . -21) (undo-tree-id5516 . -21) (undo-tree-id5517 . -21) (undo-tree-id5518 . -21) (undo-tree-id5519 . -21) (undo-tree-id5520 . -21) (undo-tree-id5521 . -21) (undo-tree-id5522 . -21) (undo-tree-id5523 . -21) (undo-tree-id5524 . -21) (undo-tree-id5525 . -21) (undo-tree-id5526 . -21) (undo-tree-id5527 . -21) (undo-tree-id5528 . -21) (undo-tree-id5529 . -21) (undo-tree-id5530 . -21) (undo-tree-id5531 . -21) (undo-tree-id5532 . -21) (undo-tree-id5533 . -21) (undo-tree-id5534 . -21) (undo-tree-id5535 . -21) (undo-tree-id5536 . -21) (undo-tree-id5537 . -21) (undo-tree-id5538 . -21) (undo-tree-id5539 . -21) (undo-tree-id5540 . -21) (undo-tree-id5541 . -21) (undo-tree-id5542 . -21) (undo-tree-id5543 . -21) (undo-tree-id5544 . -21) (undo-tree-id5545 . -21) (undo-tree-id5546 . -21) (undo-tree-id5547 . -21) (undo-tree-id5548 . -21) (undo-tree-id5549 . -21) (undo-tree-id5550 . -21) (undo-tree-id5551 . -21) (undo-tree-id5552 . -21) (undo-tree-id5553 . -21) (undo-tree-id5554 . -21) (undo-tree-id5555 . -21) (undo-tree-id5556 . -21) (undo-tree-id5557 . -21) (undo-tree-id5558 . -21) (undo-tree-id5559 . -21) (undo-tree-id5560 . -21) (undo-tree-id5561 . -21) (undo-tree-id5562 . -21) (undo-tree-id5563 . -21) (undo-tree-id5564 . -21) (undo-tree-id5565 . -21) (undo-tree-id5566 . -21) (undo-tree-id5567 . -21) (undo-tree-id5568 . -21) (undo-tree-id5569 . -21) (undo-tree-id5570 . -21) (undo-tree-id5571 . -21) (undo-tree-id5572 . -21) (undo-tree-id5573 . -21) (undo-tree-id5574 . -21) (undo-tree-id5575 . -21) (undo-tree-id5576 . -21) (undo-tree-id5577 . -21) (undo-tree-id5578 . -21) (undo-tree-id5579 . -21) (undo-tree-id5580 . -21) (undo-tree-id5581 . -21) (undo-tree-id5582 . -21) (undo-tree-id5583 . -21) (undo-tree-id5584 . -21) (undo-tree-id5585 . -21) (undo-tree-id5586 . -21) (undo-tree-id5587 . -21) (undo-tree-id5588 . -22) (undo-tree-id5589 . -22) (undo-tree-id5590 . -22) (undo-tree-id5591 . -22) (undo-tree-id5592 . -22) (undo-tree-id5593 . -22) (undo-tree-id5594 . -22) (undo-tree-id5595 . -22) (undo-tree-id5596 . -22) (undo-tree-id5597 . -22) (undo-tree-id5598 . -22) (undo-tree-id5599 . -22) (undo-tree-id5600 . -22) (undo-tree-id5601 . 1) (undo-tree-id5602 . -22) (undo-tree-id5603 . -22) (undo-tree-id5604 . -22) (undo-tree-id5605 . -22) (undo-tree-id5606 . -22) (undo-tree-id5607 . -22) (undo-tree-id5608 . -22) (undo-tree-id5609 . -22) (undo-tree-id5610 . -22) (undo-tree-id5611 . -22) (undo-tree-id5612 . -22) (undo-tree-id5613 . -22) (undo-tree-id5614 . -22) (undo-tree-id5615 . -22) (undo-tree-id5616 . -22) (undo-tree-id5617 . -22) (undo-tree-id5618 . -22) (undo-tree-id5619 . -22) (undo-tree-id5620 . -22) (undo-tree-id5621 . -22) (undo-tree-id5622 . -22) (undo-tree-id5623 . -22) (undo-tree-id5624 . -22) (undo-tree-id5625 . -22) (undo-tree-id5626 . -22) (undo-tree-id5627 . -22) (undo-tree-id5628 . -22) (undo-tree-id5629 . -22) (undo-tree-id5630 . -22) (undo-tree-id5631 . -22) (undo-tree-id5632 . -22) (undo-tree-id5633 . -22) (undo-tree-id5634 . -21) (undo-tree-id5635 . -21) (undo-tree-id5636 . -21) (undo-tree-id5637 . -21) (undo-tree-id5638 . -21) (undo-tree-id5639 . -21) (undo-tree-id5640 . -21) (undo-tree-id5641 . -21) (undo-tree-id5642 . -21) (undo-tree-id5643 . -21) (undo-tree-id5644 . -21) (undo-tree-id5645 . -21) (undo-tree-id5646 . -21) (undo-tree-id5647 . -21) (undo-tree-id5648 . -21) (undo-tree-id5649 . -21) (undo-tree-id5650 . -21) (undo-tree-id5651 . -21) (undo-tree-id5652 . -21) (undo-tree-id5653 . -21) (undo-tree-id5654 . -21) (undo-tree-id5655 . -21) (undo-tree-id5656 . -21) (undo-tree-id5657 . -21) (undo-tree-id5658 . -21) (undo-tree-id5659 . -21) (undo-tree-id5660 . -21) (undo-tree-id5661 . -21) (undo-tree-id5662 . -21) (undo-tree-id5663 . -21) (undo-tree-id5664 . -21) (undo-tree-id5665 . -21) (undo-tree-id5666 . -21) (undo-tree-id5667 . -21) (undo-tree-id5668 . -21) (undo-tree-id5669 . -21) (undo-tree-id5670 . -21) (undo-tree-id5671 . -21) (undo-tree-id5672 . -21) (undo-tree-id5673 . -21) (undo-tree-id5674 . -21) (undo-tree-id5675 . -21) (undo-tree-id5676 . -21) (undo-tree-id5677 . -21) (undo-tree-id5678 . -21) (undo-tree-id5679 . -21) (undo-tree-id5680 . -21) (undo-tree-id5681 . -21) (undo-tree-id5682 . -21) (undo-tree-id5683 . -21) (undo-tree-id5684 . -21) (undo-tree-id5685 . -21) (undo-tree-id5686 . -21) (undo-tree-id5687 . -21) (undo-tree-id5688 . -23) (undo-tree-id5689 . -23) 805) nil (26026 32813 158349 0) 0 nil])
([nil nil ((806 . 810) (804 . 806) (796 . 804) (#("iter" 0 1 (fontified nil c-is-sws t) 1 4 (fontified nil)) . 796) (796 . 800) (#("iterator() : Iterator<E>" 0 1 (fontified nil c-is-sws t) 1 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -796) (undo-tree-id3017 . -24) (796 . 820) (#("iterato" 0 1 (face font-lock-type-face c-is-sws t fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -796) (undo-tree-id3018 . -7) (undo-tree-id3019 . -7) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -2) (undo-tree-id3040 . -2) (undo-tree-id3041 . -2) (undo-tree-id3042 . -2) (undo-tree-id3043 . -2) (undo-tree-id3044 . -2) (undo-tree-id3045 . -2) (undo-tree-id3046 . -2) (undo-tree-id3047 . -2) (undo-tree-id3048 . -2) (undo-tree-id3049 . -2) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -2) (undo-tree-id3056 . -2) (undo-tree-id3057 . -2) (undo-tree-id3058 . -3) (undo-tree-id3059 . -3) (undo-tree-id3060 . -3) (undo-tree-id3061 . -3) (undo-tree-id3062 . -3) (undo-tree-id3063 . -3) (undo-tree-id3064 . -3) (undo-tree-id3065 . -3) (undo-tree-id3066 . -3) (undo-tree-id3067 . -3) (undo-tree-id3068 . -3) (undo-tree-id3069 . -3) (undo-tree-id3070 . -3) (undo-tree-id3071 . -3) (undo-tree-id3072 . -3) (undo-tree-id3073 . -3) (undo-tree-id3074 . -3) (undo-tree-id3075 . -3) (undo-tree-id3076 . -3) (undo-tree-id3077 . -4) (undo-tree-id3078 . -4) (undo-tree-id3079 . -4) (undo-tree-id3080 . -4) (undo-tree-id3081 . -4) (undo-tree-id3082 . -4) (undo-tree-id3083 . -4) (undo-tree-id3084 . -4) (undo-tree-id3085 . -4) (undo-tree-id3086 . -4) (undo-tree-id3087 . -4) (undo-tree-id3088 . -4) (undo-tree-id3089 . -4) (undo-tree-id3090 . -4) (undo-tree-id3091 . -4) (undo-tree-id3092 . -4) (undo-tree-id3093 . -4) (undo-tree-id3094 . -4) (undo-tree-id3095 . -4) (undo-tree-id3096 . -4) (undo-tree-id3097 . -4) (undo-tree-id3098 . -4) (undo-tree-id3099 . -4) (undo-tree-id3100 . -4) (undo-tree-id3101 . -4) (undo-tree-id3102 . -4) (undo-tree-id3103 . -4) (undo-tree-id3104 . -4) (undo-tree-id3105 . -4) (undo-tree-id3106 . -4) (undo-tree-id3107 . -4) (undo-tree-id3108 . -4) (undo-tree-id3109 . -4) (undo-tree-id3110 . -4) (undo-tree-id3111 . -4) (undo-tree-id3112 . -4) (undo-tree-id3113 . -4) (undo-tree-id3114 . -4) (undo-tree-id3115 . -4) (undo-tree-id3116 . -4) (undo-tree-id3117 . -4) (undo-tree-id3118 . -4) (undo-tree-id3119 . -4) (undo-tree-id3120 . -4) (undo-tree-id3121 . -4) (undo-tree-id3122 . -4) (undo-tree-id3123 . -4) (undo-tree-id3124 . -4) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (undo-tree-id3127 . -4) (undo-tree-id3128 . -4) (undo-tree-id3129 . -4) (undo-tree-id3130 . -4) (undo-tree-id3131 . -4) (undo-tree-id3132 . -4) (undo-tree-id3133 . -4) (undo-tree-id3134 . -5) (undo-tree-id3135 . -5) (undo-tree-id3136 . -5) (undo-tree-id3137 . -5) (undo-tree-id3138 . -5) (undo-tree-id3139 . -5) (undo-tree-id3140 . -5) (undo-tree-id3141 . -5) (undo-tree-id3142 . -5) (undo-tree-id3143 . -5) (undo-tree-id3144 . -5) (undo-tree-id3145 . -5) (undo-tree-id3146 . -5) (undo-tree-id3147 . -5) (undo-tree-id3148 . -5) (undo-tree-id3149 . -5) (undo-tree-id3150 . -5) (undo-tree-id3151 . -5) (undo-tree-id3152 . -5) (undo-tree-id3153 . -5) (undo-tree-id3154 . -5) (undo-tree-id3155 . -5) (undo-tree-id3156 . -5) (undo-tree-id3157 . -5) (undo-tree-id3158 . -5) (undo-tree-id3159 . -5) (undo-tree-id3160 . -6) (undo-tree-id3161 . -6) (undo-tree-id3162 . -6) (undo-tree-id3163 . -6) (undo-tree-id3164 . -6) (undo-tree-id3165 . -6) (undo-tree-id3166 . -6) (undo-tree-id3167 . -6) (undo-tree-id3168 . -6) (undo-tree-id3169 . -6) (undo-tree-id3170 . -6) (undo-tree-id3171 . -6) (undo-tree-id3172 . -6) (undo-tree-id3173 . -6) (undo-tree-id3174 . -6) (undo-tree-id3175 . -6) (undo-tree-id3176 . -6) (undo-tree-id3177 . -6) (undo-tree-id3178 . -6) (undo-tree-id3179 . -6) (undo-tree-id3180 . -6) (undo-tree-id3181 . -6) (undo-tree-id3182 . -6) (undo-tree-id3183 . -6) (undo-tree-id3184 . -6) (undo-tree-id3185 . -6) (undo-tree-id3186 . -6) (undo-tree-id3187 . -6) (undo-tree-id3188 . -6) (undo-tree-id3189 . -6) (undo-tree-id3190 . -6) (undo-tree-id3191 . -6) (undo-tree-id3192 . -7) (undo-tree-id3193 . -7) (undo-tree-id3194 . -7) (undo-tree-id3195 . -7) (undo-tree-id3196 . -7) (undo-tree-id3197 . -7) (undo-tree-id3198 . -7) (undo-tree-id3199 . -7) (undo-tree-id3200 . -7) (undo-tree-id3201 . -7) (undo-tree-id3202 . -7) (undo-tree-id3203 . -7) (undo-tree-id3204 . -7) (undo-tree-id3205 . -7) (undo-tree-id3206 . -7) (undo-tree-id3207 . -7) (undo-tree-id3208 . -7) (undo-tree-id3209 . -7) (undo-tree-id3210 . -7) (undo-tree-id3211 . -7) (undo-tree-id3212 . -7) (undo-tree-id3213 . -7) (undo-tree-id3214 . -7) (undo-tree-id3215 . -7) (undo-tree-id3216 . -7) (undo-tree-id3217 . -7) (undo-tree-id3218 . -7) (undo-tree-id3219 . -7) (undo-tree-id3220 . -7) (undo-tree-id3221 . -7) (undo-tree-id3222 . -7) (undo-tree-id3223 . -7) (undo-tree-id3224 . -7) 803 (796 . 803) (784 . 796) (#("            " 0 1 (c-in-sws t c-is-sws t fontified t) 1 12 (c-in-sws t c-is-sws t fontified t)) . 784) (undo-tree-id3225 . -12) (undo-tree-id3226 . -12) (undo-tree-id3227 . -12) (undo-tree-id3228 . -12) (undo-tree-id3229 . -12) (undo-tree-id3230 . -12) (undo-tree-id3231 . -12) (undo-tree-id3232 . -12) (undo-tree-id3233 . -12) (undo-tree-id3234 . -12) (undo-tree-id3235 . -12) (undo-tree-id3236 . -12) (undo-tree-id3237 . -12) (undo-tree-id3238 . -12) (undo-tree-id3239 . -12) (undo-tree-id3240 . -12) (undo-tree-id3241 . -12) (undo-tree-id3242 . -12) (undo-tree-id3243 . -12) (undo-tree-id3244 . -12) (undo-tree-id3245 . -12) (undo-tree-id3246 . -12) (undo-tree-id3247 . -12) (undo-tree-id3248 . -12) (undo-tree-id3249 . -12) (undo-tree-id3250 . -12) (undo-tree-id3251 . -12) (undo-tree-id3252 . -12) (undo-tree-id3253 . -12) (undo-tree-id3254 . -12) (undo-tree-id3255 . -12) (undo-tree-id3256 . -12) (undo-tree-id3257 . -12) (undo-tree-id3258 . -12) (undo-tree-id3259 . -12) (undo-tree-id3260 . -12) (undo-tree-id3261 . -12) (undo-tree-id3262 . -12) (undo-tree-id3263 . -12) (undo-tree-id3264 . -12) (undo-tree-id3265 . -12) (undo-tree-id3266 . -12) (undo-tree-id3267 . -12) (undo-tree-id3268 . -12) (undo-tree-id3269 . -12) (undo-tree-id3270 . -12) (undo-tree-id3271 . -12) (undo-tree-id3272 . -12) (undo-tree-id3273 . -12) (undo-tree-id3274 . -12) (undo-tree-id3275 . -12) (undo-tree-id3276 . -12) (undo-tree-id3277 . -12) (undo-tree-id3278 . -12) (undo-tree-id3279 . -12) (undo-tree-id3280 . -12) (undo-tree-id3281 . -12) (undo-tree-id3282 . -12) (undo-tree-id3283 . -12) (undo-tree-id3284 . -12) (undo-tree-id3285 . -12) (undo-tree-id3286 . -12) (undo-tree-id3287 . -12) (undo-tree-id3288 . -12) (undo-tree-id3289 . -12) (undo-tree-id3290 . -12) (undo-tree-id3291 . -12) (undo-tree-id3292 . -12) (undo-tree-id3293 . -12) (undo-tree-id3294 . -12) (undo-tree-id3295 . -12) (undo-tree-id3296 . -12) (undo-tree-id3297 . -12) (undo-tree-id3298 . -12) (undo-tree-id3299 . -12) (undo-tree-id3300 . -12) (undo-tree-id3301 . -12) (undo-tree-id3302 . -12) (undo-tree-id3303 . -12) (undo-tree-id3304 . -12) (undo-tree-id3305 . -12) (undo-tree-id3306 . -12) (undo-tree-id3307 . -12) (undo-tree-id3308 . -12) (undo-tree-id3309 . -12) (undo-tree-id3310 . -12) (undo-tree-id3311 . -12) (undo-tree-id3312 . -12) (undo-tree-id3313 . -12) (undo-tree-id3314 . -12) (undo-tree-id3315 . -12) (undo-tree-id3316 . -12) (undo-tree-id3317 . -12) (undo-tree-id3318 . -12) (undo-tree-id3319 . -12) (undo-tree-id3320 . -12) (undo-tree-id3321 . -12) (undo-tree-id3322 . -12) (undo-tree-id3323 . -12) (undo-tree-id3324 . -12) (undo-tree-id3325 . -12) (undo-tree-id3326 . -12) (undo-tree-id3327 . -12) (undo-tree-id3328 . -12) (undo-tree-id3329 . -12) (undo-tree-id3330 . -12) (undo-tree-id3331 . -12) (undo-tree-id3332 . -12) (undo-tree-id3333 . -12) (undo-tree-id3334 . -12) (undo-tree-id3335 . -12) (undo-tree-id3336 . -12) (undo-tree-id3337 . -12) (undo-tree-id3338 . -12) (undo-tree-id3339 . -12) (undo-tree-id3340 . -12) (undo-tree-id3341 . -12) (undo-tree-id3342 . -12) (undo-tree-id3343 . -12) (undo-tree-id3344 . -12) (undo-tree-id3345 . -12) (undo-tree-id3346 . -12) (undo-tree-id3347 . -12) (undo-tree-id3348 . -12) (undo-tree-id3349 . -12) (undo-tree-id3350 . -12) (undo-tree-id3351 . -12) (undo-tree-id3352 . -12) (undo-tree-id3353 . -12) (undo-tree-id3354 . -12) (undo-tree-id3355 . -12) (undo-tree-id3356 . -12) (undo-tree-id3357 . -12) (undo-tree-id3358 . -12) (undo-tree-id3359 . -12) (undo-tree-id3360 . -12) (undo-tree-id3361 . -12) (undo-tree-id3362 . -12) (undo-tree-id3363 . -12) (undo-tree-id3364 . -12) (undo-tree-id3365 . -12) (undo-tree-id3366 . -12) (undo-tree-id3367 . -12) (undo-tree-id3368 . -12) (undo-tree-id3369 . -12) (undo-tree-id3370 . -12) (undo-tree-id3371 . -12) (undo-tree-id3372 . -12) (undo-tree-id3373 . -12) (undo-tree-id3374 . -12) (undo-tree-id3375 . -12) (undo-tree-id3376 . -12) (undo-tree-id3377 . -12) (undo-tree-id3378 . -12) (undo-tree-id3379 . -12) (undo-tree-id3380 . -12) (undo-tree-id3381 . -12) (undo-tree-id3382 . -12) (undo-tree-id3383 . -12) (undo-tree-id3384 . -12) (undo-tree-id3385 . -12) (undo-tree-id3386 . -12) (undo-tree-id3387 . -12) (undo-tree-id3388 . -12) (undo-tree-id3389 . -12) (undo-tree-id3390 . -12) (undo-tree-id3391 . -12) (undo-tree-id3392 . -12) (undo-tree-id3393 . -12) (undo-tree-id3394 . -12) (undo-tree-id3395 . -12) (undo-tree-id3396 . -12) (undo-tree-id3397 . -12) (undo-tree-id3398 . -12) (undo-tree-id3399 . -12) (undo-tree-id3400 . -12) (undo-tree-id3401 . -12) (undo-tree-id3402 . -12) (undo-tree-id3403 . -12) (undo-tree-id3404 . -12) (undo-tree-id3405 . -12) (undo-tree-id3406 . -12) (undo-tree-id3407 . -12) (undo-tree-id3408 . -12) (undo-tree-id3409 . -12) (undo-tree-id3410 . -12) (undo-tree-id3411 . -12) (undo-tree-id3412 . -12) (undo-tree-id3413 . -12) (undo-tree-id3414 . -12) (undo-tree-id3415 . -12) (undo-tree-id3416 . -12) (undo-tree-id3417 . -12) (undo-tree-id3418 . -12) (undo-tree-id3419 . -12) (undo-tree-id3420 . -12) (undo-tree-id3421 . -12) (undo-tree-id3422 . -12) (undo-tree-id3423 . -12) (undo-tree-id3424 . -12) (undo-tree-id3425 . -12) (undo-tree-id3426 . -12) (undo-tree-id3427 . -12) (undo-tree-id3428 . -12) (undo-tree-id3429 . -12) (undo-tree-id3430 . -12) (undo-tree-id3431 . -12) (undo-tree-id3432 . -12) (undo-tree-id3433 . -12) (undo-tree-id3434 . -12) (undo-tree-id3435 . -12) (undo-tree-id3436 . -12) (undo-tree-id3437 . -12) (undo-tree-id3438 . -12) (undo-tree-id3439 . -12) (undo-tree-id3440 . -12) (undo-tree-id3441 . -12) (undo-tree-id3442 . -12) (undo-tree-id3443 . -12) (undo-tree-id3444 . -12) (undo-tree-id3445 . -12) (undo-tree-id3446 . -12) (undo-tree-id3447 . -12) (undo-tree-id3448 . -12) (undo-tree-id3449 . -12) (undo-tree-id3450 . -12) (undo-tree-id3451 . -12) (undo-tree-id3452 . -12) (undo-tree-id3453 . -12) (undo-tree-id3454 . -12) (undo-tree-id3455 . -12) (undo-tree-id3456 . -12) (undo-tree-id3457 . -12) (undo-tree-id3458 . -12) (undo-tree-id3459 . -12) (undo-tree-id3460 . -12) (undo-tree-id3461 . -12) (undo-tree-id3462 . -12) (undo-tree-id3463 . -12) (undo-tree-id3464 . -12) (undo-tree-id3465 . -12) (undo-tree-id3466 . -12) (undo-tree-id3467 . -12) (undo-tree-id3468 . -12) (undo-tree-id3469 . -12) (undo-tree-id3470 . -12) (undo-tree-id3471 . -12) (undo-tree-id3472 . -12) (undo-tree-id3473 . -12) (undo-tree-id3474 . -12) (undo-tree-id3475 . -12) (undo-tree-id3476 . -12) (undo-tree-id3477 . -12) (undo-tree-id3478 . -12) (undo-tree-id3479 . -12) (undo-tree-id3480 . -12) (undo-tree-id3481 . -12) (undo-tree-id3482 . -12) (undo-tree-id3483 . -12) (undo-tree-id3484 . -12) (undo-tree-id3485 . -12) (undo-tree-id3486 . -12) (undo-tree-id3487 . -12) (undo-tree-id3488 . -12) (undo-tree-id3489 . -12) (undo-tree-id3490 . -12) (undo-tree-id3491 . -12) (undo-tree-id3492 . -12) (undo-tree-id3493 . -12) (undo-tree-id3494 . -12) (undo-tree-id3495 . -12) (undo-tree-id3496 . -12) (undo-tree-id3497 . -12) (undo-tree-id3498 . -12) (undo-tree-id3499 . -12) (undo-tree-id3500 . -12) (undo-tree-id3501 . -12) (undo-tree-id3502 . -12) (undo-tree-id3503 . -12) (undo-tree-id3504 . -12) (undo-tree-id3505 . -12) (undo-tree-id3506 . -12) (undo-tree-id3507 . -12) (undo-tree-id3508 . -12) (undo-tree-id3509 . -12) (undo-tree-id3510 . -12) (undo-tree-id3511 . -12) (undo-tree-id3512 . -12) (undo-tree-id3513 . -12) (undo-tree-id3514 . -12) (undo-tree-id3515 . -12) (undo-tree-id3516 . -12) (undo-tree-id3517 . -12) (undo-tree-id3518 . -12) (undo-tree-id3519 . -12) (undo-tree-id3520 . -12) (undo-tree-id3521 . -12) (undo-tree-id3522 . -12) (undo-tree-id3523 . -12) (undo-tree-id3524 . -12) (undo-tree-id3525 . -12) (undo-tree-id3526 . -12) (undo-tree-id3527 . -12) (undo-tree-id3528 . -12) (undo-tree-id3529 . -12) (undo-tree-id3530 . -12) (undo-tree-id3531 . -12) (undo-tree-id3532 . -12) (undo-tree-id3533 . -12) (undo-tree-id3534 . -12) (undo-tree-id3535 . -12) (undo-tree-id3536 . -12) (undo-tree-id3537 . -12) (undo-tree-id3538 . -12) (undo-tree-id3539 . -12) (undo-tree-id3540 . -12) (undo-tree-id3541 . -12) (undo-tree-id3542 . -12) (undo-tree-id3543 . -12) (undo-tree-id3544 . -12) (undo-tree-id3545 . -12) (undo-tree-id3546 . -12) (undo-tree-id3547 . -12) (undo-tree-id3548 . -12) (undo-tree-id3549 . -12) (undo-tree-id3550 . -12) (undo-tree-id3551 . -12) (undo-tree-id3552 . -12) (undo-tree-id3553 . -12) (undo-tree-id3554 . -12) (undo-tree-id3555 . -12) (undo-tree-id3556 . -12) (undo-tree-id3557 . -12) (undo-tree-id3558 . -12) (undo-tree-id3559 . -12) (undo-tree-id3560 . -12) (undo-tree-id3561 . -12) (undo-tree-id3562 . -12) (undo-tree-id3563 . -12) (undo-tree-id3564 . -12) (undo-tree-id3565 . -12) (undo-tree-id3566 . -12) (undo-tree-id3567 . -12) (undo-tree-id3568 . -12) (undo-tree-id3569 . -12) (undo-tree-id3570 . -12) (undo-tree-id3571 . -12) (undo-tree-id3572 . -12) (undo-tree-id3573 . -12) (undo-tree-id3574 . -12) (undo-tree-id3575 . -12) (undo-tree-id3576 . -12) (undo-tree-id3577 . -12) (undo-tree-id3578 . -12) (undo-tree-id3579 . -12) (undo-tree-id3580 . -12) (undo-tree-id3581 . -12) (undo-tree-id3582 . -12) (undo-tree-id3583 . -12) (undo-tree-id3584 . -11) (undo-tree-id3585 . -11) (undo-tree-id3586 . -11) (undo-tree-id3587 . -11) (undo-tree-id3588 . -11) (undo-tree-id3589 . -11) (undo-tree-id3590 . -11) (undo-tree-id3591 . -11) (undo-tree-id3592 . -11) (undo-tree-id3593 . -11) (undo-tree-id3594 . -11) (undo-tree-id3595 . -11) (undo-tree-id3596 . -11) (undo-tree-id3597 . -11) (undo-tree-id3598 . -11) (undo-tree-id3599 . -11) (undo-tree-id3600 . -11) (undo-tree-id3601 . -11) (undo-tree-id3602 . -11) (undo-tree-id3603 . -11) (undo-tree-id3604 . -11) (undo-tree-id3605 . -11) (undo-tree-id3606 . -11) (undo-tree-id3607 . -11) (undo-tree-id3608 . -11) (undo-tree-id3609 . -11) (undo-tree-id3610 . -11) (undo-tree-id3611 . -11) (undo-tree-id3612 . -11) (undo-tree-id3613 . -11) (undo-tree-id3614 . -11) (undo-tree-id3615 . -11) (undo-tree-id3616 . -11) (undo-tree-id3617 . -11) (undo-tree-id3618 . -11) (undo-tree-id3619 . -11) (undo-tree-id3620 . -11) (undo-tree-id3621 . -11) (undo-tree-id3622 . -11) (undo-tree-id3623 . -11) (undo-tree-id3624 . -11) (undo-tree-id3625 . -11) (undo-tree-id3626 . -11) (undo-tree-id3627 . -11) (undo-tree-id3628 . -11) (undo-tree-id3629 . -11) (undo-tree-id3630 . -11) (undo-tree-id3631 . -11) (undo-tree-id3632 . -11) (undo-tree-id3633 . -11) (undo-tree-id3634 . -11) (undo-tree-id3635 . -11) (undo-tree-id3636 . -11) (undo-tree-id3637 . -11)) nil (26026 32813 157612 0) 0 nil])
([nil nil ((816 . 822) (#("t" 0 1 (fontified t)) . -816) (undo-tree-id8949 . -1) (#("o" 0 1 (fontified t)) . -817) (undo-tree-id8950 . -1) (#("L" 0 1 (fontified t)) . -818) (undo-tree-id8951 . -1) 819 (810 . 819) (t 26026 32813 170548 912000)) nil (26026 33141 399523 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -807) (undo-tree-id8929 . -1) (undo-tree-id8930 . -1) (#("e" 0 1 (fontified t)) . -808) (undo-tree-id8931 . -1) (undo-tree-id8932 . -1) (#("t" 0 1 (fontified t)) . -809) (undo-tree-id8933 . -1) (undo-tree-id8934 . -1) 810 (807 . 810) (#("h" 0 1 (fontified t)) . -807) (undo-tree-id8935 . -1) (undo-tree-id8936 . -1) (#("a" 0 1 (fontified t)) . -808) (undo-tree-id8937 . -1) (undo-tree-id8938 . -1) 809 (807 . 809) (#("n" 0 1 (fontified t)) . -807) (undo-tree-id8939 . -1) (undo-tree-id8940 . -1) (#("e" 0 1 (fontified t)) . -808) (undo-tree-id8941 . -1) (undo-tree-id8942 . -1) 809 (807 . 809) (#("getSecondToLast" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 14 (fontified t) 14 15 (fontified t)) . 807) (undo-tree-id8943 . -14) (undo-tree-id8944 . -2) (undo-tree-id8945 . -2) (undo-tree-id8946 . -2) (undo-tree-id8947 . -14) (undo-tree-id8948 . -14)) nil (26026 33141 399518 0) 0 nil])
([nil nil ((807 . 810) (t 26026 33141 409214 244000)) nil (26026 33659 527066 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 807)) nil (26026 33659 527066 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 807) (undo-tree-id13249 . -1)) nil (26026 33659 527066 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 807)) nil (26026 33659 527065 0) 0 nil])
([nil nil ((#("        // hitta näst sista noden
        public Node<E> getSecondToLast() {
            if (previous == firstNode) {
                return null;
            }
            return previous;
        }
" 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (fontified t c-is-sws t) 35 42 (fontified t c-is-sws t) 42 43 (face font-lock-keyword-face fontified t c-is-sws t) 43 44 (face font-lock-keyword-face fontified t) 44 45 (face font-lock-keyword-face fontified t) 45 46 (face font-lock-keyword-face fontified t) 46 47 (face font-lock-keyword-face fontified t) 47 48 (face font-lock-keyword-face fontified t) 48 49 (fontified t c-is-sws t) 49 50 (face font-lock-type-face fontified t c-is-sws t) 50 51 (face font-lock-type-face fontified t) 51 52 (face font-lock-type-face fontified t) 52 53 (face font-lock-type-face fontified t) 53 54 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 54 55 (face font-lock-type-face fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 56 57 (fontified t) 57 58 (face font-lock-function-name-face fontified t) 58 59 (face font-lock-function-name-face fontified t) 59 60 (face font-lock-function-name-face fontified t) 60 61 (face font-lock-function-name-face fontified t) 61 72 (face font-lock-function-name-face fontified t) 72 73 (face (rainbow-delimiters-depth-3-face) fontified t) 73 74 (face (rainbow-delimiters-depth-3-face) fontified t) 74 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-3-face) fontified t) 76 77 (fontified t) 77 89 (fontified t) 89 90 (face font-lock-keyword-face fontified t) 90 91 (face font-lock-keyword-face fontified t) 91 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-4-face) fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 104 (fontified t) 104 105 (fontified t) 105 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-4-face) fontified t) 115 116 (fontified t) 116 117 (face (rainbow-delimiters-depth-4-face) fontified t) 117 118 (fontified t) 118 134 (fontified t) 134 135 (face font-lock-keyword-face fontified t) 135 136 (face font-lock-keyword-face fontified t) 136 137 (face font-lock-keyword-face fontified t) 137 138 (face font-lock-keyword-face fontified t) 138 140 (face font-lock-keyword-face fontified t) 140 141 (fontified t) 141 142 (face font-lock-constant-face fontified t) 142 143 (face font-lock-constant-face fontified t) 143 144 (face font-lock-constant-face fontified t) 144 145 (face font-lock-constant-face fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 159 (fontified t) 159 160 (face (rainbow-delimiters-depth-4-face) fontified t) 160 161 (fontified t) 161 173 (fontified t) 173 174 (face font-lock-keyword-face fontified t) 174 175 (face font-lock-keyword-face fontified t) 175 176 (face font-lock-keyword-face fontified t) 176 177 (face font-lock-keyword-face fontified t) 177 178 (face font-lock-keyword-face fontified t) 178 179 (face font-lock-keyword-face fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 198 (fontified t) 198 199 (face (rainbow-delimiters-depth-3-face) fontified t) 199 200 (fontified t)) . 2862) (undo-tree-id12771 . -199) (undo-tree-id12772 . -199) (undo-tree-id12773 . -23) (undo-tree-id12774 . -199) (undo-tree-id12775 . -190) (undo-tree-id12776 . -190) (undo-tree-id12777 . -190) (undo-tree-id12778 . -190) (undo-tree-id12779 . -190) (undo-tree-id12780 . -34) (undo-tree-id12781 . -34) (undo-tree-id12782 . -199) (undo-tree-id12783 . -56) (undo-tree-id12784 . -56) (undo-tree-id12785 . -56) (undo-tree-id12786 . -56) (undo-tree-id12787 . -56) (undo-tree-id12788 . -56) (undo-tree-id12789 . -56) (undo-tree-id12790 . -56) (undo-tree-id12791 . -56) (undo-tree-id12792 . -56) (undo-tree-id12793 . -56) (undo-tree-id12794 . -56) (undo-tree-id12795 . -56) (undo-tree-id12796 . -56) (undo-tree-id12797 . -56) (undo-tree-id12798 . -56) (undo-tree-id12799 . -56) (undo-tree-id12800 . -56) (undo-tree-id12801 . -56) (undo-tree-id12802 . -56) (undo-tree-id12803 . -56) (undo-tree-id12804 . -56) (undo-tree-id12805 . -56) (undo-tree-id12806 . -56) (undo-tree-id12807 . -56) (undo-tree-id12808 . -56) (undo-tree-id12809 . -56) (undo-tree-id12810 . -56) (undo-tree-id12811 . -56) (undo-tree-id12812 . -56) (undo-tree-id12813 . -56) (undo-tree-id12814 . -56) (undo-tree-id12815 . -56) (undo-tree-id12816 . -56) (undo-tree-id12817 . -56) (undo-tree-id12818 . -56) (undo-tree-id12819 . -56) (undo-tree-id12820 . -56) (undo-tree-id12821 . -56) (undo-tree-id12822 . -56) (undo-tree-id12823 . -56) (undo-tree-id12824 . -56) (undo-tree-id12825 . -56) (undo-tree-id12826 . -56) (undo-tree-id12827 . -56) (undo-tree-id12828 . -56) (undo-tree-id12829 . -56) (undo-tree-id12830 . -56) (undo-tree-id12831 . -56) (undo-tree-id12832 . -56) (undo-tree-id12833 . -56) (undo-tree-id12834 . -56) (undo-tree-id12835 . -56) (undo-tree-id12836 . -56) (undo-tree-id12837 . -56) (undo-tree-id12838 . -56) (undo-tree-id12839 . -56) (undo-tree-id12840 . -56) (undo-tree-id12841 . -56) (undo-tree-id12842 . -56) (undo-tree-id12843 . -56) (undo-tree-id12844 . -56) (undo-tree-id12845 . -56) (undo-tree-id12846 . -56) (undo-tree-id12847 . -56) (undo-tree-id12848 . -56) (undo-tree-id12849 . -56) (undo-tree-id12850 . -56) (undo-tree-id12851 . -56) (undo-tree-id12852 . -56) (undo-tree-id12853 . -56) (undo-tree-id12854 . -56) (undo-tree-id12855 . -56) (undo-tree-id12856 . -56) (undo-tree-id12857 . -56) (undo-tree-id12858 . -56) (undo-tree-id12859 . -56) (undo-tree-id12860 . -56) (undo-tree-id12861 . -56) (undo-tree-id12862 . -56) (undo-tree-id12863 . -56) (undo-tree-id12864 . -56) (undo-tree-id12865 . -56) (undo-tree-id12866 . -56) (undo-tree-id12867 . -56) (undo-tree-id12868 . -56) (undo-tree-id12869 . -56) (undo-tree-id12870 . -56) (undo-tree-id12871 . -56) (undo-tree-id12872 . -56) (undo-tree-id12873 . -56) (undo-tree-id12874 . -56) (undo-tree-id12875 . -56) (undo-tree-id12876 . -56) (undo-tree-id12877 . -56) (undo-tree-id12878 . -56) (undo-tree-id12879 . -56) (undo-tree-id12880 . -56) (undo-tree-id12881 . -56) (undo-tree-id12882 . -56) (undo-tree-id12883 . -56) (undo-tree-id12884 . -56) (undo-tree-id12885 . -56) (undo-tree-id12886 . -56) (undo-tree-id12887 . -56) (undo-tree-id12888 . -56) (undo-tree-id12889 . -56) (undo-tree-id12890 . -56) (undo-tree-id12891 . -56) (undo-tree-id12892 . -56) (undo-tree-id12893 . -56) (undo-tree-id12894 . -56) (undo-tree-id12895 . -56) (undo-tree-id12896 . -56) (undo-tree-id12897 . -56) (undo-tree-id12898 . -56) (undo-tree-id12899 . -56) (undo-tree-id12900 . -56) (undo-tree-id12901 . -56) (undo-tree-id12902 . -56) (undo-tree-id12903 . -56) (undo-tree-id12904 . -56) (undo-tree-id12905 . -56) (undo-tree-id12906 . -56) (undo-tree-id12907 . -56) (undo-tree-id12908 . -56) (undo-tree-id12909 . -56) (undo-tree-id12910 . -56) (undo-tree-id12911 . -56) (undo-tree-id12912 . -56) (undo-tree-id12913 . -56) (undo-tree-id12914 . -56) (undo-tree-id12915 . -56) (undo-tree-id12916 . -56) (undo-tree-id12917 . -56) (undo-tree-id12918 . -56) (undo-tree-id12919 . -56) (undo-tree-id12920 . -56) (undo-tree-id12921 . -56) (undo-tree-id12922 . -56) (undo-tree-id12923 . -56) (undo-tree-id12924 . -56) (undo-tree-id12925 . -56) (undo-tree-id12926 . -56) (undo-tree-id12927 . -56) (undo-tree-id12928 . -56) (undo-tree-id12929 . -56) (undo-tree-id12930 . -56) (undo-tree-id12931 . -56) (undo-tree-id12932 . -56) (undo-tree-id12933 . -56) (undo-tree-id12934 . -56) (undo-tree-id12935 . -56) (undo-tree-id12936 . -56) (undo-tree-id12937 . -56) (undo-tree-id12938 . -56) (undo-tree-id12939 . -56) (undo-tree-id12940 . -56) (undo-tree-id12941 . -56) (undo-tree-id12942 . -56) (undo-tree-id12943 . -56) (undo-tree-id12944 . -56) (undo-tree-id12945 . -56) (undo-tree-id12946 . -56) (undo-tree-id12947 . -56) (undo-tree-id12948 . -56) (undo-tree-id12949 . -56) (undo-tree-id12950 . -56) (undo-tree-id12951 . -56) (undo-tree-id12952 . -56) (undo-tree-id12953 . -56) (undo-tree-id12954 . -56) (undo-tree-id12955 . -56) (undo-tree-id12956 . -56) (undo-tree-id12957 . -56) (undo-tree-id12958 . -56) (undo-tree-id12959 . -56) (undo-tree-id12960 . -56) (undo-tree-id12961 . -56) (undo-tree-id12962 . -56) (undo-tree-id12963 . -56) (undo-tree-id12964 . -56) (undo-tree-id12965 . -56) (undo-tree-id12966 . -56) (undo-tree-id12967 . -56) (undo-tree-id12968 . -56) (undo-tree-id12969 . -56) (undo-tree-id12970 . -56) (undo-tree-id12971 . -56) (undo-tree-id12972 . -56) (undo-tree-id12973 . -56) (undo-tree-id12974 . -56) (undo-tree-id12975 . -56) (undo-tree-id12976 . -56) (undo-tree-id12977 . -56) (undo-tree-id12978 . -56) (undo-tree-id12979 . -56) (undo-tree-id12980 . -56) (undo-tree-id12981 . -56) (undo-tree-id12982 . -56) (undo-tree-id12983 . -56) (undo-tree-id12984 . -56) (undo-tree-id12985 . -56) (undo-tree-id12986 . -56) (undo-tree-id12987 . -56) (undo-tree-id12988 . -56) (undo-tree-id12989 . -56) (undo-tree-id12990 . -56) (undo-tree-id12991 . -56) (undo-tree-id12992 . -56) (undo-tree-id12993 . -56) (undo-tree-id12994 . -56) (undo-tree-id12995 . -56) (undo-tree-id12996 . -56) (undo-tree-id12997 . -56) (undo-tree-id12998 . -56) (undo-tree-id12999 . -57) (undo-tree-id13000 . -57) (undo-tree-id13001 . -57) (undo-tree-id13002 . -57) (undo-tree-id13003 . -57) (undo-tree-id13004 . -57) (undo-tree-id13005 . -57) (undo-tree-id13006 . -57) (undo-tree-id13007 . -57) (undo-tree-id13008 . -57) (undo-tree-id13009 . -57) (undo-tree-id13010 . -57) (undo-tree-id13011 . -57) (undo-tree-id13012 . -57) (undo-tree-id13013 . -57) (undo-tree-id13014 . -57) (undo-tree-id13015 . -57) (undo-tree-id13016 . -57) (undo-tree-id13017 . -57) (undo-tree-id13018 . -57) (undo-tree-id13019 . -57) (undo-tree-id13020 . -57) (undo-tree-id13021 . -57) (undo-tree-id13022 . -57) (undo-tree-id13023 . -57) (undo-tree-id13024 . -57) (undo-tree-id13025 . -57) (undo-tree-id13026 . -57) (undo-tree-id13027 . -57) (undo-tree-id13028 . -57) (undo-tree-id13029 . -57) (undo-tree-id13030 . -57) (undo-tree-id13031 . -57) (undo-tree-id13032 . -57) (undo-tree-id13033 . -57) (undo-tree-id13034 . -57) (undo-tree-id13035 . -57) (undo-tree-id13036 . -57) (undo-tree-id13037 . -57) (undo-tree-id13038 . -57) (undo-tree-id13039 . -57) (undo-tree-id13040 . -57) (undo-tree-id13041 . -57) (undo-tree-id13042 . -57) (undo-tree-id13043 . -57) (undo-tree-id13044 . -57) (undo-tree-id13045 . -57) (undo-tree-id13046 . -57) (undo-tree-id13047 . -57) (undo-tree-id13048 . -57) (undo-tree-id13049 . -57) (undo-tree-id13050 . -57) (undo-tree-id13051 . -57) (undo-tree-id13052 . -23) (undo-tree-id13053 . -23) (undo-tree-id13054 . -23) (undo-tree-id13055 . -23) (undo-tree-id13056 . -23) (undo-tree-id13057 . -23) (undo-tree-id13058 . -23) (undo-tree-id13059 . -23) (undo-tree-id13060 . -23) (undo-tree-id13061 . -23) (undo-tree-id13062 . -23) (undo-tree-id13063 . -23) (undo-tree-id13064 . -23) (undo-tree-id13065 . -23) (undo-tree-id13066 . -23) (undo-tree-id13067 . -23) (undo-tree-id13068 . -23) (undo-tree-id13069 . -23) (undo-tree-id13070 . -23) (undo-tree-id13071 . -23) (undo-tree-id13072 . -23) (undo-tree-id13073 . -23) (undo-tree-id13074 . -23) (undo-tree-id13075 . -23) (undo-tree-id13076 . -23) (undo-tree-id13077 . -23) (undo-tree-id13078 . -23) (undo-tree-id13079 . -23) (undo-tree-id13080 . -23) (undo-tree-id13081 . -23) (undo-tree-id13082 . -23) (undo-tree-id13083 . -23) (undo-tree-id13084 . -23) (undo-tree-id13085 . -23) (undo-tree-id13086 . -23) (undo-tree-id13087 . -23) (undo-tree-id13088 . -23) (undo-tree-id13089 . -23) (undo-tree-id13090 . -23) (undo-tree-id13091 . -23) (undo-tree-id13092 . -23) (undo-tree-id13093 . -23) (undo-tree-id13094 . -23) (undo-tree-id13095 . -23) (undo-tree-id13096 . -23) (undo-tree-id13097 . -23) (undo-tree-id13098 . -23) (undo-tree-id13099 . -23) (undo-tree-id13100 . -23) (undo-tree-id13101 . -23) (undo-tree-id13102 . -23) (undo-tree-id13103 . -23) (undo-tree-id13104 . -23) (undo-tree-id13105 . -23) (undo-tree-id13106 . -23) (undo-tree-id13107 . -23) (undo-tree-id13108 . -23) (undo-tree-id13109 . -23) (undo-tree-id13110 . -23) (undo-tree-id13111 . -23) (undo-tree-id13112 . -23) (undo-tree-id13113 . -23) (undo-tree-id13114 . -23) (undo-tree-id13115 . -23) (undo-tree-id13116 . -23) (undo-tree-id13117 . -23) (undo-tree-id13118 . -23) (undo-tree-id13119 . -23) (undo-tree-id13120 . -23) (undo-tree-id13121 . -23) (undo-tree-id13122 . -23) (undo-tree-id13123 . -23) (undo-tree-id13124 . -57) (undo-tree-id13125 . -57) (undo-tree-id13126 . -57) (undo-tree-id13127 . -57) (undo-tree-id13128 . -57) (undo-tree-id13129 . -57) (undo-tree-id13130 . -57) (undo-tree-id13131 . -57) (undo-tree-id13132 . -57) (undo-tree-id13133 . -57) (undo-tree-id13134 . -57) (undo-tree-id13135 . -57) (undo-tree-id13136 . -57) (undo-tree-id13137 . -57) (undo-tree-id13138 . -57) (undo-tree-id13139 . -57) (undo-tree-id13140 . -57) (undo-tree-id13141 . -57) (undo-tree-id13142 . -100) (undo-tree-id13143 . -100) (undo-tree-id13144 . -100) (undo-tree-id13145 . -100) (undo-tree-id13146 . -100) (undo-tree-id13147 . -100) (undo-tree-id13148 . -100) (undo-tree-id13149 . -100) (undo-tree-id13150 . -100) (undo-tree-id13151 . -100) (undo-tree-id13152 . -100) (undo-tree-id13153 . -100) (undo-tree-id13154 . -141) (undo-tree-id13155 . -141) (undo-tree-id13156 . -141) (undo-tree-id13157 . -141) (undo-tree-id13158 . -141) (undo-tree-id13159 . -141) (undo-tree-id13160 . -141) (undo-tree-id13161 . -141) (undo-tree-id13162 . -141) (undo-tree-id13163 . -141) (undo-tree-id13164 . -141) (undo-tree-id13165 . -141) (undo-tree-id13166 . -160) (undo-tree-id13167 . -160) (undo-tree-id13168 . -160) (undo-tree-id13169 . -160) (undo-tree-id13170 . -160) (undo-tree-id13171 . -160) (undo-tree-id13172 . -160) (undo-tree-id13173 . -160) (undo-tree-id13174 . -160) (undo-tree-id13175 . -160) (undo-tree-id13176 . -160) (undo-tree-id13177 . -160) (undo-tree-id13178 . -160) (undo-tree-id13179 . -184) (undo-tree-id13180 . -184) (undo-tree-id13181 . -184) (undo-tree-id13182 . -184) (undo-tree-id13183 . -184) (undo-tree-id13184 . -184) (undo-tree-id13185 . -184) (undo-tree-id13186 . -184) (undo-tree-id13187 . -184) (undo-tree-id13188 . -184) (undo-tree-id13189 . -184) (undo-tree-id13190 . -184) (undo-tree-id13191 . -184) (undo-tree-id13192 . -199) (undo-tree-id13193 . -199) (undo-tree-id13194 . -199) (undo-tree-id13195 . -199) (undo-tree-id13196 . -199) (undo-tree-id13197 . -199) (undo-tree-id13198 . -199) (undo-tree-id13199 . -199) (undo-tree-id13200 . -199) (undo-tree-id13201 . -199) (undo-tree-id13202 . -199) (undo-tree-id13203 . -199) (undo-tree-id13204 . -199) (undo-tree-id13205 . -190) (undo-tree-id13206 . -199) (undo-tree-id13207 . -199) (undo-tree-id13208 . -199) (undo-tree-id13209 . -199) (undo-tree-id13210 . -199) (undo-tree-id13211 . -199) (undo-tree-id13212 . -199) (undo-tree-id13213 . -199) (undo-tree-id13214 . -199) (undo-tree-id13215 . -199) (undo-tree-id13216 . -199) (undo-tree-id13217 . -199) (undo-tree-id13218 . -199) (undo-tree-id13219 . -199) (undo-tree-id13220 . -199) (undo-tree-id13221 . -199) (undo-tree-id13222 . -199) (undo-tree-id13223 . -199) (undo-tree-id13224 . -199) (undo-tree-id13225 . -199) (undo-tree-id13226 . -199) (undo-tree-id13227 . -199) (undo-tree-id13228 . -199) (undo-tree-id13229 . -199) (undo-tree-id13230 . -199) (undo-tree-id13231 . -199) (undo-tree-id13232 . -199) (undo-tree-id13233 . -199) (undo-tree-id13234 . -199) (undo-tree-id13235 . -199) (undo-tree-id13236 . -199) (undo-tree-id13237 . -199) (undo-tree-id13238 . -199) (undo-tree-id13239 . -199) (undo-tree-id13240 . -199) (undo-tree-id13241 . -199) (undo-tree-id13242 . -199) (undo-tree-id13243 . -199) (undo-tree-id13244 . -199) (undo-tree-id13245 . -199) (undo-tree-id13246 . -199) (undo-tree-id13247 . -199) (undo-tree-id13248 . -200) 3061) nil (26026 33659 527058 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2861) (undo-tree-id12295 . -1) (undo-tree-id12296 . -1) (undo-tree-id12297 . -1) (undo-tree-id12298 . -1) (undo-tree-id12299 . -1) (undo-tree-id12300 . -1) (undo-tree-id12301 . -1) (undo-tree-id12302 . -1) (undo-tree-id12303 . -1) (undo-tree-id12304 . -1) (undo-tree-id12305 . -1) (undo-tree-id12306 . -1) (undo-tree-id12307 . -1) (undo-tree-id12308 . -1) (undo-tree-id12309 . -1) (undo-tree-id12310 . -1) (undo-tree-id12311 . -1) (undo-tree-id12312 . -1) (undo-tree-id12313 . -1) (undo-tree-id12314 . -1) (undo-tree-id12315 . -1) (undo-tree-id12316 . -1) (undo-tree-id12317 . -1) (undo-tree-id12318 . -1) (undo-tree-id12319 . -1) (undo-tree-id12320 . -1) (undo-tree-id12321 . -1) (undo-tree-id12322 . -1) (undo-tree-id12323 . -1) (undo-tree-id12324 . -1) (undo-tree-id12325 . -1) (undo-tree-id12326 . -1) (undo-tree-id12327 . -1) (undo-tree-id12328 . -1) (undo-tree-id12329 . -1) (undo-tree-id12330 . -1) (undo-tree-id12331 . -1) (undo-tree-id12332 . -1) (undo-tree-id12333 . -1) (undo-tree-id12334 . -1) (undo-tree-id12335 . -1) (undo-tree-id12336 . -1) (undo-tree-id12337 . -1) (undo-tree-id12338 . -1) (undo-tree-id12339 . -1) (undo-tree-id12340 . -1) (undo-tree-id12341 . -1) (undo-tree-id12342 . -1) (undo-tree-id12343 . -1) (undo-tree-id12344 . -1) (undo-tree-id12345 . -1) (undo-tree-id12346 . -1) (undo-tree-id12347 . -1) (undo-tree-id12348 . -1) (undo-tree-id12349 . -1) (undo-tree-id12350 . -1) (undo-tree-id12351 . -1) (undo-tree-id12352 . -1) (undo-tree-id12353 . -1) (undo-tree-id12354 . -1) (undo-tree-id12355 . -1) (undo-tree-id12356 . -1) (undo-tree-id12357 . -1) (undo-tree-id12358 . -1) (undo-tree-id12359 . -1) (undo-tree-id12360 . -1) (undo-tree-id12361 . -1) (undo-tree-id12362 . -1) (undo-tree-id12363 . -1) (undo-tree-id12364 . -1) (undo-tree-id12365 . -1) (undo-tree-id12366 . -1) (undo-tree-id12367 . -1) (undo-tree-id12368 . -1) (undo-tree-id12369 . -1) (undo-tree-id12370 . -1) (undo-tree-id12371 . -1) (undo-tree-id12372 . -1) (undo-tree-id12373 . -1) (undo-tree-id12374 . -1) (undo-tree-id12375 . -1) (undo-tree-id12376 . -1) (undo-tree-id12377 . -1) (undo-tree-id12378 . -1) (undo-tree-id12379 . -1) (undo-tree-id12380 . -1) (undo-tree-id12381 . -1) (undo-tree-id12382 . -1) (undo-tree-id12383 . -1) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) (undo-tree-id12498 . -1) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) (undo-tree-id12583 . -1) (undo-tree-id12584 . -1) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (undo-tree-id12594 . -1) (undo-tree-id12595 . -1) (undo-tree-id12596 . -1) (undo-tree-id12597 . -1) (undo-tree-id12598 . -1) (undo-tree-id12599 . -1) (undo-tree-id12600 . -1) (undo-tree-id12601 . -1) (undo-tree-id12602 . -1) (undo-tree-id12603 . -1) (undo-tree-id12604 . -1) (undo-tree-id12605 . -1) (undo-tree-id12606 . -1) (undo-tree-id12607 . -1) (undo-tree-id12608 . -1) (undo-tree-id12609 . -1) (undo-tree-id12610 . -1) (undo-tree-id12611 . -1) (undo-tree-id12612 . -1) (undo-tree-id12613 . -1) (undo-tree-id12614 . -1) (undo-tree-id12615 . -1) (undo-tree-id12616 . -1) (undo-tree-id12617 . -1) (undo-tree-id12618 . -1) (undo-tree-id12619 . -1) (undo-tree-id12620 . -1) (undo-tree-id12621 . -1) (undo-tree-id12622 . -1) (undo-tree-id12623 . -1) (undo-tree-id12624 . -1) (undo-tree-id12625 . -1) (undo-tree-id12626 . -1) (undo-tree-id12627 . -1) (undo-tree-id12628 . -1) (undo-tree-id12629 . -1) (undo-tree-id12630 . -1) (undo-tree-id12631 . -1) (undo-tree-id12632 . -1) (undo-tree-id12633 . -1) (undo-tree-id12634 . -1) (undo-tree-id12635 . -1) (undo-tree-id12636 . -1) (undo-tree-id12637 . -1) (undo-tree-id12638 . -1) (undo-tree-id12639 . -1) (undo-tree-id12640 . -1) (undo-tree-id12641 . -1) (undo-tree-id12642 . -1) (undo-tree-id12643 . -1) (undo-tree-id12644 . -1) (undo-tree-id12645 . -1) (undo-tree-id12646 . -1) (undo-tree-id12647 . -1) (undo-tree-id12648 . -1) (undo-tree-id12649 . -1) (undo-tree-id12650 . -1) (undo-tree-id12651 . -1) (undo-tree-id12652 . -1) (undo-tree-id12653 . -1) (undo-tree-id12654 . -1) (undo-tree-id12655 . -1) (undo-tree-id12656 . -1) (undo-tree-id12657 . -1) (undo-tree-id12658 . -1) (undo-tree-id12659 . -1) (undo-tree-id12660 . -1) (undo-tree-id12661 . -1) (undo-tree-id12662 . -1) (undo-tree-id12663 . -1) (undo-tree-id12664 . -1) (undo-tree-id12665 . -1) (undo-tree-id12666 . -1) (undo-tree-id12667 . -1) (undo-tree-id12668 . -1) (undo-tree-id12669 . -1) (undo-tree-id12670 . -1) (undo-tree-id12671 . -1) (undo-tree-id12672 . -1) (undo-tree-id12673 . -1) (undo-tree-id12674 . -1) (undo-tree-id12675 . -1) (undo-tree-id12676 . -1) (undo-tree-id12677 . -1) (undo-tree-id12678 . -1) (undo-tree-id12679 . -1) (undo-tree-id12680 . -1) (undo-tree-id12681 . -1) (undo-tree-id12682 . -1) (undo-tree-id12683 . -1) (undo-tree-id12684 . -1) (undo-tree-id12685 . -1) (undo-tree-id12686 . -1) (undo-tree-id12687 . -1) (undo-tree-id12688 . -1) (undo-tree-id12689 . -1) (undo-tree-id12690 . -1) (undo-tree-id12691 . -1) (undo-tree-id12692 . -1) (undo-tree-id12693 . -1) (undo-tree-id12694 . -1) (undo-tree-id12695 . -1) (undo-tree-id12696 . -1) (undo-tree-id12697 . -1) (undo-tree-id12698 . -1) (undo-tree-id12699 . -1) (undo-tree-id12700 . -1) (undo-tree-id12701 . -1) (undo-tree-id12702 . -1) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (undo-tree-id12737 . -1) (undo-tree-id12738 . -1) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1)) nil (26026 33659 526898 0) 0 nil])
([nil nil ((#("        private Node<E> previous = firstNode;
" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t rear-nonsticky t) 8 9 (face font-lock-keyword-face fontified t) 9 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 20 (face font-lock-type-face fontified t) 20 21 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 21 22 (face font-lock-type-face fontified t) 22 23 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 23 24 (fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 29 (face font-lock-variable-name-face fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (face font-lock-variable-name-face fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 34 (fontified t) 34 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t)) . 2465) (undo-tree-id12281 . -45) (undo-tree-id12282 . -46) (undo-tree-id12283 . -46) (undo-tree-id12284 . -46) (undo-tree-id12285 . -46) (undo-tree-id12286 . -46) (undo-tree-id12287 . -46) (undo-tree-id12288 . -46) (undo-tree-id12289 . -46) (undo-tree-id12290 . -46) (undo-tree-id12291 . -46) (undo-tree-id12292 . -46) (undo-tree-id12293 . -46) (undo-tree-id12294 . -46)) nil (26026 33659 526740 0) 0 nil])
([nil nil ((#("            previous = current;
" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t)) . 2708) (undo-tree-id12267 . -31) (undo-tree-id12268 . -32) (undo-tree-id12269 . -32) (undo-tree-id12270 . -32) (undo-tree-id12271 . -32) (undo-tree-id12272 . -32) (undo-tree-id12273 . -32) (undo-tree-id12274 . -32) (undo-tree-id12275 . -32) (undo-tree-id12276 . -32) (undo-tree-id12277 . -32) (undo-tree-id12278 . -32) (undo-tree-id12279 . -32) (undo-tree-id12280 . -32)) nil (26026 33659 526735 0) 0 nil])
([nil nil ((#("            iterator().
" 0 1 (c-in-sws t c-is-sws t fontified t) 1 12 (c-in-sws t c-is-sws t fontified t) 12 13 (fontified t c-is-sws t) 13 19 (fontified t) 19 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-4-face) fontified t) 21 22 (face (rainbow-delimiters-depth-4-face) fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 784) (undo-tree-id12182 . -23) (undo-tree-id12183 . 1) (undo-tree-id12184 . 1) (undo-tree-id12185 . -23) (undo-tree-id12186 . -23) (undo-tree-id12187 . -23) (undo-tree-id12188 . -23) (undo-tree-id12189 . -23) (undo-tree-id12190 . -8) (undo-tree-id12191 . -24) (undo-tree-id12192 . -24) (undo-tree-id12193 . -24) (undo-tree-id12194 . -24) (undo-tree-id12195 . -24) (undo-tree-id12196 . -24) (undo-tree-id12197 . -24) (undo-tree-id12198 . -24) (undo-tree-id12199 . -24) (undo-tree-id12200 . -24) (undo-tree-id12201 . -24) (undo-tree-id12202 . -24) (undo-tree-id12203 . -24) (undo-tree-id12204 . -8) (undo-tree-id12205 . -8) (undo-tree-id12206 . -8) (undo-tree-id12207 . -8) (undo-tree-id12208 . -8) (undo-tree-id12209 . -8) (undo-tree-id12210 . -8) (undo-tree-id12211 . -8) (undo-tree-id12212 . -8) (undo-tree-id12213 . -8) (undo-tree-id12214 . -8) (undo-tree-id12215 . -8) (undo-tree-id12216 . -8) (undo-tree-id12217 . -8) (undo-tree-id12218 . -8) (undo-tree-id12219 . -8) (undo-tree-id12220 . -8) (undo-tree-id12221 . -8) (undo-tree-id12222 . -8) (undo-tree-id12223 . -8) (undo-tree-id12224 . -8) (undo-tree-id12225 . -8) (undo-tree-id12226 . -8) (undo-tree-id12227 . -8) (undo-tree-id12228 . -8) (undo-tree-id12229 . -8) (undo-tree-id12230 . -8) (undo-tree-id12231 . -8) (undo-tree-id12232 . -8) (undo-tree-id12233 . -8) (undo-tree-id12234 . -8) (undo-tree-id12235 . -8) (undo-tree-id12236 . -8) (undo-tree-id12237 . -8) (undo-tree-id12238 . -8) (undo-tree-id12239 . -8) (undo-tree-id12240 . -8) (undo-tree-id12241 . -8) (undo-tree-id12242 . -8) (undo-tree-id12243 . -8) (undo-tree-id12244 . -8) (undo-tree-id12245 . -8) (undo-tree-id12246 . -8) (undo-tree-id12247 . -8) (undo-tree-id12248 . -8) (undo-tree-id12249 . -8) (undo-tree-id12250 . -8) (undo-tree-id12251 . -8) (undo-tree-id12252 . -8) (undo-tree-id12253 . -8) (undo-tree-id12254 . -8) (undo-tree-id12255 . -8) (undo-tree-id12256 . -8) (undo-tree-id12257 . -8) (undo-tree-id12258 . -8) (undo-tree-id12259 . -8) (undo-tree-id12260 . -8) (undo-tree-id12261 . -8) (undo-tree-id12262 . -8) (undo-tree-id12263 . -8) (undo-tree-id12264 . -8) (undo-tree-id12265 . -8) (undo-tree-id12266 . -24) 792) nil (26026 33659 526729 0) 0 nil])
([nil nil ((#("            " 0 1 (c-is-sws t fontified t) 1 12 (c-is-sws t c-in-sws t fontified t)) . -784) (undo-tree-id12128 . -12) (undo-tree-id12129 . -12) (undo-tree-id12130 . -12) (undo-tree-id12131 . -12) (undo-tree-id12132 . -12) (undo-tree-id12133 . -12) (undo-tree-id12134 . -12) (undo-tree-id12135 . -12) (undo-tree-id12136 . -12) (undo-tree-id12137 . -12) (undo-tree-id12138 . -12) (undo-tree-id12139 . -12) (undo-tree-id12140 . -12) (undo-tree-id12141 . -12) (undo-tree-id12142 . -12) (undo-tree-id12143 . -12) (undo-tree-id12144 . -12) (undo-tree-id12145 . -12) (undo-tree-id12146 . -12) (undo-tree-id12147 . -12) (undo-tree-id12148 . -12) (undo-tree-id12149 . -12) (undo-tree-id12150 . -12) (undo-tree-id12151 . -12) (undo-tree-id12152 . -12) (undo-tree-id12153 . -12) (undo-tree-id12154 . -12) (undo-tree-id12155 . -12) (undo-tree-id12156 . -12) (undo-tree-id12157 . -12) (undo-tree-id12158 . -12) (undo-tree-id12159 . -12) (undo-tree-id12160 . -12) (undo-tree-id12161 . -12) (undo-tree-id12162 . -12) (undo-tree-id12163 . -12) (undo-tree-id12164 . -12) (undo-tree-id12165 . -12) (undo-tree-id12166 . -12) (undo-tree-id12167 . -12) (undo-tree-id12168 . -12) (undo-tree-id12169 . -12) (undo-tree-id12170 . -12) (undo-tree-id12171 . -12) (undo-tree-id12172 . -12) (undo-tree-id12173 . -12) (undo-tree-id12174 . -12) (undo-tree-id12175 . -12) (undo-tree-id12176 . -12) (undo-tree-id12177 . -12) (undo-tree-id12178 . -12) (undo-tree-id12179 . -12) (undo-tree-id12180 . -12) (undo-tree-id12181 . -12) 796 (783 . 796) 735) nil (26026 33659 526699 0) 0 nil])
([nil nil ((1006 . 1021) (#("g" 0 1 (fontified t)) . -1006) (undo-tree-id12121 . -1) (undo-tree-id12122 . -1) 1007 (1006 . 1007) (999 . 1006) (#("u" 0 1 (fontified t)) . -999) (undo-tree-id12123 . -1) (undo-tree-id12124 . -1) (#("b" 0 1 (fontified t)) . -1000) (undo-tree-id12125 . -1) (undo-tree-id12126 . -1) 1001 (998 . 1001) (994 . 998) (#("    " 0 4 (fontified nil)) . 993) (undo-tree-id12127 . -4) (997 . 998) (992 . 997) 987) nil (26026 33659 526680 0) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 992) (undo-tree-id11412 . -5) (undo-tree-id11413 . -5) (undo-tree-id11414 . -5) (undo-tree-id11415 . -5) (undo-tree-id11416 . -5) (undo-tree-id11417 . -5) (undo-tree-id11418 . -5) (undo-tree-id11419 . -5) (undo-tree-id11420 . -5) (undo-tree-id11421 . -5) (undo-tree-id11422 . -5) (undo-tree-id11423 . -5) (undo-tree-id11424 . -5) (undo-tree-id11425 . -5) (undo-tree-id11426 . -5) (undo-tree-id11427 . -5) (undo-tree-id11428 . -5) (undo-tree-id11429 . -5) (undo-tree-id11430 . -5) (undo-tree-id11431 . -5) (undo-tree-id11432 . -5) (undo-tree-id11433 . -5) (undo-tree-id11434 . -5) (undo-tree-id11435 . -5) (undo-tree-id11436 . -5) (undo-tree-id11437 . -5) (undo-tree-id11438 . -5) (undo-tree-id11439 . -5) (undo-tree-id11440 . -5) (undo-tree-id11441 . -5) (undo-tree-id11442 . -5) (undo-tree-id11443 . -5) (undo-tree-id11444 . -5) (undo-tree-id11445 . -5) (undo-tree-id11446 . -5) (undo-tree-id11447 . -5) (undo-tree-id11448 . -5) (undo-tree-id11449 . -5) (undo-tree-id11450 . -5) (undo-tree-id11451 . -5) (undo-tree-id11452 . -5) (undo-tree-id11453 . -5) (undo-tree-id11454 . -5) (undo-tree-id11455 . -5) (undo-tree-id11456 . -5) (undo-tree-id11457 . -5) (undo-tree-id11458 . -5) (undo-tree-id11459 . -5) (undo-tree-id11460 . -5) (undo-tree-id11461 . -5) (undo-tree-id11462 . -5) (undo-tree-id11463 . -5) (undo-tree-id11464 . -5) (undo-tree-id11465 . -5) (undo-tree-id11466 . -5) (undo-tree-id11467 . -5) (undo-tree-id11468 . -5) (undo-tree-id11469 . -5) (undo-tree-id11470 . -5) (undo-tree-id11471 . -5) (undo-tree-id11472 . -5) (undo-tree-id11473 . -5) (undo-tree-id11474 . -5) (undo-tree-id11475 . -5) (undo-tree-id11476 . -5) (undo-tree-id11477 . -5) (undo-tree-id11478 . -5) (undo-tree-id11479 . -5) (undo-tree-id11480 . -5) (undo-tree-id11481 . -5) (undo-tree-id11482 . -5) (undo-tree-id11483 . -5) (undo-tree-id11484 . -5) (undo-tree-id11485 . -5) (undo-tree-id11486 . -5) (undo-tree-id11487 . -5) (undo-tree-id11488 . -5) (undo-tree-id11489 . -5) (undo-tree-id11490 . -5) (undo-tree-id11491 . -5) (undo-tree-id11492 . -5) (undo-tree-id11493 . -5) (undo-tree-id11494 . -5) (undo-tree-id11495 . -5) (undo-tree-id11496 . -5) (undo-tree-id11497 . -5) (undo-tree-id11498 . -5) (undo-tree-id11499 . -5) (undo-tree-id11500 . -5) (undo-tree-id11501 . -5) (undo-tree-id11502 . -5) (undo-tree-id11503 . -5) (undo-tree-id11504 . -5) (undo-tree-id11505 . -5) (undo-tree-id11506 . -5) (undo-tree-id11507 . -5) (undo-tree-id11508 . -5) (undo-tree-id11509 . -5) (undo-tree-id11510 . -5) (undo-tree-id11511 . -5) (undo-tree-id11512 . -5) (undo-tree-id11513 . -5) (undo-tree-id11514 . -5) (undo-tree-id11515 . -5) (undo-tree-id11516 . -5) (undo-tree-id11517 . -5) (undo-tree-id11518 . -5) (undo-tree-id11519 . -5) (undo-tree-id11520 . -5) (undo-tree-id11521 . -5) (undo-tree-id11522 . -5) (undo-tree-id11523 . -5) (undo-tree-id11524 . -5) (undo-tree-id11525 . -5) (undo-tree-id11526 . -5) (undo-tree-id11527 . -5) (undo-tree-id11528 . -5) (undo-tree-id11529 . -5) (undo-tree-id11530 . -5) (#("
" 0 1 (fontified nil)) . 997) (undo-tree-id11531 . -1) (undo-tree-id11532 . -1) (undo-tree-id11533 . -1) (undo-tree-id11534 . -1) (undo-tree-id11535 . -1) (undo-tree-id11536 . -1) (undo-tree-id11537 . -1) (undo-tree-id11538 . -1) (undo-tree-id11539 . -1) (undo-tree-id11540 . -1) (undo-tree-id11541 . -1) (undo-tree-id11542 . -1) (undo-tree-id11543 . -1) (undo-tree-id11544 . -1) (undo-tree-id11545 . -1) (undo-tree-id11546 . -1) (undo-tree-id11547 . -1) (undo-tree-id11548 . -1) (undo-tree-id11549 . -1) (undo-tree-id11550 . -1) (undo-tree-id11551 . -1) (undo-tree-id11552 . -1) (undo-tree-id11553 . -1) (undo-tree-id11554 . -1) (undo-tree-id11555 . -1) (undo-tree-id11556 . -1) (undo-tree-id11557 . -1) (undo-tree-id11558 . -1) (undo-tree-id11559 . -1) (undo-tree-id11560 . -1) (undo-tree-id11561 . -1) (undo-tree-id11562 . -1) (undo-tree-id11563 . -1) (undo-tree-id11564 . -1) (undo-tree-id11565 . -1) (undo-tree-id11566 . -1) (undo-tree-id11567 . -1) (undo-tree-id11568 . -1) (undo-tree-id11569 . -1) (undo-tree-id11570 . -1) (undo-tree-id11571 . -1) (undo-tree-id11572 . -1) (undo-tree-id11573 . -1) (undo-tree-id11574 . -1) (undo-tree-id11575 . -1) (undo-tree-id11576 . -1) (undo-tree-id11577 . -1) (undo-tree-id11578 . -1) (undo-tree-id11579 . -1) (undo-tree-id11580 . -1) (undo-tree-id11581 . -1) (undo-tree-id11582 . -1) (undo-tree-id11583 . -1) (undo-tree-id11584 . -1) (undo-tree-id11585 . -1) (undo-tree-id11586 . -1) (undo-tree-id11587 . -1) (undo-tree-id11588 . -1) (undo-tree-id11589 . -1) (undo-tree-id11590 . -1) (undo-tree-id11591 . -1) (undo-tree-id11592 . -1) (undo-tree-id11593 . -1) (undo-tree-id11594 . -1) (undo-tree-id11595 . -1) (undo-tree-id11596 . -1) (undo-tree-id11597 . -1) (undo-tree-id11598 . -1) (undo-tree-id11599 . -1) (undo-tree-id11600 . -1) (undo-tree-id11601 . -1) (undo-tree-id11602 . -1) (undo-tree-id11603 . -1) (undo-tree-id11604 . -1) (undo-tree-id11605 . -1) (undo-tree-id11606 . -1) (undo-tree-id11607 . -1) (undo-tree-id11608 . -1) (undo-tree-id11609 . -1) (undo-tree-id11610 . -1) (undo-tree-id11611 . -1) (undo-tree-id11612 . -1) (undo-tree-id11613 . -1) (undo-tree-id11614 . -1) (undo-tree-id11615 . -1) (undo-tree-id11616 . -1) (undo-tree-id11617 . -1) (undo-tree-id11618 . -1) (undo-tree-id11619 . -1) (undo-tree-id11620 . -1) (undo-tree-id11621 . -1) (undo-tree-id11622 . -1) (undo-tree-id11623 . -1) (undo-tree-id11624 . -1) (undo-tree-id11625 . -1) (undo-tree-id11626 . -1) (undo-tree-id11627 . -1) (undo-tree-id11628 . -1) (undo-tree-id11629 . -1) (undo-tree-id11630 . -1) (undo-tree-id11631 . -1) (undo-tree-id11632 . -1) (undo-tree-id11633 . -1) (undo-tree-id11634 . -1) (undo-tree-id11635 . -1) (undo-tree-id11636 . -1) (undo-tree-id11637 . -1) (undo-tree-id11638 . -1) (undo-tree-id11639 . -1) (undo-tree-id11640 . -1) (undo-tree-id11641 . -1) (undo-tree-id11642 . -1) (undo-tree-id11643 . -1) (undo-tree-id11644 . -1) (undo-tree-id11645 . -1) (undo-tree-id11646 . -1) (undo-tree-id11647 . -1) (undo-tree-id11648 . -1) (undo-tree-id11649 . -1) (993 . 997) (#("    " 0 4 (fontified nil)) . 994) (undo-tree-id11650 . -4) (undo-tree-id11651 . -4) (undo-tree-id11652 . -4) (undo-tree-id11653 . -4) (undo-tree-id11654 . -4) (undo-tree-id11655 . -4) (undo-tree-id11656 . -4) (undo-tree-id11657 . -4) (undo-tree-id11658 . -4) (undo-tree-id11659 . -4) (undo-tree-id11660 . -4) (undo-tree-id11661 . -4) (undo-tree-id11662 . -4) (undo-tree-id11663 . -4) (undo-tree-id11664 . -4) (undo-tree-id11665 . -4) (undo-tree-id11666 . -4) (undo-tree-id11667 . -4) (undo-tree-id11668 . -4) (undo-tree-id11669 . -4) (undo-tree-id11670 . -4) (undo-tree-id11671 . -4) (undo-tree-id11672 . -4) (undo-tree-id11673 . -4) (undo-tree-id11674 . -4) (undo-tree-id11675 . -4) (undo-tree-id11676 . -4) (undo-tree-id11677 . -4) (undo-tree-id11678 . -4) (undo-tree-id11679 . -4) (undo-tree-id11680 . -4) (undo-tree-id11681 . -4) (undo-tree-id11682 . -4) (undo-tree-id11683 . -4) (undo-tree-id11684 . -4) (undo-tree-id11685 . -4) (undo-tree-id11686 . -4) (undo-tree-id11687 . -4) (undo-tree-id11688 . -4) (undo-tree-id11689 . -4) (undo-tree-id11690 . -4) (undo-tree-id11691 . -4) (undo-tree-id11692 . -4) (undo-tree-id11693 . -4) (undo-tree-id11694 . -4) (undo-tree-id11695 . -4) (undo-tree-id11696 . -4) (undo-tree-id11697 . -4) (undo-tree-id11698 . -4) (undo-tree-id11699 . -4) (undo-tree-id11700 . -4) (undo-tree-id11701 . -4) (undo-tree-id11702 . -4) (undo-tree-id11703 . -4) (undo-tree-id11704 . -4) (undo-tree-id11705 . -4) (undo-tree-id11706 . -4) (undo-tree-id11707 . -4) (undo-tree-id11708 . -4) (undo-tree-id11709 . -4) (undo-tree-id11710 . -4) (undo-tree-id11711 . -4) (undo-tree-id11712 . -4) (undo-tree-id11713 . -4) (undo-tree-id11714 . -4) (undo-tree-id11715 . -4) (undo-tree-id11716 . -4) (undo-tree-id11717 . -4) (undo-tree-id11718 . -4) (undo-tree-id11719 . -4) (undo-tree-id11720 . -4) (undo-tree-id11721 . -4) (undo-tree-id11722 . -4) (undo-tree-id11723 . -4) (undo-tree-id11724 . -4) (undo-tree-id11725 . -4) (undo-tree-id11726 . -4) (undo-tree-id11727 . -4) (undo-tree-id11728 . -4) (undo-tree-id11729 . -4) (undo-tree-id11730 . -4) (undo-tree-id11731 . -4) (undo-tree-id11732 . -4) (undo-tree-id11733 . -4) (undo-tree-id11734 . -4) (undo-tree-id11735 . -4) (undo-tree-id11736 . -4) (undo-tree-id11737 . -4) (undo-tree-id11738 . -4) (undo-tree-id11739 . -4) (undo-tree-id11740 . -4) (undo-tree-id11741 . -4) (undo-tree-id11742 . -4) (undo-tree-id11743 . -4) (undo-tree-id11744 . -4) (undo-tree-id11745 . -4) (undo-tree-id11746 . -4) (undo-tree-id11747 . -4) (undo-tree-id11748 . -4) (undo-tree-id11749 . -4) (undo-tree-id11750 . -4) (undo-tree-id11751 . -4) (undo-tree-id11752 . -4) (undo-tree-id11753 . -4) (undo-tree-id11754 . -4) (undo-tree-id11755 . -4) (undo-tree-id11756 . -4) (undo-tree-id11757 . -4) (undo-tree-id11758 . -4) (undo-tree-id11759 . -4) (undo-tree-id11760 . -4) (undo-tree-id11761 . -4) (undo-tree-id11762 . -4) (undo-tree-id11763 . -4) (undo-tree-id11764 . -4) (undo-tree-id11765 . -4) (undo-tree-id11766 . -4) (undo-tree-id11767 . -4) (#("pub" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 998) (undo-tree-id11768 . -3) (undo-tree-id11769 . -3) (undo-tree-id11770 . -1) (undo-tree-id11771 . -1) (undo-tree-id11772 . -1) (undo-tree-id11773 . -1) (undo-tree-id11774 . -1) (undo-tree-id11775 . -1) (undo-tree-id11776 . -1) (undo-tree-id11777 . -1) (undo-tree-id11778 . -1) (undo-tree-id11779 . -1) (undo-tree-id11780 . -1) (undo-tree-id11781 . -1) (undo-tree-id11782 . -1) (undo-tree-id11783 . -1) (undo-tree-id11784 . -1) (undo-tree-id11785 . -1) (undo-tree-id11786 . -1) (undo-tree-id11787 . -1) (undo-tree-id11788 . -1) (undo-tree-id11789 . -1) (undo-tree-id11790 . -1) (undo-tree-id11791 . -1) (undo-tree-id11792 . -1) (undo-tree-id11793 . -1) (undo-tree-id11794 . -1) (undo-tree-id11795 . -1) (undo-tree-id11796 . -1) (undo-tree-id11797 . -1) (undo-tree-id11798 . -1) (undo-tree-id11799 . -1) (undo-tree-id11800 . -1) (undo-tree-id11801 . -1) (undo-tree-id11802 . -1) (undo-tree-id11803 . -1) (undo-tree-id11804 . -1) (undo-tree-id11805 . -1) (undo-tree-id11806 . -1) (undo-tree-id11807 . -1) (undo-tree-id11808 . -1) (undo-tree-id11809 . -1) (undo-tree-id11810 . -1) (undo-tree-id11811 . -1) (undo-tree-id11812 . -1) (undo-tree-id11813 . -1) (undo-tree-id11814 . -1) (undo-tree-id11815 . -1) (undo-tree-id11816 . -1) (undo-tree-id11817 . -1) (undo-tree-id11818 . -1) (undo-tree-id11819 . -1) (undo-tree-id11820 . -1) (undo-tree-id11821 . -1) (undo-tree-id11822 . -1) (undo-tree-id11823 . -1) (undo-tree-id11824 . -1) (undo-tree-id11825 . -1) (undo-tree-id11826 . -1) (undo-tree-id11827 . -1) (undo-tree-id11828 . -1) (undo-tree-id11829 . -1) (undo-tree-id11830 . -1) (undo-tree-id11831 . -1) (undo-tree-id11832 . -1) (undo-tree-id11833 . -1) (undo-tree-id11834 . -1) (undo-tree-id11835 . -1) (undo-tree-id11836 . -1) (undo-tree-id11837 . -1) (undo-tree-id11838 . -1) (undo-tree-id11839 . -1) (undo-tree-id11840 . -1) (undo-tree-id11841 . -1) (undo-tree-id11842 . -1) (undo-tree-id11843 . -1) (undo-tree-id11844 . -1) (undo-tree-id11845 . -1) (undo-tree-id11846 . -1) (undo-tree-id11847 . -1) (undo-tree-id11848 . -1) (undo-tree-id11849 . -1) (undo-tree-id11850 . -1) (undo-tree-id11851 . -1) (undo-tree-id11852 . -1) (undo-tree-id11853 . -1) (undo-tree-id11854 . -1) (undo-tree-id11855 . -1) (undo-tree-id11856 . -1) (undo-tree-id11857 . -1) (undo-tree-id11858 . -1) (undo-tree-id11859 . -1) (undo-tree-id11860 . -1) (undo-tree-id11861 . -1) (undo-tree-id11862 . -1) (undo-tree-id11863 . -1) (undo-tree-id11864 . -1) (undo-tree-id11865 . -1) (undo-tree-id11866 . -1) (undo-tree-id11867 . -1) (undo-tree-id11868 . -1) (undo-tree-id11869 . -1) (undo-tree-id11870 . -1) (undo-tree-id11871 . -1) (undo-tree-id11872 . -1) (undo-tree-id11873 . -1) (undo-tree-id11874 . -1) (undo-tree-id11875 . -1) (undo-tree-id11876 . -1) (undo-tree-id11877 . -1) (undo-tree-id11878 . -1) (undo-tree-id11879 . -1) (undo-tree-id11880 . -1) (undo-tree-id11881 . -1) (undo-tree-id11882 . -1) (undo-tree-id11883 . -1) (undo-tree-id11884 . -1) (999 . 1001) (#("rivate " 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil) 5 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil)) . 999) (undo-tree-id11885 . -7) (undo-tree-id11886 . -7) (undo-tree-id11887 . -7) (undo-tree-id11888 . -7) (undo-tree-id11889 . -7) (undo-tree-id11890 . -7) (undo-tree-id11891 . -7) (undo-tree-id11892 . -7) (undo-tree-id11893 . -7) (undo-tree-id11894 . -7) (undo-tree-id11895 . -7) (undo-tree-id11896 . -7) (undo-tree-id11897 . -7) (undo-tree-id11898 . -7) (undo-tree-id11899 . -7) (undo-tree-id11900 . -7) (undo-tree-id11901 . -7) (undo-tree-id11902 . -7) (undo-tree-id11903 . -7) (undo-tree-id11904 . -7) (undo-tree-id11905 . -7) (undo-tree-id11906 . -7) (undo-tree-id11907 . -7) (undo-tree-id11908 . -7) (undo-tree-id11909 . -7) (undo-tree-id11910 . -7) (undo-tree-id11911 . -7) (undo-tree-id11912 . -7) (undo-tree-id11913 . -7) (undo-tree-id11914 . -7) (undo-tree-id11915 . -7) (undo-tree-id11916 . -7) (undo-tree-id11917 . -7) (undo-tree-id11918 . -7) (undo-tree-id11919 . -7) (undo-tree-id11920 . -7) (undo-tree-id11921 . -7) (undo-tree-id11922 . -7) (undo-tree-id11923 . -7) (undo-tree-id11924 . -7) (undo-tree-id11925 . -7) (undo-tree-id11926 . -7) (undo-tree-id11927 . -7) (undo-tree-id11928 . -7) (undo-tree-id11929 . -7) (undo-tree-id11930 . -7) (undo-tree-id11931 . -7) (undo-tree-id11932 . -7) (undo-tree-id11933 . -7) (undo-tree-id11934 . -7) (undo-tree-id11935 . -7) (undo-tree-id11936 . -7) (undo-tree-id11937 . -7) (undo-tree-id11938 . -7) (undo-tree-id11939 . -7) (undo-tree-id11940 . -7) (undo-tree-id11941 . -7) (undo-tree-id11942 . -7) (undo-tree-id11943 . -7) (undo-tree-id11944 . -7) (undo-tree-id11945 . -7) (undo-tree-id11946 . -7) (undo-tree-id11947 . -7) (undo-tree-id11948 . -7) (undo-tree-id11949 . -7) (undo-tree-id11950 . -7) (undo-tree-id11951 . -7) (undo-tree-id11952 . -7) (undo-tree-id11953 . -7) (undo-tree-id11954 . -7) (undo-tree-id11955 . -7) (undo-tree-id11956 . -7) (undo-tree-id11957 . -7) (undo-tree-id11958 . -7) (undo-tree-id11959 . -7) (undo-tree-id11960 . -7) (undo-tree-id11961 . -7) (undo-tree-id11962 . -7) (undo-tree-id11963 . -7) (undo-tree-id11964 . -7) (undo-tree-id11965 . -7) (undo-tree-id11966 . -7) (undo-tree-id11967 . -7) (undo-tree-id11968 . -7) (undo-tree-id11969 . -7) (undo-tree-id11970 . -7) (undo-tree-id11971 . -7) (undo-tree-id11972 . -7) (undo-tree-id11973 . -7) (undo-tree-id11974 . -7) (undo-tree-id11975 . -7) (undo-tree-id11976 . -7) (undo-tree-id11977 . -7) (undo-tree-id11978 . -7) (undo-tree-id11979 . -7) (undo-tree-id11980 . -7) (undo-tree-id11981 . -7) (undo-tree-id11982 . -7) (undo-tree-id11983 . -7) (undo-tree-id11984 . -7) (undo-tree-id11985 . -7) (undo-tree-id11986 . -7) (undo-tree-id11987 . -7) (undo-tree-id11988 . -7) (undo-tree-id11989 . -7) (undo-tree-id11990 . -7) (undo-tree-id11991 . -7) (undo-tree-id11992 . -7) (undo-tree-id11993 . -7) (undo-tree-id11994 . -7) (undo-tree-id11995 . -7) (undo-tree-id11996 . -7) (undo-tree-id11997 . -7) (undo-tree-id11998 . -7) (undo-tree-id11999 . -7) (undo-tree-id12000 . -7) (undo-tree-id12001 . -7) (#("g" 0 1 (fontified nil)) . 1006) (undo-tree-id12002 . -1) (undo-tree-id12003 . -1) (1006 . 1007) (#("getSecondToLast" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 1006) (undo-tree-id12004 . -9) (undo-tree-id12005 . -14) (undo-tree-id12006 . -15) (undo-tree-id12007 . -15) (undo-tree-id12008 . -15) (undo-tree-id12009 . -15) (undo-tree-id12010 . -15) (undo-tree-id12011 . -15) (undo-tree-id12012 . -15) (undo-tree-id12013 . -15) (undo-tree-id12014 . -15) (undo-tree-id12015 . -15) (undo-tree-id12016 . -15) (undo-tree-id12017 . -15) (undo-tree-id12018 . -15) (undo-tree-id12019 . -15) (undo-tree-id12020 . -15) (undo-tree-id12021 . -15) (undo-tree-id12022 . -15) (undo-tree-id12023 . -15) (undo-tree-id12024 . -15) (undo-tree-id12025 . -15) (undo-tree-id12026 . -15) (undo-tree-id12027 . -15) (undo-tree-id12028 . -15) (undo-tree-id12029 . -15) (undo-tree-id12030 . -15) (undo-tree-id12031 . -15) (undo-tree-id12032 . -15) (undo-tree-id12033 . -15) (undo-tree-id12034 . -15) (undo-tree-id12035 . -15) (undo-tree-id12036 . -15) (undo-tree-id12037 . -15) (undo-tree-id12038 . -15) (undo-tree-id12039 . -15) (undo-tree-id12040 . -15) (undo-tree-id12041 . -15) (undo-tree-id12042 . -15) (undo-tree-id12043 . -15) (undo-tree-id12044 . -15) (undo-tree-id12045 . -15) (undo-tree-id12046 . -15) (undo-tree-id12047 . -15) (undo-tree-id12048 . -15) (undo-tree-id12049 . -15) (undo-tree-id12050 . -15) (undo-tree-id12051 . -15) (undo-tree-id12052 . -15) (undo-tree-id12053 . -15) (undo-tree-id12054 . -15) (undo-tree-id12055 . -15) (undo-tree-id12056 . -15) (undo-tree-id12057 . -15) (undo-tree-id12058 . -15) (undo-tree-id12059 . -15) (undo-tree-id12060 . -15) (undo-tree-id12061 . -15) (undo-tree-id12062 . -15) (undo-tree-id12063 . -15) (undo-tree-id12064 . -15) (undo-tree-id12065 . -15) (undo-tree-id12066 . -15) (undo-tree-id12067 . -15) (undo-tree-id12068 . -15) (undo-tree-id12069 . -15) (undo-tree-id12070 . -15) (undo-tree-id12071 . -15) (undo-tree-id12072 . -15) (undo-tree-id12073 . -15) (undo-tree-id12074 . -15) (undo-tree-id12075 . -15) (undo-tree-id12076 . -15) (undo-tree-id12077 . -15) (undo-tree-id12078 . -15) (undo-tree-id12079 . -15) (undo-tree-id12080 . -15) (undo-tree-id12081 . -15) (undo-tree-id12082 . -15) (undo-tree-id12083 . -15) (undo-tree-id12084 . -15) (undo-tree-id12085 . -15) (undo-tree-id12086 . -15) (undo-tree-id12087 . -15) (undo-tree-id12088 . -15) (undo-tree-id12089 . -15) (undo-tree-id12090 . -15) (undo-tree-id12091 . -15) (undo-tree-id12092 . -15) (undo-tree-id12093 . -15) (undo-tree-id12094 . -15) (undo-tree-id12095 . -15) (undo-tree-id12096 . -15) (undo-tree-id12097 . -15) (undo-tree-id12098 . -15) (undo-tree-id12099 . -15) (undo-tree-id12100 . -14) (undo-tree-id12101 . -14) (undo-tree-id12102 . -14) (undo-tree-id12103 . -14) (undo-tree-id12104 . -14) (undo-tree-id12105 . -14) (undo-tree-id12106 . -14) (undo-tree-id12107 . -14) (undo-tree-id12108 . -14) (undo-tree-id12109 . -14) (undo-tree-id12110 . -14) (undo-tree-id12111 . -14) (undo-tree-id12112 . -14) (undo-tree-id12113 . -14) (undo-tree-id12114 . -14) (undo-tree-id12115 . -14) (undo-tree-id12116 . -14) (undo-tree-id12117 . -14) (undo-tree-id12118 . -14) (undo-tree-id12119 . -14) (undo-tree-id12120 . -14)) nil (26026 33659 526666 0) 0 nil])
([nil nil ((#("
            " 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (fontified nil) 2 13 (fontified nil)) . 783) (undo-tree-id11360 . -13) (undo-tree-id11361 . -13) (undo-tree-id11362 . -13) (undo-tree-id11363 . -13) (undo-tree-id11364 . -13) (undo-tree-id11365 . -13) (undo-tree-id11366 . -13) (undo-tree-id11367 . -13) (undo-tree-id11368 . -13) (undo-tree-id11369 . -13) (undo-tree-id11370 . -13) (undo-tree-id11371 . -13) (undo-tree-id11372 . -13) (undo-tree-id11373 . -13) (undo-tree-id11374 . -13) (undo-tree-id11375 . -13) (undo-tree-id11376 . -13) (undo-tree-id11377 . -13) (undo-tree-id11378 . -13) (undo-tree-id11379 . -13) (undo-tree-id11380 . -13) (undo-tree-id11381 . -13) (undo-tree-id11382 . -13) (undo-tree-id11383 . -13) (undo-tree-id11384 . -13) (undo-tree-id11385 . -13) (undo-tree-id11386 . -13) (undo-tree-id11387 . -13) (undo-tree-id11388 . -13) (undo-tree-id11389 . -13) (undo-tree-id11390 . -13) (undo-tree-id11391 . -13) (undo-tree-id11392 . -13) (undo-tree-id11393 . -13) (undo-tree-id11394 . -13) (undo-tree-id11395 . -13) (undo-tree-id11396 . -13) (undo-tree-id11397 . -13) (undo-tree-id11398 . -13) (undo-tree-id11399 . -13) (undo-tree-id11400 . -13) (undo-tree-id11401 . -13) (undo-tree-id11402 . -13) (undo-tree-id11403 . -13) (undo-tree-id11404 . -13) (undo-tree-id11405 . -13) (undo-tree-id11406 . -13) (undo-tree-id11407 . -13) (undo-tree-id11408 . -13) (undo-tree-id11409 . -13) (undo-tree-id11410 . -13) (undo-tree-id11411 . -13) (784 . 796)) nil (26026 33659 526436 0) 0 nil])
([nil nil ((784 . 808)) nil (26026 33659 526418 0) 0 nil])
([nil nil ((2708 . 2740)) nil (26026 33659 526418 0) 0 nil])
([nil nil ((2465 . 2511)) nil (26026 33659 526418 0) 0 nil])
([nil nil ((2861 . 2862)) nil (26026 33659 526417 0) 0 nil])
([nil nil ((2862 . 3062)) nil (26026 33659 526417 0) 0 nil])
([nil nil ((841 . 842) (832 . 841) (#("-" 0 1 (fontified t)) . -832) (undo-tree-id8952 . -1) (undo-tree-id8953 . -1) (undo-tree-id8954 . -1) (undo-tree-id8955 . -1) (undo-tree-id8956 . -1) (undo-tree-id8957 . -1) (undo-tree-id8958 . -1) (undo-tree-id8959 . -1) (undo-tree-id8960 . -1) (undo-tree-id8961 . -1) (undo-tree-id8962 . -1) (undo-tree-id8963 . -1) (undo-tree-id8964 . -1) (undo-tree-id8965 . -1) (undo-tree-id8966 . -1) (undo-tree-id8967 . -1) (undo-tree-id8968 . -1) (undo-tree-id8969 . -1) (undo-tree-id8970 . -1) (undo-tree-id8971 . -1) (undo-tree-id8972 . -1) (undo-tree-id8973 . -1) (undo-tree-id8974 . -1) (undo-tree-id8975 . -1) (undo-tree-id8976 . -1) (undo-tree-id8977 . -1) (undo-tree-id8978 . -1) (undo-tree-id8979 . -1) (undo-tree-id8980 . -1) (undo-tree-id8981 . -1) (undo-tree-id8982 . -1) (undo-tree-id8983 . -1) (undo-tree-id8984 . -1) 833 (832 . 833) (831 . 832) (829 . 831) (824 . 829) (#(";" 0 1 (fontified t)) . -824) (undo-tree-id8985 . -1) (undo-tree-id8986 . -1) (undo-tree-id8987 . -1) (undo-tree-id8988 . -1) (undo-tree-id8989 . -1) (undo-tree-id8990 . -1) (undo-tree-id8991 . -1) (undo-tree-id8992 . -1) (undo-tree-id8993 . -1) (undo-tree-id8994 . -1) (undo-tree-id8995 . -1) (undo-tree-id8996 . -1) (undo-tree-id8997 . -1) (undo-tree-id8998 . -1) (undo-tree-id8999 . -1) (undo-tree-id9000 . -1) (undo-tree-id9001 . -1) (undo-tree-id9002 . -1) (undo-tree-id9003 . -1) (undo-tree-id9004 . -1) (undo-tree-id9005 . -1) (undo-tree-id9006 . -1) (undo-tree-id9007 . -1) (undo-tree-id9008 . -1) (undo-tree-id9009 . -1) (undo-tree-id9010 . -1) (undo-tree-id9011 . -1) (undo-tree-id9012 . -1) (undo-tree-id9013 . -1) (undo-tree-id9014 . -1) (undo-tree-id9015 . -1) (undo-tree-id9016 . -1) (undo-tree-id9017 . -1) (undo-tree-id9018 . -1) (undo-tree-id9019 . -1) (undo-tree-id9020 . -1) (undo-tree-id9021 . -1) (undo-tree-id9022 . -1) (undo-tree-id9023 . -1) (undo-tree-id9024 . -1) (undo-tree-id9025 . -1) (undo-tree-id9026 . -1) (undo-tree-id9027 . -1) (undo-tree-id9028 . -1) (undo-tree-id9029 . -1) (undo-tree-id9030 . -1) (undo-tree-id9031 . -1) (undo-tree-id9032 . -1) (undo-tree-id9033 . -1) (undo-tree-id9034 . -1) (undo-tree-id9035 . -1) (undo-tree-id9036 . -1) (undo-tree-id9037 . -1) (undo-tree-id9038 . -1) (undo-tree-id9039 . -1) (undo-tree-id9040 . -1) (undo-tree-id9041 . -1) (undo-tree-id9042 . -1) (undo-tree-id9043 . -1) (undo-tree-id9044 . -1) (undo-tree-id9045 . -1) (undo-tree-id9046 . -1) 825 (824 . 825) (#("s" 0 1 (fontified t)) . -824) (undo-tree-id9047 . -1) (undo-tree-id9048 . -1) (undo-tree-id9049 . -1) (undo-tree-id9050 . -1) (undo-tree-id9051 . -1) (undo-tree-id9052 . -1) (undo-tree-id9053 . -1) (undo-tree-id9054 . -1) (undo-tree-id9055 . -1) (undo-tree-id9056 . -1) (undo-tree-id9057 . -1) (undo-tree-id9058 . -1) (undo-tree-id9059 . -1) (undo-tree-id9060 . -1) (undo-tree-id9061 . -1) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (undo-tree-id9068 . -1) (undo-tree-id9069 . -1) (undo-tree-id9070 . -1) (undo-tree-id9071 . -1) (undo-tree-id9072 . -1) (undo-tree-id9073 . -1) (undo-tree-id9074 . -1) (undo-tree-id9075 . -1) (undo-tree-id9076 . -1) (undo-tree-id9077 . -1) (undo-tree-id9078 . -1) (undo-tree-id9079 . -1) (undo-tree-id9080 . -1) (undo-tree-id9081 . -1) (undo-tree-id9082 . -1) (undo-tree-id9083 . -1) (undo-tree-id9084 . -1) (undo-tree-id9085 . -1) (undo-tree-id9086 . -1) (undo-tree-id9087 . -1) (undo-tree-id9088 . -1) (undo-tree-id9089 . -1) (undo-tree-id9090 . -1) (undo-tree-id9091 . -1) (undo-tree-id9092 . -1) (undo-tree-id9093 . -1) (undo-tree-id9094 . -1) (undo-tree-id9095 . -1) (undo-tree-id9096 . -1) (undo-tree-id9097 . -1) (undo-tree-id9098 . -1) (undo-tree-id9099 . -1) (undo-tree-id9100 . -1) (undo-tree-id9101 . -1) (undo-tree-id9102 . -1) (undo-tree-id9103 . -1) (undo-tree-id9104 . -1) (undo-tree-id9105 . -1) (undo-tree-id9106 . -1) (undo-tree-id9107 . -1) (undo-tree-id9108 . -1) (undo-tree-id9109 . -1) (undo-tree-id9110 . -1) (undo-tree-id9111 . -1) (undo-tree-id9112 . -1) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1) (undo-tree-id9183 . -1) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -1) (undo-tree-id9193 . -1) (undo-tree-id9194 . -1) (undo-tree-id9195 . -1) (undo-tree-id9196 . -1) (undo-tree-id9197 . -1) (undo-tree-id9198 . -1) (undo-tree-id9199 . -1) (undo-tree-id9200 . -1) (undo-tree-id9201 . -1) (undo-tree-id9202 . -1) (undo-tree-id9203 . -1) (undo-tree-id9204 . -1) (undo-tree-id9205 . -1) (undo-tree-id9206 . -1) (undo-tree-id9207 . -1) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (undo-tree-id9274 . -1) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (#(";" 0 1 (fontified t)) . -825) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1) (undo-tree-id9508 . -1) (undo-tree-id9509 . -1) (undo-tree-id9510 . -1) (undo-tree-id9511 . -1) (undo-tree-id9512 . -1) (undo-tree-id9513 . -1) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (undo-tree-id9554 . -1) (undo-tree-id9555 . -1) (undo-tree-id9556 . -1) (undo-tree-id9557 . -1) (undo-tree-id9558 . -1) (undo-tree-id9559 . -1) (undo-tree-id9560 . -1) (undo-tree-id9561 . -1) (undo-tree-id9562 . -1) (undo-tree-id9563 . -1) (undo-tree-id9564 . -1) (undo-tree-id9565 . -1) (undo-tree-id9566 . -1) (undo-tree-id9567 . -1) (undo-tree-id9568 . -1) (undo-tree-id9569 . -1) (undo-tree-id9570 . -1) (undo-tree-id9571 . -1) (undo-tree-id9572 . -1) (undo-tree-id9573 . -1) (undo-tree-id9574 . -1) (undo-tree-id9575 . -1) (undo-tree-id9576 . -1) (undo-tree-id9577 . -1) (undo-tree-id9578 . -1) (undo-tree-id9579 . -1) (undo-tree-id9580 . -1) (undo-tree-id9581 . -1) (undo-tree-id9582 . -1) (undo-tree-id9583 . -1) (undo-tree-id9584 . -1) (undo-tree-id9585 . -1) (undo-tree-id9586 . -1) (undo-tree-id9587 . -1) (undo-tree-id9588 . -1) (undo-tree-id9589 . -1) (undo-tree-id9590 . -1) (undo-tree-id9591 . -1) (undo-tree-id9592 . -1) (undo-tree-id9593 . -1) (undo-tree-id9594 . -1) (undo-tree-id9595 . -1) (undo-tree-id9596 . -1) 826 (825 . 826) (824 . 825) (822 . 824) (807 . 822) (#("g" 0 1 (fontified t)) . -807) (undo-tree-id9597 . -1) (undo-tree-id9598 . -1) (undo-tree-id9599 . -1) (undo-tree-id9600 . -1) (undo-tree-id9601 . -1) (undo-tree-id9602 . -1) (undo-tree-id9603 . -1) (undo-tree-id9604 . -1) (undo-tree-id9605 . -1) (undo-tree-id9606 . -1) (undo-tree-id9607 . -1) (undo-tree-id9608 . -1) (undo-tree-id9609 . -1) (undo-tree-id9610 . -1) (undo-tree-id9611 . -1) (undo-tree-id9612 . -1) (undo-tree-id9613 . -1) (undo-tree-id9614 . -1) (undo-tree-id9615 . -1) (undo-tree-id9616 . -1) (undo-tree-id9617 . -1) (undo-tree-id9618 . -1) (undo-tree-id9619 . -1) (undo-tree-id9620 . -1) (undo-tree-id9621 . -1) (undo-tree-id9622 . -1) (undo-tree-id9623 . -1) (undo-tree-id9624 . -1) (undo-tree-id9625 . -1) (undo-tree-id9626 . -1) (undo-tree-id9627 . -1) (undo-tree-id9628 . -1) (undo-tree-id9629 . -1) (undo-tree-id9630 . -1) (undo-tree-id9631 . -1) (undo-tree-id9632 . -1) (undo-tree-id9633 . -1) (undo-tree-id9634 . -1) (undo-tree-id9635 . -1) (undo-tree-id9636 . -1) (undo-tree-id9637 . -1) (undo-tree-id9638 . -1) (undo-tree-id9639 . -1) (undo-tree-id9640 . -1) (undo-tree-id9641 . -1) (undo-tree-id9642 . -1) (undo-tree-id9643 . -1) (undo-tree-id9644 . -1) (undo-tree-id9645 . -1) (undo-tree-id9646 . -1) (undo-tree-id9647 . -1) (undo-tree-id9648 . -1) (undo-tree-id9649 . -1) (undo-tree-id9650 . -1) (undo-tree-id9651 . -1) (undo-tree-id9652 . -1) (undo-tree-id9653 . -1) (undo-tree-id9654 . -1) (undo-tree-id9655 . -1) (undo-tree-id9656 . -1) (undo-tree-id9657 . -1) (undo-tree-id9658 . -1) (undo-tree-id9659 . -1) (undo-tree-id9660 . -1) (undo-tree-id9661 . -1) (undo-tree-id9662 . -1) (undo-tree-id9663 . -1) (undo-tree-id9664 . -1) (undo-tree-id9665 . -1) (undo-tree-id9666 . -1) (undo-tree-id9667 . -1) (undo-tree-id9668 . -1) (undo-tree-id9669 . -1) (undo-tree-id9670 . -1) (undo-tree-id9671 . -1) (undo-tree-id9672 . -1) (undo-tree-id9673 . -1) (undo-tree-id9674 . -1) (undo-tree-id9675 . -1) (undo-tree-id9676 . -1) (undo-tree-id9677 . -1) (undo-tree-id9678 . -1) (undo-tree-id9679 . -1) (undo-tree-id9680 . -1) (undo-tree-id9681 . -1) (undo-tree-id9682 . -1) (undo-tree-id9683 . -1) (undo-tree-id9684 . -1) (undo-tree-id9685 . -1) (undo-tree-id9686 . -1) (undo-tree-id9687 . -1) (undo-tree-id9688 . -1) (undo-tree-id9689 . -1) (undo-tree-id9690 . -1) (undo-tree-id9691 . -1) (undo-tree-id9692 . -1) (undo-tree-id9693 . -1) (undo-tree-id9694 . -1) (undo-tree-id9695 . -1) (undo-tree-id9696 . -1) (undo-tree-id9697 . -1) (undo-tree-id9698 . -1) (undo-tree-id9699 . -1) (undo-tree-id9700 . -1) (undo-tree-id9701 . -1) (undo-tree-id9702 . -1) (undo-tree-id9703 . -1) (undo-tree-id9704 . -1) (undo-tree-id9705 . -1) (undo-tree-id9706 . -1) (undo-tree-id9707 . -1) (undo-tree-id9708 . -1) (undo-tree-id9709 . -1) (undo-tree-id9710 . -1) (undo-tree-id9711 . -1) (undo-tree-id9712 . -1) (undo-tree-id9713 . -1) (undo-tree-id9714 . -1) (undo-tree-id9715 . -1) (undo-tree-id9716 . -1) (undo-tree-id9717 . -1) (undo-tree-id9718 . -1) (undo-tree-id9719 . -1) (undo-tree-id9720 . -1) (undo-tree-id9721 . -1) (undo-tree-id9722 . -1) (undo-tree-id9723 . -1) (undo-tree-id9724 . -1) (undo-tree-id9725 . -1) (undo-tree-id9726 . -1) (undo-tree-id9727 . -1) (undo-tree-id9728 . -1) (undo-tree-id9729 . -1) (undo-tree-id9730 . -1) (undo-tree-id9731 . -1) (undo-tree-id9732 . -1) (undo-tree-id9733 . -1) (undo-tree-id9734 . -1) (undo-tree-id9735 . -1) (undo-tree-id9736 . -1) (undo-tree-id9737 . -1) (undo-tree-id9738 . -1) (undo-tree-id9739 . -1) (undo-tree-id9740 . -1) (undo-tree-id9741 . -1) (undo-tree-id9742 . -1) (undo-tree-id9743 . -1) (undo-tree-id9744 . -1) (undo-tree-id9745 . -1) (undo-tree-id9746 . -1) (undo-tree-id9747 . -1) (undo-tree-id9748 . -1) (undo-tree-id9749 . -1) (undo-tree-id9750 . -1) (undo-tree-id9751 . -1) (undo-tree-id9752 . -1) (undo-tree-id9753 . -1) (#("e" 0 1 (fontified t)) . -808) (undo-tree-id9754 . -1) (undo-tree-id9755 . -1) (undo-tree-id9756 . -1) (undo-tree-id9757 . -1) (undo-tree-id9758 . -1) (undo-tree-id9759 . -1) (undo-tree-id9760 . -1) (undo-tree-id9761 . -1) (undo-tree-id9762 . -1) (undo-tree-id9763 . -1) (undo-tree-id9764 . -1) (undo-tree-id9765 . -1) (undo-tree-id9766 . -1) (undo-tree-id9767 . -1) (undo-tree-id9768 . -1) (undo-tree-id9769 . -1) (undo-tree-id9770 . -1) (undo-tree-id9771 . -1) (undo-tree-id9772 . -1) (undo-tree-id9773 . -1) (undo-tree-id9774 . -1) (undo-tree-id9775 . -1) (undo-tree-id9776 . -1) (undo-tree-id9777 . -1) (undo-tree-id9778 . -1) (undo-tree-id9779 . -1) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -1) (undo-tree-id9784 . -1) (undo-tree-id9785 . -1) (undo-tree-id9786 . -1) (undo-tree-id9787 . -1) (undo-tree-id9788 . -1) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -1) (undo-tree-id9805 . -1) (undo-tree-id9806 . -1) (undo-tree-id9807 . -1) (undo-tree-id9808 . -1) (undo-tree-id9809 . -1) (undo-tree-id9810 . -1) (undo-tree-id9811 . -1) (undo-tree-id9812 . -1) (undo-tree-id9813 . -1) (undo-tree-id9814 . -1) (undo-tree-id9815 . -1) (undo-tree-id9816 . -1) (undo-tree-id9817 . -1) (undo-tree-id9818 . -1) (undo-tree-id9819 . -1) (undo-tree-id9820 . -1) (undo-tree-id9821 . -1) (undo-tree-id9822 . -1) (undo-tree-id9823 . -1) (undo-tree-id9824 . -1) (undo-tree-id9825 . -1) (undo-tree-id9826 . -1) (undo-tree-id9827 . -1) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (undo-tree-id9847 . -1) (undo-tree-id9848 . -1) (undo-tree-id9849 . -1) (undo-tree-id9850 . -1) (undo-tree-id9851 . -1) (undo-tree-id9852 . -1) (#("t" 0 1 (fontified t)) . -809) (undo-tree-id9853 . -1) (undo-tree-id9854 . -1) (undo-tree-id9855 . -1) (undo-tree-id9856 . -1) (undo-tree-id9857 . -1) (undo-tree-id9858 . -1) (undo-tree-id9859 . -1) (undo-tree-id9860 . -1) (undo-tree-id9861 . -1) (undo-tree-id9862 . -1) (undo-tree-id9863 . -1) (undo-tree-id9864 . -1) (undo-tree-id9865 . -1) (undo-tree-id9866 . -1) (undo-tree-id9867 . -1) (undo-tree-id9868 . -1) (undo-tree-id9869 . -1) (undo-tree-id9870 . -1) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -1) 810 (806 . 810) (804 . 806) (#("." 0 1 (fontified t)) . -804) (undo-tree-id9914 . -1) (undo-tree-id9915 . -1) (undo-tree-id9916 . -1) (undo-tree-id9917 . -1) (undo-tree-id9918 . -1) (undo-tree-id9919 . -1) (undo-tree-id9920 . -1) (undo-tree-id9921 . -1) (undo-tree-id9922 . -1) (undo-tree-id9923 . -1) (undo-tree-id9924 . -1) (undo-tree-id9925 . -1) (undo-tree-id9926 . -1) (undo-tree-id9927 . -1) (undo-tree-id9928 . -1) (undo-tree-id9929 . -1) (undo-tree-id9930 . -1) (undo-tree-id9931 . -1) (undo-tree-id9932 . -1) (undo-tree-id9933 . -1) (undo-tree-id9934 . -1) (undo-tree-id9935 . -1) (undo-tree-id9936 . -1) (undo-tree-id9937 . -1) (undo-tree-id9938 . -1) (undo-tree-id9939 . -1) (undo-tree-id9940 . -1) (undo-tree-id9941 . -1) (undo-tree-id9942 . -1) (undo-tree-id9943 . -1) (undo-tree-id9944 . -1) (undo-tree-id9945 . -1) (undo-tree-id9946 . -1) (undo-tree-id9947 . -1) (undo-tree-id9948 . -1) (undo-tree-id9949 . -1) (undo-tree-id9950 . -1) (undo-tree-id9951 . -1) (undo-tree-id9952 . -1) (undo-tree-id9953 . -1) (undo-tree-id9954 . -1) (undo-tree-id9955 . -1) (undo-tree-id9956 . -1) (undo-tree-id9957 . -1) (undo-tree-id9958 . -1) (undo-tree-id9959 . -1) (undo-tree-id9960 . -1) (undo-tree-id9961 . -1) (undo-tree-id9962 . -1) (undo-tree-id9963 . -1) (undo-tree-id9964 . -1) (undo-tree-id9965 . -1) (undo-tree-id9966 . -1) (undo-tree-id9967 . -1) (undo-tree-id9968 . -1) (undo-tree-id9969 . -1) (undo-tree-id9970 . -1) (undo-tree-id9971 . -1) (undo-tree-id9972 . -1) (undo-tree-id9973 . -1) (undo-tree-id9974 . -1) (undo-tree-id9975 . -1) (undo-tree-id9976 . -1) (undo-tree-id9977 . -1) (undo-tree-id9978 . -1) (undo-tree-id9979 . -1) (undo-tree-id9980 . -1) (undo-tree-id9981 . -1) (undo-tree-id9982 . -1) (undo-tree-id9983 . -1) (undo-tree-id9984 . -1) (undo-tree-id9985 . -1) (undo-tree-id9986 . -1) (undo-tree-id9987 . -1) (undo-tree-id9988 . -1) (undo-tree-id9989 . -1) (undo-tree-id9990 . -1) (undo-tree-id9991 . -1) (undo-tree-id9992 . -1) (undo-tree-id9993 . -1) (undo-tree-id9994 . -1) (undo-tree-id9995 . -1) (undo-tree-id9996 . -1) (undo-tree-id9997 . -1) (undo-tree-id9998 . -1) (undo-tree-id9999 . -1) (undo-tree-id10000 . -1) (undo-tree-id10001 . -1) (undo-tree-id10002 . -1) (undo-tree-id10003 . -1) (undo-tree-id10004 . -1) (undo-tree-id10005 . -1) (undo-tree-id10006 . -1) (undo-tree-id10007 . -1) (undo-tree-id10008 . -1) (undo-tree-id10009 . -1) (undo-tree-id10010 . -1) (undo-tree-id10011 . -1) (undo-tree-id10012 . -1) (undo-tree-id10013 . -1) (undo-tree-id10014 . -1) (undo-tree-id10015 . -1) (undo-tree-id10016 . -1) (undo-tree-id10017 . -1) (undo-tree-id10018 . -1) (undo-tree-id10019 . -1) (undo-tree-id10020 . -1) (undo-tree-id10021 . -1) (undo-tree-id10022 . -1) (undo-tree-id10023 . -1) (undo-tree-id10024 . -1) (undo-tree-id10025 . -1) (undo-tree-id10026 . -1) (undo-tree-id10027 . -1) (undo-tree-id10028 . -1) (undo-tree-id10029 . -1) (undo-tree-id10030 . -1) (undo-tree-id10031 . -1) (undo-tree-id10032 . -1) (undo-tree-id10033 . -1) (undo-tree-id10034 . -1) (undo-tree-id10035 . -1) (undo-tree-id10036 . -1) (undo-tree-id10037 . -1) (undo-tree-id10038 . -1) (undo-tree-id10039 . -1) (undo-tree-id10040 . -1) (undo-tree-id10041 . -1) (undo-tree-id10042 . -1) (undo-tree-id10043 . -1) (undo-tree-id10044 . -1) (undo-tree-id10045 . -1) (undo-tree-id10046 . -1) (undo-tree-id10047 . -1) (undo-tree-id10048 . -1) (undo-tree-id10049 . -1) (undo-tree-id10050 . -1) (undo-tree-id10051 . -1) (undo-tree-id10052 . -1) (undo-tree-id10053 . -1) (undo-tree-id10054 . -1) (#("g" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -805) (undo-tree-id10055 . -1) (undo-tree-id10056 . -1) (undo-tree-id10057 . -1) (undo-tree-id10058 . -1) (undo-tree-id10059 . -1) (undo-tree-id10060 . -1) (undo-tree-id10061 . -1) (undo-tree-id10062 . -1) (undo-tree-id10063 . -1) (undo-tree-id10064 . -1) (undo-tree-id10065 . -1) (undo-tree-id10066 . -1) (undo-tree-id10067 . -1) (undo-tree-id10068 . -1) (undo-tree-id10069 . -1) (undo-tree-id10070 . -1) (undo-tree-id10071 . -1) (undo-tree-id10072 . -1) (undo-tree-id10073 . -1) (undo-tree-id10074 . -1) (undo-tree-id10075 . -1) (undo-tree-id10076 . -1) (undo-tree-id10077 . -1) (undo-tree-id10078 . -1) (undo-tree-id10079 . -1) (undo-tree-id10080 . -1) (undo-tree-id10081 . -1) (undo-tree-id10082 . -1) (undo-tree-id10083 . -1) (undo-tree-id10084 . -1) (undo-tree-id10085 . -1) (undo-tree-id10086 . -1) (undo-tree-id10087 . -1) (undo-tree-id10088 . -1) (undo-tree-id10089 . -1) (undo-tree-id10090 . -1) (undo-tree-id10091 . -1) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) 806 (803 . 806) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -803) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . -1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (undo-tree-id10261 . -1) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (#("." 0 1 (fontified t)) . -804) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (#("g" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -805) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) (undo-tree-id10820 . -1) (undo-tree-id10821 . -1) (undo-tree-id10822 . -1) (undo-tree-id10823 . -1) (undo-tree-id10824 . -1) (undo-tree-id10825 . -1) (undo-tree-id10826 . -1) (undo-tree-id10827 . -1) (undo-tree-id10828 . -1) (undo-tree-id10829 . -1) (undo-tree-id10830 . -1) (undo-tree-id10831 . -1) (undo-tree-id10832 . -1) (undo-tree-id10833 . -1) (undo-tree-id10834 . -1) (undo-tree-id10835 . -1) (undo-tree-id10836 . -1) (undo-tree-id10837 . -1) (undo-tree-id10838 . -1) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (undo-tree-id10914 . -1) (undo-tree-id10915 . -1) (undo-tree-id10916 . -1) (undo-tree-id10917 . -1) (undo-tree-id10918 . -1) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1) (undo-tree-id10929 . -1) (undo-tree-id10930 . -1) (undo-tree-id10931 . -1) (undo-tree-id10932 . -1) (undo-tree-id10933 . -1) (undo-tree-id10934 . -1) (undo-tree-id10935 . -1) (undo-tree-id10936 . -1) (undo-tree-id10937 . -1) (undo-tree-id10938 . -1) (undo-tree-id10939 . -1) (undo-tree-id10940 . -1) (undo-tree-id10941 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -806) (undo-tree-id10942 . -1) (undo-tree-id10943 . -1) (undo-tree-id10944 . -1) (undo-tree-id10945 . -1) (undo-tree-id10946 . -1) (undo-tree-id10947 . -1) (undo-tree-id10948 . -1) (undo-tree-id10949 . -1) (undo-tree-id10950 . -1) (undo-tree-id10951 . -1) (undo-tree-id10952 . -1) (undo-tree-id10953 . -1) (undo-tree-id10954 . -1) (undo-tree-id10955 . -1) (undo-tree-id10956 . -1) (undo-tree-id10957 . -1) (undo-tree-id10958 . -1) (undo-tree-id10959 . -1) (undo-tree-id10960 . -1) (undo-tree-id10961 . -1) (undo-tree-id10962 . -1) (undo-tree-id10963 . -1) (undo-tree-id10964 . -1) (undo-tree-id10965 . -1) (undo-tree-id10966 . -1) (undo-tree-id10967 . -1) (undo-tree-id10968 . -1) (undo-tree-id10969 . -1) (undo-tree-id10970 . -1) (undo-tree-id10971 . -1) (undo-tree-id10972 . -1) (undo-tree-id10973 . -1) (undo-tree-id10974 . -1) (undo-tree-id10975 . -1) (undo-tree-id10976 . -1) (undo-tree-id10977 . -1) (undo-tree-id10978 . -1) (undo-tree-id10979 . -1) (undo-tree-id10980 . -1) (undo-tree-id10981 . -1) (undo-tree-id10982 . -1) (undo-tree-id10983 . -1) (undo-tree-id10984 . -1) (undo-tree-id10985 . -1) (undo-tree-id10986 . -1) (undo-tree-id10987 . -1) (undo-tree-id10988 . -1) (undo-tree-id10989 . -1) (undo-tree-id10990 . -1) (undo-tree-id10991 . -1) (undo-tree-id10992 . -1) (undo-tree-id10993 . -1) (undo-tree-id10994 . -1) (undo-tree-id10995 . -1) (undo-tree-id10996 . -1) (undo-tree-id10997 . -1) (undo-tree-id10998 . -1) (undo-tree-id10999 . -1) (undo-tree-id11000 . -1) (undo-tree-id11001 . -1) (undo-tree-id11002 . -1) (undo-tree-id11003 . -1) (undo-tree-id11004 . -1) (undo-tree-id11005 . -1) (undo-tree-id11006 . -1) (undo-tree-id11007 . -1) (undo-tree-id11008 . -1) (undo-tree-id11009 . -1) (undo-tree-id11010 . -1) (undo-tree-id11011 . -1) (undo-tree-id11012 . -1) (undo-tree-id11013 . -1) (undo-tree-id11014 . -1) (undo-tree-id11015 . -1) (undo-tree-id11016 . -1) (undo-tree-id11017 . -1) (undo-tree-id11018 . -1) (undo-tree-id11019 . -1) (undo-tree-id11020 . -1) (undo-tree-id11021 . -1) (undo-tree-id11022 . -1) (undo-tree-id11023 . -1) (undo-tree-id11024 . -1) (undo-tree-id11025 . -1) (undo-tree-id11026 . -1) (undo-tree-id11027 . -1) (undo-tree-id11028 . -1) (undo-tree-id11029 . -1) (undo-tree-id11030 . -1) (undo-tree-id11031 . -1) (undo-tree-id11032 . -1) (undo-tree-id11033 . -1) (undo-tree-id11034 . -1) (undo-tree-id11035 . -1) (undo-tree-id11036 . -1) (undo-tree-id11037 . -1) (undo-tree-id11038 . -1) (undo-tree-id11039 . -1) (undo-tree-id11040 . -1) (undo-tree-id11041 . -1) (undo-tree-id11042 . -1) (undo-tree-id11043 . -1) (undo-tree-id11044 . -1) (undo-tree-id11045 . -1) (undo-tree-id11046 . -1) (undo-tree-id11047 . -1) (undo-tree-id11048 . -1) (undo-tree-id11049 . -1) (undo-tree-id11050 . -1) (undo-tree-id11051 . -1) (undo-tree-id11052 . -1) (undo-tree-id11053 . -1) (undo-tree-id11054 . -1) (undo-tree-id11055 . -1) (undo-tree-id11056 . -1) (undo-tree-id11057 . -1) (undo-tree-id11058 . -1) (undo-tree-id11059 . -1) (undo-tree-id11060 . -1) (undo-tree-id11061 . -1) (undo-tree-id11062 . -1) (undo-tree-id11063 . -1) (undo-tree-id11064 . -1) (undo-tree-id11065 . -1) (undo-tree-id11066 . -1) (undo-tree-id11067 . -1) (undo-tree-id11068 . -1) (undo-tree-id11069 . -1) (undo-tree-id11070 . -1) (undo-tree-id11071 . -1) (undo-tree-id11072 . -1) (undo-tree-id11073 . -1) (undo-tree-id11074 . -1) (undo-tree-id11075 . -1) (undo-tree-id11076 . -1) (undo-tree-id11077 . -1) (undo-tree-id11078 . -1) (undo-tree-id11079 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -807) (undo-tree-id11080 . -1) (undo-tree-id11081 . -1) (undo-tree-id11082 . -1) (undo-tree-id11083 . -1) (undo-tree-id11084 . -1) (undo-tree-id11085 . -1) (undo-tree-id11086 . -1) (undo-tree-id11087 . -1) (undo-tree-id11088 . -1) (undo-tree-id11089 . -1) (undo-tree-id11090 . -1) (undo-tree-id11091 . -1) (undo-tree-id11092 . -1) (undo-tree-id11093 . -1) (undo-tree-id11094 . -1) (undo-tree-id11095 . -1) (undo-tree-id11096 . -1) (undo-tree-id11097 . -1) (undo-tree-id11098 . -1) (undo-tree-id11099 . -1) (undo-tree-id11100 . -1) (undo-tree-id11101 . -1) (undo-tree-id11102 . -1) (undo-tree-id11103 . -1) (undo-tree-id11104 . -1) (undo-tree-id11105 . -1) (undo-tree-id11106 . -1) (undo-tree-id11107 . -1) (undo-tree-id11108 . -1) (undo-tree-id11109 . -1) (undo-tree-id11110 . -1) (undo-tree-id11111 . -1) (undo-tree-id11112 . -1) (undo-tree-id11113 . -1) (undo-tree-id11114 . -1) (undo-tree-id11115 . -1) (undo-tree-id11116 . -1) (undo-tree-id11117 . -1) (undo-tree-id11118 . -1) (undo-tree-id11119 . -1) (undo-tree-id11120 . -1) (undo-tree-id11121 . -1) (undo-tree-id11122 . -1) (undo-tree-id11123 . -1) (undo-tree-id11124 . -1) (undo-tree-id11125 . -1) (undo-tree-id11126 . -1) (undo-tree-id11127 . -1) (undo-tree-id11128 . -1) (undo-tree-id11129 . -1) (undo-tree-id11130 . -1) (undo-tree-id11131 . -1) (undo-tree-id11132 . -1) (undo-tree-id11133 . -1) (undo-tree-id11134 . -1) (undo-tree-id11135 . -1) (undo-tree-id11136 . -1) (undo-tree-id11137 . -1) (undo-tree-id11138 . -1) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (#("S" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -808) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) 809 (804 . 809) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -804) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -805) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (#("." 0 1 (fontified t)) . -806) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) 807) nil (26026 33659 526379 0) 0 nil])
([nil nil ((807 . 813) (#("getSecondToLast" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 807) (undo-tree-id13430 . -14) (t 26026 33659 539844 438000)) nil (26026 34684 574975 0) 0 nil])
([nil nil ((#("()." 0 1 (face (rainbow-delimiters-depth-4-face) fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t) 2 3 (fontified t)) . 813) (undo-tree-id13428 . -2) (undo-tree-id13429 . 3)) nil (26026 34684 574974 0) 0 nil])
([nil nil ((#("secondnext" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 807) (undo-tree-id13426 . -9) (undo-tree-id13427 . 4)) nil (26026 34684 574972 0) 0 nil])
([nil nil ((#("()" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t) 1 2 (face (rainbow-delimiters-depth-4-face) fontified t)) . 807) (undo-tree-id13423 . -1) (undo-tree-id13424 . 2) (undo-tree-id13425 . -1)) nil (26026 34684 574971 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -807) (undo-tree-id13417 . -1) (undo-tree-id13418 . -1) (#("e" 0 1 (fontified t)) . -808) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) 809 (807 . 809) (#("g" 0 1 (fontified t)) . -807) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) 808 (807 . 808)) nil (26026 34684 574969 0) 0 nil])
([nil nil ((834 . 836) (#("g" 0 1 (fontified t)) . -834) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (#("e" 0 1 (fontified t)) . -835) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (#("t" 0 1 (fontified t)) . -836) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) 837 (835 . 837) (833 . 835) (831 . 833) (#("+" 0 1 (fontified t)) . -831) (undo-tree-id13393 . -1) (#("-" 0 1 (fontified t)) . -832) (undo-tree-id13394 . -1) 833 (831 . 833) (#("." 0 1 (fontified t)) . -831) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) 832 (831 . 832) (823 . 831) (#("iterat" 0 6 (fontified nil)) . 823) (823 . 829) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -823) (undo-tree-id13397 . -24) (823 . 847) (#("iterato" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -823) (undo-tree-id13398 . -7) (undo-tree-id13399 . -7) 830 (821 . 830) (800 . 821) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -800) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (#("u" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -801) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (#("E" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -802) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) 803 (800 . 803) (#(">" 0 1 (fontified t)) . -800) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) 801 (796 . 801) (#("iterator(). = newNode;" 0 1 (c-is-sws t fontified t) 1 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-4-face) fontified t) 9 10 (face (rainbow-delimiters-depth-4-face) fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 796) (undo-tree-id13408 . -21) (undo-tree-id13409 . 11) (undo-tree-id13410 . -7) (undo-tree-id13411 . -7) (undo-tree-id13412 . -7) (undo-tree-id13413 . -7) (undo-tree-id13414 . -10) (undo-tree-id13415 . -11) (undo-tree-id13416 . -11)) nil (26026 34684 574964 0) 0 nil])
([nil nil ((#("            Node<E> secondToLastNode = iterator().se
" 0 1 (c-in-sws t c-is-sws t fontified t) 1 12 (c-in-sws t c-is-sws t fontified t) 12 13 (face font-lock-type-face c-is-sws t fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face fontified t) 15 16 (face font-lock-type-face fontified t) 16 17 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 17 18 (face font-lock-type-face fontified t) 18 19 (face (rainbow-delimiters-depth-4-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t) 19 20 (fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 29 (face font-lock-variable-name-face fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (face font-lock-variable-name-face fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (face font-lock-variable-name-face fontified t) 33 34 (face font-lock-variable-name-face fontified t) 34 35 (face font-lock-variable-name-face fontified t) 35 36 (face font-lock-variable-name-face fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-4-face) fontified t) 48 49 (face (rainbow-delimiters-depth-4-face) fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 784) (undo-tree-id13377 . -52) (undo-tree-id13378 . 1) (undo-tree-id13379 . -12) (undo-tree-id13380 . -12) (undo-tree-id13381 . -12) (undo-tree-id13382 . -12) (undo-tree-id13383 . -51) (undo-tree-id13384 . -50) (undo-tree-id13385 . -12) (undo-tree-id13386 . -12) 834) nil (26026 34684 574949 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 919)) nil (26026 34684 574944 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -2845) (undo-tree-id13354 . -1) (undo-tree-id13355 . -1) (#("e" 0 1 (fontified t)) . -2846) (undo-tree-id13356 . -1) (undo-tree-id13357 . -1) (#("t" 0 1 (fontified t)) . -2847) (undo-tree-id13358 . -1) (undo-tree-id13359 . -1) (#("S" 0 1 (fontified t)) . -2848) (undo-tree-id13360 . -1) (undo-tree-id13361 . -1) (#("e" 0 1 (fontified t)) . -2849) (undo-tree-id13362 . -1) (undo-tree-id13363 . -1) (#("c" 0 1 (fontified t)) . -2850) (undo-tree-id13364 . -1) (undo-tree-id13365 . -1) (#("o" 0 1 (fontified t)) . -2851) (undo-tree-id13366 . -1) (undo-tree-id13367 . -1) (#("n" 0 1 (fontified t)) . -2852) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1) (#("d" 0 1 (fontified t)) . -2853) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) 2854 (2848 . 2854) (#("s" 0 1 (fontified t)) . -2848) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1) (#("e" 0 1 (fontified t)) . -2849) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) 2850 (2845 . 2850) (2837 . 2845) (#("        " 0 8 (fontified nil)) . 2836) (undo-tree-id13376 . -8) (2844 . 2845) (2835 . 2844) 2826) nil (26026 34684 574942 0) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (fontified t)) . 2837) (undo-tree-id13350 . -8) (undo-tree-id13351 . 1) (undo-tree-id13352 . -8) (undo-tree-id13353 . -7) 2844) nil (26026 34684 574932 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2837) (undo-tree-id13348 . 1) (undo-tree-id13349 . -1)) nil (26026 34684 574930 0) 0 nil])
([nil nil ((#("        // hitta näst sista noden
        public Node<E> getSecondToLast() {
            if (previous == firstNode) {
                return null;
            }
            return previous;
        }
" 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (fontified t c-in-sws t c-is-sws t) 35 42 (fontified t c-in-sws t c-is-sws t) 42 43 (face font-lock-keyword-face fontified t c-is-sws t) 43 44 (face font-lock-keyword-face fontified t) 44 45 (face font-lock-keyword-face fontified t) 45 46 (face font-lock-keyword-face fontified t) 46 47 (face font-lock-keyword-face fontified t) 47 48 (face font-lock-keyword-face fontified t) 48 49 (fontified t) 49 50 (face font-lock-type-face fontified t) 50 51 (face font-lock-type-face fontified t) 51 52 (face font-lock-type-face fontified t) 52 53 (face font-lock-type-face fontified t) 53 54 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 54 55 (face font-lock-type-face fontified t) 55 56 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 56 57 (fontified t) 57 58 (face font-lock-function-name-face fontified t) 58 59 (face font-lock-function-name-face fontified t) 59 60 (face font-lock-function-name-face fontified t) 60 61 (face font-lock-function-name-face fontified t) 61 72 (face font-lock-function-name-face fontified t) 72 73 (face (rainbow-delimiters-depth-3-face) fontified t) 73 74 (face (rainbow-delimiters-depth-3-face) fontified t) 74 75 (fontified t) 75 76 (face (rainbow-delimiters-depth-3-face) fontified t) 76 77 (fontified t) 77 89 (fontified t) 89 90 (face font-lock-keyword-face fontified t) 90 91 (face font-lock-keyword-face fontified t) 91 92 (fontified t) 92 93 (face (rainbow-delimiters-depth-4-face) fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 104 (fontified t) 104 105 (fontified t) 105 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-4-face) fontified t) 115 116 (fontified t) 116 117 (face (rainbow-delimiters-depth-4-face) fontified t) 117 118 (fontified t) 118 134 (fontified t) 134 135 (face font-lock-keyword-face fontified t) 135 136 (face font-lock-keyword-face fontified t) 136 137 (face font-lock-keyword-face fontified t) 137 138 (face font-lock-keyword-face fontified t) 138 140 (face font-lock-keyword-face fontified t) 140 141 (fontified t) 141 142 (face font-lock-constant-face fontified t) 142 143 (face font-lock-constant-face fontified t) 143 144 (face font-lock-constant-face fontified t) 144 145 (face font-lock-constant-face fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 159 (fontified t) 159 160 (face (rainbow-delimiters-depth-4-face) fontified t) 160 161 (fontified t) 161 173 (fontified t) 173 174 (face font-lock-keyword-face fontified t) 174 175 (face font-lock-keyword-face fontified t) 175 176 (face font-lock-keyword-face fontified t) 176 177 (face font-lock-keyword-face fontified t) 177 178 (face font-lock-keyword-face fontified t) 178 179 (face font-lock-keyword-face fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 198 (fontified t) 198 199 (face (rainbow-delimiters-depth-3-face) fontified t) 199 200 (fontified t)) . 2837) (undo-tree-id13335 . -190) (undo-tree-id13336 . -199) (undo-tree-id13337 . 200) (undo-tree-id13338 . -190) (undo-tree-id13339 . -190) (undo-tree-id13340 . -190) (undo-tree-id13341 . -190) (undo-tree-id13342 . -190) (undo-tree-id13343 . -190) (undo-tree-id13344 . -34) (undo-tree-id13345 . -34) (undo-tree-id13346 . -190) (undo-tree-id13347 . -199) 3027) nil (26026 34684 574929 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2493 . 2494) (#("
" 0 1 (fontified nil)) . -2685) (2485 . 2686) 2440) nil (26026 34684 574922 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2486) (undo-tree-id13334 . -8) 2494 (2486 . 2494) (2486 . 2487) 2494) nil (26026 34684 574922 0) 0 nil])
([nil nil ((2495 . 2504) (2487 . 2495) (#("        " 0 8 (fontified nil)) . 2486) (undo-tree-id13333 . -8) (2494 . 2495) (2485 . 2494) 2440) nil (26026 34684 574921 0) 0 nil])
([nil nil ((#("        getSecond
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t)) . 2487) (undo-tree-id13329 . -17) (undo-tree-id13330 . 1) (undo-tree-id13331 . -17) (undo-tree-id13332 . -16) 2503) nil (26026 34684 574919 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2487) (undo-tree-id13328 . 1)) nil (26026 34684 574917 0) 0 nil])
([nil nil ((#("        public Node<E> getSecondToLast() {
            if (previous == firstNode) {
                return null;
            }
            return previous;
        }
" 0 1 (c-in-sws t c-is-sws t fontified t) 1 8 (c-in-sws t c-is-sws t fontified t) 8 9 (face font-lock-keyword-face fontified t c-is-sws t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 13 (face font-lock-keyword-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face fontified t) 17 18 (face font-lock-type-face fontified t) 18 19 (face font-lock-type-face fontified t) 19 20 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 20 21 (face font-lock-type-face fontified t) 21 22 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 22 23 (fontified t) 23 24 (face font-lock-function-name-face fontified t) 24 25 (face font-lock-function-name-face fontified t) 25 26 (face font-lock-function-name-face fontified t) 26 27 (face font-lock-function-name-face fontified t) 27 38 (face font-lock-function-name-face fontified t) 38 39 (face (rainbow-delimiters-depth-3-face) fontified t) 39 40 (face (rainbow-delimiters-depth-3-face) fontified t) 40 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-3-face) fontified t) 42 43 (fontified t) 43 55 (fontified t) 55 56 (face font-lock-keyword-face fontified t) 56 57 (face font-lock-keyword-face fontified t) 57 58 (fontified t) 58 59 (face (rainbow-delimiters-depth-4-face) fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 70 (fontified t) 70 71 (fontified t) 71 80 (fontified t) 80 81 (face (rainbow-delimiters-depth-4-face) fontified t) 81 82 (fontified t) 82 83 (face (rainbow-delimiters-depth-4-face) fontified t) 83 84 (fontified t) 84 100 (fontified t) 100 101 (face font-lock-keyword-face fontified t) 101 102 (face font-lock-keyword-face fontified t) 102 103 (face font-lock-keyword-face fontified t) 103 104 (face font-lock-keyword-face fontified t) 104 106 (face font-lock-keyword-face fontified t) 106 107 (fontified t) 107 108 (face font-lock-constant-face fontified t) 108 109 (face font-lock-constant-face fontified t) 109 110 (face font-lock-constant-face fontified t) 110 111 (face font-lock-constant-face fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 125 (fontified t) 125 126 (face (rainbow-delimiters-depth-4-face) fontified t) 126 127 (fontified t) 127 139 (fontified t) 139 140 (face font-lock-keyword-face fontified t) 140 141 (face font-lock-keyword-face fontified t) 141 142 (face font-lock-keyword-face fontified t) 142 143 (face font-lock-keyword-face fontified t) 143 144 (face font-lock-keyword-face fontified t) 144 145 (face font-lock-keyword-face fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-3-face) fontified t) 165 166 (fontified t)) . 2521) (undo-tree-id13322 . -165) (undo-tree-id13323 . -165) (undo-tree-id13324 . -23) (undo-tree-id13325 . -165) (undo-tree-id13326 . -23) (undo-tree-id13327 . -165) 2686) nil (26026 34684 574917 0) 0 nil])
([nil nil ((#("        // hitta näst sista noden
" 0 7 (c-is-sws t c-in-sws t fontified t) 7 8 (c-is-sws t c-in-sws t rear-nonsticky t fontified t) 8 9 (face font-lock-comment-delimiter-face c-in-sws t fontified t c-is-sws t) 9 11 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 11 33 (face font-lock-comment-face c-in-sws t fontified t) 33 34 (c-in-sws t face font-lock-comment-face fontified t)) . 2487) (undo-tree-id13315 . -34) (undo-tree-id13316 . -33) (undo-tree-id13317 . 34) (undo-tree-id13318 . -34) (undo-tree-id13319 . -34) (undo-tree-id13320 . -34) (undo-tree-id13321 . -34)) nil (26026 34684 574914 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2487) (undo-tree-id13313 . 1) (undo-tree-id13314 . 1)) nil (26026 34684 574908 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2836) (undo-tree-id13305 . -1) (undo-tree-id13306 . -1) (undo-tree-id13307 . -1) (undo-tree-id13308 . -1) (undo-tree-id13309 . -1) (undo-tree-id13310 . -1) (undo-tree-id13311 . -1) (undo-tree-id13312 . -1)) nil (26026 34684 574907 0) 0 nil])
([nil nil ((1003 . 1024) (#("void " 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t)) . -1003) (undo-tree-id13301 . -5) (undo-tree-id13302 . -5) 1008 (#("get" 0 1 (face font-lock-variable-name-face fontified t) 1 3 (face font-lock-variable-name-face fontified t)) . -1008) (undo-tree-id13303 . -3) 1011 (996 . 1011) (992 . 996) (#("    " 0 4 (fontified nil)) . 991) (undo-tree-id13304 . -4) (995 . 996) (990 . 995) 985) nil (26026 34684 574904 0) 0 nil])
([nil nil ((1003 . 1010) (#("E" 0 1 (face font-lock-type-face fontified t)) . 1003)) nil (26026 34684 574901 0) 0 nil])
([nil nil ((1033 . 1035) (1032 . 1033) (1030 . 1032)) nil (26026 34684 574900 0) 0 nil])
([nil nil ((1036 . 1040) (#("    " 0 4 (fontified nil)) . 1035) (undo-tree-id13300 . -4) (1034 . 1040)) nil (26026 34684 574900 0) 0 nil])
([nil nil ((1038 . 1042) (#("    " 0 4 (fontified nil)) . 1037) (undo-tree-id13298 . -4) (1037 . 1042) (#(" " 0 1 (fontified nil)) . 1037) (#("   " 0 3 (fontified nil)) . 1036) (undo-tree-id13299 . -3) (1039 . 1040)) nil (26026 34684 574899 0) 0 nil])
([nil nil ((1073 . 1075) (1072 . 1073) (1069 . 1072) (1062 . 1069) (#("hasNext() : boolean" 0 19 (fontified nil)) . -1062) (undo-tree-id13284 . -19) (1062 . 1081) (#("has" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1062) (undo-tree-id13285 . -3) (undo-tree-id13286 . -3) 1065 (1061 . 1065) (1059 . 1061) (1051 . 1059) (#("ite" 0 3 (fontified nil)) . 1051) (1051 . 1054) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -1051) (undo-tree-id13287 . -24) (1051 . 1075) (#("iterator" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -1051) (undo-tree-id13288 . -8) (undo-tree-id13289 . -8) 1059 (1052 . 1059) (1051 . 1052) (1050 . 1051) (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1050) (undo-tree-id13290 . -1) 1051 (1050 . 1051) (1049 . 1050) (#(" x" 0 2 (fontified nil)) . -1049) (1049 . 1051) (#("while" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 1049) (undo-tree-id13291 . -5) (undo-tree-id13292 . -4) (1044 . 1049) 1049 (1044 . 1049) (#("hilw" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1044) (undo-tree-id13293 . -4) 1048 (1044 . 1048) (#("i" 0 1 (fontified t)) . -1044) (undo-tree-id13294 . -1) (undo-tree-id13295 . -1) (#("t" 0 1 (fontified t)) . -1045) (undo-tree-id13296 . -1) (undo-tree-id13297 . -1) 1046 (1044 . 1046) (1036 . 1044)) nil (26026 34684 574896 0) 0 nil])
([nil nil ((1076 . 1084) (#("        " 0 8 (fontified nil)) . 1075) (undo-tree-id13283 . -8) (1074 . 1084)) nil (26026 34684 574889 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1076) (undo-tree-id13281 . -12) 1088 (1076 . 1088) (#("            " 0 12 (fontified nil)) . 1075) (undo-tree-id13282 . -12) (1087 . 1088) (1074 . 1087) 1043) nil (26026 34684 574887 0) 0 nil])
([nil nil ((1044 . 1052) (1036 . 1044) (#("        " 0 8 (fontified nil)) . 1035) (undo-tree-id13280 . -8) (1043 . 1044) (1034 . 1043) 992) nil (26026 34684 574886 0) 0 nil])
([nil nil ((1071 . 1072) (1065 . 1071) (#("-" 0 1 (fontified t)) . -1065) (undo-tree-id13275 . -1) 1066 (1064 . 1066) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -1064) (undo-tree-id13276 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1065) (undo-tree-id13277 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -1066) (undo-tree-id13278 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1067) (undo-tree-id13279 . -1) 1068 (1052 . 1068)) nil (26026 34684 574884 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1126)) nil (26026 34684 574881 0) 0 nil])
([nil nil ((1163 . 1175) (#("                " 0 16 (fontified nil)) . 1163) (undo-tree-id13263 . -16) (1179 . 1180) (1162 . 1179) (1161 . 1162) (1160 . 1161) (1159 . 1160) (#(";" 0 1 (fontified t)) . -1159) (undo-tree-id13264 . -1) 1160 (1159 . 1160) (1151 . 1159) (#("last" 0 4 (fontified nil)) . 1151) (1151 . 1155) (#("lastNode : MyALDAList.Node<E>" 0 26 (fontified nil) 26 27 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 27 28 (fontified nil) 28 29 (fontified nil category c->-as-paren-syntax)) . -1151) (undo-tree-id13265 . -29) (1151 . 1180) (#("last" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1151) (undo-tree-id13266 . -4) (undo-tree-id13267 . -4) 1155 (1151 . 1155) (1147 . 1151) (1145 . 1147) (1141 . 1145) (#("next() : E" 0 10 (fontified nil)) . -1141) (undo-tree-id13268 . -10) (1141 . 1151) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1141) (undo-tree-id13269 . -2) (undo-tree-id13270 . -2) 1143 (1141 . 1143) (#("c" 0 1 (fontified t)) . -1141) (undo-tree-id13271 . -1) (undo-tree-id13272 . -1) (#("u" 0 1 (fontified t)) . -1142) (undo-tree-id13273 . -1) (undo-tree-id13274 . -1) 1143 (1140 . 1143) (1138 . 1140) (1130 . 1138) (1129 . 1130) (1126 . 1129) (1114 . 1126)) nil (26026 34684 574879 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1164) (undo-tree-id13261 . -16) 1180 (1164 . 1180) (#("                " 0 16 (fontified nil)) . 1163) (undo-tree-id13262 . -16) (1179 . 1180) (1162 . 1179) 1126) nil (26026 34684 574872 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1179)) nil (26026 34684 574870 0) 0 nil])
([nil nil ((1191 . 1194) (1179 . 1191) (#("secon" 0 5 (fontified nil)) . 1179) (1179 . 1184) (#("secondToLast : MyALDAList.Node<E>" 0 30 (fontified nil) 30 31 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 31 32 (fontified nil) 32 33 (fontified nil category c->-as-paren-syntax)) . -1179) (undo-tree-id13258 . -33) (1179 . 1212) (#("second" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1179) (undo-tree-id13259 . -6) (undo-tree-id13260 . -6) 1185 (1179 . 1185) (1163 . 1179)) nil (26026 34684 574869 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1113) (undo-tree-id13257 . -12) 1125 (1112 . 1125) 1104) nil (26026 34684 574867 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1074) (undo-tree-id13255 . -8) 1082 (1074 . 1082) (#("        " 0 8 (fontified nil)) . 1073) (undo-tree-id13256 . -8) (1081 . 1082) (1072 . 1081) 1036) nil (26026 34684 574866 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1080 . 1081) (#("
" 0 1 (fontified nil)) . -1109) (1072 . 1110) 1036) nil (26026 34684 574864 0) 0 nil])
([nil nil ((1089 . 1096) (#("secondToLast" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t) 7 8 (face font-lock-variable-name-face fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (face font-lock-variable-name-face fontified t) 10 11 (face font-lock-variable-name-face fontified t) 11 12 (face font-lock-variable-name-face fontified t)) . 1089) (undo-tree-id13254 . -11)) nil (26026 34684 574863 0) 0 nil])
([nil nil ((1114 . 1116) (1110 . 1114) (#("next() : E" 0 10 (fontified nil)) . -1110) (undo-tree-id13250 . -10) (1110 . 1120) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1110) (undo-tree-id13251 . -2) (undo-tree-id13252 . -2) 1112 (1109 . 1112) (1107 . 1109) (1099 . 1107) (#("null" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 1099) (undo-tree-id13253 . -3)) nil (26026 34684 574862 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1118)) nil (26026 34684 574853 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1240) 1073) nil (26026 34684 574850 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1118) (t 26026 34684 593697 568000)) nil (26026 34968 410251 0) 0 nil])
([nil nil ((147 . 151) (#("firstNode" 0 9 (face font-lock-variable-name-face fontified t)) . 147) (undo-tree-id13552 . -8)) nil (26026 34968 410250 0) 0 nil])
([nil nil ((173 . 177) (#("lastNode" 0 8 (face font-lock-variable-name-face fontified t)) . 173) (undo-tree-id13551 . -7)) nil (26026 34968 410248 0) 0 nil])
([nil nil ((242 . 246) (#("t" 0 1 (fontified t)) . -242) (undo-tree-id13548 . -1) (undo-tree-id13549 . -1) 243 (242 . 243) (#("firstNode" 0 9 (fontified t)) . 242) (undo-tree-id13550 . -8)) nil (26026 34968 410247 0) 0 nil])
([nil nil ((268 . 272) (#("lastNode" 0 8 (fontified t)) . 268) (undo-tree-id13547 . -7)) nil (26026 34968 410244 0) 0 nil])
([nil nil ((#("        this.tail = null;
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 19 (fontified t) 19 20 (fontified t) 20 24 (face font-lock-constant-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 255) (undo-tree-id13543 . -25) (undo-tree-id13544 . 9) (undo-tree-id13545 . -16) (undo-tree-id13546 . -16) 271) nil (26026 34968 410243 0) 0 nil])
([nil nil ((#("        this.head = null;
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 19 (fontified t) 19 20 (fontified t) 20 24 (face font-lock-constant-face fontified t) 24 26 (fontified t)) . 229) (undo-tree-id13540 . -25) (undo-tree-id13541 . -26) (undo-tree-id13542 . -4) 233) nil (26026 34968 410241 0) 0 nil])
([nil nil ((513 . 517) (#("firstNode" 0 1 (fontified t c-is-sws t) 1 9 (fontified t)) . 513) (undo-tree-id13539 . -8)) nil (26026 34968 410238 0) 0 nil])
([nil nil ((#("." 0 1 (c-is-sws t fontified t)) . 517) (undo-tree-id13538 . 1)) nil (26026 34968 410236 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 517) (undo-tree-id13537 . 1)) nil (26026 34968 410235 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 517) (undo-tree-id13536 . 1)) nil (26026 34968 410233 0) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 517) (undo-tree-id13535 . 1)) nil (26026 34968 410232 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 517) (undo-tree-id13534 . 1)) nil (26026 34968 410231 0) 0 nil])
([nil nil ((#("next " 0 5 (fontified t)) . 822) (undo-tree-id13533 . -4)) nil (26026 34968 410230 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 821)) nil (26026 34968 410228 0) 0 nil])
([nil nil ((821 . 822)) nil (26026 34968 410228 0) 0 nil])
([nil nil ((824 . 828) (#("lastNode" 0 8 (fontified t)) . 824) (undo-tree-id13532 . -7)) nil (26026 34968 410227 0) 0 nil])
([nil nil ((814 . 818) (#("newNode" 0 7 (fontified t)) . 814) (undo-tree-id13531 . -6)) nil (26026 34968 410226 0) 0 nil])
([nil nil ((821 . 828) (#("new" 0 3 (fontified nil)) . 821) (821 . 824) (#("newNode : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -821) (undo-tree-id13527 . -28) (821 . 849) (#("new" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t)) . -821) (undo-tree-id13528 . -3) (undo-tree-id13529 . -3) 824 (821 . 824) (#("tail" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 821) (undo-tree-id13530 . -3)) nil (26026 34968 410224 0) 0 nil])
([nil nil ((#("            newNode = new Node<>(element, null);
" 0 1 (fontified t c-is-sws t) 1 12 (fontified t c-is-sws t c-in-sws t) 12 13 (fontified t c-is-sws t) 13 19 (fontified t) 19 21 (fontified t) 21 22 (fontified t) 22 25 (face font-lock-keyword-face fontified t) 25 26 (fontified t) 26 30 (face font-lock-type-face fontified t) 30 31 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 31 32 (face (rainbow-delimiters-depth-4-face) fontified t category c->-as-paren-syntax) 32 33 (face (rainbow-delimiters-depth-4-face) fontified t) 33 42 (fontified t) 42 46 (face font-lock-constant-face fontified t) 46 47 (face (rainbow-delimiters-depth-4-face) fontified t) 47 48 (fontified t) 48 49 (fontified t)) . 753) (undo-tree-id13525 . -48) (undo-tree-id13526 . -25) 778) nil (26026 34968 410221 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 733)) nil (26026 34968 410219 0) 0 nil])
([nil nil ((726 . 743) (#("newNodenext till lastNode" 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (c-in-sws t face font-lock-comment-face fontified t) 7 25 (c-in-sws t face font-lock-comment-face fontified t)) . 726) (undo-tree-id13524 . -24)) nil (26026 34968 410218 0) 0 nil])
([nil nil ((#("            // alltså, hitta näst sista noden och
            // länka om dennes next till newNode
" 0 1 (c-is-sws t fontified t) 1 11 (c-is-sws t fontified t c-in-sws t) 11 12 (c-is-sws t fontified t rear-nonsticky t c-in-sws t) 12 13 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 13 14 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 14 15 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 45 (face font-lock-comment-face fontified t c-in-sws t) 45 46 (face font-lock-comment-face fontified t c-in-sws t) 46 47 (face font-lock-comment-face fontified t c-in-sws t) 47 48 (face font-lock-comment-face fontified t c-in-sws t) 48 49 (face font-lock-comment-face fontified t c-in-sws t) 49 50 (face font-lock-comment-face fontified t c-in-sws t) 50 51 (fontified t c-in-sws t) 51 62 (fontified t c-in-sws t) 62 63 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 63 64 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 64 65 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 65 66 (face font-lock-comment-face fontified t c-in-sws t) 66 67 (face font-lock-comment-face fontified t c-in-sws t) 67 68 (face font-lock-comment-face fontified t c-in-sws t) 68 69 (face font-lock-comment-face fontified t c-in-sws t) 69 70 (face font-lock-comment-face fontified t c-in-sws t) 70 71 (face font-lock-comment-face fontified t c-in-sws t) 71 72 (face font-lock-comment-face fontified t c-in-sws t) 72 73 (face font-lock-comment-face fontified t c-in-sws t) 73 74 (face font-lock-comment-face fontified t c-in-sws t) 74 75 (face font-lock-comment-face fontified t c-in-sws t) 75 76 (face font-lock-comment-face fontified t c-in-sws t) 76 77 (face font-lock-comment-face fontified t c-in-sws t) 77 78 (face font-lock-comment-face fontified t c-in-sws t) 78 79 (face font-lock-comment-face fontified t c-in-sws t) 79 80 (face font-lock-comment-face fontified t c-in-sws t) 80 81 (face font-lock-comment-face fontified t c-in-sws t) 81 82 (face font-lock-comment-face fontified t c-in-sws t) 82 83 (face font-lock-comment-face fontified t c-in-sws t) 83 84 (face font-lock-comment-face fontified t c-in-sws t) 84 85 (face font-lock-comment-face fontified t c-in-sws t) 85 86 (face font-lock-comment-face fontified t c-in-sws t) 86 87 (face font-lock-comment-face fontified t c-in-sws t) 87 88 (face font-lock-comment-face fontified t c-in-sws t) 88 89 (face font-lock-comment-face fontified t c-in-sws t) 89 90 (face font-lock-comment-face fontified t c-in-sws t) 90 91 (face font-lock-comment-face fontified t c-in-sws t) 91 92 (face font-lock-comment-face fontified t c-in-sws t) 92 93 (face font-lock-comment-face fontified t c-in-sws t) 93 94 (face font-lock-comment-face fontified t c-in-sws t) 94 95 (face font-lock-comment-face fontified t c-in-sws t) 95 96 (face font-lock-comment-face fontified t c-in-sws t) 96 97 (face font-lock-comment-face fontified t c-in-sws t) 97 98 (face font-lock-comment-face fontified t c-in-sws t) 98 99 (face font-lock-comment-face fontified t c-in-sws t)) . 605) (undo-tree-id13514 . -87) (undo-tree-id13515 . -98) (undo-tree-id13516 . -87) (undo-tree-id13517 . -37) (undo-tree-id13518 . -99) (undo-tree-id13519 . -99) (undo-tree-id13520 . -99) (undo-tree-id13521 . -99) (undo-tree-id13522 . -99) (undo-tree-id13523 . -37) 642) nil (26026 34968 410215 0) 0 nil])
([nil nil ((#("    public Node<E> getSecondToLastNode() {

        Node<E> secondToLast = null;
        Node<E> current = iterator().next();

        while (iterator().hasNext()) {


            if (iterator().next() == lastNode) {
                secondToLast =

            }
        }
    }
" 0 4 (fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face fontified t) 15 16 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 16 17 (face font-lock-type-face fontified t) 17 18 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 18 19 (fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (face font-lock-function-name-face fontified t) 22 23 (face font-lock-function-name-face fontified t) 23 24 (face font-lock-function-name-face fontified t) 24 25 (face font-lock-function-name-face fontified t) 25 26 (face font-lock-function-name-face fontified t) 26 27 (face font-lock-function-name-face fontified t) 27 28 (face font-lock-function-name-face fontified t) 28 29 (face font-lock-function-name-face fontified t) 29 30 (face font-lock-function-name-face fontified t) 30 31 (face font-lock-function-name-face fontified t) 31 32 (face font-lock-function-name-face fontified t) 32 33 (face font-lock-function-name-face fontified t) 33 34 (face font-lock-function-name-face fontified t) 34 35 (face font-lock-function-name-face fontified t) 35 36 (face font-lock-function-name-face fontified t) 36 37 (face font-lock-function-name-face fontified t) 37 38 (face font-lock-function-name-face fontified t) 38 39 (face (rainbow-delimiters-depth-2-face) fontified t) 39 40 (face (rainbow-delimiters-depth-2-face) fontified t) 40 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-2-face) fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 52 (fontified t) 52 53 (face font-lock-type-face fontified t) 53 54 (face font-lock-type-face fontified t) 54 55 (face font-lock-type-face fontified t) 55 56 (face font-lock-type-face fontified t) 56 57 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 57 58 (face font-lock-type-face fontified t) 58 59 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 59 60 (fontified t) 60 61 (face font-lock-variable-name-face fontified t) 61 62 (face font-lock-variable-name-face fontified t) 62 63 (face font-lock-variable-name-face fontified t) 63 64 (face font-lock-variable-name-face fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 66 (face font-lock-variable-name-face fontified t) 66 67 (face font-lock-variable-name-face fontified t) 67 68 (face font-lock-variable-name-face fontified t) 68 69 (face font-lock-variable-name-face fontified t) 69 70 (face font-lock-variable-name-face fontified t) 70 71 (face font-lock-variable-name-face fontified t) 71 72 (face font-lock-variable-name-face fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (face font-lock-constant-face fontified t) 76 77 (face font-lock-constant-face fontified t) 77 78 (face font-lock-constant-face fontified t) 78 79 (face font-lock-constant-face fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 88 (fontified t) 88 89 (fontified t rear-nonsticky t) 89 90 (face font-lock-type-face fontified t) 90 91 (face font-lock-type-face fontified t) 91 92 (face font-lock-type-face fontified t) 92 93 (face font-lock-type-face fontified t) 93 94 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 94 95 (face font-lock-type-face fontified t) 95 96 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 96 97 (fontified t) 97 99 (face font-lock-variable-name-face fontified t) 99 100 (face font-lock-variable-name-face fontified t) 100 101 (face font-lock-variable-name-face fontified t) 101 103 (face font-lock-variable-name-face fontified t) 103 104 (face font-lock-variable-name-face fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (face (rainbow-delimiters-depth-3-face) fontified t) 116 117 (face (rainbow-delimiters-depth-3-face) fontified t) 117 118 (fontified t) 118 122 (fontified t) 122 123 (face (rainbow-delimiters-depth-3-face) fontified t) 123 124 (face (rainbow-delimiters-depth-3-face) fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 135 (fontified t) 135 140 (face font-lock-keyword-face fontified t) 140 141 (fontified t) 141 142 (face (rainbow-delimiters-depth-3-face) fontified t) 142 150 (fontified t) 150 151 (face (rainbow-delimiters-depth-4-face) fontified t) 151 152 (face (rainbow-delimiters-depth-4-face) fontified t) 152 153 (fontified t) 153 160 (fontified t) 160 161 (face (rainbow-delimiters-depth-4-face) fontified t) 161 162 (face (rainbow-delimiters-depth-4-face) fontified t) 162 163 (face (rainbow-delimiters-depth-3-face) fontified t) 163 164 (fontified t) 164 165 (face (rainbow-delimiters-depth-3-face) fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 180 (fontified t) 180 181 (face font-lock-keyword-face fontified t) 181 182 (face font-lock-keyword-face fontified t) 182 183 (fontified t) 183 184 (face (rainbow-delimiters-depth-4-face) fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (face (rainbow-delimiters-depth-5-face) fontified t) 193 194 (face (rainbow-delimiters-depth-5-face) fontified t) 194 195 (fontified t) 195 199 (fontified t) 199 200 (face (rainbow-delimiters-depth-5-face) fontified t) 200 201 (face (rainbow-delimiters-depth-5-face) fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 213 (fontified t) 213 214 (face (rainbow-delimiters-depth-4-face) fontified t) 214 215 (fontified t) 215 216 (face (rainbow-delimiters-depth-4-face) fontified t) 216 217 (fontified t) 217 233 (fontified t) 233 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 261 (fontified t) 261 262 (face (rainbow-delimiters-depth-4-face) fontified t) 262 263 (fontified t) 263 271 (fontified t) 271 272 (face (rainbow-delimiters-depth-3-face) fontified t) 272 273 (fontified t) 273 277 (fontified t) 277 278 (face (rainbow-delimiters-depth-2-face) fontified t) 278 279 (fontified t)) . 746) (undo-tree-id13496 . -273) (undo-tree-id13497 . -278) (undo-tree-id13498 . -273) (undo-tree-id13499 . -279) (undo-tree-id13500 . -279) (undo-tree-id13501 . -279) (undo-tree-id13502 . -279) (undo-tree-id13503 . -279) (undo-tree-id13504 . -279) (undo-tree-id13505 . -279) (undo-tree-id13506 . -279) (undo-tree-id13507 . -279) (undo-tree-id13508 . -279) (undo-tree-id13509 . -279) (undo-tree-id13510 . -279) (undo-tree-id13511 . -81) (undo-tree-id13512 . -81) (undo-tree-id13513 . -273) 1019) nil (26026 34968 410209 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 746) (undo-tree-id13494 . 1) (undo-tree-id13495 . -1)) nil (26026 34968 410201 0) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 605)) nil (26026 34968 410198 0) 0 nil])
([nil nil ((#("firstNode." 0 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face font-lock-comment-face fontified t c-in-sws t)) . 471) (undo-tree-id13493 . -9)) nil (26026 34968 410197 0) 0 nil])
([nil nil ((471 . 475) (#("next" 0 4 (c-in-sws t face font-lock-comment-face fontified t)) . 471) (undo-tree-id13491 . -3) (undo-tree-id13492 . 4)) nil (26026 34968 410196 0) 0 nil])
([nil nil ((481 . 488) (#("denna nod" 0 9 (c-in-sws t face font-lock-comment-face fontified t)) . 481) (undo-tree-id13486 . -8) (undo-tree-id13487 . -9) (undo-tree-id13488 . -9) (undo-tree-id13489 . -9) (undo-tree-id13490 . -9)) nil (26026 34968 410194 0) 0 nil])
([nil nil ((615 . 616) (614 . 615) (608 . 614)) nil (26026 34968 410191 0) 0 nil])
([nil nil ((1650 . 1654) (#("firstNode" 0 9 (fontified t)) . 1650) (undo-tree-id13452 . -8) (undo-tree-id13453 . -9) (undo-tree-id13454 . -9) (undo-tree-id13455 . -9) (undo-tree-id13456 . -9) (undo-tree-id13457 . -9) (undo-tree-id13458 . -9) (undo-tree-id13459 . -9) (undo-tree-id13460 . -9) (undo-tree-id13461 . -9) (undo-tree-id13462 . -9) (undo-tree-id13463 . -9) (undo-tree-id13464 . -9) (undo-tree-id13465 . -9) (undo-tree-id13466 . -9) (undo-tree-id13467 . -9) (undo-tree-id13468 . -9) (undo-tree-id13469 . -9) (undo-tree-id13470 . -9) (undo-tree-id13471 . -9) (undo-tree-id13472 . -9) (undo-tree-id13473 . -9) (undo-tree-id13474 . -9) (undo-tree-id13475 . -9) (undo-tree-id13476 . -9) (undo-tree-id13477 . -9) (undo-tree-id13478 . -9) (undo-tree-id13479 . -9) (undo-tree-id13480 . -9) (undo-tree-id13481 . -9) (undo-tree-id13482 . -9) (undo-tree-id13483 . -9) (undo-tree-id13484 . -9) (undo-tree-id13485 . -9)) nil (26026 34968 410189 0) 0 nil])
([nil nil ((1676 . 1680) (#("lastNode" 0 8 (fontified t)) . 1676) (undo-tree-id13431 . -7) (undo-tree-id13432 . -3) (undo-tree-id13433 . -3) (undo-tree-id13434 . -3) (undo-tree-id13435 . -3) (undo-tree-id13436 . -3) (undo-tree-id13437 . -3) (undo-tree-id13438 . -3) (undo-tree-id13439 . -3) (undo-tree-id13440 . -3) (undo-tree-id13441 . -3) (undo-tree-id13442 . -3) (undo-tree-id13443 . -3) (undo-tree-id13444 . -3) (undo-tree-id13445 . -3) (undo-tree-id13446 . -3) (undo-tree-id13447 . -3) (undo-tree-id13448 . -3) (undo-tree-id13449 . -3) (undo-tree-id13450 . -8) (undo-tree-id13451 . -8)) nil (26026 34968 410168 0) 0 nil])
([nil nil ((289 . 305) (288 . 289) (286 . 288) (265 . 286) (263 . 265) (242 . 263) (240 . 242) (#("\\" 0 1 (c-is-sws t fontified t)) . -240) (undo-tree-id13563 . -1) (#("\\" 0 1 (c-is-sws t c-in-sws t fontified t)) . -241) (undo-tree-id13564 . -1) 242 (240 . 242) (235 . 240) (t 26026 34968 425348 569000) 235) nil (26026 35130 124416 0) 0 nil])
([nil nil ((841 . 860) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -841) (undo-tree-id13553 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -842) (undo-tree-id13554 . -1) 843 (835 . 843) (830 . 835) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -830) (undo-tree-id13555 . -1) 831 (817 . 831) (815 . 817) (#(":" 0 1 (fontified t)) . -815) (undo-tree-id13556 . -1) (#(":" 0 1 (fontified t)) . -816) (undo-tree-id13557 . -1) 817 (815 . 817) (#("s" 0 1 (fontified t)) . -815) (undo-tree-id13558 . -1) (#("," 0 1 (fontified t)) . -816) (undo-tree-id13559 . -1) (#("," 0 1 (fontified t)) . -817) (undo-tree-id13560 . -1) 818 (816 . 818) (815 . 816) (#(":" 0 1 (fontified t)) . -815) (undo-tree-id13561 . -1) (#(":" 0 1 (fontified t)) . -816) (undo-tree-id13562 . -1) 817 (815 . 817) (810 . 815) 810) nil (26026 35130 124410 0) 0 nil])
([nil nil ((983 . 984) (980 . 983) (#("-" 0 1 (fontified t)) . -980) (undo-tree-id17155 . -1) 981 (970 . 981) (961 . 970) (t 26026 35130 135343 505000) 905) nil (26026 36170 73579 0) 0 nil])
([nil nil ((974 . 977) (#("index" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t)) . 974) (undo-tree-id17154 . -4)) nil (26026 36170 73578 0) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -997) (997 . 999) (#("while" 0 5 (face font-lock-keyword-face fontified nil)) . 997) (992 . 997) 999 (998 . 999) (997 . 998) (#(" x" 0 2 (fontified nil)) . -997) (997 . 999) (#("while" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 997) (undo-tree-id17151 . -5) (undo-tree-id17152 . -5) (992 . 997) 997 (992 . 997) (984 . 992) (#("        " 0 8 (fontified nil)) . 983) (undo-tree-id17153 . -8) (991 . 992) (982 . 991) 975) nil (26026 36170 73576 0) 0 nil])
([nil nil ((1023 . 1031) (#("            " 0 12 (fontified nil)) . 1023) (undo-tree-id17144 . -12) (1035 . 1036) (1022 . 1035) (1021 . 1022) (1020 . 1021) (1017 . 1020) (1010 . 1017) (#("hasNext() : boolean" 0 19 (fontified nil)) . -1010) (undo-tree-id17145 . -19) (1010 . 1029) (#("has" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1010) (undo-tree-id17146 . -3) (undo-tree-id17147 . -3) 1013 (1009 . 1013) (1007 . 1009) (999 . 1007) (#("it" 0 2 (fontified nil)) . 999) (999 . 1001) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -999) (undo-tree-id17148 . -24) (999 . 1023) (#("itera" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -999) (undo-tree-id17149 . -5) (undo-tree-id17150 . -5) 1004 (999 . 1004)) nil (26026 36170 73573 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1025) (undo-tree-id17141 . -12) 1037 (1025 . 1037) (#("            " 0 12 (fontified nil)) . 1024) (undo-tree-id17142 . -12) (1024 . 1037) (#("            " 0 12 (fontified nil)) . 1023) (undo-tree-id17143 . -12) (1035 . 1036) (1023 . 1035) (1023 . 1024) 1031) nil (26026 36170 73569 0) 0 nil])
([nil nil ((1039 . 1040) (1036 . 1039) (1024 . 1036)) nil (26026 36170 73567 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -983) (undo-tree-id17140 . -8) 991 (982 . 991) 977) nil (26026 36170 73566 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 983) (undo-tree-id17139 . 1)) nil (26026 36170 73565 0) 0 nil])
([nil nil ((1040 . 1042)) nil (26026 36170 73564 0) 0 nil])
([nil nil ((1054 . 1056) (1053 . 1054) (1052 . 1053) (1042 . 1052)) nil (26026 36170 73564 0) 0 nil])
([nil nil ((1058 . 1070) (#("            " 0 12 (fontified nil)) . 1057) (undo-tree-id17137 . -12) (1057 . 1070) (#("            " 0 12 (fontified nil)) . 1056) (undo-tree-id17138 . -12) (1055 . 1069)) nil (26026 36170 73563 0) 0 nil])
([nil nil ((1058 . 1074) (#("                " 0 16 (fontified nil)) . 1057) (undo-tree-id17136 . -16) (1073 . 1074) (1057 . 1073)) nil (26026 36170 73562 0) 0 nil])
([nil nil ((1079 . 1080) (1073 . 1079) (#("r" 0 1 (fontified t)) . -1073) (undo-tree-id17126 . -1) (undo-tree-id17127 . -1) (#("e" 0 1 (fontified t)) . -1074) (undo-tree-id17128 . -1) (undo-tree-id17129 . -1) (#("u" 0 1 (fontified t)) . -1075) (undo-tree-id17130 . -1) (undo-tree-id17131 . -1) (#("t" 0 1 (fontified t)) . -1076) (undo-tree-id17132 . -1) (undo-tree-id17133 . -1) (#("n" 0 1 (fontified t)) . -1077) (undo-tree-id17134 . -1) (undo-tree-id17135 . -1) 1078 (1073 . 1078) (1057 . 1073)) nil (26026 36170 73560 0) 0 nil])
([nil nil ((1079 . 1080) (#(":" 0 1 (fontified t)) . 1079) (undo-tree-id17125 . -1)) nil (26026 36170 73556 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1056)) nil (26026 36170 73555 0) 0 nil])
([nil nil ((#("                
" 0 16 (fontified t) 16 17 (fontified t)) . 1080) (undo-tree-id17124 . -16)) nil (26026 36170 73554 0) 0 nil])
([nil nil ((#("            }
" 0 12 (fontified t) 12 13 (face (rainbow-delimiters-depth-4-face) fontified t) 13 14 (fontified t)) . 1080) (undo-tree-id17123 . -13)) nil (26026 36170 73554 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1053) (undo-tree-id17121 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -1054) (undo-tree-id17122 . -1) 1055) nil (26026 36170 73553 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1078)) nil (26026 36170 73551 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1023)) nil (26026 36170 73551 0) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -1093) (1093 . 1095) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1093) (undo-tree-id17116 . -4) (1089 . 1093) 1110 (1094 . 1110) (#(" " 0 1 (fontified nil)) . 1093) (undo-tree-id17117 . -1) (undo-tree-id17118 . -1) (1094 . 1095) (1093 . 1094) (#(" x" 0 2 (fontified nil)) . -1093) (1093 . 1095) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1093) (undo-tree-id17119 . -4) (undo-tree-id17120 . -3) (1089 . 1093) 1093 (1089 . 1093) (1076 . 1089) 1053) nil (26026 36170 73550 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -1094) (undo-tree-id17114 . -16) (#(" x" 0 2 (fontified nil)) . -1093) (1093 . 1095) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1093) (undo-tree-id17115 . -3) (1089 . 1093) 1110 (1093 . 1110) 1092) nil (26026 36170 73546 0) 0 nil])
([nil nil ((#("        // iterera över listan tills indexet har hittats
" 0 8 (c-is-sws t c-in-sws t fontified t) 8 9 (face font-lock-comment-delimiter-face c-in-sws t fontified t c-is-sws t) 9 11 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 11 56 (face font-lock-comment-face c-in-sws t fontified t) 56 57 (c-in-sws t face font-lock-comment-face fontified t)) . 905) (undo-tree-id17113 . -56)) nil (26026 36170 73545 0) 0 nil])
([nil nil ((957 . 958) (956 . 957) (951 . 956) (950 . 951) (943 . 950) (942 . 943) (930 . 942) (#("-" 0 1 (fontified t)) . -930) (undo-tree-id17106 . -1) 931 (929 . 931) (919 . 929) (#("e" 0 1 (face font-lock-type-face fontified t)) . -919) (undo-tree-id17107 . -1) (undo-tree-id17108 . -1) 920 (918 . 920) (914 . 918) (#("Node" 0 4 (fontified nil)) . 914) (914 . 918) (#("Node<E> - MyALDAList" 0 4 (fontified nil) 4 5 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 5 6 (fontified nil) 6 7 (fontified nil category c->-as-paren-syntax) 7 20 (fontified nil)) . -914) (undo-tree-id17109 . -20) (914 . 934) (#("Node" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -914) (undo-tree-id17110 . -4) (undo-tree-id17111 . -4) 918 (914 . 918) (906 . 914) (#("        " 0 8 (fontified nil)) . 905) (undo-tree-id17112 . -8) (913 . 914) (904 . 913) 861) nil (26026 36170 73543 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 905)) nil (26026 36170 73538 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -451) (undo-tree-id17104 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -452) (undo-tree-id17105 . -1) 453) nil (26026 36170 73537 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 594)) nil (26026 36170 73536 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 594)) nil (26026 36170 73536 0) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . 599)) nil (26026 36170 73535 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 598)) nil (26026 36170 73535 0) 0 nil])
([nil nil ((#("        }
" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-3-face) fontified t) 9 10 (fontified t)) . 732) (undo-tree-id17102 . -9) (undo-tree-id17103 . -8) 740) nil (26026 36170 73534 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 585)) nil (26026 36170 73533 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -1073) (undo-tree-id16955 . -16) (undo-tree-id16956 . -16) (undo-tree-id16957 . -16) (undo-tree-id16958 . -16) (undo-tree-id16959 . -16) (undo-tree-id16960 . -16) (undo-tree-id16961 . -16) (undo-tree-id16962 . -16) (undo-tree-id16963 . -16) (undo-tree-id16964 . -16) (undo-tree-id16965 . -16) (undo-tree-id16966 . -16) (undo-tree-id16967 . -16) (undo-tree-id16968 . -16) (undo-tree-id16969 . -16) (undo-tree-id16970 . -16) (undo-tree-id16971 . -16) (undo-tree-id16972 . -16) (undo-tree-id16973 . -16) (undo-tree-id16974 . -16) (undo-tree-id16975 . -16) (undo-tree-id16976 . -16) (undo-tree-id16977 . -16) (undo-tree-id16978 . -16) (undo-tree-id16979 . -16) (undo-tree-id16980 . -16) (undo-tree-id16981 . -16) (undo-tree-id16982 . -16) (undo-tree-id16983 . -16) (undo-tree-id16984 . -16) (undo-tree-id16985 . -16) (undo-tree-id16986 . -16) (undo-tree-id16987 . -16) (undo-tree-id16988 . -16) (undo-tree-id16989 . -16) (undo-tree-id16990 . -16) (undo-tree-id16991 . -16) (undo-tree-id16992 . -16) (undo-tree-id16993 . -16) (undo-tree-id16994 . -16) (undo-tree-id16995 . -16) (undo-tree-id16996 . -16) (undo-tree-id16997 . -16) (undo-tree-id16998 . -16) (undo-tree-id16999 . -16) (undo-tree-id17000 . -16) (undo-tree-id17001 . -16) (undo-tree-id17002 . -16) (undo-tree-id17003 . -16) (undo-tree-id17004 . -16) (undo-tree-id17005 . -16) (undo-tree-id17006 . -16) (undo-tree-id17007 . -16) (undo-tree-id17008 . -16) (undo-tree-id17009 . -16) (undo-tree-id17010 . -16) (undo-tree-id17011 . -16) (undo-tree-id17012 . -16) (undo-tree-id17013 . -16) (undo-tree-id17014 . -16) (undo-tree-id17015 . -16) (undo-tree-id17016 . -16) (undo-tree-id17017 . -16) (undo-tree-id17018 . -16) (undo-tree-id17019 . -16) (undo-tree-id17020 . -16) (undo-tree-id17021 . -16) (undo-tree-id17022 . -16) (undo-tree-id17023 . -16) (undo-tree-id17024 . -16) (undo-tree-id17025 . -16) (undo-tree-id17026 . -16) (undo-tree-id17027 . -16) (undo-tree-id17028 . -16) (undo-tree-id17029 . -16) (undo-tree-id17030 . -16) (undo-tree-id17031 . -16) (undo-tree-id17032 . -16) (undo-tree-id17033 . -16) (undo-tree-id17034 . -16) (undo-tree-id17035 . -16) (undo-tree-id17036 . -16) (undo-tree-id17037 . -16) (undo-tree-id17038 . -16) (undo-tree-id17039 . -16) (undo-tree-id17040 . -16) (undo-tree-id17041 . -16) (undo-tree-id17042 . -16) (undo-tree-id17043 . -16) (undo-tree-id17044 . -16) (undo-tree-id17045 . -16) (undo-tree-id17046 . -16) (undo-tree-id17047 . -16) (undo-tree-id17048 . -16) (undo-tree-id17049 . -16) (undo-tree-id17050 . -16) (undo-tree-id17051 . -16) (undo-tree-id17052 . -16) (undo-tree-id17053 . -16) (undo-tree-id17054 . -16) (undo-tree-id17055 . -16) (undo-tree-id17056 . -16) (undo-tree-id17057 . -16) (undo-tree-id17058 . -16) (undo-tree-id17059 . -16) (#(" x" 0 2 (fontified nil)) . -1072) (1072 . 1074) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1072) (undo-tree-id17060 . -4) (undo-tree-id17061 . -4) (undo-tree-id17062 . -4) (undo-tree-id17063 . -4) (undo-tree-id17064 . -4) (undo-tree-id17065 . -4) (undo-tree-id17066 . -4) (undo-tree-id17067 . -4) (undo-tree-id17068 . -4) (undo-tree-id17069 . -4) (undo-tree-id17070 . -4) (undo-tree-id17071 . -4) (undo-tree-id17072 . -4) (undo-tree-id17073 . -4) (undo-tree-id17074 . -4) (undo-tree-id17075 . -4) (undo-tree-id17076 . -4) (undo-tree-id17077 . -4) (undo-tree-id17078 . -4) (undo-tree-id17079 . -4) (1068 . 1072) 1089 (1072 . 1089) (#(" x" 0 2 (fontified nil)) . -1072) (1072 . 1074) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1072) (undo-tree-id17080 . -4) (undo-tree-id17081 . -4) (undo-tree-id17082 . -4) (undo-tree-id17083 . -4) (undo-tree-id17084 . -4) (undo-tree-id17085 . -4) (undo-tree-id17086 . -4) (undo-tree-id17087 . -4) (undo-tree-id17088 . -4) (undo-tree-id17089 . -4) (undo-tree-id17090 . -4) (undo-tree-id17091 . -4) (undo-tree-id17092 . -4) (undo-tree-id17093 . -4) (undo-tree-id17094 . -4) (undo-tree-id17095 . -4) (undo-tree-id17096 . -4) (undo-tree-id17097 . -4) (undo-tree-id17098 . -4) (undo-tree-id17099 . -4) (undo-tree-id17100 . -4) (undo-tree-id17101 . -4) (1068 . 1072) 1072) nil (26026 36170 73530 0) 0 nil])
([nil nil ((1021 . 1031) (1000 . 1021) (982 . 1000) (#("v" 0 1 (face font-lock-comment-face fontified t)) . -982) (undo-tree-id16640 . -1) (undo-tree-id16641 . -1) (undo-tree-id16642 . -1) (undo-tree-id16643 . -1) (undo-tree-id16644 . -1) (undo-tree-id16645 . -1) (undo-tree-id16646 . -1) (undo-tree-id16647 . -1) (undo-tree-id16648 . -1) (undo-tree-id16649 . -1) (undo-tree-id16650 . -1) (undo-tree-id16651 . -1) (undo-tree-id16652 . -1) (undo-tree-id16653 . -1) (undo-tree-id16654 . -1) 983 (973 . 983) (971 . 973) (#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -971) (undo-tree-id16655 . -1) (undo-tree-id16656 . -1) (undo-tree-id16657 . -1) (undo-tree-id16658 . -1) (undo-tree-id16659 . -1) (undo-tree-id16660 . -1) (undo-tree-id16661 . -1) (undo-tree-id16662 . -1) (undo-tree-id16663 . -1) (undo-tree-id16664 . -1) (undo-tree-id16665 . -1) (undo-tree-id16666 . -1) (undo-tree-id16667 . -1) (undo-tree-id16668 . -1) (undo-tree-id16669 . -1) (undo-tree-id16670 . -1) (undo-tree-id16671 . -1) (undo-tree-id16672 . -1) (undo-tree-id16673 . -1) (undo-tree-id16674 . -1) (undo-tree-id16675 . -1) (undo-tree-id16676 . -1) (undo-tree-id16677 . -1) (undo-tree-id16678 . -1) (undo-tree-id16679 . -1) (undo-tree-id16680 . -1) (undo-tree-id16681 . -1) (undo-tree-id16682 . -1) (undo-tree-id16683 . -1) (undo-tree-id16684 . -1) (undo-tree-id16685 . -1) (undo-tree-id16686 . -1) (undo-tree-id16687 . -1) (undo-tree-id16688 . -1) (undo-tree-id16689 . -1) (undo-tree-id16690 . -1) (undo-tree-id16691 . -1) (undo-tree-id16692 . -1) (undo-tree-id16693 . -1) (undo-tree-id16694 . -1) (undo-tree-id16695 . -1) (undo-tree-id16696 . -1) (undo-tree-id16697 . -1) (undo-tree-id16698 . -1) (undo-tree-id16699 . -1) (undo-tree-id16700 . -1) (undo-tree-id16701 . -1) (undo-tree-id16702 . -1) (undo-tree-id16703 . -1) (undo-tree-id16704 . -1) (undo-tree-id16705 . -1) (undo-tree-id16706 . -1) (undo-tree-id16707 . -1) (undo-tree-id16708 . -1) (undo-tree-id16709 . -1) (undo-tree-id16710 . -1) (undo-tree-id16711 . -1) (undo-tree-id16712 . -1) (undo-tree-id16713 . -1) (undo-tree-id16714 . -1) (undo-tree-id16715 . -1) (undo-tree-id16716 . -1) (undo-tree-id16717 . -1) (undo-tree-id16718 . -1) (undo-tree-id16719 . -1) (undo-tree-id16720 . -1) (undo-tree-id16721 . -1) (undo-tree-id16722 . -1) (undo-tree-id16723 . -1) (undo-tree-id16724 . -1) (undo-tree-id16725 . -1) (undo-tree-id16726 . -1) (undo-tree-id16727 . -1) (undo-tree-id16728 . -1) (undo-tree-id16729 . -1) (undo-tree-id16730 . -1) (undo-tree-id16731 . -1) (undo-tree-id16732 . -1) (undo-tree-id16733 . -1) (undo-tree-id16734 . -1) (undo-tree-id16735 . -1) (undo-tree-id16736 . -1) (undo-tree-id16737 . -1) (undo-tree-id16738 . -1) (undo-tree-id16739 . -1) (undo-tree-id16740 . -1) (undo-tree-id16741 . -1) (undo-tree-id16742 . -1) (undo-tree-id16743 . -1) (undo-tree-id16744 . -1) (undo-tree-id16745 . -1) (undo-tree-id16746 . -1) (undo-tree-id16747 . -1) (undo-tree-id16748 . -1) (undo-tree-id16749 . -1) (undo-tree-id16750 . -1) (undo-tree-id16751 . -1) (undo-tree-id16752 . -1) (undo-tree-id16753 . -1) (undo-tree-id16754 . -1) (undo-tree-id16755 . -1) (undo-tree-id16756 . -1) (undo-tree-id16757 . -1) (undo-tree-id16758 . -1) (undo-tree-id16759 . -1) (#("]" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -972) (undo-tree-id16760 . -1) (undo-tree-id16761 . -1) (undo-tree-id16762 . -1) (undo-tree-id16763 . -1) (undo-tree-id16764 . -1) (undo-tree-id16765 . -1) (undo-tree-id16766 . -1) (undo-tree-id16767 . -1) (undo-tree-id16768 . -1) (undo-tree-id16769 . -1) (undo-tree-id16770 . -1) (undo-tree-id16771 . -1) (undo-tree-id16772 . -1) (undo-tree-id16773 . -1) (undo-tree-id16774 . -1) (undo-tree-id16775 . -1) (undo-tree-id16776 . -1) (undo-tree-id16777 . -1) (undo-tree-id16778 . -1) (undo-tree-id16779 . -1) (undo-tree-id16780 . -1) (undo-tree-id16781 . -1) (undo-tree-id16782 . -1) (undo-tree-id16783 . -1) (undo-tree-id16784 . -1) (undo-tree-id16785 . -1) (undo-tree-id16786 . -1) (undo-tree-id16787 . -1) (undo-tree-id16788 . -1) (undo-tree-id16789 . -1) (undo-tree-id16790 . -1) (undo-tree-id16791 . -1) (undo-tree-id16792 . -1) (undo-tree-id16793 . -1) (undo-tree-id16794 . -1) (undo-tree-id16795 . -1) (undo-tree-id16796 . -1) (undo-tree-id16797 . -1) (undo-tree-id16798 . -1) (undo-tree-id16799 . -1) (undo-tree-id16800 . -1) (undo-tree-id16801 . -1) (undo-tree-id16802 . -1) (undo-tree-id16803 . -1) (undo-tree-id16804 . -1) (undo-tree-id16805 . -1) (undo-tree-id16806 . -1) (undo-tree-id16807 . -1) (undo-tree-id16808 . -1) (undo-tree-id16809 . -1) (undo-tree-id16810 . -1) (undo-tree-id16811 . -1) (undo-tree-id16812 . -1) 973 (971 . 973) (#(":" 0 1 (fontified t)) . -971) (undo-tree-id16813 . -1) (undo-tree-id16814 . -1) (undo-tree-id16815 . -1) (undo-tree-id16816 . -1) (undo-tree-id16817 . -1) (undo-tree-id16818 . -1) (undo-tree-id16819 . -1) (undo-tree-id16820 . -1) (undo-tree-id16821 . -1) (undo-tree-id16822 . -1) (undo-tree-id16823 . -1) (undo-tree-id16824 . -1) (undo-tree-id16825 . -1) (undo-tree-id16826 . -1) (undo-tree-id16827 . -1) (undo-tree-id16828 . -1) (undo-tree-id16829 . -1) (undo-tree-id16830 . -1) (undo-tree-id16831 . -1) (undo-tree-id16832 . -1) (undo-tree-id16833 . -1) (undo-tree-id16834 . -1) (undo-tree-id16835 . -1) (undo-tree-id16836 . -1) (undo-tree-id16837 . -1) (undo-tree-id16838 . -1) (undo-tree-id16839 . -1) (undo-tree-id16840 . -1) (undo-tree-id16841 . -1) (undo-tree-id16842 . -1) (undo-tree-id16843 . -1) (undo-tree-id16844 . -1) (undo-tree-id16845 . -1) (undo-tree-id16846 . -1) (undo-tree-id16847 . -1) (undo-tree-id16848 . -1) (undo-tree-id16849 . -1) (undo-tree-id16850 . -1) (undo-tree-id16851 . -1) (undo-tree-id16852 . -1) (undo-tree-id16853 . -1) (undo-tree-id16854 . -1) (undo-tree-id16855 . -1) (undo-tree-id16856 . -1) (undo-tree-id16857 . -1) (undo-tree-id16858 . -1) (undo-tree-id16859 . -1) (undo-tree-id16860 . -1) (undo-tree-id16861 . -1) (undo-tree-id16862 . -1) (undo-tree-id16863 . -1) (undo-tree-id16864 . -1) (undo-tree-id16865 . -1) (undo-tree-id16866 . -1) (undo-tree-id16867 . -1) (undo-tree-id16868 . -1) (undo-tree-id16869 . -1) (undo-tree-id16870 . -1) (undo-tree-id16871 . -1) (undo-tree-id16872 . -1) (undo-tree-id16873 . -1) (undo-tree-id16874 . -1) (undo-tree-id16875 . -1) (undo-tree-id16876 . -1) (undo-tree-id16877 . -1) (undo-tree-id16878 . -1) (undo-tree-id16879 . -1) (undo-tree-id16880 . -1) (undo-tree-id16881 . -1) (undo-tree-id16882 . -1) (undo-tree-id16883 . -1) (undo-tree-id16884 . -1) (undo-tree-id16885 . -1) (undo-tree-id16886 . -1) (undo-tree-id16887 . -1) (undo-tree-id16888 . -1) (undo-tree-id16889 . -1) (undo-tree-id16890 . -1) (undo-tree-id16891 . -1) (undo-tree-id16892 . -1) (undo-tree-id16893 . -1) (undo-tree-id16894 . -1) (undo-tree-id16895 . -1) (undo-tree-id16896 . -1) (undo-tree-id16897 . -1) (undo-tree-id16898 . -1) (undo-tree-id16899 . -1) (#(":" 0 1 (fontified t)) . -972) (undo-tree-id16900 . -1) (undo-tree-id16901 . -1) (undo-tree-id16902 . -1) (undo-tree-id16903 . -1) (undo-tree-id16904 . -1) (undo-tree-id16905 . -1) (undo-tree-id16906 . -1) (undo-tree-id16907 . -1) (undo-tree-id16908 . -1) (undo-tree-id16909 . -1) (undo-tree-id16910 . -1) (undo-tree-id16911 . -1) (undo-tree-id16912 . -1) (undo-tree-id16913 . -1) (undo-tree-id16914 . -1) (undo-tree-id16915 . -1) (undo-tree-id16916 . -1) (undo-tree-id16917 . -1) (undo-tree-id16918 . -1) (undo-tree-id16919 . -1) (undo-tree-id16920 . -1) (undo-tree-id16921 . -1) (undo-tree-id16922 . -1) (undo-tree-id16923 . -1) (undo-tree-id16924 . -1) (undo-tree-id16925 . -1) (undo-tree-id16926 . -1) (undo-tree-id16927 . -1) (undo-tree-id16928 . -1) (undo-tree-id16929 . -1) (undo-tree-id16930 . -1) (undo-tree-id16931 . -1) (undo-tree-id16932 . -1) (undo-tree-id16933 . -1) (undo-tree-id16934 . -1) (undo-tree-id16935 . -1) (undo-tree-id16936 . -1) (undo-tree-id16937 . -1) (undo-tree-id16938 . -1) (undo-tree-id16939 . -1) (undo-tree-id16940 . -1) (undo-tree-id16941 . -1) (undo-tree-id16942 . -1) (undo-tree-id16943 . -1) (undo-tree-id16944 . -1) (undo-tree-id16945 . -1) (undo-tree-id16946 . -1) (undo-tree-id16947 . -1) (undo-tree-id16948 . -1) (undo-tree-id16949 . -1) (undo-tree-id16950 . -1) (undo-tree-id16951 . -1) (undo-tree-id16952 . -1) (undo-tree-id16953 . -1) (undo-tree-id16954 . -1) 973 (971 . 973) (962 . 971) 962) nil (26026 36170 73478 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -1142) (undo-tree-id16497 . -16) (undo-tree-id16498 . -16) (undo-tree-id16499 . -16) (undo-tree-id16500 . -16) (undo-tree-id16501 . -16) (undo-tree-id16502 . -16) (undo-tree-id16503 . -16) (undo-tree-id16504 . -16) (undo-tree-id16505 . -16) (undo-tree-id16506 . -16) (undo-tree-id16507 . -16) (undo-tree-id16508 . -16) (undo-tree-id16509 . -16) (undo-tree-id16510 . -16) (undo-tree-id16511 . -16) (undo-tree-id16512 . -16) (undo-tree-id16513 . -16) (undo-tree-id16514 . -16) (undo-tree-id16515 . -16) (undo-tree-id16516 . -16) (undo-tree-id16517 . -16) (undo-tree-id16518 . -16) (undo-tree-id16519 . -16) (undo-tree-id16520 . -16) (undo-tree-id16521 . -16) (undo-tree-id16522 . -16) (undo-tree-id16523 . -16) (undo-tree-id16524 . -16) (undo-tree-id16525 . -16) (undo-tree-id16526 . -16) (undo-tree-id16527 . -16) (undo-tree-id16528 . -16) (undo-tree-id16529 . -16) (undo-tree-id16530 . -16) (undo-tree-id16531 . -16) (undo-tree-id16532 . -16) (undo-tree-id16533 . -16) (undo-tree-id16534 . -16) (undo-tree-id16535 . -16) (undo-tree-id16536 . -16) (undo-tree-id16537 . -16) (undo-tree-id16538 . -16) (undo-tree-id16539 . -16) (undo-tree-id16540 . -16) (undo-tree-id16541 . -16) (undo-tree-id16542 . -16) (undo-tree-id16543 . -16) (undo-tree-id16544 . -16) (undo-tree-id16545 . -16) (undo-tree-id16546 . -16) (undo-tree-id16547 . -16) (undo-tree-id16548 . -16) (undo-tree-id16549 . -16) (undo-tree-id16550 . -16) (undo-tree-id16551 . -16) (undo-tree-id16552 . -16) (undo-tree-id16553 . -16) (undo-tree-id16554 . -16) (undo-tree-id16555 . -16) (undo-tree-id16556 . -16) (undo-tree-id16557 . -16) (undo-tree-id16558 . -16) (undo-tree-id16559 . -16) (undo-tree-id16560 . -16) (undo-tree-id16561 . -16) (undo-tree-id16562 . -16) (undo-tree-id16563 . -16) (undo-tree-id16564 . -16) (undo-tree-id16565 . -16) (undo-tree-id16566 . -16) (undo-tree-id16567 . -16) (undo-tree-id16568 . -16) (undo-tree-id16569 . -16) (undo-tree-id16570 . -16) (undo-tree-id16571 . -16) (undo-tree-id16572 . -16) (undo-tree-id16573 . -16) (undo-tree-id16574 . -16) (undo-tree-id16575 . -16) (undo-tree-id16576 . -16) (undo-tree-id16577 . -16) (undo-tree-id16578 . -16) (#(" x" 0 2 (fontified nil)) . -1141) (1141 . 1143) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1141) (undo-tree-id16579 . -4) (undo-tree-id16580 . -4) (undo-tree-id16581 . -4) (undo-tree-id16582 . -4) (undo-tree-id16583 . -4) (undo-tree-id16584 . -4) (undo-tree-id16585 . -4) (undo-tree-id16586 . -4) (undo-tree-id16587 . -4) (undo-tree-id16588 . -4) (undo-tree-id16589 . -4) (undo-tree-id16590 . -4) (undo-tree-id16591 . -4) (undo-tree-id16592 . -4) (undo-tree-id16593 . -4) (undo-tree-id16594 . -4) (undo-tree-id16595 . -4) (undo-tree-id16596 . -4) (undo-tree-id16597 . -4) (undo-tree-id16598 . -4) (undo-tree-id16599 . -3) (undo-tree-id16600 . -3) (undo-tree-id16601 . -3) (undo-tree-id16602 . -3) (undo-tree-id16603 . -3) (undo-tree-id16604 . -3) (undo-tree-id16605 . -3) (undo-tree-id16606 . -3) (undo-tree-id16607 . -3) (undo-tree-id16608 . -3) (undo-tree-id16609 . -3) (undo-tree-id16610 . -3) (undo-tree-id16611 . -3) (undo-tree-id16612 . -3) (undo-tree-id16613 . -3) (undo-tree-id16614 . -3) (undo-tree-id16615 . -3) (undo-tree-id16616 . -3) (undo-tree-id16617 . -3) (undo-tree-id16618 . -3) (undo-tree-id16619 . -3) (undo-tree-id16620 . -3) (undo-tree-id16621 . -3) (undo-tree-id16622 . -3) (undo-tree-id16623 . -3) (undo-tree-id16624 . -3) (undo-tree-id16625 . -3) (undo-tree-id16626 . -3) (undo-tree-id16627 . -3) (undo-tree-id16628 . -3) (undo-tree-id16629 . -3) (undo-tree-id16630 . -3) (undo-tree-id16631 . -3) (undo-tree-id16632 . -3) (undo-tree-id16633 . -3) (undo-tree-id16634 . -3) (undo-tree-id16635 . -3) (undo-tree-id16636 . -3) (undo-tree-id16637 . -3) (undo-tree-id16638 . -3) (undo-tree-id16639 . -3) (1137 . 1141) 1158 (1141 . 1158) 1140) nil (26026 36170 73371 0) 0 nil])
([nil nil ((1140 . 1150) (1119 . 1140) (1117 . 1119) (1101 . 1117) (#("                return;" 0 16 (fontified t) 16 17 (face font-lock-keyword-face fontified t) 17 18 (face font-lock-keyword-face fontified t) 18 19 (face font-lock-keyword-face fontified t) 19 20 (face font-lock-keyword-face fontified t) 20 21 (face font-lock-keyword-face fontified t) 21 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t)) . 1101) (undo-tree-id16380 . -22) (undo-tree-id16381 . -22) (undo-tree-id16382 . -22) (undo-tree-id16383 . -22) (undo-tree-id16384 . -22) (undo-tree-id16385 . -22) (undo-tree-id16386 . -22) (undo-tree-id16387 . -22) (undo-tree-id16388 . -22) (undo-tree-id16389 . -22) (undo-tree-id16390 . -22) (undo-tree-id16391 . -22) (undo-tree-id16392 . -22) (undo-tree-id16393 . -22) (undo-tree-id16394 . -22) (undo-tree-id16395 . -22) (undo-tree-id16396 . -22) (undo-tree-id16397 . -22) (undo-tree-id16398 . -22) (undo-tree-id16399 . -22) (undo-tree-id16400 . -22) (undo-tree-id16401 . -22) (undo-tree-id16402 . -22) (undo-tree-id16403 . -22) (undo-tree-id16404 . -22) (undo-tree-id16405 . -22) (undo-tree-id16406 . -22) (undo-tree-id16407 . -22) (undo-tree-id16408 . -22) (undo-tree-id16409 . -22) (undo-tree-id16410 . -22) (undo-tree-id16411 . -22) (undo-tree-id16412 . -22) (undo-tree-id16413 . -22) (undo-tree-id16414 . -22) (undo-tree-id16415 . -22) (undo-tree-id16416 . -22) (undo-tree-id16417 . -22) (undo-tree-id16418 . -22) (undo-tree-id16419 . -22) (undo-tree-id16420 . -22) (undo-tree-id16421 . -22) (undo-tree-id16422 . -22) (undo-tree-id16423 . -22) (undo-tree-id16424 . -22) (undo-tree-id16425 . -22) (undo-tree-id16426 . -22) (undo-tree-id16427 . -22) (undo-tree-id16428 . -22) (undo-tree-id16429 . -22) (undo-tree-id16430 . -22) (undo-tree-id16431 . -22) (undo-tree-id16432 . -22) (undo-tree-id16433 . -22) (undo-tree-id16434 . -16) (undo-tree-id16435 . -16) (undo-tree-id16436 . -16) (undo-tree-id16437 . -16) (undo-tree-id16438 . -16) (undo-tree-id16439 . -16) (undo-tree-id16440 . -16) (undo-tree-id16441 . -16) (undo-tree-id16442 . -16) (undo-tree-id16443 . -16) (undo-tree-id16444 . -16) (undo-tree-id16445 . -16) (undo-tree-id16446 . -16) (undo-tree-id16447 . -16) (undo-tree-id16448 . -16) (undo-tree-id16449 . -16) (undo-tree-id16450 . -16) (undo-tree-id16451 . -16) (undo-tree-id16452 . -16) (undo-tree-id16453 . -16) (undo-tree-id16454 . -16) (undo-tree-id16455 . -16) (undo-tree-id16456 . -16) (undo-tree-id16457 . -16) (undo-tree-id16458 . -16) (undo-tree-id16459 . -16) (undo-tree-id16460 . -16) (undo-tree-id16461 . -16) (undo-tree-id16462 . -16) (undo-tree-id16463 . -16) (undo-tree-id16464 . -16) (undo-tree-id16465 . -16) (undo-tree-id16466 . -16) (undo-tree-id16467 . -16) (undo-tree-id16468 . -16) (undo-tree-id16469 . -16) (undo-tree-id16470 . -16) (undo-tree-id16471 . -16) (undo-tree-id16472 . -16) (undo-tree-id16473 . -16) (undo-tree-id16474 . -16) (undo-tree-id16475 . -16) (undo-tree-id16476 . -16) (undo-tree-id16477 . -16) (undo-tree-id16478 . -16) (undo-tree-id16479 . -16) (undo-tree-id16480 . -16) (undo-tree-id16481 . -16) (undo-tree-id16482 . -16) (undo-tree-id16483 . -16) (undo-tree-id16484 . -16) (undo-tree-id16485 . -16) (undo-tree-id16486 . -16) (undo-tree-id16487 . -16) (undo-tree-id16488 . -16) (undo-tree-id16489 . -16) (undo-tree-id16490 . -16) (undo-tree-id16491 . -16) (undo-tree-id16492 . -16) (undo-tree-id16493 . -23) (undo-tree-id16494 . -23) (undo-tree-id16495 . -23) (undo-tree-id16496 . -23)) nil (26026 36170 73321 0) 0 nil])
([nil nil ((#("                " 0 1 (c-is-sws t fontified t) 1 16 (fontified t)) . -1151) (undo-tree-id16290 . -16) (undo-tree-id16291 . -16) (undo-tree-id16292 . -16) (undo-tree-id16293 . -16) (undo-tree-id16294 . -16) (undo-tree-id16295 . -16) (undo-tree-id16296 . -16) (undo-tree-id16297 . -16) (undo-tree-id16298 . -16) (undo-tree-id16299 . -16) (undo-tree-id16300 . -16) (undo-tree-id16301 . -16) (undo-tree-id16302 . -16) (undo-tree-id16303 . -16) (undo-tree-id16304 . -16) (undo-tree-id16305 . -16) (undo-tree-id16306 . -16) (undo-tree-id16307 . -16) (undo-tree-id16308 . -16) (undo-tree-id16309 . -16) (undo-tree-id16310 . -16) (undo-tree-id16311 . -16) (undo-tree-id16312 . -16) (undo-tree-id16313 . -16) (undo-tree-id16314 . -16) (undo-tree-id16315 . -16) (undo-tree-id16316 . -16) (undo-tree-id16317 . -16) (undo-tree-id16318 . -16) (undo-tree-id16319 . -16) (undo-tree-id16320 . -16) (undo-tree-id16321 . -16) (undo-tree-id16322 . -16) (undo-tree-id16323 . -16) (undo-tree-id16324 . -16) (undo-tree-id16325 . -16) (undo-tree-id16326 . -16) (undo-tree-id16327 . -16) (undo-tree-id16328 . -16) (undo-tree-id16329 . -16) (undo-tree-id16330 . -16) (undo-tree-id16331 . -16) (undo-tree-id16332 . -16) (undo-tree-id16333 . -16) (undo-tree-id16334 . -16) (undo-tree-id16335 . -16) (undo-tree-id16336 . -16) (undo-tree-id16337 . -16) (undo-tree-id16338 . -16) (undo-tree-id16339 . -16) (undo-tree-id16340 . -16) (undo-tree-id16341 . -16) (undo-tree-id16342 . -16) (undo-tree-id16343 . -16) (undo-tree-id16344 . -16) (undo-tree-id16345 . -16) (undo-tree-id16346 . -16) (undo-tree-id16347 . -16) (undo-tree-id16348 . -16) (undo-tree-id16349 . -16) (undo-tree-id16350 . -16) (undo-tree-id16351 . -16) (undo-tree-id16352 . -16) (undo-tree-id16353 . -16) (undo-tree-id16354 . -16) (undo-tree-id16355 . -16) (undo-tree-id16356 . -16) (undo-tree-id16357 . -16) (undo-tree-id16358 . -16) (undo-tree-id16359 . -16) (undo-tree-id16360 . -16) (undo-tree-id16361 . -16) (undo-tree-id16362 . -16) (undo-tree-id16363 . -16) (undo-tree-id16364 . -16) (undo-tree-id16365 . -16) (undo-tree-id16366 . -16) (undo-tree-id16367 . -16) (undo-tree-id16368 . -16) (undo-tree-id16369 . -16) (undo-tree-id16370 . -16) (undo-tree-id16371 . -16) (undo-tree-id16372 . -16) (undo-tree-id16373 . -16) (undo-tree-id16374 . -16) (undo-tree-id16375 . -16) (undo-tree-id16376 . -16) (undo-tree-id16377 . -16) (undo-tree-id16378 . -16) (undo-tree-id16379 . -16) 1167 (1150 . 1167) 1149) nil (26026 36170 73282 0) 0 nil])
([nil nil ((1174 . 1175) (#("-" 0 1 (fontified t)) . -1174) (undo-tree-id16253 . -1) (undo-tree-id16254 . -1) (undo-tree-id16255 . -1) (undo-tree-id16256 . -1) (undo-tree-id16257 . -1) (undo-tree-id16258 . -1) (undo-tree-id16259 . -1) (undo-tree-id16260 . -1) (undo-tree-id16261 . -1) (undo-tree-id16262 . -1) (undo-tree-id16263 . -1) (undo-tree-id16264 . -1) (undo-tree-id16265 . -1) (undo-tree-id16266 . -1) (undo-tree-id16267 . -1) (undo-tree-id16268 . -1) (undo-tree-id16269 . -1) (undo-tree-id16270 . -1) (undo-tree-id16271 . -1) (undo-tree-id16272 . -1) (undo-tree-id16273 . -1) (undo-tree-id16274 . -1) (undo-tree-id16275 . -1) (undo-tree-id16276 . -1) (undo-tree-id16277 . -1) (undo-tree-id16278 . -1) (undo-tree-id16279 . -1) (undo-tree-id16280 . -1) (undo-tree-id16281 . -1) (undo-tree-id16282 . -1) (undo-tree-id16283 . -1) (undo-tree-id16284 . -1) (undo-tree-id16285 . -1) (undo-tree-id16286 . -1) (undo-tree-id16287 . -1) (undo-tree-id16288 . -1) (undo-tree-id16289 . -1) 1175 (1171 . 1175) (1170 . 1171) (1167 . 1170) (1150 . 1167) 1109) nil (26026 36170 73250 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1176) (undo-tree-id16180 . -1) (undo-tree-id16181 . -1) (undo-tree-id16182 . -1) (undo-tree-id16183 . -1) (undo-tree-id16184 . -1) (undo-tree-id16185 . -1) (undo-tree-id16186 . -1) (undo-tree-id16187 . -1) (undo-tree-id16188 . -1) (undo-tree-id16189 . -1) (undo-tree-id16190 . -1) (undo-tree-id16191 . -1) (undo-tree-id16192 . -1) (undo-tree-id16193 . -1) (undo-tree-id16194 . -1) (undo-tree-id16195 . -1) (undo-tree-id16196 . -1) (undo-tree-id16197 . -1) (undo-tree-id16198 . -1) (undo-tree-id16199 . -1) (undo-tree-id16200 . -1) (undo-tree-id16201 . -1) (undo-tree-id16202 . -1) (undo-tree-id16203 . -1) (undo-tree-id16204 . -1) (undo-tree-id16205 . -1) (undo-tree-id16206 . -1) (undo-tree-id16207 . -1) (undo-tree-id16208 . -1) (undo-tree-id16209 . -1) (undo-tree-id16210 . -1) (undo-tree-id16211 . -1) (undo-tree-id16212 . -1) (undo-tree-id16213 . -1) (undo-tree-id16214 . -1) (undo-tree-id16215 . -1) (undo-tree-id16216 . -1) (undo-tree-id16217 . -1) (undo-tree-id16218 . -1) (undo-tree-id16219 . -1) (undo-tree-id16220 . -1) (undo-tree-id16221 . -1) (undo-tree-id16222 . -1) (undo-tree-id16223 . -1) (undo-tree-id16224 . -1) (undo-tree-id16225 . -1) (undo-tree-id16226 . -1) (undo-tree-id16227 . -1) (undo-tree-id16228 . -1) (undo-tree-id16229 . -1) (undo-tree-id16230 . -1) (undo-tree-id16231 . -1) (undo-tree-id16232 . -1) (undo-tree-id16233 . -1) (undo-tree-id16234 . -1) (undo-tree-id16235 . -1) (undo-tree-id16236 . -1) (undo-tree-id16237 . -1) (undo-tree-id16238 . -1) (undo-tree-id16239 . -1) (undo-tree-id16240 . -1) (undo-tree-id16241 . -1) (undo-tree-id16242 . -1) (undo-tree-id16243 . -1) (undo-tree-id16244 . -1) (undo-tree-id16245 . -1) (undo-tree-id16246 . -1) (undo-tree-id16247 . -1) (undo-tree-id16248 . -1) (undo-tree-id16249 . -1) (undo-tree-id16250 . -1) (undo-tree-id16251 . -1) (undo-tree-id16252 . -1) 1177 (1176 . 1177) (1175 . 1176)) nil (26026 36170 73236 0) 0 nil])
([nil nil ((2675 . 2679) (#("lastNode" 0 2 (fontified t) 2 3 (fontified t) 3 8 (fontified t)) . 2675) (undo-tree-id16177 . -7) (undo-tree-id16178 . -8) (undo-tree-id16179 . -8)) nil (26026 36170 73210 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2546)) nil (26026 36170 73209 0) 0 nil])
([nil nil ((2546 . 2547)) nil (26026 36170 73208 0) 0 nil])
([nil nil ((2551 . 2552) (2547 . 2551) (#("firstNode.next;" 0 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t) 7 15 (fontified t)) . 2547) (undo-tree-id16175 . -14) (undo-tree-id16176 . 15)) nil (26026 36170 73208 0) 0 nil])
([nil nil ((#("        private Node<E> previous = firstNode;
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t rear-nonsticky t) 8 9 (face font-lock-keyword-face fontified t) 9 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 19 (face font-lock-type-face fontified t) 19 20 (face font-lock-type-face fontified t) 20 21 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 21 22 (face font-lock-type-face fontified t) 22 23 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 23 24 (fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 29 (face font-lock-variable-name-face fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (face font-lock-variable-name-face fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t)) . 2553) (undo-tree-id16173 . -45) (undo-tree-id16174 . -35) 2588) nil (26026 36170 73207 0) 0 nil])
([nil nil ((#("            previous = current;
" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t)) . 2792) (undo-tree-id16172 . -31)) nil (26026 36170 73205 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2265)) nil (26026 36170 73205 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2511)) nil (26026 36170 73204 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2265) (undo-tree-id16171 . -8) 2273 (2264 . 2273) 2230) nil (26026 36170 73204 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2512) (undo-tree-id16170 . -8) 2520 (2511 . 2520) 2440) nil (26026 36170 73203 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 1225)) nil (26026 36170 73202 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -888) (undo-tree-id16169 . -8) 896 (887 . 896) 852) nil (26026 36170 73201 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -339) (undo-tree-id16168 . -8) 347 (338 . 347) 306) nil (26026 36170 73200 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -732) (undo-tree-id16167 . -8) 740 (731 . 740) 704) nil (26026 36170 73199 0) 0 nil])
([nil nil ((1170 . 1187) (#("get" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1170) (undo-tree-id15342 . -3) (undo-tree-id15343 . -3) (undo-tree-id15344 . -3) (undo-tree-id15345 . -3) (undo-tree-id15346 . -3) (undo-tree-id15347 . -3) (undo-tree-id15348 . -3) (undo-tree-id15349 . -3) (undo-tree-id15350 . -3) (undo-tree-id15351 . -3) (undo-tree-id15352 . -3) (undo-tree-id15353 . -3) (undo-tree-id15354 . -3) (undo-tree-id15355 . -3) (undo-tree-id15356 . -3) (undo-tree-id15357 . -3) (undo-tree-id15358 . -3) (undo-tree-id15359 . -3) (undo-tree-id15360 . -3) (undo-tree-id15361 . -3) (undo-tree-id15362 . -3) (undo-tree-id15363 . -3) (undo-tree-id15364 . -3) (undo-tree-id15365 . -3) (undo-tree-id15366 . -3) (undo-tree-id15367 . -3) (undo-tree-id15368 . -3) (undo-tree-id15369 . -3) (undo-tree-id15370 . -3) (undo-tree-id15371 . -3) (undo-tree-id15372 . -3) (undo-tree-id15373 . -3) (undo-tree-id15374 . -3) (undo-tree-id15375 . -3) (undo-tree-id15376 . -3) (undo-tree-id15377 . -3) (undo-tree-id15378 . -3) (undo-tree-id15379 . -3) (undo-tree-id15380 . -3) (undo-tree-id15381 . -3) (undo-tree-id15382 . -3) (undo-tree-id15383 . -3) (undo-tree-id15384 . -3) (undo-tree-id15385 . -3) (undo-tree-id15386 . -3) (undo-tree-id15387 . -3) (undo-tree-id15388 . -3) (undo-tree-id15389 . -3) (undo-tree-id15390 . -3) (undo-tree-id15391 . -3) (undo-tree-id15392 . -3) (undo-tree-id15393 . -3) (undo-tree-id15394 . -3) (undo-tree-id15395 . -3) (undo-tree-id15396 . -3) (undo-tree-id15397 . -3) (undo-tree-id15398 . -3) (undo-tree-id15399 . -3) (undo-tree-id15400 . -3) (undo-tree-id15401 . -3) (undo-tree-id15402 . -3) (undo-tree-id15403 . -3) (undo-tree-id15404 . -3) (undo-tree-id15405 . -3) (undo-tree-id15406 . -3) (undo-tree-id15407 . -3) (undo-tree-id15408 . -3) (undo-tree-id15409 . -3) (undo-tree-id15410 . -3) (undo-tree-id15411 . -3) (undo-tree-id15412 . -3) (undo-tree-id15413 . -3) (undo-tree-id15414 . -3) (undo-tree-id15415 . -3) (undo-tree-id15416 . -3) (undo-tree-id15417 . -3) (undo-tree-id15418 . -3) (undo-tree-id15419 . -3) (undo-tree-id15420 . -3) (undo-tree-id15421 . -3) (undo-tree-id15422 . -3) (undo-tree-id15423 . -3) (undo-tree-id15424 . -3) (undo-tree-id15425 . -3) (undo-tree-id15426 . -3) (undo-tree-id15427 . -3) (undo-tree-id15428 . -3) (undo-tree-id15429 . -3) (undo-tree-id15430 . -3) (undo-tree-id15431 . -3) (undo-tree-id15432 . -3) (undo-tree-id15433 . -3) (undo-tree-id15434 . -3) (undo-tree-id15435 . -3) (undo-tree-id15436 . -3) (undo-tree-id15437 . -3) (undo-tree-id15438 . -3) (undo-tree-id15439 . -3) (undo-tree-id15440 . -3) (undo-tree-id15441 . -3) (undo-tree-id15442 . -3) (undo-tree-id15443 . -3) (undo-tree-id15444 . -3) (undo-tree-id15445 . -3) (undo-tree-id15446 . -3) (undo-tree-id15447 . -3) (undo-tree-id15448 . -3) (undo-tree-id15449 . -3) (undo-tree-id15450 . -3) (undo-tree-id15451 . -3) (undo-tree-id15452 . -3) (undo-tree-id15453 . -3) (undo-tree-id15454 . -3) (undo-tree-id15455 . -3) (undo-tree-id15456 . -3) (undo-tree-id15457 . -3) (undo-tree-id15458 . -3) (undo-tree-id15459 . -3) (undo-tree-id15460 . -3) (undo-tree-id15461 . -3) (undo-tree-id15462 . -3) (undo-tree-id15463 . -3) (undo-tree-id15464 . -3) (undo-tree-id15465 . -3) (undo-tree-id15466 . -3) (undo-tree-id15467 . -3) (undo-tree-id15468 . -3) (undo-tree-id15469 . -3) (undo-tree-id15470 . -3) (undo-tree-id15471 . -3) (undo-tree-id15472 . -3) (undo-tree-id15473 . -3) (undo-tree-id15474 . -3) (undo-tree-id15475 . -3) (undo-tree-id15476 . -3) (undo-tree-id15477 . -3) (undo-tree-id15478 . -3) (undo-tree-id15479 . -3) (undo-tree-id15480 . -3) (undo-tree-id15481 . -3) (undo-tree-id15482 . -3) (undo-tree-id15483 . -3) (undo-tree-id15484 . -3) (undo-tree-id15485 . -3) (undo-tree-id15486 . -3) (undo-tree-id15487 . -3) (undo-tree-id15488 . -3) (undo-tree-id15489 . -3) (undo-tree-id15490 . -3) (undo-tree-id15491 . -3) (undo-tree-id15492 . -3) (undo-tree-id15493 . -3) (undo-tree-id15494 . -3) (undo-tree-id15495 . -3) (undo-tree-id15496 . -3) (undo-tree-id15497 . -3) (undo-tree-id15498 . -3) (undo-tree-id15499 . -3) (undo-tree-id15500 . -3) (undo-tree-id15501 . -3) (undo-tree-id15502 . -3) (undo-tree-id15503 . -3) (undo-tree-id15504 . -3) (undo-tree-id15505 . -3) (undo-tree-id15506 . -3) (undo-tree-id15507 . -3) (undo-tree-id15508 . -3) (undo-tree-id15509 . -3) (undo-tree-id15510 . -3) (undo-tree-id15511 . -3) (undo-tree-id15512 . -3) (undo-tree-id15513 . -3) (undo-tree-id15514 . -3) (undo-tree-id15515 . -3) (undo-tree-id15516 . -3) (undo-tree-id15517 . -3) (undo-tree-id15518 . -3) (undo-tree-id15519 . -3) (undo-tree-id15520 . -3) (undo-tree-id15521 . -3) (undo-tree-id15522 . -3) (undo-tree-id15523 . -3) (undo-tree-id15524 . -3) (undo-tree-id15525 . -3) (undo-tree-id15526 . -3) (undo-tree-id15527 . -3) (undo-tree-id15528 . -3) (undo-tree-id15529 . -3) (undo-tree-id15530 . -3) (undo-tree-id15531 . -3) (undo-tree-id15532 . -3) (undo-tree-id15533 . -3) (undo-tree-id15534 . -3) (undo-tree-id15535 . -3) (undo-tree-id15536 . -3) (undo-tree-id15537 . -3) (undo-tree-id15538 . -3) (undo-tree-id15539 . -3) (undo-tree-id15540 . -3) (undo-tree-id15541 . -3) (undo-tree-id15542 . -3) (undo-tree-id15543 . -3) (undo-tree-id15544 . -3) (undo-tree-id15545 . -3) (undo-tree-id15546 . -3) (undo-tree-id15547 . -3) (undo-tree-id15548 . -3) (undo-tree-id15549 . -3) (undo-tree-id15550 . -3) (undo-tree-id15551 . -3) (undo-tree-id15552 . -3) (undo-tree-id15553 . -3) (undo-tree-id15554 . -3) (undo-tree-id15555 . -3) (undo-tree-id15556 . -3) (undo-tree-id15557 . -3) (undo-tree-id15558 . -3) (undo-tree-id15559 . -3) (undo-tree-id15560 . -3) (undo-tree-id15561 . -3) (undo-tree-id15562 . -3) (undo-tree-id15563 . -3) (undo-tree-id15564 . -3) (undo-tree-id15565 . -3) (undo-tree-id15566 . -3) (undo-tree-id15567 . -3) (undo-tree-id15568 . -3) (undo-tree-id15569 . -3) (undo-tree-id15570 . -3) (undo-tree-id15571 . -3) (undo-tree-id15572 . -3) (undo-tree-id15573 . -3) (undo-tree-id15574 . -3) (undo-tree-id15575 . -3) (undo-tree-id15576 . -3) (undo-tree-id15577 . -3) (undo-tree-id15578 . -3) (undo-tree-id15579 . -3) (undo-tree-id15580 . -3) (undo-tree-id15581 . -3) (undo-tree-id15582 . -3) (undo-tree-id15583 . -3) (undo-tree-id15584 . -3) (undo-tree-id15585 . -3) (undo-tree-id15586 . -3) (undo-tree-id15587 . -3) (undo-tree-id15588 . -3) (undo-tree-id15589 . -3) (undo-tree-id15590 . -3) (undo-tree-id15591 . -3) (undo-tree-id15592 . -3) (undo-tree-id15593 . -3) (undo-tree-id15594 . -3) (undo-tree-id15595 . -3) (undo-tree-id15596 . -3) (undo-tree-id15597 . -3) (undo-tree-id15598 . -3) (undo-tree-id15599 . -3) (undo-tree-id15600 . -3) (undo-tree-id15601 . -3) (undo-tree-id15602 . -3) (undo-tree-id15603 . -3) (undo-tree-id15604 . -3) (undo-tree-id15605 . -3) 1173 (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -1173) (undo-tree-id15606 . -1) (undo-tree-id15607 . -1) (undo-tree-id15608 . -1) (undo-tree-id15609 . -1) (undo-tree-id15610 . -1) (undo-tree-id15611 . -1) (undo-tree-id15612 . -1) (undo-tree-id15613 . -1) (undo-tree-id15614 . -1) (undo-tree-id15615 . -1) (undo-tree-id15616 . -1) (undo-tree-id15617 . -1) (undo-tree-id15618 . -1) (undo-tree-id15619 . -1) (undo-tree-id15620 . -1) (undo-tree-id15621 . -1) (undo-tree-id15622 . -1) (undo-tree-id15623 . -1) (undo-tree-id15624 . -1) (undo-tree-id15625 . -1) (undo-tree-id15626 . -1) (undo-tree-id15627 . -1) (undo-tree-id15628 . -1) (undo-tree-id15629 . -1) (undo-tree-id15630 . -1) (undo-tree-id15631 . -1) (undo-tree-id15632 . -1) (undo-tree-id15633 . -1) (undo-tree-id15634 . -1) (undo-tree-id15635 . -1) (undo-tree-id15636 . -1) (undo-tree-id15637 . -1) (undo-tree-id15638 . -1) (undo-tree-id15639 . -1) (undo-tree-id15640 . -1) (undo-tree-id15641 . -1) (undo-tree-id15642 . -1) (undo-tree-id15643 . -1) (undo-tree-id15644 . -1) (undo-tree-id15645 . -1) (undo-tree-id15646 . -1) (undo-tree-id15647 . -1) (undo-tree-id15648 . -1) (undo-tree-id15649 . -1) (undo-tree-id15650 . -1) (undo-tree-id15651 . -1) (undo-tree-id15652 . -1) (undo-tree-id15653 . -1) (undo-tree-id15654 . -1) (undo-tree-id15655 . -1) (undo-tree-id15656 . -1) (undo-tree-id15657 . -1) (undo-tree-id15658 . -1) (undo-tree-id15659 . -1) (undo-tree-id15660 . -1) (undo-tree-id15661 . -1) (undo-tree-id15662 . -1) (undo-tree-id15663 . -1) (undo-tree-id15664 . -1) (undo-tree-id15665 . -1) (undo-tree-id15666 . -1) (undo-tree-id15667 . -1) (undo-tree-id15668 . -1) (undo-tree-id15669 . -1) (undo-tree-id15670 . -1) (undo-tree-id15671 . -1) (undo-tree-id15672 . -1) (undo-tree-id15673 . -1) (undo-tree-id15674 . -1) (undo-tree-id15675 . -1) (undo-tree-id15676 . -1) (undo-tree-id15677 . -1) (undo-tree-id15678 . -1) (undo-tree-id15679 . -1) (undo-tree-id15680 . -1) (undo-tree-id15681 . -1) (undo-tree-id15682 . -1) (undo-tree-id15683 . -1) (undo-tree-id15684 . -1) (undo-tree-id15685 . -1) (undo-tree-id15686 . -1) (undo-tree-id15687 . -1) (undo-tree-id15688 . -1) (undo-tree-id15689 . -1) (undo-tree-id15690 . -1) (undo-tree-id15691 . -1) (undo-tree-id15692 . -1) (undo-tree-id15693 . -1) (undo-tree-id15694 . -1) (undo-tree-id15695 . -1) (undo-tree-id15696 . -1) (undo-tree-id15697 . -1) (undo-tree-id15698 . -1) (undo-tree-id15699 . -1) (undo-tree-id15700 . -1) (undo-tree-id15701 . -1) (undo-tree-id15702 . -1) (undo-tree-id15703 . -1) (undo-tree-id15704 . -1) (undo-tree-id15705 . -1) (undo-tree-id15706 . -1) (undo-tree-id15707 . -1) (undo-tree-id15708 . -1) (undo-tree-id15709 . -1) (undo-tree-id15710 . -1) (undo-tree-id15711 . -1) (undo-tree-id15712 . -1) (undo-tree-id15713 . -1) (undo-tree-id15714 . -1) (undo-tree-id15715 . -1) (undo-tree-id15716 . -1) (undo-tree-id15717 . -1) (undo-tree-id15718 . -1) (undo-tree-id15719 . -1) (undo-tree-id15720 . -1) (undo-tree-id15721 . -1) (undo-tree-id15722 . -1) (undo-tree-id15723 . -1) (undo-tree-id15724 . -1) (undo-tree-id15725 . -1) (undo-tree-id15726 . -1) (undo-tree-id15727 . -1) (undo-tree-id15728 . -1) (undo-tree-id15729 . -1) (undo-tree-id15730 . -1) (undo-tree-id15731 . -1) (undo-tree-id15732 . -1) (undo-tree-id15733 . -1) (undo-tree-id15734 . -1) (undo-tree-id15735 . -1) (undo-tree-id15736 . -1) (undo-tree-id15737 . -1) (undo-tree-id15738 . -1) (undo-tree-id15739 . -1) (undo-tree-id15740 . -1) (undo-tree-id15741 . -1) (undo-tree-id15742 . -1) (undo-tree-id15743 . -1) (undo-tree-id15744 . -1) (undo-tree-id15745 . -1) (undo-tree-id15746 . -1) (undo-tree-id15747 . -1) (undo-tree-id15748 . -1) (undo-tree-id15749 . -1) (undo-tree-id15750 . -1) (undo-tree-id15751 . -1) (undo-tree-id15752 . -1) (undo-tree-id15753 . -1) (undo-tree-id15754 . -1) (undo-tree-id15755 . -1) (undo-tree-id15756 . -1) (undo-tree-id15757 . -1) (undo-tree-id15758 . -1) (undo-tree-id15759 . -1) (undo-tree-id15760 . -1) (undo-tree-id15761 . -1) (undo-tree-id15762 . -1) (undo-tree-id15763 . -1) (undo-tree-id15764 . -1) (undo-tree-id15765 . -1) (undo-tree-id15766 . -1) (undo-tree-id15767 . -1) (undo-tree-id15768 . -1) (undo-tree-id15769 . -1) (undo-tree-id15770 . -1) (undo-tree-id15771 . -1) (undo-tree-id15772 . -1) (undo-tree-id15773 . -1) (undo-tree-id15774 . -1) (undo-tree-id15775 . -1) (undo-tree-id15776 . -1) (undo-tree-id15777 . -1) (undo-tree-id15778 . -1) (undo-tree-id15779 . -1) (undo-tree-id15780 . -1) (undo-tree-id15781 . -1) (undo-tree-id15782 . -1) (undo-tree-id15783 . -1) (undo-tree-id15784 . -1) (undo-tree-id15785 . -1) (undo-tree-id15786 . -1) (undo-tree-id15787 . -1) (undo-tree-id15788 . -1) (undo-tree-id15789 . -1) (undo-tree-id15790 . -1) (undo-tree-id15791 . -1) (undo-tree-id15792 . -1) (undo-tree-id15793 . -1) (undo-tree-id15794 . -1) (undo-tree-id15795 . -1) (undo-tree-id15796 . -1) (undo-tree-id15797 . -1) (undo-tree-id15798 . -1) (undo-tree-id15799 . -1) (undo-tree-id15800 . -1) (undo-tree-id15801 . -1) (undo-tree-id15802 . -1) (undo-tree-id15803 . -1) (undo-tree-id15804 . -1) (undo-tree-id15805 . -1) (undo-tree-id15806 . -1) (undo-tree-id15807 . -1) (undo-tree-id15808 . -1) (undo-tree-id15809 . -1) (undo-tree-id15810 . -1) (undo-tree-id15811 . -1) (undo-tree-id15812 . -1) (undo-tree-id15813 . -1) (undo-tree-id15814 . -1) (undo-tree-id15815 . -1) (undo-tree-id15816 . -1) (undo-tree-id15817 . -1) (undo-tree-id15818 . -1) (undo-tree-id15819 . -1) (undo-tree-id15820 . -1) (undo-tree-id15821 . -1) (undo-tree-id15822 . -1) (undo-tree-id15823 . -1) (undo-tree-id15824 . -1) (undo-tree-id15825 . -1) (undo-tree-id15826 . -1) (undo-tree-id15827 . -1) (undo-tree-id15828 . -1) (undo-tree-id15829 . -1) (undo-tree-id15830 . -1) (undo-tree-id15831 . -1) (undo-tree-id15832 . -1) (undo-tree-id15833 . -1) (undo-tree-id15834 . -1) (undo-tree-id15835 . -1) (undo-tree-id15836 . -1) (undo-tree-id15837 . -1) (undo-tree-id15838 . -1) (undo-tree-id15839 . -1) (undo-tree-id15840 . -1) (undo-tree-id15841 . -1) (undo-tree-id15842 . -1) (undo-tree-id15843 . -1) (undo-tree-id15844 . -1) 1174 (#("idx" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1174) (undo-tree-id15845 . -3) (undo-tree-id15846 . -3) (undo-tree-id15847 . -3) (undo-tree-id15848 . -3) (undo-tree-id15849 . -3) (undo-tree-id15850 . -3) (undo-tree-id15851 . -3) (undo-tree-id15852 . -3) (undo-tree-id15853 . -3) (undo-tree-id15854 . -3) (undo-tree-id15855 . -3) (undo-tree-id15856 . -3) (undo-tree-id15857 . -3) (undo-tree-id15858 . -3) (undo-tree-id15859 . -3) (undo-tree-id15860 . -3) (undo-tree-id15861 . -3) (undo-tree-id15862 . -3) (undo-tree-id15863 . -3) (undo-tree-id15864 . -3) (undo-tree-id15865 . -3) (undo-tree-id15866 . -3) (undo-tree-id15867 . -3) (undo-tree-id15868 . -3) (undo-tree-id15869 . -3) (undo-tree-id15870 . -3) (undo-tree-id15871 . -3) (undo-tree-id15872 . -3) (undo-tree-id15873 . -3) (undo-tree-id15874 . -3) (undo-tree-id15875 . -3) (undo-tree-id15876 . -3) (undo-tree-id15877 . -3) (undo-tree-id15878 . -3) (undo-tree-id15879 . -3) (undo-tree-id15880 . -3) (undo-tree-id15881 . -3) (undo-tree-id15882 . -3) (undo-tree-id15883 . -3) (undo-tree-id15884 . -3) (undo-tree-id15885 . -3) (undo-tree-id15886 . -3) (undo-tree-id15887 . -3) (undo-tree-id15888 . -3) (undo-tree-id15889 . -3) (undo-tree-id15890 . -3) (undo-tree-id15891 . -3) (undo-tree-id15892 . -3) (undo-tree-id15893 . -3) (undo-tree-id15894 . -3) (undo-tree-id15895 . -3) (undo-tree-id15896 . -3) (undo-tree-id15897 . -3) (undo-tree-id15898 . -3) (undo-tree-id15899 . -3) (undo-tree-id15900 . -3) (undo-tree-id15901 . -3) (undo-tree-id15902 . -3) (undo-tree-id15903 . -3) (undo-tree-id15904 . -3) (undo-tree-id15905 . -3) (undo-tree-id15906 . -3) (undo-tree-id15907 . -3) (undo-tree-id15908 . -3) (undo-tree-id15909 . -3) (undo-tree-id15910 . -3) (undo-tree-id15911 . -3) (undo-tree-id15912 . -3) (undo-tree-id15913 . -3) (undo-tree-id15914 . -3) (undo-tree-id15915 . -3) (undo-tree-id15916 . -3) (undo-tree-id15917 . -3) (undo-tree-id15918 . -3) (undo-tree-id15919 . -3) (undo-tree-id15920 . -3) (undo-tree-id15921 . -3) (undo-tree-id15922 . -3) (undo-tree-id15923 . -3) (undo-tree-id15924 . -3) (undo-tree-id15925 . -3) (undo-tree-id15926 . -3) (undo-tree-id15927 . -3) (undo-tree-id15928 . -3) (undo-tree-id15929 . -3) (undo-tree-id15930 . -3) (undo-tree-id15931 . -3) (undo-tree-id15932 . -3) (undo-tree-id15933 . -3) (undo-tree-id15934 . -3) (undo-tree-id15935 . -3) (undo-tree-id15936 . -3) (undo-tree-id15937 . -3) (undo-tree-id15938 . -3) (undo-tree-id15939 . -3) (undo-tree-id15940 . -3) (undo-tree-id15941 . -3) (undo-tree-id15942 . -3) (undo-tree-id15943 . -3) (undo-tree-id15944 . -3) (undo-tree-id15945 . -3) (undo-tree-id15946 . -3) (undo-tree-id15947 . -3) (undo-tree-id15948 . -3) (undo-tree-id15949 . -3) (undo-tree-id15950 . -3) (undo-tree-id15951 . -3) (undo-tree-id15952 . -3) (undo-tree-id15953 . -3) (undo-tree-id15954 . -3) (undo-tree-id15955 . -3) (undo-tree-id15956 . -3) (undo-tree-id15957 . -3) (undo-tree-id15958 . -3) (undo-tree-id15959 . -3) (undo-tree-id15960 . -3) (undo-tree-id15961 . -3) (undo-tree-id15962 . -3) (undo-tree-id15963 . -3) (undo-tree-id15964 . -3) (undo-tree-id15965 . -3) (undo-tree-id15966 . -3) (undo-tree-id15967 . -3) (undo-tree-id15968 . -3) (undo-tree-id15969 . -3) (undo-tree-id15970 . -3) (undo-tree-id15971 . -3) (undo-tree-id15972 . -3) (undo-tree-id15973 . -3) (undo-tree-id15974 . -3) (undo-tree-id15975 . -3) (undo-tree-id15976 . -3) (undo-tree-id15977 . -3) (undo-tree-id15978 . -3) (undo-tree-id15979 . -3) (undo-tree-id15980 . -3) (undo-tree-id15981 . -3) (undo-tree-id15982 . -3) (undo-tree-id15983 . -3) (undo-tree-id15984 . -3) (undo-tree-id15985 . -3) (undo-tree-id15986 . -3) (undo-tree-id15987 . -3) (undo-tree-id15988 . -3) (undo-tree-id15989 . -3) (undo-tree-id15990 . -3) (undo-tree-id15991 . -3) (undo-tree-id15992 . -3) (undo-tree-id15993 . -3) (undo-tree-id15994 . -3) (undo-tree-id15995 . -3) (undo-tree-id15996 . -3) (undo-tree-id15997 . -3) (undo-tree-id15998 . -3) (undo-tree-id15999 . -3) (undo-tree-id16000 . -3) (undo-tree-id16001 . -3) (undo-tree-id16002 . -3) (undo-tree-id16003 . -3) (undo-tree-id16004 . -3) (undo-tree-id16005 . -3) (undo-tree-id16006 . -3) (undo-tree-id16007 . -3) (undo-tree-id16008 . -3) (undo-tree-id16009 . -3) (undo-tree-id16010 . -3) (undo-tree-id16011 . -3) (undo-tree-id16012 . -3) (undo-tree-id16013 . -3) (undo-tree-id16014 . -3) (undo-tree-id16015 . -3) (undo-tree-id16016 . -3) (undo-tree-id16017 . -3) (undo-tree-id16018 . -3) (undo-tree-id16019 . -3) (undo-tree-id16020 . -3) (undo-tree-id16021 . -3) (undo-tree-id16022 . -3) (undo-tree-id16023 . -3) (undo-tree-id16024 . -3) (undo-tree-id16025 . -3) (undo-tree-id16026 . -3) (undo-tree-id16027 . -3) (undo-tree-id16028 . -3) (undo-tree-id16029 . -3) (undo-tree-id16030 . -3) (undo-tree-id16031 . -3) (undo-tree-id16032 . -3) (undo-tree-id16033 . -3) (undo-tree-id16034 . -3) (undo-tree-id16035 . -3) (undo-tree-id16036 . -3) (undo-tree-id16037 . -3) (undo-tree-id16038 . -3) (undo-tree-id16039 . -3) (undo-tree-id16040 . -3) (undo-tree-id16041 . -3) (undo-tree-id16042 . -3) (undo-tree-id16043 . -3) (undo-tree-id16044 . -3) (undo-tree-id16045 . -3) (undo-tree-id16046 . -3) (undo-tree-id16047 . -3) (undo-tree-id16048 . -3) (undo-tree-id16049 . -3) (undo-tree-id16050 . -3) (undo-tree-id16051 . -3) 1177 (#(") " 0 1 (face (rainbow-delimiters-depth-4-face) fontified t) 1 2 (fontified t)) . -1177) (undo-tree-id16052 . -2) (undo-tree-id16053 . -2) (undo-tree-id16054 . -2) (undo-tree-id16055 . -2) (undo-tree-id16056 . -2) (undo-tree-id16057 . -2) (undo-tree-id16058 . -2) (undo-tree-id16059 . -2) (undo-tree-id16060 . -2) (undo-tree-id16061 . -2) (undo-tree-id16062 . -2) (undo-tree-id16063 . -2) (undo-tree-id16064 . -2) (undo-tree-id16065 . -2) (undo-tree-id16066 . -2) (undo-tree-id16067 . -2) (undo-tree-id16068 . -2) (undo-tree-id16069 . -2) (undo-tree-id16070 . -2) (undo-tree-id16071 . -2) (undo-tree-id16072 . -2) (undo-tree-id16073 . -2) (undo-tree-id16074 . -2) (undo-tree-id16075 . -2) (undo-tree-id16076 . -2) (undo-tree-id16077 . -2) (undo-tree-id16078 . -2) (undo-tree-id16079 . -2) (undo-tree-id16080 . -2) (undo-tree-id16081 . -2) (undo-tree-id16082 . -2) (undo-tree-id16083 . -2) (undo-tree-id16084 . -2) (undo-tree-id16085 . -2) (undo-tree-id16086 . -2) (undo-tree-id16087 . -2) (undo-tree-id16088 . -2) (undo-tree-id16089 . -2) (undo-tree-id16090 . -2) (undo-tree-id16091 . -2) (undo-tree-id16092 . -2) (undo-tree-id16093 . -2) (undo-tree-id16094 . -2) (undo-tree-id16095 . -2) (undo-tree-id16096 . -2) (undo-tree-id16097 . -2) (undo-tree-id16098 . -2) (undo-tree-id16099 . -2) (undo-tree-id16100 . -2) (undo-tree-id16101 . -2) (undo-tree-id16102 . -2) (undo-tree-id16103 . -2) (undo-tree-id16104 . -2) (undo-tree-id16105 . -2) (undo-tree-id16106 . -2) (undo-tree-id16107 . -2) (undo-tree-id16108 . -2) (undo-tree-id16109 . -2) (undo-tree-id16110 . -2) (undo-tree-id16111 . -2) (undo-tree-id16112 . -2) (undo-tree-id16113 . -2) (undo-tree-id16114 . -2) (undo-tree-id16115 . -2) (undo-tree-id16116 . -2) (undo-tree-id16117 . -2) (undo-tree-id16118 . -2) (undo-tree-id16119 . -2) (undo-tree-id16120 . -2) (undo-tree-id16121 . -2) (undo-tree-id16122 . -2) (undo-tree-id16123 . -2) (undo-tree-id16124 . -2) (undo-tree-id16125 . -2) (undo-tree-id16126 . -2) (undo-tree-id16127 . -2) (undo-tree-id16128 . -2) (undo-tree-id16129 . -2) (undo-tree-id16130 . -2) (undo-tree-id16131 . -2) (undo-tree-id16132 . -2) (undo-tree-id16133 . -2) (undo-tree-id16134 . -2) (undo-tree-id16135 . -2) (undo-tree-id16136 . -2) (undo-tree-id16137 . -2) (undo-tree-id16138 . -2) (undo-tree-id16139 . -2) (undo-tree-id16140 . -2) (undo-tree-id16141 . -2) (undo-tree-id16142 . -2) (undo-tree-id16143 . -2) (undo-tree-id16144 . -2) (undo-tree-id16145 . -2) (undo-tree-id16146 . -2) (undo-tree-id16147 . -2) (undo-tree-id16148 . -2) (undo-tree-id16149 . -2) (undo-tree-id16150 . -2) (undo-tree-id16151 . -2) (undo-tree-id16152 . -2) (undo-tree-id16153 . -2) (undo-tree-id16154 . -2) (undo-tree-id16155 . -2) (undo-tree-id16156 . -2) (undo-tree-id16157 . -2) (undo-tree-id16158 . -2) (undo-tree-id16159 . -2) (undo-tree-id16160 . -2) (undo-tree-id16161 . -2) (undo-tree-id16162 . -2) (undo-tree-id16163 . -2) (undo-tree-id16164 . -2) (undo-tree-id16165 . -2) (undo-tree-id16166 . -2) 1179) nil (26026 36170 73187 0) 0 nil])
([nil nil ((1170 . 1179) (#("jjjjjjjjjjjjjjjjj" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 1170) (undo-tree-id14901 . -5) (undo-tree-id14902 . -16) (undo-tree-id14903 . -1) (undo-tree-id14904 . -1) (undo-tree-id14905 . -1) (undo-tree-id14906 . -1) (undo-tree-id14907 . -1) (undo-tree-id14908 . -1) (undo-tree-id14909 . -1) (undo-tree-id14910 . -1) (undo-tree-id14911 . -1) (undo-tree-id14912 . -1) (undo-tree-id14913 . -1) (undo-tree-id14914 . -1) (undo-tree-id14915 . -1) (undo-tree-id14916 . -1) (undo-tree-id14917 . -1) (undo-tree-id14918 . -1) (undo-tree-id14919 . -1) (undo-tree-id14920 . -1) (undo-tree-id14921 . -1) (undo-tree-id14922 . -1) (undo-tree-id14923 . -1) (undo-tree-id14924 . -1) (undo-tree-id14925 . -1) (undo-tree-id14926 . -1) (undo-tree-id14927 . -1) (undo-tree-id14928 . -1) (undo-tree-id14929 . -1) (undo-tree-id14930 . -1) (undo-tree-id14931 . -1) (undo-tree-id14932 . -1) (undo-tree-id14933 . -1) (undo-tree-id14934 . -1) (undo-tree-id14935 . -1) (undo-tree-id14936 . -1) (undo-tree-id14937 . -1) (undo-tree-id14938 . -1) (undo-tree-id14939 . -1) (undo-tree-id14940 . -1) (undo-tree-id14941 . -1) (undo-tree-id14942 . -2) (undo-tree-id14943 . -2) (undo-tree-id14944 . -2) (undo-tree-id14945 . -2) (undo-tree-id14946 . -2) (undo-tree-id14947 . -2) (undo-tree-id14948 . -3) (undo-tree-id14949 . -3) (undo-tree-id14950 . -3) (undo-tree-id14951 . -3) (undo-tree-id14952 . -3) (undo-tree-id14953 . -3) (undo-tree-id14954 . -3) (undo-tree-id14955 . -3) (undo-tree-id14956 . -3) (undo-tree-id14957 . -3) (undo-tree-id14958 . -3) (undo-tree-id14959 . -3) (undo-tree-id14960 . -3) (undo-tree-id14961 . -3) (undo-tree-id14962 . -4) (undo-tree-id14963 . -4) (undo-tree-id14964 . -4) (undo-tree-id14965 . -4) (undo-tree-id14966 . -4) (undo-tree-id14967 . -4) (undo-tree-id14968 . -5) (undo-tree-id14969 . -5) (undo-tree-id14970 . -5) (undo-tree-id14971 . -5) (undo-tree-id14972 . -5) (undo-tree-id14973 . -5) (undo-tree-id14974 . -5) (undo-tree-id14975 . -5) (undo-tree-id14976 . -5) (undo-tree-id14977 . -5) (undo-tree-id14978 . -5) (undo-tree-id14979 . -5) (undo-tree-id14980 . -5) (undo-tree-id14981 . -5) (undo-tree-id14982 . -5) (undo-tree-id14983 . -5) (undo-tree-id14984 . -5) (undo-tree-id14985 . -5) (undo-tree-id14986 . -5) (undo-tree-id14987 . -5) (undo-tree-id14988 . -5) (undo-tree-id14989 . -5) (undo-tree-id14990 . -6) (undo-tree-id14991 . -6) (undo-tree-id14992 . -6) (undo-tree-id14993 . -6) (undo-tree-id14994 . -6) (undo-tree-id14995 . -6) (undo-tree-id14996 . -6) (undo-tree-id14997 . -6) (undo-tree-id14998 . -6) (undo-tree-id14999 . -6) (undo-tree-id15000 . -6) (undo-tree-id15001 . -6) (undo-tree-id15002 . -6) (undo-tree-id15003 . -6) (undo-tree-id15004 . -6) (undo-tree-id15005 . -6) (undo-tree-id15006 . -6) (undo-tree-id15007 . -6) (undo-tree-id15008 . -6) (undo-tree-id15009 . -6) (undo-tree-id15010 . -6) (undo-tree-id15011 . -6) (undo-tree-id15012 . -6) (undo-tree-id15013 . -6) (undo-tree-id15014 . -6) (undo-tree-id15015 . -7) (undo-tree-id15016 . -7) (undo-tree-id15017 . -7) (undo-tree-id15018 . -7) (undo-tree-id15019 . -7) (undo-tree-id15020 . -7) (undo-tree-id15021 . -7) (undo-tree-id15022 . -7) (undo-tree-id15023 . -7) (undo-tree-id15024 . -7) (undo-tree-id15025 . -7) (undo-tree-id15026 . -7) (undo-tree-id15027 . -7) (undo-tree-id15028 . -7) (undo-tree-id15029 . -7) (undo-tree-id15030 . -7) (undo-tree-id15031 . -7) (undo-tree-id15032 . -7) (undo-tree-id15033 . -7) (undo-tree-id15034 . -7) (undo-tree-id15035 . -7) (undo-tree-id15036 . -7) (undo-tree-id15037 . -7) (undo-tree-id15038 . -7) (undo-tree-id15039 . -7) (undo-tree-id15040 . -7) (undo-tree-id15041 . -7) (undo-tree-id15042 . -7) (undo-tree-id15043 . -7) (undo-tree-id15044 . -7) (undo-tree-id15045 . -7) (undo-tree-id15046 . -8) (undo-tree-id15047 . -8) (undo-tree-id15048 . -8) (undo-tree-id15049 . -8) (undo-tree-id15050 . -8) (undo-tree-id15051 . -8) (undo-tree-id15052 . -8) (undo-tree-id15053 . -8) (undo-tree-id15054 . -8) (undo-tree-id15055 . -8) (undo-tree-id15056 . -8) (undo-tree-id15057 . -8) (undo-tree-id15058 . -8) (undo-tree-id15059 . -8) (undo-tree-id15060 . -8) (undo-tree-id15061 . -8) (undo-tree-id15062 . -8) (undo-tree-id15063 . -8) (undo-tree-id15064 . -8) (undo-tree-id15065 . -8) (undo-tree-id15066 . -8) (undo-tree-id15067 . -8) (undo-tree-id15068 . -8) (undo-tree-id15069 . -8) (undo-tree-id15070 . -8) (undo-tree-id15071 . -9) (undo-tree-id15072 . -9) (undo-tree-id15073 . -9) (undo-tree-id15074 . -9) (undo-tree-id15075 . -9) (undo-tree-id15076 . -9) (undo-tree-id15077 . -9) (undo-tree-id15078 . -9) (undo-tree-id15079 . -9) (undo-tree-id15080 . -9) (undo-tree-id15081 . -9) (undo-tree-id15082 . -9) (undo-tree-id15083 . -9) (undo-tree-id15084 . -9) (undo-tree-id15085 . -9) (undo-tree-id15086 . -9) (undo-tree-id15087 . -9) (undo-tree-id15088 . -9) (undo-tree-id15089 . -9) (undo-tree-id15090 . -9) (undo-tree-id15091 . -9) (undo-tree-id15092 . -9) (undo-tree-id15093 . -9) (undo-tree-id15094 . -9) (undo-tree-id15095 . -9) (undo-tree-id15096 . -10) (undo-tree-id15097 . -10) (undo-tree-id15098 . -10) (undo-tree-id15099 . -10) (undo-tree-id15100 . -10) (undo-tree-id15101 . -10) (undo-tree-id15102 . -10) (undo-tree-id15103 . -10) (undo-tree-id15104 . -10) (undo-tree-id15105 . -10) (undo-tree-id15106 . -10) (undo-tree-id15107 . -10) (undo-tree-id15108 . -10) (undo-tree-id15109 . -10) (undo-tree-id15110 . -10) (undo-tree-id15111 . -10) (undo-tree-id15112 . -10) (undo-tree-id15113 . -10) (undo-tree-id15114 . -10) (undo-tree-id15115 . -10) (undo-tree-id15116 . -10) (undo-tree-id15117 . -10) (undo-tree-id15118 . -10) (undo-tree-id15119 . -10) (undo-tree-id15120 . -10) (undo-tree-id15121 . -11) (undo-tree-id15122 . -11) (undo-tree-id15123 . -11) (undo-tree-id15124 . -11) (undo-tree-id15125 . -11) (undo-tree-id15126 . -11) (undo-tree-id15127 . -11) (undo-tree-id15128 . -11) (undo-tree-id15129 . -11) (undo-tree-id15130 . -11) (undo-tree-id15131 . -11) (undo-tree-id15132 . -11) (undo-tree-id15133 . -11) (undo-tree-id15134 . -11) (undo-tree-id15135 . -11) (undo-tree-id15136 . -11) (undo-tree-id15137 . -11) (undo-tree-id15138 . -11) (undo-tree-id15139 . -11) (undo-tree-id15140 . -11) (undo-tree-id15141 . -11) (undo-tree-id15142 . -11) (undo-tree-id15143 . -11) (undo-tree-id15144 . -11) (undo-tree-id15145 . -11) (undo-tree-id15146 . -12) (undo-tree-id15147 . -12) (undo-tree-id15148 . -12) (undo-tree-id15149 . -12) (undo-tree-id15150 . -12) (undo-tree-id15151 . -12) (undo-tree-id15152 . -12) (undo-tree-id15153 . -12) (undo-tree-id15154 . -12) (undo-tree-id15155 . -12) (undo-tree-id15156 . -12) (undo-tree-id15157 . -12) (undo-tree-id15158 . -12) (undo-tree-id15159 . -12) (undo-tree-id15160 . -12) (undo-tree-id15161 . -12) (undo-tree-id15162 . -12) (undo-tree-id15163 . -12) (undo-tree-id15164 . -12) (undo-tree-id15165 . -12) (undo-tree-id15166 . -12) (undo-tree-id15167 . -12) (undo-tree-id15168 . -12) (undo-tree-id15169 . -12) (undo-tree-id15170 . -12) (undo-tree-id15171 . -13) (undo-tree-id15172 . -13) (undo-tree-id15173 . -13) (undo-tree-id15174 . -13) (undo-tree-id15175 . -13) (undo-tree-id15176 . -13) (undo-tree-id15177 . -13) (undo-tree-id15178 . -13) (undo-tree-id15179 . -13) (undo-tree-id15180 . -13) (undo-tree-id15181 . -13) (undo-tree-id15182 . -13) (undo-tree-id15183 . -13) (undo-tree-id15184 . -13) (undo-tree-id15185 . -13) (undo-tree-id15186 . -13) (undo-tree-id15187 . -13) (undo-tree-id15188 . -13) (undo-tree-id15189 . -13) (undo-tree-id15190 . -13) (undo-tree-id15191 . -13) (undo-tree-id15192 . -13) (undo-tree-id15193 . -13) (undo-tree-id15194 . -13) (undo-tree-id15195 . -13) (undo-tree-id15196 . -14) (undo-tree-id15197 . -14) (undo-tree-id15198 . -14) (undo-tree-id15199 . -14) (undo-tree-id15200 . -14) (undo-tree-id15201 . -14) (undo-tree-id15202 . -14) (undo-tree-id15203 . -14) (undo-tree-id15204 . -14) (undo-tree-id15205 . -14) (undo-tree-id15206 . -14) (undo-tree-id15207 . -14) (undo-tree-id15208 . -14) (undo-tree-id15209 . -14) (undo-tree-id15210 . -14) (undo-tree-id15211 . -14) (undo-tree-id15212 . -14) (undo-tree-id15213 . -14) (undo-tree-id15214 . -14) (undo-tree-id15215 . -14) (undo-tree-id15216 . -14) (undo-tree-id15217 . -14) (undo-tree-id15218 . -14) (undo-tree-id15219 . -14) (undo-tree-id15220 . -14) (undo-tree-id15221 . -15) (undo-tree-id15222 . -15) (undo-tree-id15223 . -15) (undo-tree-id15224 . -15) (undo-tree-id15225 . -15) (undo-tree-id15226 . -15) (undo-tree-id15227 . -15) (undo-tree-id15228 . -15) (undo-tree-id15229 . -15) (undo-tree-id15230 . -15) (undo-tree-id15231 . -15) (undo-tree-id15232 . -15) (undo-tree-id15233 . -15) (undo-tree-id15234 . -15) (undo-tree-id15235 . -15) (undo-tree-id15236 . -15) (undo-tree-id15237 . -15) (undo-tree-id15238 . -15) (undo-tree-id15239 . -15) (undo-tree-id15240 . -15) (undo-tree-id15241 . -15) (undo-tree-id15242 . -15) (undo-tree-id15243 . -15) (undo-tree-id15244 . -15) (undo-tree-id15245 . -15) (undo-tree-id15246 . -16) (undo-tree-id15247 . -16) (undo-tree-id15248 . -16) (undo-tree-id15249 . -16) (undo-tree-id15250 . -16) (undo-tree-id15251 . -16) (undo-tree-id15252 . -16) (undo-tree-id15253 . -16) (undo-tree-id15254 . -16) (undo-tree-id15255 . -16) (undo-tree-id15256 . -16) (undo-tree-id15257 . -16) (undo-tree-id15258 . -16) (undo-tree-id15259 . -16) (undo-tree-id15260 . -16) (undo-tree-id15261 . -16) (undo-tree-id15262 . -16) (undo-tree-id15263 . -16) (undo-tree-id15264 . -16) (undo-tree-id15265 . -16) (undo-tree-id15266 . -16) (undo-tree-id15267 . -16) (undo-tree-id15268 . -16) (undo-tree-id15269 . -16) (undo-tree-id15270 . -16) (undo-tree-id15271 . -17) (undo-tree-id15272 . -17) (undo-tree-id15273 . -17) (undo-tree-id15274 . -17) (undo-tree-id15275 . -17) (undo-tree-id15276 . -17) (undo-tree-id15277 . -17) (undo-tree-id15278 . -17) (undo-tree-id15279 . -17) (undo-tree-id15280 . -17) (undo-tree-id15281 . -17) (undo-tree-id15282 . -17) (undo-tree-id15283 . -17) (undo-tree-id15284 . -17) (undo-tree-id15285 . -17) (undo-tree-id15286 . -17) (undo-tree-id15287 . -17) (undo-tree-id15288 . -17) (undo-tree-id15289 . -17) (undo-tree-id15290 . -17) (undo-tree-id15291 . -17) (undo-tree-id15292 . -17) (undo-tree-id15293 . -17) (undo-tree-id15294 . -17) (undo-tree-id15295 . -17) (undo-tree-id15296 . -17) (undo-tree-id15297 . -17) (undo-tree-id15298 . -17) (undo-tree-id15299 . -17) (undo-tree-id15300 . -17) (undo-tree-id15301 . -17) (undo-tree-id15302 . -17) (undo-tree-id15303 . -17) (undo-tree-id15304 . -17) (undo-tree-id15305 . -17) (undo-tree-id15306 . -17) (undo-tree-id15307 . -17) (undo-tree-id15308 . -16) (undo-tree-id15309 . -16) (undo-tree-id15310 . -16) (undo-tree-id15311 . -16) (undo-tree-id15312 . -16) (undo-tree-id15313 . -16) (undo-tree-id15314 . -16) (undo-tree-id15315 . -16) (undo-tree-id15316 . -16) (undo-tree-id15317 . -16) (undo-tree-id15318 . -16) (undo-tree-id15319 . -16) (undo-tree-id15320 . -16) (undo-tree-id15321 . -16) (undo-tree-id15322 . -16) (undo-tree-id15323 . -16) (undo-tree-id15324 . -16) (undo-tree-id15325 . -16) (undo-tree-id15326 . -16) (undo-tree-id15327 . -16) (undo-tree-id15328 . -16) (undo-tree-id15329 . -16) (undo-tree-id15330 . -16) (undo-tree-id15331 . -16) (undo-tree-id15332 . -16) (undo-tree-id15333 . -16) (undo-tree-id15334 . -16) (undo-tree-id15335 . -16) (undo-tree-id15336 . -16) (undo-tree-id15337 . -16) (undo-tree-id15338 . -16) (undo-tree-id15339 . -16) (undo-tree-id15340 . -16) (undo-tree-id15341 . -16)) nil (26026 36170 72912 0) 0 nil])
([nil nil ((#("                get(idx) 
" 0 1 (fontified t c-is-sws t) 1 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-4-face) fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-4-face) fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 1154) (undo-tree-id13779 . -25) (undo-tree-id13780 . 1) (undo-tree-id13781 . -16) (undo-tree-id13782 . -24) (undo-tree-id13783 . -26) (undo-tree-id13784 . -26) (undo-tree-id13785 . -26) (undo-tree-id13786 . -26) (undo-tree-id13787 . -26) (undo-tree-id13788 . -26) (undo-tree-id13789 . -26) (undo-tree-id13790 . -26) (undo-tree-id13791 . -26) (undo-tree-id13792 . -26) (undo-tree-id13793 . -26) (undo-tree-id13794 . -26) (undo-tree-id13795 . -26) (undo-tree-id13796 . -26) (undo-tree-id13797 . -26) (undo-tree-id13798 . -26) (undo-tree-id13799 . -26) (undo-tree-id13800 . -26) (undo-tree-id13801 . -26) (undo-tree-id13802 . -26) (undo-tree-id13803 . -26) (undo-tree-id13804 . -26) (undo-tree-id13805 . -26) (undo-tree-id13806 . -26) (undo-tree-id13807 . -26) (undo-tree-id13808 . -26) (undo-tree-id13809 . -26) (undo-tree-id13810 . -26) (undo-tree-id13811 . -26) (undo-tree-id13812 . -26) (undo-tree-id13813 . -26) (undo-tree-id13814 . -26) (undo-tree-id13815 . -26) (undo-tree-id13816 . -26) (undo-tree-id13817 . -26) (undo-tree-id13818 . -26) (undo-tree-id13819 . -26) (undo-tree-id13820 . -26) (undo-tree-id13821 . -26) (undo-tree-id13822 . -26) (undo-tree-id13823 . -26) (undo-tree-id13824 . -26) (undo-tree-id13825 . -26) (undo-tree-id13826 . -26) (undo-tree-id13827 . -26) (undo-tree-id13828 . -26) (undo-tree-id13829 . -26) (undo-tree-id13830 . -26) (undo-tree-id13831 . -26) (undo-tree-id13832 . -26) (undo-tree-id13833 . -26) (undo-tree-id13834 . -26) (undo-tree-id13835 . -26) (undo-tree-id13836 . -26) (undo-tree-id13837 . -26) (undo-tree-id13838 . -26) (undo-tree-id13839 . -26) (undo-tree-id13840 . -26) (undo-tree-id13841 . -26) (undo-tree-id13842 . -26) (undo-tree-id13843 . -26) (undo-tree-id13844 . -26) (undo-tree-id13845 . -26) (undo-tree-id13846 . -26) (undo-tree-id13847 . -26) (undo-tree-id13848 . -26) (undo-tree-id13849 . -26) (undo-tree-id13850 . -26) (undo-tree-id13851 . -26) (undo-tree-id13852 . -26) (undo-tree-id13853 . -26) (undo-tree-id13854 . -26) (undo-tree-id13855 . -26) (undo-tree-id13856 . -26) (undo-tree-id13857 . -26) (undo-tree-id13858 . -26) (undo-tree-id13859 . -26) (undo-tree-id13860 . -26) (undo-tree-id13861 . -26) (undo-tree-id13862 . -26) (undo-tree-id13863 . -26) (undo-tree-id13864 . -26) (undo-tree-id13865 . -26) (undo-tree-id13866 . -26) (undo-tree-id13867 . -26) (undo-tree-id13868 . -26) (undo-tree-id13869 . -26) (undo-tree-id13870 . -26) (undo-tree-id13871 . -23) (undo-tree-id13872 . -23) (undo-tree-id13873 . -23) (undo-tree-id13874 . -23) (undo-tree-id13875 . -23) (undo-tree-id13876 . -23) (undo-tree-id13877 . -23) (undo-tree-id13878 . -23) (undo-tree-id13879 . -23) (undo-tree-id13880 . -23) (undo-tree-id13881 . -23) (undo-tree-id13882 . -23) (undo-tree-id13883 . -23) (undo-tree-id13884 . -23) (undo-tree-id13885 . -23) (undo-tree-id13886 . -23) (undo-tree-id13887 . -23) (undo-tree-id13888 . -23) (undo-tree-id13889 . -23) (undo-tree-id13890 . -23) (undo-tree-id13891 . -23) (undo-tree-id13892 . -23) (undo-tree-id13893 . -23) (undo-tree-id13894 . -23) (undo-tree-id13895 . -23) (undo-tree-id13896 . -23) (undo-tree-id13897 . -23) (undo-tree-id13898 . -23) (undo-tree-id13899 . -23) (undo-tree-id13900 . -23) (undo-tree-id13901 . -23) (undo-tree-id13902 . -23) (undo-tree-id13903 . -23) (undo-tree-id13904 . -23) (undo-tree-id13905 . -25) (undo-tree-id13906 . -25) (undo-tree-id13907 . -25) (undo-tree-id13908 . -25) (undo-tree-id13909 . -25) (undo-tree-id13910 . -25) (undo-tree-id13911 . -25) (undo-tree-id13912 . -25) (undo-tree-id13913 . -25) (undo-tree-id13914 . -25) (undo-tree-id13915 . -25) (undo-tree-id13916 . -25) (undo-tree-id13917 . -25) (undo-tree-id13918 . -25) (undo-tree-id13919 . -25) (undo-tree-id13920 . -25) (undo-tree-id13921 . -25) (undo-tree-id13922 . -25) (undo-tree-id13923 . -25) (undo-tree-id13924 . -25) (undo-tree-id13925 . -25) (undo-tree-id13926 . -25) (undo-tree-id13927 . -25) (undo-tree-id13928 . -25) (undo-tree-id13929 . -25) (undo-tree-id13930 . -25) (undo-tree-id13931 . -25) (undo-tree-id13932 . -25) (undo-tree-id13933 . -25) (undo-tree-id13934 . -25) (undo-tree-id13935 . -25) (undo-tree-id13936 . -25) (undo-tree-id13937 . -25) (undo-tree-id13938 . -25) (undo-tree-id13939 . -25) (undo-tree-id13940 . -25) (undo-tree-id13941 . -25) (undo-tree-id13942 . -25) (undo-tree-id13943 . -25) (undo-tree-id13944 . -25) (undo-tree-id13945 . -25) (undo-tree-id13946 . -25) (undo-tree-id13947 . -25) (undo-tree-id13948 . -25) (undo-tree-id13949 . -25) (undo-tree-id13950 . -25) (undo-tree-id13951 . -25) (undo-tree-id13952 . -25) (undo-tree-id13953 . -25) (undo-tree-id13954 . -25) (undo-tree-id13955 . -25) (undo-tree-id13956 . -25) (undo-tree-id13957 . -25) (undo-tree-id13958 . -25) (undo-tree-id13959 . -25) (undo-tree-id13960 . -25) (undo-tree-id13961 . -25) (undo-tree-id13962 . -25) (undo-tree-id13963 . -25) (undo-tree-id13964 . -25) (undo-tree-id13965 . -25) (undo-tree-id13966 . -25) (undo-tree-id13967 . -25) (undo-tree-id13968 . -25) (undo-tree-id13969 . -25) (undo-tree-id13970 . -25) (undo-tree-id13971 . -25) (undo-tree-id13972 . -25) (undo-tree-id13973 . -25) (undo-tree-id13974 . -25) (undo-tree-id13975 . -25) (undo-tree-id13976 . -25) (undo-tree-id13977 . -25) (undo-tree-id13978 . -25) (undo-tree-id13979 . -25) (undo-tree-id13980 . -25) (undo-tree-id13981 . -25) (undo-tree-id13982 . -25) (undo-tree-id13983 . -25) (undo-tree-id13984 . -25) (undo-tree-id13985 . -25) (undo-tree-id13986 . -25) (undo-tree-id13987 . -25) (undo-tree-id13988 . -25) (undo-tree-id13989 . -25) (undo-tree-id13990 . -25) (undo-tree-id13991 . -25) (undo-tree-id13992 . -25) (undo-tree-id13993 . -25) (undo-tree-id13994 . -25) (undo-tree-id13995 . -25) (undo-tree-id13996 . -25) (undo-tree-id13997 . -25) (undo-tree-id13998 . -25) (undo-tree-id13999 . -25) (undo-tree-id14000 . -25) (undo-tree-id14001 . -25) (undo-tree-id14002 . -25) (undo-tree-id14003 . -25) (undo-tree-id14004 . -25) (undo-tree-id14005 . -25) (undo-tree-id14006 . -25) (undo-tree-id14007 . -25) (undo-tree-id14008 . -25) (undo-tree-id14009 . -25) (undo-tree-id14010 . -25) (undo-tree-id14011 . -25) (undo-tree-id14012 . -25) (undo-tree-id14013 . -25) (undo-tree-id14014 . -25) (undo-tree-id14015 . -25) (undo-tree-id14016 . -25) (undo-tree-id14017 . -25) (undo-tree-id14018 . -23) (undo-tree-id14019 . -23) (undo-tree-id14020 . -23) (undo-tree-id14021 . -23) (undo-tree-id14022 . -23) (undo-tree-id14023 . -23) (undo-tree-id14024 . -23) (undo-tree-id14025 . -23) (undo-tree-id14026 . -23) (undo-tree-id14027 . -23) (undo-tree-id14028 . -23) (undo-tree-id14029 . -23) (undo-tree-id14030 . -23) (undo-tree-id14031 . -23) (undo-tree-id14032 . -23) (undo-tree-id14033 . -23) (undo-tree-id14034 . -23) (undo-tree-id14035 . -23) (undo-tree-id14036 . -23) (undo-tree-id14037 . -23) (undo-tree-id14038 . -23) (undo-tree-id14039 . -23) (undo-tree-id14040 . -23) (undo-tree-id14041 . -23) (undo-tree-id14042 . -23) (undo-tree-id14043 . -23) (undo-tree-id14044 . -23) (undo-tree-id14045 . -23) (undo-tree-id14046 . -23) (undo-tree-id14047 . -23) (undo-tree-id14048 . -23) (undo-tree-id14049 . -23) (undo-tree-id14050 . -23) (undo-tree-id14051 . -23) (undo-tree-id14052 . -23) (undo-tree-id14053 . -23) (undo-tree-id14054 . -23) (undo-tree-id14055 . -23) (undo-tree-id14056 . -20) (undo-tree-id14057 . -23) (undo-tree-id14058 . -23) (undo-tree-id14059 . -23) (undo-tree-id14060 . -23) (undo-tree-id14061 . -23) (undo-tree-id14062 . -23) (undo-tree-id14063 . -23) (undo-tree-id14064 . -23) (undo-tree-id14065 . -23) (undo-tree-id14066 . -23) (undo-tree-id14067 . -23) (undo-tree-id14068 . -23) (undo-tree-id14069 . -23) (undo-tree-id14070 . -23) (undo-tree-id14071 . -23) (undo-tree-id14072 . -23) (undo-tree-id14073 . -23) (undo-tree-id14074 . -23) (undo-tree-id14075 . -23) (undo-tree-id14076 . -23) (undo-tree-id14077 . -20) (undo-tree-id14078 . -20) (undo-tree-id14079 . -20) (undo-tree-id14080 . -20) (undo-tree-id14081 . -20) (undo-tree-id14082 . -20) (undo-tree-id14083 . -20) (undo-tree-id14084 . -20) (undo-tree-id14085 . -20) (undo-tree-id14086 . -20) (undo-tree-id14087 . -20) (undo-tree-id14088 . -20) (undo-tree-id14089 . -20) (undo-tree-id14090 . -20) (undo-tree-id14091 . -20) (undo-tree-id14092 . -20) (undo-tree-id14093 . -20) (undo-tree-id14094 . -20) (undo-tree-id14095 . -20) (undo-tree-id14096 . -20) (undo-tree-id14097 . -20) (undo-tree-id14098 . -20) (undo-tree-id14099 . -20) (undo-tree-id14100 . -20) (undo-tree-id14101 . -20) (undo-tree-id14102 . -20) (undo-tree-id14103 . -20) (undo-tree-id14104 . -20) (undo-tree-id14105 . -20) (undo-tree-id14106 . -20) (undo-tree-id14107 . -20) (undo-tree-id14108 . -19) (undo-tree-id14109 . -19) (undo-tree-id14110 . -19) (undo-tree-id14111 . -19) (undo-tree-id14112 . -19) (undo-tree-id14113 . -19) (undo-tree-id14114 . -19) (undo-tree-id14115 . -19) (undo-tree-id14116 . -19) (undo-tree-id14117 . -19) (undo-tree-id14118 . -19) (undo-tree-id14119 . -19) (undo-tree-id14120 . -19) (undo-tree-id14121 . -19) (undo-tree-id14122 . -19) (undo-tree-id14123 . -19) (undo-tree-id14124 . -19) (undo-tree-id14125 . -19) (undo-tree-id14126 . -19) (undo-tree-id14127 . -19) (undo-tree-id14128 . -19) (undo-tree-id14129 . -19) (undo-tree-id14130 . -19) (undo-tree-id14131 . -19) (undo-tree-id14132 . -19) (undo-tree-id14133 . -16) (undo-tree-id14134 . -16) (undo-tree-id14135 . -16) (undo-tree-id14136 . -16) (undo-tree-id14137 . -16) (undo-tree-id14138 . -16) (undo-tree-id14139 . -16) (undo-tree-id14140 . -16) (undo-tree-id14141 . -16) (undo-tree-id14142 . -16) (undo-tree-id14143 . -16) (undo-tree-id14144 . -16) (undo-tree-id14145 . -16) (undo-tree-id14146 . -16) (undo-tree-id14147 . -16) (undo-tree-id14148 . -16) (undo-tree-id14149 . -16) (undo-tree-id14150 . -16) (undo-tree-id14151 . -16) (undo-tree-id14152 . -16) (undo-tree-id14153 . -16) (undo-tree-id14154 . -16) (undo-tree-id14155 . -16) (undo-tree-id14156 . -16) (undo-tree-id14157 . -16) (undo-tree-id14158 . -16) (undo-tree-id14159 . -16) (undo-tree-id14160 . -16) (undo-tree-id14161 . -16) (undo-tree-id14162 . -16) (undo-tree-id14163 . -16) (undo-tree-id14164 . -16) (undo-tree-id14165 . -16) (undo-tree-id14166 . -16) (undo-tree-id14167 . -16) (undo-tree-id14168 . -16) (undo-tree-id14169 . -16) (undo-tree-id14170 . -16) (undo-tree-id14171 . -16) (undo-tree-id14172 . -16) (undo-tree-id14173 . -16) (undo-tree-id14174 . -16) (undo-tree-id14175 . -16) (undo-tree-id14176 . -16) (undo-tree-id14177 . -16) (undo-tree-id14178 . -16) (undo-tree-id14179 . -16) (undo-tree-id14180 . -16) (undo-tree-id14181 . -16) (undo-tree-id14182 . -16) (undo-tree-id14183 . -16) (undo-tree-id14184 . -16) (undo-tree-id14185 . -16) (undo-tree-id14186 . -16) (undo-tree-id14187 . -16) (undo-tree-id14188 . -16) (undo-tree-id14189 . -16) (undo-tree-id14190 . -16) (undo-tree-id14191 . -16) (undo-tree-id14192 . -16) (undo-tree-id14193 . -16) (undo-tree-id14194 . -16) (undo-tree-id14195 . -16) (undo-tree-id14196 . -16) (undo-tree-id14197 . -16) (undo-tree-id14198 . -16) (undo-tree-id14199 . -16) (undo-tree-id14200 . -16) (undo-tree-id14201 . -16) (undo-tree-id14202 . -16) (undo-tree-id14203 . -16) (undo-tree-id14204 . -16) (undo-tree-id14205 . -16) (undo-tree-id14206 . -16) (undo-tree-id14207 . -16) (undo-tree-id14208 . -16) (undo-tree-id14209 . -16) (undo-tree-id14210 . -16) (undo-tree-id14211 . -16) (undo-tree-id14212 . -16) (undo-tree-id14213 . -16) (undo-tree-id14214 . -16) (undo-tree-id14215 . -16) (undo-tree-id14216 . -16) (undo-tree-id14217 . -16) (undo-tree-id14218 . -16) (undo-tree-id14219 . -16) (undo-tree-id14220 . -16) (undo-tree-id14221 . -16) (undo-tree-id14222 . -16) (undo-tree-id14223 . -16) (undo-tree-id14224 . -16) (undo-tree-id14225 . -16) (undo-tree-id14226 . -16) (undo-tree-id14227 . -16) (undo-tree-id14228 . -16) (undo-tree-id14229 . -16) (undo-tree-id14230 . -16) (undo-tree-id14231 . -16) (undo-tree-id14232 . -16) (undo-tree-id14233 . -16) (undo-tree-id14234 . -16) (undo-tree-id14235 . -16) (undo-tree-id14236 . -16) (undo-tree-id14237 . -16) (undo-tree-id14238 . -16) (undo-tree-id14239 . -16) (undo-tree-id14240 . -16) (undo-tree-id14241 . -16) (undo-tree-id14242 . -16) (undo-tree-id14243 . -16) (undo-tree-id14244 . -16) (undo-tree-id14245 . -16) (undo-tree-id14246 . -16) (undo-tree-id14247 . -16) (undo-tree-id14248 . -16) (undo-tree-id14249 . -16) (undo-tree-id14250 . -16) (undo-tree-id14251 . -16) (undo-tree-id14252 . -16) (undo-tree-id14253 . -16) (undo-tree-id14254 . -16) (undo-tree-id14255 . -16) (undo-tree-id14256 . -16) (undo-tree-id14257 . -16) (undo-tree-id14258 . -16) (undo-tree-id14259 . -16) (undo-tree-id14260 . -16) (undo-tree-id14261 . -16) (undo-tree-id14262 . -16) (undo-tree-id14263 . -16) (undo-tree-id14264 . -16) (undo-tree-id14265 . -16) (undo-tree-id14266 . -16) (undo-tree-id14267 . -16) (undo-tree-id14268 . -16) (undo-tree-id14269 . -16) (undo-tree-id14270 . -16) (undo-tree-id14271 . -16) (undo-tree-id14272 . -16) (undo-tree-id14273 . -16) (undo-tree-id14274 . -16) (undo-tree-id14275 . -16) (undo-tree-id14276 . -16) (undo-tree-id14277 . -16) (undo-tree-id14278 . -16) (undo-tree-id14279 . -16) (undo-tree-id14280 . -16) (undo-tree-id14281 . -16) (undo-tree-id14282 . -16) (undo-tree-id14283 . -16) (undo-tree-id14284 . -16) (undo-tree-id14285 . -16) (undo-tree-id14286 . -16) (undo-tree-id14287 . -16) (undo-tree-id14288 . -16) (undo-tree-id14289 . -16) (undo-tree-id14290 . -16) (undo-tree-id14291 . -16) (undo-tree-id14292 . -16) (undo-tree-id14293 . -16) (undo-tree-id14294 . -16) (undo-tree-id14295 . -16) (undo-tree-id14296 . -16) (undo-tree-id14297 . -16) (undo-tree-id14298 . -16) (undo-tree-id14299 . -16) (undo-tree-id14300 . -16) (undo-tree-id14301 . -16) (undo-tree-id14302 . -16) (undo-tree-id14303 . -16) (undo-tree-id14304 . -16) (undo-tree-id14305 . -16) (undo-tree-id14306 . -16) (undo-tree-id14307 . -16) (undo-tree-id14308 . -16) (undo-tree-id14309 . -16) (undo-tree-id14310 . -16) (undo-tree-id14311 . -16) (undo-tree-id14312 . -16) (undo-tree-id14313 . -16) (undo-tree-id14314 . -16) (undo-tree-id14315 . -16) (undo-tree-id14316 . -16) (undo-tree-id14317 . -16) (undo-tree-id14318 . -16) (undo-tree-id14319 . -16) (undo-tree-id14320 . -16) (undo-tree-id14321 . -16) (undo-tree-id14322 . -16) (undo-tree-id14323 . -16) (undo-tree-id14324 . -16) (undo-tree-id14325 . -16) (undo-tree-id14326 . -16) (undo-tree-id14327 . -16) (undo-tree-id14328 . -16) (undo-tree-id14329 . -16) (undo-tree-id14330 . -16) (undo-tree-id14331 . -16) (undo-tree-id14332 . -16) (undo-tree-id14333 . -16) (undo-tree-id14334 . -16) (undo-tree-id14335 . -16) (undo-tree-id14336 . -16) (undo-tree-id14337 . -16) (undo-tree-id14338 . -16) (undo-tree-id14339 . -16) (undo-tree-id14340 . -16) (undo-tree-id14341 . -16) (undo-tree-id14342 . -16) (undo-tree-id14343 . -16) (undo-tree-id14344 . -16) (undo-tree-id14345 . -16) (undo-tree-id14346 . -16) (undo-tree-id14347 . -16) (undo-tree-id14348 . -16) (undo-tree-id14349 . -16) (undo-tree-id14350 . -16) (undo-tree-id14351 . -16) (undo-tree-id14352 . -16) (undo-tree-id14353 . -16) (undo-tree-id14354 . -16) (undo-tree-id14355 . -16) (undo-tree-id14356 . -16) (undo-tree-id14357 . -16) (undo-tree-id14358 . -16) (undo-tree-id14359 . -16) (undo-tree-id14360 . -16) (undo-tree-id14361 . -16) (undo-tree-id14362 . -16) (undo-tree-id14363 . -16) (undo-tree-id14364 . -16) (undo-tree-id14365 . -16) (undo-tree-id14366 . -16) (undo-tree-id14367 . -16) (undo-tree-id14368 . -16) (undo-tree-id14369 . -16) (undo-tree-id14370 . -16) (undo-tree-id14371 . -16) (undo-tree-id14372 . -16) (undo-tree-id14373 . -16) (undo-tree-id14374 . -16) (undo-tree-id14375 . -16) (undo-tree-id14376 . -16) (undo-tree-id14377 . -16) (undo-tree-id14378 . -16) (undo-tree-id14379 . -16) (undo-tree-id14380 . -16) (undo-tree-id14381 . -16) (undo-tree-id14382 . -16) (undo-tree-id14383 . -16) (undo-tree-id14384 . -16) (undo-tree-id14385 . -16) (undo-tree-id14386 . -16) (undo-tree-id14387 . -16) (undo-tree-id14388 . -16) (undo-tree-id14389 . -16) (undo-tree-id14390 . -16) (undo-tree-id14391 . -16) (undo-tree-id14392 . -16) (undo-tree-id14393 . -16) (undo-tree-id14394 . -16) (undo-tree-id14395 . -16) (undo-tree-id14396 . -16) (undo-tree-id14397 . -16) (undo-tree-id14398 . -16) (undo-tree-id14399 . -16) (undo-tree-id14400 . -16) (undo-tree-id14401 . -16) (undo-tree-id14402 . -16) (undo-tree-id14403 . -16) (undo-tree-id14404 . -16) (undo-tree-id14405 . -16) (undo-tree-id14406 . -16) (undo-tree-id14407 . -16) (undo-tree-id14408 . -16) (undo-tree-id14409 . -16) (undo-tree-id14410 . -16) (undo-tree-id14411 . -16) (undo-tree-id14412 . -16) (undo-tree-id14413 . -16) (undo-tree-id14414 . -16) (undo-tree-id14415 . -16) (undo-tree-id14416 . -16) (undo-tree-id14417 . -16) (undo-tree-id14418 . -16) (undo-tree-id14419 . -16) (undo-tree-id14420 . -16) (undo-tree-id14421 . -16) (undo-tree-id14422 . -16) (undo-tree-id14423 . -16) (undo-tree-id14424 . -16) (undo-tree-id14425 . -16) (undo-tree-id14426 . -16) (undo-tree-id14427 . -16) (undo-tree-id14428 . -16) (undo-tree-id14429 . -16) (undo-tree-id14430 . -16) (undo-tree-id14431 . -16) (undo-tree-id14432 . -16) (undo-tree-id14433 . -16) (undo-tree-id14434 . -16) (undo-tree-id14435 . -16) (undo-tree-id14436 . -16) (undo-tree-id14437 . -16) (undo-tree-id14438 . -16) (undo-tree-id14439 . -16) (undo-tree-id14440 . -16) (undo-tree-id14441 . -16) (undo-tree-id14442 . -16) (undo-tree-id14443 . -16) (undo-tree-id14444 . -16) (undo-tree-id14445 . -16) (undo-tree-id14446 . -16) (undo-tree-id14447 . -16) (undo-tree-id14448 . -16) (undo-tree-id14449 . -16) (undo-tree-id14450 . -16) (undo-tree-id14451 . -16) (undo-tree-id14452 . 1) (undo-tree-id14453 . -16) (undo-tree-id14454 . -16) (undo-tree-id14455 . -16) (undo-tree-id14456 . -16) (undo-tree-id14457 . -16) (undo-tree-id14458 . -16) (undo-tree-id14459 . -16) (undo-tree-id14460 . -16) (undo-tree-id14461 . -16) (undo-tree-id14462 . -16) (undo-tree-id14463 . -16) (undo-tree-id14464 . -16) (undo-tree-id14465 . -16) (undo-tree-id14466 . -16) (undo-tree-id14467 . -16) (undo-tree-id14468 . -16) (undo-tree-id14469 . -16) (undo-tree-id14470 . -16) (undo-tree-id14471 . -16) (undo-tree-id14472 . -16) (undo-tree-id14473 . -16) (undo-tree-id14474 . -16) (undo-tree-id14475 . -16) (undo-tree-id14476 . -16) (undo-tree-id14477 . -16) (undo-tree-id14478 . -16) (undo-tree-id14479 . -16) (undo-tree-id14480 . -16) (undo-tree-id14481 . -16) (undo-tree-id14482 . -16) (undo-tree-id14483 . -16) (undo-tree-id14484 . -16) (undo-tree-id14485 . -16) (undo-tree-id14486 . -16) (undo-tree-id14487 . -16) (undo-tree-id14488 . -16) (undo-tree-id14489 . -16) (undo-tree-id14490 . -16) (undo-tree-id14491 . -16) (undo-tree-id14492 . -16) (undo-tree-id14493 . -16) (undo-tree-id14494 . -16) (undo-tree-id14495 . -16) (undo-tree-id14496 . -16) (undo-tree-id14497 . -16) (undo-tree-id14498 . -16) (undo-tree-id14499 . -16) (undo-tree-id14500 . -16) (undo-tree-id14501 . -16) (undo-tree-id14502 . -16) (undo-tree-id14503 . -16) (undo-tree-id14504 . -16) (undo-tree-id14505 . -16) (undo-tree-id14506 . -16) (undo-tree-id14507 . -16) (undo-tree-id14508 . -16) (undo-tree-id14509 . -16) (undo-tree-id14510 . -16) (undo-tree-id14511 . -16) (undo-tree-id14512 . -16) (undo-tree-id14513 . -16) (undo-tree-id14514 . -16) (undo-tree-id14515 . -16) (undo-tree-id14516 . -16) (undo-tree-id14517 . -16) (undo-tree-id14518 . -16) (undo-tree-id14519 . -16) (undo-tree-id14520 . -16) (undo-tree-id14521 . -16) (undo-tree-id14522 . -16) (undo-tree-id14523 . -16) (undo-tree-id14524 . -16) (undo-tree-id14525 . -16) (undo-tree-id14526 . -16) (undo-tree-id14527 . -16) (undo-tree-id14528 . -16) (undo-tree-id14529 . -16) (undo-tree-id14530 . -16) (undo-tree-id14531 . -16) (undo-tree-id14532 . -16) (undo-tree-id14533 . -16) (undo-tree-id14534 . -16) (undo-tree-id14535 . -16) (undo-tree-id14536 . -16) (undo-tree-id14537 . -16) (undo-tree-id14538 . -16) (undo-tree-id14539 . -16) (undo-tree-id14540 . -16) (undo-tree-id14541 . -16) (undo-tree-id14542 . -16) (undo-tree-id14543 . -16) (undo-tree-id14544 . -16) (undo-tree-id14545 . -16) (undo-tree-id14546 . -16) (undo-tree-id14547 . -16) (undo-tree-id14548 . -16) (undo-tree-id14549 . -16) (undo-tree-id14550 . -16) (undo-tree-id14551 . -16) (undo-tree-id14552 . -16) (undo-tree-id14553 . -16) (undo-tree-id14554 . -16) (undo-tree-id14555 . -16) (undo-tree-id14556 . -16) (undo-tree-id14557 . -16) (undo-tree-id14558 . -16) (undo-tree-id14559 . -16) (undo-tree-id14560 . -16) (undo-tree-id14561 . -16) (undo-tree-id14562 . -16) (undo-tree-id14563 . -16) (undo-tree-id14564 . -16) (undo-tree-id14565 . -16) (undo-tree-id14566 . -16) (undo-tree-id14567 . -16) (undo-tree-id14568 . -16) (undo-tree-id14569 . -16) (undo-tree-id14570 . -16) (undo-tree-id14571 . -16) (undo-tree-id14572 . -16) (undo-tree-id14573 . -16) (undo-tree-id14574 . -16) (undo-tree-id14575 . -16) (undo-tree-id14576 . -16) (undo-tree-id14577 . -16) (undo-tree-id14578 . -16) (undo-tree-id14579 . -16) (undo-tree-id14580 . -16) (undo-tree-id14581 . -16) (undo-tree-id14582 . -16) (undo-tree-id14583 . -16) (undo-tree-id14584 . -16) (undo-tree-id14585 . -16) (undo-tree-id14586 . -16) (undo-tree-id14587 . -16) (undo-tree-id14588 . -16) (undo-tree-id14589 . -16) (undo-tree-id14590 . -16) (undo-tree-id14591 . -16) (undo-tree-id14592 . -16) (undo-tree-id14593 . -16) (undo-tree-id14594 . -16) (undo-tree-id14595 . -16) (undo-tree-id14596 . -16) (undo-tree-id14597 . -16) (undo-tree-id14598 . -16) (undo-tree-id14599 . -16) (undo-tree-id14600 . -16) (undo-tree-id14601 . -16) (undo-tree-id14602 . -16) (undo-tree-id14603 . -16) (undo-tree-id14604 . -16) (undo-tree-id14605 . -16) (undo-tree-id14606 . -16) (undo-tree-id14607 . -16) (undo-tree-id14608 . -16) (undo-tree-id14609 . -16) (undo-tree-id14610 . -16) (undo-tree-id14611 . -16) (undo-tree-id14612 . -16) (undo-tree-id14613 . -16) (undo-tree-id14614 . -16) (undo-tree-id14615 . -16) (undo-tree-id14616 . -16) (undo-tree-id14617 . -16) (undo-tree-id14618 . -16) (undo-tree-id14619 . -16) (undo-tree-id14620 . -16) (undo-tree-id14621 . -16) (undo-tree-id14622 . -16) (undo-tree-id14623 . -16) (undo-tree-id14624 . -16) (undo-tree-id14625 . -16) (undo-tree-id14626 . -16) (undo-tree-id14627 . -16) (undo-tree-id14628 . -16) (undo-tree-id14629 . -16) (undo-tree-id14630 . -16) (undo-tree-id14631 . -16) (undo-tree-id14632 . -16) (undo-tree-id14633 . -16) (undo-tree-id14634 . -16) (undo-tree-id14635 . -16) (undo-tree-id14636 . -16) (undo-tree-id14637 . -16) (undo-tree-id14638 . -16) (undo-tree-id14639 . -16) (undo-tree-id14640 . -16) (undo-tree-id14641 . -16) (undo-tree-id14642 . -16) (undo-tree-id14643 . -16) (undo-tree-id14644 . -16) (undo-tree-id14645 . -16) (undo-tree-id14646 . -16) (undo-tree-id14647 . -16) (undo-tree-id14648 . -16) (undo-tree-id14649 . -16) (undo-tree-id14650 . -16) (undo-tree-id14651 . -16) (undo-tree-id14652 . -16) (undo-tree-id14653 . -16) (undo-tree-id14654 . -16) (undo-tree-id14655 . -16) (undo-tree-id14656 . -16) (undo-tree-id14657 . -16) (undo-tree-id14658 . -16) (undo-tree-id14659 . -16) (undo-tree-id14660 . -16) (undo-tree-id14661 . -16) (undo-tree-id14662 . -16) (undo-tree-id14663 . -16) (undo-tree-id14664 . -16) (undo-tree-id14665 . -16) (undo-tree-id14666 . -16) (undo-tree-id14667 . -16) (undo-tree-id14668 . -16) (undo-tree-id14669 . -16) (undo-tree-id14670 . -16) (undo-tree-id14671 . -16) (undo-tree-id14672 . -16) (undo-tree-id14673 . -16) (undo-tree-id14674 . -16) (undo-tree-id14675 . -16) (undo-tree-id14676 . -16) (undo-tree-id14677 . -16) (undo-tree-id14678 . -16) (undo-tree-id14679 . -16) (undo-tree-id14680 . -16) (undo-tree-id14681 . -16) (undo-tree-id14682 . -16) (undo-tree-id14683 . -16) (undo-tree-id14684 . -16) (undo-tree-id14685 . -16) (undo-tree-id14686 . -16) (undo-tree-id14687 . -16) (undo-tree-id14688 . -16) (undo-tree-id14689 . -16) (undo-tree-id14690 . -16) (undo-tree-id14691 . -16) (undo-tree-id14692 . -16) (undo-tree-id14693 . -16) (undo-tree-id14694 . -16) (undo-tree-id14695 . -16) (undo-tree-id14696 . -16) (undo-tree-id14697 . -16) (undo-tree-id14698 . -16) (undo-tree-id14699 . -16) (undo-tree-id14700 . -16) (undo-tree-id14701 . -16) (undo-tree-id14702 . -16) (undo-tree-id14703 . -16) (undo-tree-id14704 . -16) (undo-tree-id14705 . -16) (undo-tree-id14706 . -16) (undo-tree-id14707 . -16) (undo-tree-id14708 . -16) (undo-tree-id14709 . -16) (undo-tree-id14710 . -16) (undo-tree-id14711 . -16) (undo-tree-id14712 . -16) (undo-tree-id14713 . -16) (undo-tree-id14714 . -16) (undo-tree-id14715 . -16) (undo-tree-id14716 . -16) (undo-tree-id14717 . -16) (undo-tree-id14718 . -16) (undo-tree-id14719 . -16) (undo-tree-id14720 . -16) (undo-tree-id14721 . -16) (undo-tree-id14722 . -16) (undo-tree-id14723 . -16) (undo-tree-id14724 . -16) (undo-tree-id14725 . -16) (undo-tree-id14726 . -16) (undo-tree-id14727 . -16) (undo-tree-id14728 . -16) (undo-tree-id14729 . -16) (undo-tree-id14730 . -16) (undo-tree-id14731 . -16) (undo-tree-id14732 . -16) (undo-tree-id14733 . -16) (undo-tree-id14734 . -16) (undo-tree-id14735 . -16) (undo-tree-id14736 . -16) (undo-tree-id14737 . -16) (undo-tree-id14738 . -16) (undo-tree-id14739 . -16) (undo-tree-id14740 . -16) (undo-tree-id14741 . -16) (undo-tree-id14742 . -16) (undo-tree-id14743 . -16) (undo-tree-id14744 . -16) (undo-tree-id14745 . -16) (undo-tree-id14746 . -16) (undo-tree-id14747 . -16) (undo-tree-id14748 . -16) (undo-tree-id14749 . -16) (undo-tree-id14750 . -16) (undo-tree-id14751 . -16) (undo-tree-id14752 . -16) (undo-tree-id14753 . -16) (undo-tree-id14754 . -16) (undo-tree-id14755 . -16) (undo-tree-id14756 . -16) (undo-tree-id14757 . -16) (undo-tree-id14758 . -16) (undo-tree-id14759 . -16) (undo-tree-id14760 . -16) (undo-tree-id14761 . -16) (undo-tree-id14762 . -16) (undo-tree-id14763 . -16) (undo-tree-id14764 . -16) (undo-tree-id14765 . -16) (undo-tree-id14766 . -16) (undo-tree-id14767 . -16) (undo-tree-id14768 . -16) (undo-tree-id14769 . -16) (undo-tree-id14770 . -16) (undo-tree-id14771 . -16) (undo-tree-id14772 . -16) (undo-tree-id14773 . -16) (undo-tree-id14774 . -16) (undo-tree-id14775 . -16) (undo-tree-id14776 . -16) (undo-tree-id14777 . -16) (undo-tree-id14778 . -16) (undo-tree-id14779 . -16) (undo-tree-id14780 . -16) (undo-tree-id14781 . -16) (undo-tree-id14782 . -16) (undo-tree-id14783 . -16) (undo-tree-id14784 . -16) (undo-tree-id14785 . -16) (undo-tree-id14786 . -16) (undo-tree-id14787 . -16) (undo-tree-id14788 . -16) (undo-tree-id14789 . -16) (undo-tree-id14790 . -16) (undo-tree-id14791 . -16) (undo-tree-id14792 . -16) (undo-tree-id14793 . -16) (undo-tree-id14794 . -16) (undo-tree-id14795 . -16) (undo-tree-id14796 . -16) (undo-tree-id14797 . -16) (undo-tree-id14798 . -16) (undo-tree-id14799 . -16) (undo-tree-id14800 . -16) (undo-tree-id14801 . -16) (undo-tree-id14802 . -16) (undo-tree-id14803 . -16) (undo-tree-id14804 . -16) (undo-tree-id14805 . -16) (undo-tree-id14806 . -16) (undo-tree-id14807 . -16) (undo-tree-id14808 . -16) (undo-tree-id14809 . -16) (undo-tree-id14810 . -16) (undo-tree-id14811 . -16) (undo-tree-id14812 . -16) (undo-tree-id14813 . -16) (undo-tree-id14814 . -16) (undo-tree-id14815 . -16) (undo-tree-id14816 . -16) (undo-tree-id14817 . -16) (undo-tree-id14818 . -25) (undo-tree-id14819 . -24) (undo-tree-id14820 . -24) (undo-tree-id14821 . -24) (undo-tree-id14822 . -24) (undo-tree-id14823 . -24) (undo-tree-id14824 . -24) (undo-tree-id14825 . -24) (undo-tree-id14826 . -24) (undo-tree-id14827 . -24) (undo-tree-id14828 . -24) (undo-tree-id14829 . -24) (undo-tree-id14830 . -24) (undo-tree-id14831 . -24) (undo-tree-id14832 . -24) (undo-tree-id14833 . -24) (undo-tree-id14834 . -24) (undo-tree-id14835 . -24) (undo-tree-id14836 . -24) (undo-tree-id14837 . -24) (undo-tree-id14838 . -24) (undo-tree-id14839 . -24) (undo-tree-id14840 . -24) (undo-tree-id14841 . -24) (undo-tree-id14842 . -24) (undo-tree-id14843 . -24) (undo-tree-id14844 . -24) (undo-tree-id14845 . -24) (undo-tree-id14846 . -24) (undo-tree-id14847 . -24) (undo-tree-id14848 . -24) (undo-tree-id14849 . -24) (undo-tree-id14850 . -24) (undo-tree-id14851 . -24) (undo-tree-id14852 . -24) (undo-tree-id14853 . -24) (undo-tree-id14854 . -24) (undo-tree-id14855 . -24) (undo-tree-id14856 . -24) (undo-tree-id14857 . -24) (undo-tree-id14858 . -24) (undo-tree-id14859 . -24) (undo-tree-id14860 . -24) (undo-tree-id14861 . -24) (undo-tree-id14862 . -24) (undo-tree-id14863 . -24) (undo-tree-id14864 . -24) (undo-tree-id14865 . -24) (undo-tree-id14866 . -24) (undo-tree-id14867 . -24) (undo-tree-id14868 . -24) (undo-tree-id14869 . -24) (undo-tree-id14870 . -24) (undo-tree-id14871 . -24) (undo-tree-id14872 . -24) (undo-tree-id14873 . -24) (undo-tree-id14874 . -24) (undo-tree-id14875 . -24) (undo-tree-id14876 . -24) (undo-tree-id14877 . -24) (undo-tree-id14878 . -24) (undo-tree-id14879 . -24) (undo-tree-id14880 . -24) (undo-tree-id14881 . -24) (undo-tree-id14882 . -24) (undo-tree-id14883 . -24) (undo-tree-id14884 . -24) (undo-tree-id14885 . -24) (undo-tree-id14886 . -24) (undo-tree-id14887 . -24) (undo-tree-id14888 . -24) (undo-tree-id14889 . -24) (undo-tree-id14890 . -24) (undo-tree-id14891 . -24) (undo-tree-id14892 . -24) (undo-tree-id14893 . -24) (undo-tree-id14894 . -24) (undo-tree-id14895 . -24) (undo-tree-id14896 . -24) (undo-tree-id14897 . -24) (undo-tree-id14898 . -24) (undo-tree-id14899 . -24) (undo-tree-id14900 . -26) 1178) nil (26026 36170 72751 0) 0 nil])
([nil nil ((1209 . 1219) (1208 . 1209) (1196 . 1208) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -1196) (undo-tree-id13746 . -1) (undo-tree-id13747 . -1) (undo-tree-id13748 . -1) (undo-tree-id13749 . -1) (undo-tree-id13750 . -1) (undo-tree-id13751 . -1) (undo-tree-id13752 . -1) (undo-tree-id13753 . -1) (undo-tree-id13754 . -1) (undo-tree-id13755 . -1) (undo-tree-id13756 . -1) (undo-tree-id13757 . -1) (undo-tree-id13758 . -1) (undo-tree-id13759 . -1) (undo-tree-id13760 . -1) (undo-tree-id13761 . -1) (undo-tree-id13762 . -1) (undo-tree-id13763 . -1) (undo-tree-id13764 . -1) (undo-tree-id13765 . -1) (undo-tree-id13766 . -1) (undo-tree-id13767 . -1) (undo-tree-id13768 . -1) (undo-tree-id13769 . -1) (undo-tree-id13770 . -1) (undo-tree-id13771 . -1) (undo-tree-id13772 . -1) (undo-tree-id13773 . -1) (undo-tree-id13774 . -1) (undo-tree-id13775 . -1) (undo-tree-id13776 . -1) (undo-tree-id13777 . -1) (undo-tree-id13778 . -1) 1197 (1190 . 1197) (1188 . 1190) (1171 . 1188) 1155) nil (26026 36170 72351 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 1220) (undo-tree-id13642 . -1) (undo-tree-id13643 . -1) (undo-tree-id13644 . -1) (undo-tree-id13645 . -1) (undo-tree-id13646 . -1) (undo-tree-id13647 . -1) (undo-tree-id13648 . -1) (undo-tree-id13649 . -1) (undo-tree-id13650 . -1) (undo-tree-id13651 . -1) (undo-tree-id13652 . -1) (undo-tree-id13653 . -1) (undo-tree-id13654 . -1) (undo-tree-id13655 . -1) (undo-tree-id13656 . -1) (undo-tree-id13657 . -1) (undo-tree-id13658 . -1) (undo-tree-id13659 . -1) (undo-tree-id13660 . -1) (undo-tree-id13661 . -1) (undo-tree-id13662 . -1) (undo-tree-id13663 . -1) (undo-tree-id13664 . -1) (undo-tree-id13665 . -1) (undo-tree-id13666 . -1) (undo-tree-id13667 . -1) (undo-tree-id13668 . -1) (undo-tree-id13669 . -1) (undo-tree-id13670 . -1) (undo-tree-id13671 . -1) (undo-tree-id13672 . -1) (undo-tree-id13673 . -1) (undo-tree-id13674 . -1) (undo-tree-id13675 . -1) (undo-tree-id13676 . -1) (undo-tree-id13677 . -1) (undo-tree-id13678 . -1) (undo-tree-id13679 . -1) (undo-tree-id13680 . -1) (undo-tree-id13681 . -1) (undo-tree-id13682 . -1) (undo-tree-id13683 . -1) (undo-tree-id13684 . -1) (undo-tree-id13685 . -1) (undo-tree-id13686 . -1) (undo-tree-id13687 . -1) (undo-tree-id13688 . -1) (undo-tree-id13689 . -1) (undo-tree-id13690 . -1) (undo-tree-id13691 . -1) (undo-tree-id13692 . -1) (undo-tree-id13693 . -1) (undo-tree-id13694 . -1) (undo-tree-id13695 . -1) (undo-tree-id13696 . -1) (undo-tree-id13697 . -1) (undo-tree-id13698 . -1) (undo-tree-id13699 . -1) (undo-tree-id13700 . -1) (undo-tree-id13701 . -1) (undo-tree-id13702 . -1) (undo-tree-id13703 . -1) (undo-tree-id13704 . -1) (undo-tree-id13705 . -1) (undo-tree-id13706 . -1) (undo-tree-id13707 . -1) (undo-tree-id13708 . -1) (undo-tree-id13709 . -1) (undo-tree-id13710 . -1) (undo-tree-id13711 . -1) (undo-tree-id13712 . -1) (undo-tree-id13713 . -1) (undo-tree-id13714 . -1) (undo-tree-id13715 . -1) (undo-tree-id13716 . -1) (undo-tree-id13717 . -1) (undo-tree-id13718 . -1) (undo-tree-id13719 . -1) (undo-tree-id13720 . -1) (undo-tree-id13721 . -1) (undo-tree-id13722 . -1) (undo-tree-id13723 . -1) (undo-tree-id13724 . -1) (undo-tree-id13725 . -1) (undo-tree-id13726 . -1) (undo-tree-id13727 . -1) (undo-tree-id13728 . -1) (undo-tree-id13729 . -1) (undo-tree-id13730 . -1) (undo-tree-id13731 . -1) (undo-tree-id13732 . -1) (undo-tree-id13733 . -1) (undo-tree-id13734 . -1) (undo-tree-id13735 . -1) (undo-tree-id13736 . -1) (undo-tree-id13737 . -1) (undo-tree-id13738 . -1) (undo-tree-id13739 . -1) (undo-tree-id13740 . -1) (undo-tree-id13741 . -1) (undo-tree-id13742 . -1) (undo-tree-id13743 . -1) (undo-tree-id13744 . -1) (undo-tree-id13745 . -1)) nil (26026 36170 72337 0) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 1220) (undo-tree-id13641 . -1)) nil (26026 36170 72295 0) 0 nil])
([nil nil ((#("
                
" 0 1 (c-is-sws t fontified t) 1 17 (fontified t) 17 18 (fontified t)) . 1220) (undo-tree-id13639 . -17) (undo-tree-id13640 . -18)) nil (26026 36170 72294 0) 0 nil])
([nil nil ((#("        // länka om omkringliggande noder
" 0 8 (fontified t c-in-sws t c-is-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 9 10 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 10 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 41 (face font-lock-comment-face fontified t c-in-sws t) 41 42 (face font-lock-comment-face fontified t c-in-sws t)) . 1230) (undo-tree-id13637 . -41) (undo-tree-id13638 . -42)) nil (26026 36170 72293 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1230) (undo-tree-id13636 . -1)) nil (26026 36170 72292 0) 0 nil])
([nil nil ((#("
" 0 1 (c-is-sws t fontified t)) . 1154) (undo-tree-id13565 . -1) (undo-tree-id13566 . -1) (undo-tree-id13567 . -1) (undo-tree-id13568 . -1) (undo-tree-id13569 . -1) (undo-tree-id13570 . -1) (undo-tree-id13571 . -1) (undo-tree-id13572 . -1) (undo-tree-id13573 . -1) (undo-tree-id13574 . -1) (undo-tree-id13575 . -1) (undo-tree-id13576 . -1) (undo-tree-id13577 . -1) (undo-tree-id13578 . -1) (undo-tree-id13579 . -1) (undo-tree-id13580 . -1) (undo-tree-id13581 . -1) (undo-tree-id13582 . -1) (undo-tree-id13583 . -1) (undo-tree-id13584 . -1) (undo-tree-id13585 . -1) (undo-tree-id13586 . -1) (undo-tree-id13587 . -1) (undo-tree-id13588 . -1) (undo-tree-id13589 . -1) (undo-tree-id13590 . -1) (undo-tree-id13591 . -1) (undo-tree-id13592 . -1) (undo-tree-id13593 . -1) (undo-tree-id13594 . -1) (undo-tree-id13595 . -1) (undo-tree-id13596 . -1) (undo-tree-id13597 . -1) (undo-tree-id13598 . -1) (undo-tree-id13599 . -1) (undo-tree-id13600 . -1) (undo-tree-id13601 . -1) (undo-tree-id13602 . -1) (undo-tree-id13603 . -1) (undo-tree-id13604 . -1) (undo-tree-id13605 . -1) (undo-tree-id13606 . -1) (undo-tree-id13607 . -1) (undo-tree-id13608 . -1) (undo-tree-id13609 . -1) (undo-tree-id13610 . -1) (undo-tree-id13611 . -1) (undo-tree-id13612 . -1) (undo-tree-id13613 . -1) (undo-tree-id13614 . -1) (undo-tree-id13615 . -1) (undo-tree-id13616 . -1) (undo-tree-id13617 . -1) (undo-tree-id13618 . -1) (undo-tree-id13619 . -1) (undo-tree-id13620 . -1) (undo-tree-id13621 . -1) (undo-tree-id13622 . -1) (undo-tree-id13623 . -1) (undo-tree-id13624 . -1) (undo-tree-id13625 . -1) (undo-tree-id13626 . -1) (undo-tree-id13627 . -1) (undo-tree-id13628 . -1) (undo-tree-id13629 . -1) (undo-tree-id13630 . -1) (undo-tree-id13631 . -1) (undo-tree-id13632 . -1) (undo-tree-id13633 . -1) (undo-tree-id13634 . -1) (undo-tree-id13635 . -1)) nil (26026 36170 72288 0) 0 nil])
([nil nil ((2854 . 2856) (2853 . 2854) (2851 . 2853) (2837 . 2851) (2836 . 2837) (2828 . 2836) (#("        " 0 8 (fontified nil)) . 2827) (undo-tree-id17823 . -8) (2835 . 2836) (2826 . 2835) (t 26026 36170 86082 801000) 2817) nil (26026 36698 319494 0) 0 nil])
([nil nil ((2857 . 2865) (#("        " 0 8 (fontified nil)) . 2856) (undo-tree-id17822 . -8) (2855 . 2865)) nil (26026 36698 319492 0) 0 nil])
([nil nil ((2856 . 2868)) nil (26026 36698 319491 0) 0 nil])
([nil nil ((#("E " 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t) 1 2 (fontified t)) . 2843) (undo-tree-id17821 . -1)) nil (26026 36698 319490 0) 0 nil])
([nil nil ((2854 . 2866) (#("           " 0 11 (fontified nil)) . -2854) (undo-tree-id17758 . -11) (undo-tree-id17759 . -11) (undo-tree-id17760 . -11) (undo-tree-id17761 . -11) (undo-tree-id17762 . -11) (undo-tree-id17763 . -11) (undo-tree-id17764 . -11) (undo-tree-id17765 . -11) (undo-tree-id17766 . -11) (undo-tree-id17767 . -11) (undo-tree-id17768 . -11) (undo-tree-id17769 . -11) (undo-tree-id17770 . -11) (undo-tree-id17771 . -11) (undo-tree-id17772 . -11) (undo-tree-id17773 . -11) (undo-tree-id17774 . -11) (undo-tree-id17775 . -11) (undo-tree-id17776 . -11) (undo-tree-id17777 . -11) (undo-tree-id17778 . -11) (undo-tree-id17779 . -11) (undo-tree-id17780 . -11) (undo-tree-id17781 . -11) (undo-tree-id17782 . -11) (undo-tree-id17783 . -11) (undo-tree-id17784 . -11) (undo-tree-id17785 . -11) (undo-tree-id17786 . -11) (undo-tree-id17787 . -11) (undo-tree-id17788 . -11) (undo-tree-id17789 . -11) (undo-tree-id17790 . -11) (undo-tree-id17791 . -11) (undo-tree-id17792 . -11) (undo-tree-id17793 . -11) (undo-tree-id17794 . -11) (undo-tree-id17795 . -11) (undo-tree-id17796 . -11) (undo-tree-id17797 . -11) (undo-tree-id17798 . -11) (undo-tree-id17799 . -11) (undo-tree-id17800 . -11) (undo-tree-id17801 . -11) (undo-tree-id17802 . -11) (undo-tree-id17803 . -11) (undo-tree-id17804 . -11) (undo-tree-id17805 . -11) (undo-tree-id17806 . -11) (undo-tree-id17807 . -11) (undo-tree-id17808 . -11) (undo-tree-id17809 . -11) (undo-tree-id17810 . -11) (undo-tree-id17811 . -11) (undo-tree-id17812 . -11) (undo-tree-id17813 . -11) (undo-tree-id17814 . -11) (undo-tree-id17815 . -11) (undo-tree-id17816 . -11) (undo-tree-id17817 . -11) (undo-tree-id17818 . -11) (undo-tree-id17819 . -11) (undo-tree-id17820 . -11) (#(" " 0 1 (fontified t)) . 2865)) nil (26026 36698 319488 0) 0 nil])
([nil nil ((2874 . 2878) (#("next : MyALDAList.Node<E>" 0 22 (fontified nil) 22 23 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 23 24 (fontified nil) 24 25 (fontified nil category c->-as-paren-syntax)) . -2874) (undo-tree-id17676 . -25) (2874 . 2899) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -2874) (undo-tree-id17677 . -2) (undo-tree-id17678 . -2) (undo-tree-id17679 . -1) (undo-tree-id17680 . -1) (undo-tree-id17681 . -1) (undo-tree-id17682 . -1) (undo-tree-id17683 . -1) (undo-tree-id17684 . -1) (undo-tree-id17685 . -1) (undo-tree-id17686 . -1) (undo-tree-id17687 . -1) (undo-tree-id17688 . -1) (undo-tree-id17689 . -1) (undo-tree-id17690 . -1) (undo-tree-id17691 . -1) (undo-tree-id17692 . -1) (undo-tree-id17693 . -1) (undo-tree-id17694 . -1) (undo-tree-id17695 . -1) (undo-tree-id17696 . -1) (undo-tree-id17697 . -1) (undo-tree-id17698 . -1) (undo-tree-id17699 . -1) (undo-tree-id17700 . -1) (undo-tree-id17701 . -1) (undo-tree-id17702 . -1) (undo-tree-id17703 . -1) (undo-tree-id17704 . -1) (undo-tree-id17705 . -2) (undo-tree-id17706 . -2) (undo-tree-id17707 . -2) (undo-tree-id17708 . -2) (undo-tree-id17709 . -2) (undo-tree-id17710 . -2) (undo-tree-id17711 . -2) (undo-tree-id17712 . -2) (undo-tree-id17713 . -2) (undo-tree-id17714 . -2) (undo-tree-id17715 . -2) (undo-tree-id17716 . -2) (undo-tree-id17717 . -2) (undo-tree-id17718 . -2) (undo-tree-id17719 . -2) (undo-tree-id17720 . -2) (undo-tree-id17721 . -2) (undo-tree-id17722 . -2) (undo-tree-id17723 . -2) (undo-tree-id17724 . -2) (undo-tree-id17725 . -2) (undo-tree-id17726 . -2) (undo-tree-id17727 . -2) (undo-tree-id17728 . -2) (undo-tree-id17729 . -2) (undo-tree-id17730 . -2) (undo-tree-id17731 . -2) (undo-tree-id17732 . -2) (undo-tree-id17733 . -2) (undo-tree-id17734 . -2) (undo-tree-id17735 . -2) (undo-tree-id17736 . -2) (undo-tree-id17737 . -2) (undo-tree-id17738 . -2) (undo-tree-id17739 . -2) (undo-tree-id17740 . -2) (undo-tree-id17741 . -2) (undo-tree-id17742 . -2) (undo-tree-id17743 . -2) (undo-tree-id17744 . -2) (undo-tree-id17745 . -2) (undo-tree-id17746 . -2) (undo-tree-id17747 . -2) (undo-tree-id17748 . -2) (undo-tree-id17749 . -2) (undo-tree-id17750 . -2) (undo-tree-id17751 . -2) (undo-tree-id17752 . -2) (undo-tree-id17753 . -2) (undo-tree-id17754 . -2) (undo-tree-id17755 . -2) (undo-tree-id17756 . -2) (undo-tree-id17757 . -2) 2876 (2866 . 2876)) nil (26026 36698 319466 0) 0 nil])
([nil nil ((#("
        public remove() {
            current.next
        }
" 0 1 (fontified t) 1 9 (fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 13 (face font-lock-keyword-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (face (rainbow-delimiters-depth-3-face) fontified t) 23 24 (face (rainbow-delimiters-depth-3-face) fontified t) 24 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-3-face) fontified t) 26 27 (fontified t) 27 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 51 (fontified t) 51 52 (fontified t) 52 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-3-face) fontified t) 61 62 (fontified t)) . 2827) (undo-tree-id17524 . -60) (undo-tree-id17525 . -61) (undo-tree-id17526 . 11) (undo-tree-id17527 . -60) (undo-tree-id17528 . -62) (undo-tree-id17529 . -62) (undo-tree-id17530 . -62) (undo-tree-id17531 . -62) (undo-tree-id17532 . -62) (undo-tree-id17533 . -62) (undo-tree-id17534 . -62) (undo-tree-id17535 . -62) (undo-tree-id17536 . -47) (undo-tree-id17537 . -27) (undo-tree-id17538 . -27) (undo-tree-id17539 . -27) (undo-tree-id17540 . -27) (undo-tree-id17541 . -27) (undo-tree-id17542 . -27) (undo-tree-id17543 . -27) (undo-tree-id17544 . -27) (undo-tree-id17545 . -27) (undo-tree-id17546 . -27) (undo-tree-id17547 . -27) (undo-tree-id17548 . -27) (undo-tree-id17549 . -27) (undo-tree-id17550 . -27) (undo-tree-id17551 . -27) (undo-tree-id17552 . -27) (undo-tree-id17553 . -27) (undo-tree-id17554 . -27) (undo-tree-id17555 . -27) (undo-tree-id17556 . -27) (undo-tree-id17557 . -27) (undo-tree-id17558 . -27) (undo-tree-id17559 . -27) (undo-tree-id17560 . -27) (undo-tree-id17561 . -27) (undo-tree-id17562 . -27) (undo-tree-id17563 . -27) (undo-tree-id17564 . -27) (undo-tree-id17565 . -27) (undo-tree-id17566 . -27) (undo-tree-id17567 . -27) (undo-tree-id17568 . -27) (undo-tree-id17569 . -27) (undo-tree-id17570 . -27) (undo-tree-id17571 . -27) (undo-tree-id17572 . -27) (undo-tree-id17573 . -27) (undo-tree-id17574 . -27) (undo-tree-id17575 . -27) (undo-tree-id17576 . -27) (undo-tree-id17577 . -27) (undo-tree-id17578 . -27) (undo-tree-id17579 . -27) (undo-tree-id17580 . -27) (undo-tree-id17581 . -27) (undo-tree-id17582 . -27) (undo-tree-id17583 . -27) (undo-tree-id17584 . -27) (undo-tree-id17585 . -27) (undo-tree-id17586 . -27) (undo-tree-id17587 . -27) (undo-tree-id17588 . -27) (undo-tree-id17589 . -27) (undo-tree-id17590 . -27) (undo-tree-id17591 . -27) (undo-tree-id17592 . -27) (undo-tree-id17593 . -27) (undo-tree-id17594 . -27) (undo-tree-id17595 . -27) (undo-tree-id17596 . -27) (undo-tree-id17597 . -27) (undo-tree-id17598 . -47) (undo-tree-id17599 . -47) (undo-tree-id17600 . -47) (undo-tree-id17601 . -47) (undo-tree-id17602 . -47) (undo-tree-id17603 . -47) (undo-tree-id17604 . -47) (undo-tree-id17605 . -47) (undo-tree-id17606 . -47) (undo-tree-id17607 . -47) (undo-tree-id17608 . -47) (undo-tree-id17609 . -47) (undo-tree-id17610 . -47) (undo-tree-id17611 . -47) (undo-tree-id17612 . -47) (undo-tree-id17613 . -47) (undo-tree-id17614 . -47) (undo-tree-id17615 . -47) (undo-tree-id17616 . -47) (undo-tree-id17617 . -47) (undo-tree-id17618 . -47) (undo-tree-id17619 . -47) (undo-tree-id17620 . -47) (undo-tree-id17621 . -47) (undo-tree-id17622 . -47) (undo-tree-id17623 . -47) (undo-tree-id17624 . -47) (undo-tree-id17625 . -47) (undo-tree-id17626 . -47) (undo-tree-id17627 . -47) (undo-tree-id17628 . -47) (undo-tree-id17629 . -47) (undo-tree-id17630 . -47) (undo-tree-id17631 . -47) (undo-tree-id17632 . -47) (undo-tree-id17633 . -47) (undo-tree-id17634 . -47) (undo-tree-id17635 . -47) (undo-tree-id17636 . -47) (undo-tree-id17637 . -47) (undo-tree-id17638 . -47) (undo-tree-id17639 . -47) (undo-tree-id17640 . -47) (undo-tree-id17641 . -47) (undo-tree-id17642 . -47) (undo-tree-id17643 . -47) (undo-tree-id17644 . -47) (undo-tree-id17645 . -47) (undo-tree-id17646 . -47) (undo-tree-id17647 . -47) (undo-tree-id17648 . -47) (undo-tree-id17649 . -47) (undo-tree-id17650 . -47) (undo-tree-id17651 . -47) (undo-tree-id17652 . -47) (undo-tree-id17653 . -47) (undo-tree-id17654 . -47) (undo-tree-id17655 . -47) (undo-tree-id17656 . -47) (undo-tree-id17657 . -47) (undo-tree-id17658 . -47) (undo-tree-id17659 . -47) (undo-tree-id17660 . -47) (undo-tree-id17661 . -47) (undo-tree-id17662 . -47) (undo-tree-id17663 . -47) (undo-tree-id17664 . -47) (undo-tree-id17665 . -47) (undo-tree-id17666 . -47) (undo-tree-id17667 . -47) (undo-tree-id17668 . -47) (undo-tree-id17669 . -47) (undo-tree-id17670 . -47) (undo-tree-id17671 . -47) (undo-tree-id17672 . -47) (undo-tree-id17673 . -47) (undo-tree-id17674 . -47) (undo-tree-id17675 . -47)) nil (26026 36698 319435 0) 0 nil])
([nil nil ((2827 . 2889)) nil (26026 36698 319382 0) 0 nil])
([nil nil ((2843 . 2845)) nil (26026 36698 319381 0) 0 nil])
([nil nil ((#("            current.next
" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 24 (fontified t) 24 25 (fontified t)) . 2856) (undo-tree-id17156 . -25) (undo-tree-id17157 . -24) (undo-tree-id17158 . -25) (undo-tree-id17159 . -20) (undo-tree-id17160 . -16) (undo-tree-id17161 . -20) (undo-tree-id17162 . -20) (undo-tree-id17163 . -20) (undo-tree-id17164 . -20) (undo-tree-id17165 . -20) (undo-tree-id17166 . -20) (undo-tree-id17167 . -20) (undo-tree-id17168 . -20) (undo-tree-id17169 . -20) (undo-tree-id17170 . -20) (undo-tree-id17171 . -20) (undo-tree-id17172 . -20) (undo-tree-id17173 . -20) (undo-tree-id17174 . -20) (undo-tree-id17175 . -20) (undo-tree-id17176 . -20) (undo-tree-id17177 . -20) (undo-tree-id17178 . -20) (undo-tree-id17179 . -20) (undo-tree-id17180 . -20) (undo-tree-id17181 . -20) (undo-tree-id17182 . -20) (undo-tree-id17183 . -20) (undo-tree-id17184 . -20) (undo-tree-id17185 . -20) (undo-tree-id17186 . -20) (undo-tree-id17187 . -20) (undo-tree-id17188 . -20) (undo-tree-id17189 . -20) (undo-tree-id17190 . -20) (undo-tree-id17191 . -20) (undo-tree-id17192 . -20) (undo-tree-id17193 . -20) (undo-tree-id17194 . -20) (undo-tree-id17195 . -20) (undo-tree-id17196 . -20) (undo-tree-id17197 . -20) (undo-tree-id17198 . -20) (undo-tree-id17199 . -20) (undo-tree-id17200 . -20) (undo-tree-id17201 . -20) (undo-tree-id17202 . -20) (undo-tree-id17203 . -20) (undo-tree-id17204 . -20) (undo-tree-id17205 . -20) (undo-tree-id17206 . -20) (undo-tree-id17207 . -20) (undo-tree-id17208 . -20) (undo-tree-id17209 . -20) (undo-tree-id17210 . -20) (undo-tree-id17211 . -20) (undo-tree-id17212 . -20) (undo-tree-id17213 . -20) (undo-tree-id17214 . -20) (undo-tree-id17215 . -20) (undo-tree-id17216 . -20) (undo-tree-id17217 . -20) (undo-tree-id17218 . -20) (undo-tree-id17219 . -20) (undo-tree-id17220 . -20) (undo-tree-id17221 . -20) (undo-tree-id17222 . -20) (undo-tree-id17223 . -20) (undo-tree-id17224 . -20) (undo-tree-id17225 . -20) (undo-tree-id17226 . -20) (undo-tree-id17227 . -20) (undo-tree-id17228 . -20) (undo-tree-id17229 . -20) (undo-tree-id17230 . -20) (undo-tree-id17231 . -20) (undo-tree-id17232 . -20) (undo-tree-id17233 . -20) (undo-tree-id17234 . -20) (undo-tree-id17235 . -20) (undo-tree-id17236 . -20) (undo-tree-id17237 . -20) (undo-tree-id17238 . -20) (undo-tree-id17239 . -25) (undo-tree-id17240 . -25) (undo-tree-id17241 . -25) (undo-tree-id17242 . -25) (undo-tree-id17243 . -25) (undo-tree-id17244 . -25) (undo-tree-id17245 . -25) (undo-tree-id17246 . -25) (undo-tree-id17247 . -25) (undo-tree-id17248 . -25) (undo-tree-id17249 . -25) (undo-tree-id17250 . -25) (undo-tree-id17251 . -25) (undo-tree-id17252 . -25) (undo-tree-id17253 . -25) (undo-tree-id17254 . -25) (undo-tree-id17255 . -25) (undo-tree-id17256 . -25) (undo-tree-id17257 . -25) (undo-tree-id17258 . -25) (undo-tree-id17259 . -25) (undo-tree-id17260 . -25) (undo-tree-id17261 . -25) (undo-tree-id17262 . -25) (undo-tree-id17263 . -25) (undo-tree-id17264 . -25) (undo-tree-id17265 . -25) (undo-tree-id17266 . -25) (undo-tree-id17267 . -25) (undo-tree-id17268 . -25) (undo-tree-id17269 . -25) (undo-tree-id17270 . -25) (undo-tree-id17271 . -25) (undo-tree-id17272 . -25) (undo-tree-id17273 . -25) (undo-tree-id17274 . -25) (undo-tree-id17275 . -25) (undo-tree-id17276 . -25) (undo-tree-id17277 . -25) (undo-tree-id17278 . -25) (undo-tree-id17279 . -25) (undo-tree-id17280 . -25) (undo-tree-id17281 . -25) (undo-tree-id17282 . -25) (undo-tree-id17283 . -25) (undo-tree-id17284 . -25) (undo-tree-id17285 . -25) (undo-tree-id17286 . -25) (undo-tree-id17287 . -25) (undo-tree-id17288 . -25) (undo-tree-id17289 . -12) (undo-tree-id17290 . -12) (undo-tree-id17291 . -12) (undo-tree-id17292 . -12) (undo-tree-id17293 . -12) (undo-tree-id17294 . -12) (undo-tree-id17295 . -12) (undo-tree-id17296 . -12) (undo-tree-id17297 . -12) (undo-tree-id17298 . -12) (undo-tree-id17299 . -12) (undo-tree-id17300 . -12) (undo-tree-id17301 . -12) (undo-tree-id17302 . -12) (undo-tree-id17303 . -12) (undo-tree-id17304 . -12) (undo-tree-id17305 . -12) (undo-tree-id17306 . -12) (undo-tree-id17307 . -12) (undo-tree-id17308 . -12) (undo-tree-id17309 . -12) (undo-tree-id17310 . -12) (undo-tree-id17311 . -12) (undo-tree-id17312 . -12) (undo-tree-id17313 . -12) (undo-tree-id17314 . -12) (undo-tree-id17315 . -12) (undo-tree-id17316 . -12) (undo-tree-id17317 . -12) (undo-tree-id17318 . -12) (undo-tree-id17319 . -12) (undo-tree-id17320 . -12) (undo-tree-id17321 . -12) (undo-tree-id17322 . -12) (undo-tree-id17323 . -12) (undo-tree-id17324 . -12) (undo-tree-id17325 . -12) (undo-tree-id17326 . -12) (undo-tree-id17327 . -12) (undo-tree-id17328 . -12) (undo-tree-id17329 . -12) (undo-tree-id17330 . -12) (undo-tree-id17331 . -12) (undo-tree-id17332 . -12) (undo-tree-id17333 . -12) (undo-tree-id17334 . -12) (undo-tree-id17335 . -12) (undo-tree-id17336 . -12) (undo-tree-id17337 . -12) (undo-tree-id17338 . -12) (undo-tree-id17339 . -12) (undo-tree-id17340 . -12) (undo-tree-id17341 . -12) (undo-tree-id17342 . -12) (undo-tree-id17343 . -12) (undo-tree-id17344 . -12) (undo-tree-id17345 . -12) (undo-tree-id17346 . -12) (undo-tree-id17347 . -12) (undo-tree-id17348 . -12) (undo-tree-id17349 . -12) (undo-tree-id17350 . -12) (undo-tree-id17351 . -12) (undo-tree-id17352 . -12) (undo-tree-id17353 . -12) (undo-tree-id17354 . -12) (undo-tree-id17355 . -12) (undo-tree-id17356 . -12) (undo-tree-id17357 . -12) (undo-tree-id17358 . -12) (undo-tree-id17359 . -12) (undo-tree-id17360 . -12) (undo-tree-id17361 . -12) (undo-tree-id17362 . -12) (undo-tree-id17363 . -12) (undo-tree-id17364 . -12) (undo-tree-id17365 . -12) (undo-tree-id17366 . -12) (undo-tree-id17367 . -12) (undo-tree-id17368 . -12) (undo-tree-id17369 . -12) (undo-tree-id17370 . -12) (undo-tree-id17371 . -12) (undo-tree-id17372 . -12) (undo-tree-id17373 . -12) (undo-tree-id17374 . -12) (undo-tree-id17375 . -12) (undo-tree-id17376 . -12) (undo-tree-id17377 . -12) (undo-tree-id17378 . -12) (undo-tree-id17379 . -12) (undo-tree-id17380 . -12) (undo-tree-id17381 . -12) (undo-tree-id17382 . -12) (undo-tree-id17383 . -12) (undo-tree-id17384 . -12) (undo-tree-id17385 . -12) (undo-tree-id17386 . -12) (undo-tree-id17387 . -12) (undo-tree-id17388 . -12) (undo-tree-id17389 . -12) (undo-tree-id17390 . -12) (undo-tree-id17391 . -12) (undo-tree-id17392 . -12) (undo-tree-id17393 . -12) (undo-tree-id17394 . -12) (undo-tree-id17395 . -12) (undo-tree-id17396 . -12) (undo-tree-id17397 . -12) (undo-tree-id17398 . -12) (undo-tree-id17399 . -12) (undo-tree-id17400 . -12) (undo-tree-id17401 . -12) (undo-tree-id17402 . -12) (undo-tree-id17403 . -12) (undo-tree-id17404 . -12) (undo-tree-id17405 . -12) (undo-tree-id17406 . -12) (undo-tree-id17407 . -12) (undo-tree-id17408 . -12) (undo-tree-id17409 . -12) (undo-tree-id17410 . -12) (undo-tree-id17411 . -12) (undo-tree-id17412 . -12) (undo-tree-id17413 . -12) (undo-tree-id17414 . -12) (undo-tree-id17415 . -12) (undo-tree-id17416 . -12) (undo-tree-id17417 . -12) (undo-tree-id17418 . -12) (undo-tree-id17419 . -12) (undo-tree-id17420 . -12) (undo-tree-id17421 . -12) (undo-tree-id17422 . -12) (undo-tree-id17423 . -12) (undo-tree-id17424 . -12) (undo-tree-id17425 . -12) (undo-tree-id17426 . -12) (undo-tree-id17427 . -12) (undo-tree-id17428 . -12) (undo-tree-id17429 . -12) (undo-tree-id17430 . -12) (undo-tree-id17431 . -12) (undo-tree-id17432 . -12) (undo-tree-id17433 . -12) (undo-tree-id17434 . -12) (undo-tree-id17435 . -12) (undo-tree-id17436 . -12) (undo-tree-id17437 . -16) (undo-tree-id17438 . -16) (undo-tree-id17439 . -16) (undo-tree-id17440 . -16) (undo-tree-id17441 . -16) (undo-tree-id17442 . -16) (undo-tree-id17443 . -16) (undo-tree-id17444 . -16) (undo-tree-id17445 . -16) (undo-tree-id17446 . -16) (undo-tree-id17447 . -16) (undo-tree-id17448 . -16) (undo-tree-id17449 . -16) (undo-tree-id17450 . -16) (undo-tree-id17451 . -16) (undo-tree-id17452 . -16) (undo-tree-id17453 . -16) (undo-tree-id17454 . -16) (undo-tree-id17455 . -16) (undo-tree-id17456 . -16) (undo-tree-id17457 . -16) (undo-tree-id17458 . -16) (undo-tree-id17459 . -16) (undo-tree-id17460 . -16) (undo-tree-id17461 . -16) (undo-tree-id17462 . -16) (undo-tree-id17463 . -16) (undo-tree-id17464 . -16) (undo-tree-id17465 . -16) (undo-tree-id17466 . -16) (undo-tree-id17467 . -16) (undo-tree-id17468 . -16) (undo-tree-id17469 . -16) (undo-tree-id17470 . -16) (undo-tree-id17471 . -16) (undo-tree-id17472 . -16) (undo-tree-id17473 . -16) (undo-tree-id17474 . -16) (undo-tree-id17475 . -16) (undo-tree-id17476 . -16) (undo-tree-id17477 . -16) (undo-tree-id17478 . -16) (undo-tree-id17479 . -16) (undo-tree-id17480 . -16) (undo-tree-id17481 . -16) (undo-tree-id17482 . -16) (undo-tree-id17483 . -16) (undo-tree-id17484 . -16) (undo-tree-id17485 . -16) (undo-tree-id17486 . -16) (undo-tree-id17487 . -16) (undo-tree-id17488 . -16) (undo-tree-id17489 . -16) (undo-tree-id17490 . -16) (undo-tree-id17491 . -16) (undo-tree-id17492 . -16) (undo-tree-id17493 . -16) (undo-tree-id17494 . -16) (undo-tree-id17495 . -16) (undo-tree-id17496 . -16) (undo-tree-id17497 . -16) (undo-tree-id17498 . -16) (undo-tree-id17499 . -16) (undo-tree-id17500 . -16) (undo-tree-id17501 . -16) (undo-tree-id17502 . -16) (undo-tree-id17503 . -16) (undo-tree-id17504 . -16) (undo-tree-id17505 . -16) (undo-tree-id17506 . -16) (undo-tree-id17507 . -16) (undo-tree-id17508 . -16) (undo-tree-id17509 . -16) (undo-tree-id17510 . -16) (undo-tree-id17511 . -16) (undo-tree-id17512 . -16) (undo-tree-id17513 . -16) (undo-tree-id17514 . -16) (undo-tree-id17515 . -16) (undo-tree-id17516 . -16) (undo-tree-id17517 . -16) (undo-tree-id17518 . -16) (undo-tree-id17519 . -16) (undo-tree-id17520 . -16) (undo-tree-id17521 . -16) (undo-tree-id17522 . -16) (undo-tree-id17523 . -25) 2872) nil (26026 36698 319374 0) 0 nil])
([nil nil ((1914 . 1921) (1905 . 1914) (t 26026 36698 336082 298000) 1855) nil (26026 37150 433832 0) 0 nil])
([nil nil ((1937 . 1940) (#("0" 0 1 (fontified t)) . 1937)) nil (26026 37150 433831 0) 0 nil])
([nil nil ((1967 . 1975) (#("            " 0 12 (fontified nil)) . 1967) (undo-tree-id17992 . -12) (1979 . 1980) (1966 . 1979) (1965 . 1966) (1964 . 1965) (1961 . 1964) (1954 . 1961) (#("hasNext() : boolean" 0 19 (fontified nil)) . -1954) (undo-tree-id17993 . -19) (1954 . 1973) (#("has" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1954) (undo-tree-id17994 . -3) (undo-tree-id17995 . -3) 1957 (1953 . 1957) (1951 . 1953) (1943 . 1951) (#("ite" 0 3 (fontified nil)) . 1943) (1943 . 1946) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -1943) (undo-tree-id17996 . -24) (1943 . 1967) (#("iterat" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1943) (undo-tree-id17997 . -6) (undo-tree-id17998 . -6) 1949 (1943 . 1949) (1942 . 1943) (1941 . 1942) (#(" x" 0 2 (fontified nil)) . -1941) (1941 . 1943) (#("while" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 1941) (undo-tree-id17999 . -5) (undo-tree-id18000 . -4) (1936 . 1941) 1941 (1936 . 1941) (1928 . 1936) (#("        " 0 8 (fontified nil)) . 1927) (undo-tree-id18001 . -8) (1926 . 1936) (1925 . 1926) (1923 . 1925) (1921 . 1923)) nil (26026 37150 433829 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1968) (undo-tree-id17990 . -12) 1980 (1968 . 1980) (#("            " 0 12 (fontified nil)) . 1967) (undo-tree-id17991 . -12) (1979 . 1980) (1966 . 1979) 1936) nil (26026 37150 433821 0) 0 nil])
([nil nil ((1983 . 1984) (1980 . 1983) (1968 . 1980) (#("            " 0 12 (fontified nil)) . 1967) (undo-tree-id17989 . -12) (1979 . 1980) (1967 . 1979)) nil (26026 37150 433817 0) 0 nil])
([nil nil ((1935 . 1950) (1926 . 1935) 1921) nil (26026 37150 433816 0) 0 nil])
([nil nil ((#("        Node<E> current
" 0 8 (fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t) 15 16 (fontified t) 16 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t)) . 1927) (undo-tree-id17985 . -23) (undo-tree-id17986 . 1) (undo-tree-id17987 . -19) (undo-tree-id17988 . -22) 1949) nil (26026 37150 433815 0) 0 nil])
([nil nil ((1994 . 1999) (1992 . 1994) (1984 . 1992) (#("it" 0 2 (fontified nil)) . 1984) (1984 . 1986) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -1984) (undo-tree-id17982 . -24) (1984 . 2008) (#("iter" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1984) (undo-tree-id17983 . -4) (undo-tree-id17984 . -4) 1988 (1984 . 1988)) nil (26026 37150 433813 0) 0 nil])
([nil nil ((#("iterator().curr" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-5-face) fontified t) 9 10 (face (rainbow-delimiters-depth-5-face) fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 1984) (undo-tree-id17980 . -14) (undo-tree-id17981 . -14)) nil (26026 37150 433804 0) 0 nil])
([nil nil ((1970 . 1971) (1968 . 1970) (1964 . 1968) (#("next() : E" 0 10 (fontified nil)) . -1964) (undo-tree-id17969 . -10) (1964 . 1974) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1964) (undo-tree-id17970 . -2) (undo-tree-id17971 . -2) 1966 (#("(" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1966) (undo-tree-id17972 . -1) (undo-tree-id17973 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1967) (undo-tree-id17974 . -1) 1968 (1966 . 1968) (1963 . 1966) (1961 . 1963) (1953 . 1961) (#("it" 0 2 (fontified nil)) . 1953) (1953 . 1955) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -1953) (undo-tree-id17975 . -24) (1953 . 1977) (#("iterato" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -1953) (undo-tree-id17976 . -7) (undo-tree-id17977 . -7) 1960 (1953 . 1960) (1943 . 1953) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1943) (undo-tree-id17978 . -1) (undo-tree-id17979 . -1) 1944 (1935 . 1944) (1926 . 1935) 1921) nil (26026 37150 433801 0) 0 nil])
([nil nil ((#("Node" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . 1935) (undo-tree-id17968 . -3)) nil (26026 37150 433794 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 1935)) nil (26026 37150 433793 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 1936)) nil (26026 37150 433792 0) 0 nil])
([nil nil ((#("        // iterera över listan tills elementet har hittats
" 0 3 (fontified t c-is-sws t c-in-sws t) 3 5 (fontified t c-is-sws t c-in-sws t) 5 6 (fontified t c-is-sws t c-in-sws t) 6 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 45 (face font-lock-comment-face fontified t c-in-sws t) 45 58 (face font-lock-comment-face fontified t c-in-sws t) 58 59 (c-in-sws t face font-lock-comment-face fontified t)) . 1847) (undo-tree-id17964 . -58) (undo-tree-id17965 . -19) (undo-tree-id17966 . -19) (undo-tree-id17967 . -15) 1862) nil (26026 37150 433791 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1915 . 1916) (#("
" 0 1 (fontified nil c-in-sws t face font-lock-comment-face)) . -1966) (1907 . 1967)) nil (26026 37150 433789 0) 0 nil])
([nil nil ((2043 . 2059) (#(" " 0 1 (fontified nil)) . 2042) (undo-tree-id17960 . -1) (2043 . 2044) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -2043) (undo-tree-id17961 . -1) 2044 (2043 . 2044) (2042 . 2043) (2041 . 2042) (#("-" 0 1 (fontified t)) . -2041) (undo-tree-id17962 . -1) (undo-tree-id17963 . -1) 2042 (2034 . 2042) (2023 . 2034)) nil (26026 37150 433788 0) 0 nil])
([nil nil ((#("                
" 0 16 (fontified t) 16 17 (fontified t)) . 2043) (undo-tree-id17957 . -16) (undo-tree-id17958 . 1) (undo-tree-id17959 . -15) 2058) nil (26026 37150 433784 0) 0 nil])
([nil nil ((#("        return idx;
" 0 1 (fontified t c-is-sws t) 1 5 (fontified t c-is-sws t) 5 7 (fontified t c-is-sws t) 7 8 (fontified t c-is-sws t rear-nonsticky t) 8 9 (face font-lock-keyword-face fontified t c-is-sws t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 13 (face font-lock-keyword-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t)) . 2054) (undo-tree-id17956 . -19)) nil (26026 37150 433782 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -2063) (2043 . 2064)) nil (26026 37150 433781 0) 0 nil])
([nil nil ((2044 . 2060) (#("        " 0 1 (fontified t) 1 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t rear-nonsticky t)) . -2044) (undo-tree-id17955 . -8) 2052) nil (26026 37150 433780 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2043)) nil (26026 37150 433779 0) 0 nil])
([nil nil ((2109 . 2110) (2104 . 2109) (2087 . 2104) (#(" x" 0 2 (fontified nil)) . -2087) (2087 . 2089) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 2087) (undo-tree-id17952 . -4) (2083 . 2087) 2087 (2083 . 2087) (#("e" 0 1 (fontified nil)) . 2083) (2083 . 2084) (#("else" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t)) . -2083) (undo-tree-id17953 . -4) (undo-tree-id17954 . -4) 2087 (2083 . 2087) (2070 . 2083) 2043) nil (26026 37150 433778 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -2123) (undo-tree-id17946 . -1) (undo-tree-id17947 . -1) (#("u" 0 1 (fontified t)) . -2124) (undo-tree-id17948 . -1) (undo-tree-id17949 . -1) (#("r" 0 1 (fontified t)) . -2125) (undo-tree-id17950 . -1) (undo-tree-id17951 . -1) 2126 (2123 . 2126) (2110 . 2123) 2109) nil (26026 37150 433775 0) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -2087) (2087 . 2089) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 2087) (2083 . 2087) 2089 (2088 . 2089) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -2088) (undo-tree-id17944 . -1) 2089 (2088 . 2089) (2087 . 2088) (#(" x" 0 2 (fontified nil)) . -2087) (2087 . 2089) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 2087) (undo-tree-id17945 . -4) (2083 . 2087) 2087) nil (26026 37150 433771 0) 0 nil])
([nil nil ((2113 . 2125) (#("                " 0 16 (fontified nil)) . 2113) (undo-tree-id17943 . -16) (2129 . 2130) (2112 . 2129) 2111) nil (26026 37150 433768 0) 0 nil])
([nil nil ((2137 . 2144) (#("-" 0 1 (fontified t)) . -2137) (undo-tree-id17942 . -1) 2138 (2129 . 2138) (2112 . 2129) 2102) nil (26026 37150 433767 0) 0 nil])
([nil nil ((2156 . 2157) (2154 . 2156) (2150 . 2154) (#("next() : E" 0 10 (fontified nil)) . -2150) (undo-tree-id17932 . -10) (2150 . 2160) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -2150) (undo-tree-id17933 . -2) (undo-tree-id17934 . -2) 2152 (2149 . 2152) (2147 . 2149) (2139 . 2147) (#("it" 0 2 (fontified nil)) . 2139) (2139 . 2141) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -2139) (undo-tree-id17935 . -24) (2139 . 2163) (#("iter" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2139) (undo-tree-id17936 . -4) (undo-tree-id17937 . -4) 2143 (2137 . 2143) (#("dl " 0 2 (fontified t) 2 3 (fontified t)) . -2137) (undo-tree-id17938 . -3) (undo-tree-id17939 . -3) 2140 (#("iter" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2140) (undo-tree-id17940 . -3) (undo-tree-id17941 . -4) 2144) nil (26026 37150 433765 0) 0 nil])
([nil nil ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 2172) (undo-tree-id17930 . -12) (undo-tree-id17931 . -11) 2183) nil (26026 37150 433760 0) 0 nil])
([nil nil ((2065 . 2066) (2059 . 2065) (#("return idx;" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 2059) (undo-tree-id17929 . -10)) nil (26026 37150 433758 0) 0 nil])
([nil nil ((2064 . 2065) (2059 . 2064) (#("return;" 0 1 (face font-lock-keyword-face fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 2059) (undo-tree-id17927 . -6) (undo-tree-id17928 . -7)) nil (26026 37150 433757 0) 0 nil])
([nil nil ((2196 . 2197) (2186 . 2196) (2178 . 2186) (#("        " 0 8 (fontified nil)) . 2177) (undo-tree-id17926 . -8) (2185 . 2186) (2176 . 2185) 2175) nil (26026 37150 433755 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2177)) nil (26026 37150 433754 0) 0 nil])
([nil nil ((#("        " 0 1 (c-is-sws t fontified t) 1 8 (c-is-sws t fontified t)) . -1783) (undo-tree-id17925 . -8) 1791 (1782 . 1791) 1724) nil (26026 37150 433753 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1790 . 1791) (#("
" 0 1 (fontified nil)) . -1821) (1782 . 1822) 1724) nil (26026 37150 433752 0) 0 nil])
([nil nil ((1862 . 1870) (#("            " 0 12 (fontified nil)) . 1862) (undo-tree-id17919 . -12) (1874 . 1875) (1861 . 1874) (1860 . 1861) (1859 . 1860) (1856 . 1859) (1849 . 1856) (#("hasNext() : boolean" 0 19 (fontified nil)) . -1849) (undo-tree-id17920 . -19) (1849 . 1868) (#("hasNe" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1849) (undo-tree-id17921 . -5) (undo-tree-id17922 . -4) 1854 (1848 . 1854) (1846 . 1848) (1840 . 1846) (1838 . 1840) (1837 . 1838) (1836 . 1837) (#(" x" 0 2 (fontified nil)) . -1836) (1836 . 1838) (#("while" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 1836) (undo-tree-id17923 . -5) (undo-tree-id17924 . -4) (1831 . 1836) 1836 (1831 . 1836) (1822 . 1831) 1822) nil (26026 37150 433751 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1964) (undo-tree-id17906 . -1) (undo-tree-id17907 . -1) (#("u" 0 1 (fontified t)) . -1965) (undo-tree-id17908 . -1) (undo-tree-id17909 . -1) 1966 (1961 . 1966) (1944 . 1961) (#(" x" 0 2 (fontified nil)) . -1944) (1944 . 1946) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1944) (undo-tree-id17910 . -4) (1940 . 1944) 1944 (#("f" 0 1 (fontified t)) . -1944) (undo-tree-id17911 . -1) 1945 (1944 . 1945) (1940 . 1944) (#("el" 0 2 (fontified nil)) . 1940) (1940 . 1942) (#("else" 0 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t)) . -1940) (undo-tree-id17912 . -4) (undo-tree-id17913 . -4) 1944 (1940 . 1944) (1927 . 1940) (1926 . 1927) (1915 . 1926) (1898 . 1915) (1897 . 1898) (#("-" 0 1 (fontified t)) . -1897) (undo-tree-id17914 . -1) (undo-tree-id17915 . -1) 1898 (1887 . 1898) (#("-" 0 1 (fontified t)) . -1887) (undo-tree-id17916 . -1) (#("-" 0 1 (fontified t)) . -1888) (undo-tree-id17917 . -1) 1889 (1879 . 1889) (1878 . 1879) (1875 . 1878) (1863 . 1875) (#("            " 0 12 (fontified nil)) . 1862) (undo-tree-id17918 . -12) (1874 . 1875) (1861 . 1874) 1831) nil (26026 37150 433745 0) 0 nil])
([nil nil ((#("            else
" 0 12 (fontified t) 12 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t)) . 1928) (undo-tree-id17904 . -16) (undo-tree-id17905 . -15) 1943) nil (26026 37150 433735 0) 0 nil])
([nil nil ((#("                ret
" 0 16 (fontified t) 16 17 (fontified t) 17 19 (fontified t) 19 20 (fontified t)) . 1928) (undo-tree-id17900 . -19) (undo-tree-id17901 . 1) (undo-tree-id17902 . -18) (undo-tree-id17903 . -15) 1943) nil (26026 37150 433734 0) 0 nil])
([nil nil ((1953 . 1958) (#("true" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 1953) (undo-tree-id17899 . -3)) nil (26026 37150 433732 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1662 . 1663) (#("
" 0 1 (fontified nil)) . -1813) (1654 . 1814) 1615) nil (26026 37150 433730 0) 0 nil])
([nil nil ((#("        // iterera över listan tills elementet har hittats
" 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 58 (face font-lock-comment-face fontified t c-in-sws t) 58 59 (face font-lock-comment-face fontified t c-in-sws t)) . 1596) (undo-tree-id17824 . -58) (undo-tree-id17825 . -8) (undo-tree-id17826 . -19) (undo-tree-id17827 . -19) (undo-tree-id17828 . -19) (undo-tree-id17829 . -19) (undo-tree-id17830 . -19) (undo-tree-id17831 . -19) (undo-tree-id17832 . -19) (undo-tree-id17833 . -19) (undo-tree-id17834 . -19) (undo-tree-id17835 . -19) (undo-tree-id17836 . -19) (undo-tree-id17837 . -19) (undo-tree-id17838 . -19) (undo-tree-id17839 . -19) (undo-tree-id17840 . -19) (undo-tree-id17841 . -19) (undo-tree-id17842 . -19) (undo-tree-id17843 . -19) (undo-tree-id17844 . -8) (undo-tree-id17845 . -8) (undo-tree-id17846 . -8) (undo-tree-id17847 . -8) (undo-tree-id17848 . -8) (undo-tree-id17849 . -8) (undo-tree-id17850 . -8) (undo-tree-id17851 . -8) (undo-tree-id17852 . -8) (undo-tree-id17853 . -8) (undo-tree-id17854 . -8) (undo-tree-id17855 . -8) (undo-tree-id17856 . -8) (undo-tree-id17857 . -8) (undo-tree-id17858 . -8) (undo-tree-id17859 . -8) (undo-tree-id17860 . -8) (undo-tree-id17861 . -8) (undo-tree-id17862 . -8) (undo-tree-id17863 . -8) (undo-tree-id17864 . -8) (undo-tree-id17865 . -8) (undo-tree-id17866 . -8) (undo-tree-id17867 . -8) (undo-tree-id17868 . -8) (undo-tree-id17869 . -8) (undo-tree-id17870 . -8) (undo-tree-id17871 . -8) (undo-tree-id17872 . -8) (undo-tree-id17873 . -8) (undo-tree-id17874 . -8) (undo-tree-id17875 . -8) (undo-tree-id17876 . -8) (undo-tree-id17877 . -8) (undo-tree-id17878 . -8) (undo-tree-id17879 . -8) (undo-tree-id17880 . -8) (undo-tree-id17881 . -8) (undo-tree-id17882 . -8) (undo-tree-id17883 . -8) (undo-tree-id17884 . -8) (undo-tree-id17885 . -8) (undo-tree-id17886 . -8) (undo-tree-id17887 . -8) (undo-tree-id17888 . -8) (undo-tree-id17889 . -8) (undo-tree-id17890 . -8) (undo-tree-id17891 . -8) (undo-tree-id17892 . -8) (undo-tree-id17893 . -8) (undo-tree-id17894 . -8) (undo-tree-id17895 . -8) (undo-tree-id17896 . -8) (undo-tree-id17897 . -8) (undo-tree-id17898 . -59) 1604) nil (26026 37150 433726 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1756) (undo-tree-id19125 . -12) (undo-tree-id19126 . -12) (undo-tree-id19127 . -12) (undo-tree-id19128 . -12) (undo-tree-id19129 . -12) (undo-tree-id19130 . -12) (undo-tree-id19131 . -12) (undo-tree-id19132 . -12) (undo-tree-id19133 . -12) (undo-tree-id19134 . -12) (undo-tree-id19135 . -12) (undo-tree-id19136 . -12) (undo-tree-id19137 . -12) (undo-tree-id19138 . -12) (undo-tree-id19139 . -12) (undo-tree-id19140 . -12) (undo-tree-id19141 . -12) (undo-tree-id19142 . -12) (undo-tree-id19143 . -12) (undo-tree-id19144 . -12) (undo-tree-id19145 . -12) (undo-tree-id19146 . -12) (undo-tree-id19147 . -12) (undo-tree-id19148 . -12) (undo-tree-id19149 . -12) (undo-tree-id19150 . -12) (undo-tree-id19151 . -12) 1768 (1756 . 1768) (#("            " 0 12 (fontified nil)) . 1755) (undo-tree-id19152 . -12) (undo-tree-id19153 . -12) (undo-tree-id19154 . -12) (undo-tree-id19155 . -12) (undo-tree-id19156 . -12) (undo-tree-id19157 . -12) (undo-tree-id19158 . -12) (undo-tree-id19159 . -12) (undo-tree-id19160 . -12) (undo-tree-id19161 . -12) (undo-tree-id19162 . -12) (undo-tree-id19163 . -12) (undo-tree-id19164 . -12) (undo-tree-id19165 . -12) (undo-tree-id19166 . -12) (undo-tree-id19167 . -12) (undo-tree-id19168 . -12) (undo-tree-id19169 . -12) (undo-tree-id19170 . -12) (undo-tree-id19171 . -12) (undo-tree-id19172 . -12) (undo-tree-id19173 . -12) (undo-tree-id19174 . -12) (undo-tree-id19175 . -12) (undo-tree-id19176 . -12) (undo-tree-id19177 . -12) (undo-tree-id19178 . -12) (undo-tree-id19179 . -12) (undo-tree-id19180 . -12) (undo-tree-id19181 . -12) (undo-tree-id19182 . -12) (undo-tree-id19183 . -12) (undo-tree-id19184 . -12) (undo-tree-id19185 . -12) (undo-tree-id19186 . -12) (undo-tree-id19187 . -12) (undo-tree-id19188 . -12) (undo-tree-id19189 . -12) (undo-tree-id19190 . -12) (undo-tree-id19191 . -12) (undo-tree-id19192 . -12) (undo-tree-id19193 . -12) (undo-tree-id19194 . -12) (undo-tree-id19195 . -12) (undo-tree-id19196 . -12) (undo-tree-id19197 . -12) (1767 . 1768) (1754 . 1767) (t 26026 37150 448883 668000) 1724) nil (26026 37475 698456 0) 0 nil])
([nil nil ((1756 . 1764) (#("            " 0 12 (fontified nil)) . 1756) (undo-tree-id19055 . -12) (undo-tree-id19056 . -12) (undo-tree-id19057 . -12) (undo-tree-id19058 . -12) (undo-tree-id19059 . -12) (undo-tree-id19060 . -12) (undo-tree-id19061 . -12) (undo-tree-id19062 . -12) (undo-tree-id19063 . -12) (undo-tree-id19064 . -12) (undo-tree-id19065 . -12) (undo-tree-id19066 . -12) (undo-tree-id19067 . -12) (undo-tree-id19068 . -12) (undo-tree-id19069 . -12) (undo-tree-id19070 . -12) (undo-tree-id19071 . -12) (undo-tree-id19072 . -12) (undo-tree-id19073 . -12) (undo-tree-id19074 . -12) (undo-tree-id19075 . -12) (undo-tree-id19076 . -12) (undo-tree-id19077 . -12) (undo-tree-id19078 . -12) (undo-tree-id19079 . -12) (undo-tree-id19080 . -12) (undo-tree-id19081 . -12) (undo-tree-id19082 . -12) (undo-tree-id19083 . -12) (undo-tree-id19084 . -12) (undo-tree-id19085 . -12) (undo-tree-id19086 . -12) (undo-tree-id19087 . -12) (undo-tree-id19088 . -12) (undo-tree-id19089 . -12) (undo-tree-id19090 . -12) (undo-tree-id19091 . -12) (undo-tree-id19092 . -12) (undo-tree-id19093 . -12) (undo-tree-id19094 . -12) (undo-tree-id19095 . -12) (undo-tree-id19096 . -12) (undo-tree-id19097 . -12) (undo-tree-id19098 . -12) (undo-tree-id19099 . -12) (undo-tree-id19100 . -12) (undo-tree-id19101 . -12) (undo-tree-id19102 . -12) (undo-tree-id19103 . -12) (undo-tree-id19104 . -12) (undo-tree-id19105 . -12) (undo-tree-id19106 . -12) (undo-tree-id19107 . -12) (undo-tree-id19108 . -12) (undo-tree-id19109 . -12) (undo-tree-id19110 . -12) (undo-tree-id19111 . -12) (undo-tree-id19112 . -12) (undo-tree-id19113 . -12) (undo-tree-id19114 . -12) (undo-tree-id19115 . -12) (undo-tree-id19116 . -12) (undo-tree-id19117 . -12) (undo-tree-id19118 . -12) (undo-tree-id19119 . -12) (undo-tree-id19120 . -12) (undo-tree-id19121 . -12) (undo-tree-id19122 . -12) (undo-tree-id19123 . -12) (undo-tree-id19124 . -12) (1768 . 1769) (1755 . 1768) 1755) nil (26026 37475 698430 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1756) (undo-tree-id19012 . -12) (undo-tree-id19013 . -12) (undo-tree-id19014 . -12) (undo-tree-id19015 . -12) (undo-tree-id19016 . -12) (undo-tree-id19017 . -12) (undo-tree-id19018 . -12) (undo-tree-id19019 . -12) (undo-tree-id19020 . -12) (undo-tree-id19021 . -12) (undo-tree-id19022 . -12) (undo-tree-id19023 . -12) (undo-tree-id19024 . -12) (undo-tree-id19025 . -12) (undo-tree-id19026 . -12) (undo-tree-id19027 . -12) (undo-tree-id19028 . -12) (undo-tree-id19029 . -12) (undo-tree-id19030 . -12) (undo-tree-id19031 . -12) (undo-tree-id19032 . -12) (undo-tree-id19033 . -12) (undo-tree-id19034 . -12) (undo-tree-id19035 . -12) (undo-tree-id19036 . -12) (undo-tree-id19037 . -12) (undo-tree-id19038 . -12) (undo-tree-id19039 . -12) (undo-tree-id19040 . -12) (undo-tree-id19041 . -12) (undo-tree-id19042 . -12) (undo-tree-id19043 . -12) (undo-tree-id19044 . -12) (undo-tree-id19045 . -12) (undo-tree-id19046 . -12) (undo-tree-id19047 . -12) (undo-tree-id19048 . -12) (undo-tree-id19049 . -12) (undo-tree-id19050 . -12) (undo-tree-id19051 . -12) (undo-tree-id19052 . -12) (undo-tree-id19053 . -12) (undo-tree-id19054 . -12) 1768 (1755 . 1768) 1755) nil (26026 37475 698405 0) 0 nil])
([nil nil ((1755 . 1767)) nil (26026 37475 698390 0) 0 nil])
([nil nil ((1694 . 1701) (#("elementet" 0 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t)) . 1694) (undo-tree-id19009 . -8) (undo-tree-id19010 . -9) (undo-tree-id19011 . -9)) nil (26026 37475 698389 0) 0 nil])
([nil nil ((1785 . 1797) (#("                " 0 16 (fontified nil)) . 1785) (undo-tree-id18670 . -16) (undo-tree-id18671 . -16) (undo-tree-id18672 . -16) (undo-tree-id18673 . -16) (undo-tree-id18674 . -16) (undo-tree-id18675 . -16) (undo-tree-id18676 . -16) (undo-tree-id18677 . -16) (undo-tree-id18678 . -16) (undo-tree-id18679 . -16) (undo-tree-id18680 . -16) (undo-tree-id18681 . -16) (undo-tree-id18682 . -16) (undo-tree-id18683 . -16) (undo-tree-id18684 . -16) (undo-tree-id18685 . -16) (undo-tree-id18686 . -16) (undo-tree-id18687 . -16) (undo-tree-id18688 . -16) (undo-tree-id18689 . -16) (undo-tree-id18690 . -16) (undo-tree-id18691 . -16) (undo-tree-id18692 . -16) (undo-tree-id18693 . -16) (undo-tree-id18694 . -16) (undo-tree-id18695 . -16) (undo-tree-id18696 . -16) (undo-tree-id18697 . -16) (undo-tree-id18698 . -16) (undo-tree-id18699 . -16) (undo-tree-id18700 . -16) (undo-tree-id18701 . -16) (undo-tree-id18702 . -16) (undo-tree-id18703 . -16) (undo-tree-id18704 . -16) (undo-tree-id18705 . -16) (undo-tree-id18706 . -16) (undo-tree-id18707 . -16) (undo-tree-id18708 . -16) (1801 . 1802) (1784 . 1801) (1783 . 1784) (1782 . 1783) (1781 . 1782) (#("-" 0 1 (fontified t)) . -1781) (undo-tree-id18709 . -1) (undo-tree-id18710 . -1) (undo-tree-id18711 . -1) (undo-tree-id18712 . -1) (undo-tree-id18713 . -1) (undo-tree-id18714 . -1) (undo-tree-id18715 . -1) (undo-tree-id18716 . -1) (undo-tree-id18717 . -1) (undo-tree-id18718 . -1) (undo-tree-id18719 . -1) (undo-tree-id18720 . -1) (undo-tree-id18721 . -1) (undo-tree-id18722 . -1) (undo-tree-id18723 . -1) (undo-tree-id18724 . -1) (undo-tree-id18725 . -1) (undo-tree-id18726 . -1) (undo-tree-id18727 . -1) (undo-tree-id18728 . -1) (undo-tree-id18729 . -1) (undo-tree-id18730 . -1) (undo-tree-id18731 . -1) (undo-tree-id18732 . -1) (undo-tree-id18733 . -1) (undo-tree-id18734 . -1) (undo-tree-id18735 . -1) (undo-tree-id18736 . -1) (undo-tree-id18737 . -1) (undo-tree-id18738 . -1) (undo-tree-id18739 . -1) (undo-tree-id18740 . -1) (undo-tree-id18741 . -1) (undo-tree-id18742 . -1) (undo-tree-id18743 . -1) (undo-tree-id18744 . -1) (undo-tree-id18745 . -1) (undo-tree-id18746 . -1) (undo-tree-id18747 . -1) (undo-tree-id18748 . -1) (undo-tree-id18749 . -1) (undo-tree-id18750 . -1) (undo-tree-id18751 . -1) 1782 (1769 . 1782) (1768 . 1769) (1765 . 1768) (1753 . 1765) (#("           " 0 11 (fontified nil)) . -1753) (undo-tree-id18752 . -11) (undo-tree-id18753 . -11) (undo-tree-id18754 . -11) (undo-tree-id18755 . -11) (undo-tree-id18756 . -11) (undo-tree-id18757 . -11) (undo-tree-id18758 . -11) (undo-tree-id18759 . -11) (undo-tree-id18760 . -11) (undo-tree-id18761 . -11) (undo-tree-id18762 . -11) (undo-tree-id18763 . -11) (undo-tree-id18764 . -11) (undo-tree-id18765 . -11) (undo-tree-id18766 . -11) (undo-tree-id18767 . -11) (undo-tree-id18768 . -11) (undo-tree-id18769 . -11) (undo-tree-id18770 . -11) (undo-tree-id18771 . -11) (undo-tree-id18772 . -11) (undo-tree-id18773 . -11) (undo-tree-id18774 . -11) (undo-tree-id18775 . -11) (undo-tree-id18776 . -11) (undo-tree-id18777 . -11) (undo-tree-id18778 . -11) (undo-tree-id18779 . -11) (undo-tree-id18780 . -11) (undo-tree-id18781 . -11) (undo-tree-id18782 . -11) (undo-tree-id18783 . -11) (undo-tree-id18784 . -11) (undo-tree-id18785 . -11) (undo-tree-id18786 . -11) (undo-tree-id18787 . -11) (undo-tree-id18788 . -11) (undo-tree-id18789 . -11) (undo-tree-id18790 . -11) (undo-tree-id18791 . -11) (undo-tree-id18792 . -11) (undo-tree-id18793 . -11) (undo-tree-id18794 . -11) (undo-tree-id18795 . -11) (undo-tree-id18796 . -11) (undo-tree-id18797 . -11) (undo-tree-id18798 . -11) (undo-tree-id18799 . -11) (undo-tree-id18800 . -11) (undo-tree-id18801 . -11) (undo-tree-id18802 . -11) (undo-tree-id18803 . -11) (undo-tree-id18804 . -11) (undo-tree-id18805 . -11) (undo-tree-id18806 . -11) (undo-tree-id18807 . -11) (undo-tree-id18808 . -11) (undo-tree-id18809 . -11) (undo-tree-id18810 . -11) (undo-tree-id18811 . -11) (undo-tree-id18812 . -11) (undo-tree-id18813 . -11) (undo-tree-id18814 . -11) (undo-tree-id18815 . -11) (undo-tree-id18816 . -11) (undo-tree-id18817 . -11) (undo-tree-id18818 . -11) (undo-tree-id18819 . -11) (undo-tree-id18820 . -11) (undo-tree-id18821 . -11) (undo-tree-id18822 . -11) (undo-tree-id18823 . -11) (undo-tree-id18824 . -11) (undo-tree-id18825 . -11) (undo-tree-id18826 . -11) (undo-tree-id18827 . -11) (undo-tree-id18828 . -11) (undo-tree-id18829 . -11) (undo-tree-id18830 . -11) (undo-tree-id18831 . -11) (undo-tree-id18832 . -11) (undo-tree-id18833 . -11) (undo-tree-id18834 . -11) (undo-tree-id18835 . -11) (undo-tree-id18836 . -11) (undo-tree-id18837 . -11) (undo-tree-id18838 . -11) (undo-tree-id18839 . -11) (undo-tree-id18840 . -11) (undo-tree-id18841 . -11) (undo-tree-id18842 . -11) (undo-tree-id18843 . -11) (undo-tree-id18844 . -11) (undo-tree-id18845 . -11) (undo-tree-id18846 . -11) (undo-tree-id18847 . -11) (undo-tree-id18848 . -11) (undo-tree-id18849 . -11) (undo-tree-id18850 . -11) (undo-tree-id18851 . -11) (undo-tree-id18852 . -11) (undo-tree-id18853 . -11) (undo-tree-id18854 . -11) (undo-tree-id18855 . -11) (undo-tree-id18856 . -11) (undo-tree-id18857 . -11) (undo-tree-id18858 . -11) (undo-tree-id18859 . -11) (undo-tree-id18860 . -11) (undo-tree-id18861 . -11) (undo-tree-id18862 . -11) (undo-tree-id18863 . -11) (undo-tree-id18864 . -11) (undo-tree-id18865 . -11) (undo-tree-id18866 . -11) (undo-tree-id18867 . -11) (undo-tree-id18868 . -11) (undo-tree-id18869 . -11) (undo-tree-id18870 . -11) (undo-tree-id18871 . -11) (undo-tree-id18872 . -11) (undo-tree-id18873 . -11) (undo-tree-id18874 . -11) (undo-tree-id18875 . -11) (undo-tree-id18876 . -11) (undo-tree-id18877 . -11) (undo-tree-id18878 . -11) (undo-tree-id18879 . -11) (undo-tree-id18880 . -11) (undo-tree-id18881 . -11) (undo-tree-id18882 . -11) (undo-tree-id18883 . -11) (undo-tree-id18884 . -11) (undo-tree-id18885 . -11) (undo-tree-id18886 . -11) (undo-tree-id18887 . -11) (undo-tree-id18888 . -11) (undo-tree-id18889 . -11) (undo-tree-id18890 . -11) (undo-tree-id18891 . -11) (undo-tree-id18892 . -11) (undo-tree-id18893 . -11) (undo-tree-id18894 . -11) (undo-tree-id18895 . -11) (undo-tree-id18896 . -11) (undo-tree-id18897 . -11) (undo-tree-id18898 . -11) (undo-tree-id18899 . -11) (undo-tree-id18900 . -11) (undo-tree-id18901 . -11) (undo-tree-id18902 . -11) (undo-tree-id18903 . -11) (undo-tree-id18904 . -11) (undo-tree-id18905 . -11) (undo-tree-id18906 . -11) (undo-tree-id18907 . -11) (undo-tree-id18908 . -11) (undo-tree-id18909 . -11) (undo-tree-id18910 . -11) (undo-tree-id18911 . -11) (undo-tree-id18912 . -11) (undo-tree-id18913 . -11) (undo-tree-id18914 . -11) (undo-tree-id18915 . -11) (undo-tree-id18916 . -11) (undo-tree-id18917 . -11) (undo-tree-id18918 . -11) (undo-tree-id18919 . -11) (undo-tree-id18920 . -11) (undo-tree-id18921 . -11) (undo-tree-id18922 . -11) (undo-tree-id18923 . -11) (undo-tree-id18924 . -11) (undo-tree-id18925 . -11) (undo-tree-id18926 . -11) (undo-tree-id18927 . -11) (undo-tree-id18928 . -11) (undo-tree-id18929 . -11) (undo-tree-id18930 . -11) (#(" " 0 1 (fontified t)) . 1764) (undo-tree-id18931 . -1) (undo-tree-id18932 . -1) (undo-tree-id18933 . -1) (undo-tree-id18934 . -1) (undo-tree-id18935 . -1) (undo-tree-id18936 . -1) (undo-tree-id18937 . -1) (undo-tree-id18938 . -1) (undo-tree-id18939 . -1) (undo-tree-id18940 . -1) (undo-tree-id18941 . -1) (undo-tree-id18942 . -1) (undo-tree-id18943 . -1) (undo-tree-id18944 . -1) (undo-tree-id18945 . -1) (undo-tree-id18946 . -1) (undo-tree-id18947 . -1) (undo-tree-id18948 . -1) (undo-tree-id18949 . -1) (undo-tree-id18950 . -1) (undo-tree-id18951 . -1) (undo-tree-id18952 . -1) (undo-tree-id18953 . -1) (undo-tree-id18954 . -1) (undo-tree-id18955 . -1) (undo-tree-id18956 . -1) (undo-tree-id18957 . -1) (undo-tree-id18958 . -1) (undo-tree-id18959 . -1) (undo-tree-id18960 . -1) (undo-tree-id18961 . -1) (undo-tree-id18962 . -1) (undo-tree-id18963 . -1) (undo-tree-id18964 . -1) (undo-tree-id18965 . -1) (undo-tree-id18966 . -1) (undo-tree-id18967 . -1) (undo-tree-id18968 . -1) (undo-tree-id18969 . -1) (undo-tree-id18970 . -1) (undo-tree-id18971 . -1) (undo-tree-id18972 . -1) (undo-tree-id18973 . -1) (undo-tree-id18974 . -1) (undo-tree-id18975 . -1) (undo-tree-id18976 . -1) (undo-tree-id18977 . -1) (undo-tree-id18978 . -1) (undo-tree-id18979 . -1) (undo-tree-id18980 . -1) (undo-tree-id18981 . -1) (undo-tree-id18982 . -1) (undo-tree-id18983 . -1) (undo-tree-id18984 . -1) (undo-tree-id18985 . -1) (undo-tree-id18986 . -1) (undo-tree-id18987 . -1) (undo-tree-id18988 . -1) (undo-tree-id18989 . -1) (undo-tree-id18990 . -1) (undo-tree-id18991 . -1) (undo-tree-id18992 . -1) (undo-tree-id18993 . -1) (undo-tree-id18994 . -1) (undo-tree-id18995 . -1) (undo-tree-id18996 . -1) (undo-tree-id18997 . -1) (undo-tree-id18998 . -1) (undo-tree-id18999 . -1) (undo-tree-id19000 . -1) (undo-tree-id19001 . -1) (undo-tree-id19002 . -1) (undo-tree-id19003 . -1) (undo-tree-id19004 . -1) (undo-tree-id19005 . -1) (undo-tree-id19006 . -1) (undo-tree-id19007 . -1) (undo-tree-id19008 . -1)) nil (26026 37475 698383 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1786) (undo-tree-id18586 . -16) (undo-tree-id18587 . -16) (undo-tree-id18588 . -16) (undo-tree-id18589 . -16) (undo-tree-id18590 . -16) (undo-tree-id18591 . -16) (undo-tree-id18592 . -16) (undo-tree-id18593 . -16) (undo-tree-id18594 . -16) (undo-tree-id18595 . -16) (undo-tree-id18596 . -16) (undo-tree-id18597 . -16) (undo-tree-id18598 . -16) (undo-tree-id18599 . -16) (undo-tree-id18600 . -16) (undo-tree-id18601 . -16) (undo-tree-id18602 . -16) (undo-tree-id18603 . -16) (undo-tree-id18604 . -16) (undo-tree-id18605 . -16) (undo-tree-id18606 . -16) (undo-tree-id18607 . -16) (undo-tree-id18608 . -16) (undo-tree-id18609 . -16) (undo-tree-id18610 . -16) (undo-tree-id18611 . -16) (undo-tree-id18612 . -16) (undo-tree-id18613 . -16) (undo-tree-id18614 . -16) (undo-tree-id18615 . -16) (undo-tree-id18616 . -16) (undo-tree-id18617 . -16) (undo-tree-id18618 . -16) (undo-tree-id18619 . -16) (undo-tree-id18620 . -16) (undo-tree-id18621 . -16) (undo-tree-id18622 . -16) (undo-tree-id18623 . -16) (undo-tree-id18624 . -16) (undo-tree-id18625 . -16) (undo-tree-id18626 . -16) (undo-tree-id18627 . -16) (undo-tree-id18628 . -16) (undo-tree-id18629 . -16) (undo-tree-id18630 . -16) (undo-tree-id18631 . -16) (undo-tree-id18632 . -16) (undo-tree-id18633 . -16) (undo-tree-id18634 . -16) (undo-tree-id18635 . -16) (undo-tree-id18636 . -16) (undo-tree-id18637 . -16) (undo-tree-id18638 . -16) (undo-tree-id18639 . -16) (undo-tree-id18640 . -16) (undo-tree-id18641 . -16) (undo-tree-id18642 . -16) (undo-tree-id18643 . -16) (undo-tree-id18644 . -16) (undo-tree-id18645 . -16) (undo-tree-id18646 . -16) (undo-tree-id18647 . -16) 1802 (1786 . 1802) (#("                " 0 16 (fontified nil)) . 1785) (undo-tree-id18648 . -16) (undo-tree-id18649 . -16) (undo-tree-id18650 . -16) (undo-tree-id18651 . -16) (undo-tree-id18652 . -16) (undo-tree-id18653 . -16) (undo-tree-id18654 . -16) (undo-tree-id18655 . -16) (undo-tree-id18656 . -16) (undo-tree-id18657 . -16) (undo-tree-id18658 . -16) (undo-tree-id18659 . -16) (undo-tree-id18660 . -16) (undo-tree-id18661 . -16) (undo-tree-id18662 . -16) (undo-tree-id18663 . -16) (undo-tree-id18664 . -16) (undo-tree-id18665 . -16) (undo-tree-id18666 . -16) (undo-tree-id18667 . -16) (undo-tree-id18668 . -16) (undo-tree-id18669 . -16) (1801 . 1802) (1784 . 1801) 1765) nil (26026 37475 698267 0) 0 nil])
([nil nil ((1785 . 1801)) nil (26026 37475 698236 0) 0 nil])
([nil nil ((#("        int idx = 0;
        E current = iterator().next();

        // iterera över listan tills indexet har hittats
        while (iterator().hasNext()) {
            if (idx == index) {
                

            }

        }
" 0 1 (fontified t c-is-sws t) 1 7 (fontified t c-is-sws t) 7 8 (rear-nonsticky t fontified t c-is-sws t) 8 9 (face font-lock-type-face fontified t c-is-sws t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified t) 11 12 (fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (face font-lock-variable-name-face fontified t) 14 15 (face font-lock-variable-name-face fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 29 (fontified t) 29 30 (face font-lock-type-face c-type c-decl-id-start fontified t) 30 31 (fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (face font-lock-variable-name-face fontified t) 33 34 (face font-lock-variable-name-face fontified t) 34 35 (face font-lock-variable-name-face fontified t) 35 36 (face font-lock-variable-name-face fontified t) 36 37 (face font-lock-variable-name-face fontified t) 37 38 (face font-lock-variable-name-face fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-3-face) fontified t) 50 51 (face (rainbow-delimiters-depth-3-face) fontified t) 51 52 (fontified t) 52 56 (fontified t) 56 57 (face (rainbow-delimiters-depth-3-face) fontified t) 57 58 (face (rainbow-delimiters-depth-3-face) fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 64 (fontified t c-is-sws t c-in-sws t) 64 66 (fontified t c-is-sws t c-in-sws t) 66 67 (fontified t c-is-sws t c-in-sws t) 67 68 (fontified t c-is-sws t c-in-sws t) 68 69 (fontified t c-is-sws t c-in-sws t rear-nonsticky t) 69 70 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 70 72 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 72 79 (face font-lock-comment-face fontified t c-in-sws t) 79 80 (face font-lock-comment-face fontified t c-in-sws t) 80 97 (face font-lock-comment-face fontified t c-in-sws t) 97 98 (c-in-sws t face font-lock-comment-face fontified t) 98 99 (c-in-sws t face font-lock-comment-face fontified t) 99 100 (c-in-sws t face font-lock-comment-face fontified t) 100 101 (c-in-sws t face font-lock-comment-face fontified t) 101 102 (c-in-sws t face font-lock-comment-face fontified t) 102 103 (c-in-sws t face font-lock-comment-face fontified t) 103 105 (c-in-sws t face font-lock-comment-face fontified t) 105 117 (c-in-sws t face font-lock-comment-face fontified t) 117 118 (c-in-sws t face font-lock-comment-face fontified t) 118 119 (fontified t c-is-sws t) 119 126 (fontified t c-is-sws t) 126 127 (face font-lock-keyword-face fontified t c-is-sws t) 127 131 (face font-lock-keyword-face fontified t) 131 132 (fontified t) 132 133 (face (rainbow-delimiters-depth-3-face) fontified t) 133 141 (fontified t) 141 142 (face (rainbow-delimiters-depth-4-face) fontified t) 142 143 (face (rainbow-delimiters-depth-4-face) fontified t) 143 144 (fontified t) 144 151 (fontified t) 151 152 (face (rainbow-delimiters-depth-4-face) fontified t) 152 153 (face (rainbow-delimiters-depth-4-face) fontified t) 153 154 (face (rainbow-delimiters-depth-3-face) fontified t) 154 155 (fontified t) 155 156 (face (rainbow-delimiters-depth-3-face) fontified t) 156 157 (fontified t) 157 169 (fontified t) 169 170 (face font-lock-keyword-face fontified t) 170 171 (face font-lock-keyword-face fontified t) 171 172 (fontified t) 172 173 (face (rainbow-delimiters-depth-4-face) fontified t) 173 174 (fontified t) 174 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (face (rainbow-delimiters-depth-4-face) fontified t) 186 187 (fontified t) 187 188 (face (rainbow-delimiters-depth-4-face) fontified t) 188 189 (fontified t) 189 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 219 (fontified t) 219 220 (face (rainbow-delimiters-depth-4-face) fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 230 (fontified t) 230 231 (face (rainbow-delimiters-depth-3-face) fontified t) 231 232 (fontified t)) . 1596) (undo-tree-id18068 . -230) (undo-tree-id18069 . -231) (undo-tree-id18070 . 27) (undo-tree-id18071 . -230) (undo-tree-id18072 . -8) (undo-tree-id18073 . -157) (undo-tree-id18074 . -157) (undo-tree-id18075 . -157) (undo-tree-id18076 . -157) (undo-tree-id18077 . -157) (undo-tree-id18078 . -157) (undo-tree-id18079 . -157) (undo-tree-id18080 . -157) (undo-tree-id18081 . -157) (undo-tree-id18082 . -157) (undo-tree-id18083 . -157) (undo-tree-id18084 . -157) (undo-tree-id18085 . -157) (undo-tree-id18086 . -157) (undo-tree-id18087 . -157) (undo-tree-id18088 . -157) (undo-tree-id18089 . -157) (undo-tree-id18090 . -157) (undo-tree-id18091 . -157) (undo-tree-id18092 . -157) (undo-tree-id18093 . -157) (undo-tree-id18094 . -157) (undo-tree-id18095 . -157) (undo-tree-id18096 . -157) (undo-tree-id18097 . -157) (undo-tree-id18098 . -157) (undo-tree-id18099 . -157) (undo-tree-id18100 . -157) (undo-tree-id18101 . -157) (undo-tree-id18102 . -157) (undo-tree-id18103 . -157) (undo-tree-id18104 . -157) (undo-tree-id18105 . -157) (undo-tree-id18106 . -157) (undo-tree-id18107 . -157) (undo-tree-id18108 . -157) (undo-tree-id18109 . -157) (undo-tree-id18110 . -157) (undo-tree-id18111 . -157) (undo-tree-id18112 . -157) (undo-tree-id18113 . -157) (undo-tree-id18114 . -157) (undo-tree-id18115 . -157) (undo-tree-id18116 . -157) (undo-tree-id18117 . -232) (undo-tree-id18118 . -232) (undo-tree-id18119 . -232) (undo-tree-id18120 . -232) (undo-tree-id18121 . -232) (undo-tree-id18122 . -232) (undo-tree-id18123 . -232) (undo-tree-id18124 . -232) (undo-tree-id18125 . -232) (undo-tree-id18126 . -232) (undo-tree-id18127 . -232) (undo-tree-id18128 . -232) (undo-tree-id18129 . -232) (undo-tree-id18130 . -232) (undo-tree-id18131 . -232) (undo-tree-id18132 . -232) (undo-tree-id18133 . -232) (undo-tree-id18134 . -232) (undo-tree-id18135 . -232) (undo-tree-id18136 . -232) (undo-tree-id18137 . -232) (undo-tree-id18138 . -232) (undo-tree-id18139 . -232) (undo-tree-id18140 . -232) (undo-tree-id18141 . -232) (undo-tree-id18142 . -222) (undo-tree-id18143 . -222) (undo-tree-id18144 . -222) (undo-tree-id18145 . -222) (undo-tree-id18146 . -222) (undo-tree-id18147 . -222) (undo-tree-id18148 . -222) (undo-tree-id18149 . -222) (undo-tree-id18150 . -222) (undo-tree-id18151 . -222) (undo-tree-id18152 . -222) (undo-tree-id18153 . -222) (undo-tree-id18154 . -222) (undo-tree-id18155 . -222) (undo-tree-id18156 . -222) (undo-tree-id18157 . -222) (undo-tree-id18158 . -222) (undo-tree-id18159 . -222) (undo-tree-id18160 . -222) (undo-tree-id18161 . -222) (undo-tree-id18162 . -222) (undo-tree-id18163 . -222) (undo-tree-id18164 . -222) (undo-tree-id18165 . -222) (undo-tree-id18166 . -222) (undo-tree-id18167 . -222) (undo-tree-id18168 . -222) (undo-tree-id18169 . -222) (undo-tree-id18170 . -222) (undo-tree-id18171 . -222) (undo-tree-id18172 . -222) (undo-tree-id18173 . -222) (undo-tree-id18174 . -222) (undo-tree-id18175 . -222) (undo-tree-id18176 . -222) (undo-tree-id18177 . -222) (undo-tree-id18178 . -222) (undo-tree-id18179 . -222) (undo-tree-id18180 . -222) (undo-tree-id18181 . -222) (undo-tree-id18182 . -222) (undo-tree-id18183 . -222) (undo-tree-id18184 . -222) (undo-tree-id18185 . -222) (undo-tree-id18186 . -222) (undo-tree-id18187 . -222) (undo-tree-id18188 . -222) (undo-tree-id18189 . -222) (undo-tree-id18190 . -222) (undo-tree-id18191 . -222) (undo-tree-id18192 . -222) (undo-tree-id18193 . -222) (undo-tree-id18194 . -222) (undo-tree-id18195 . -222) (undo-tree-id18196 . -222) (undo-tree-id18197 . -222) (undo-tree-id18198 . -222) (undo-tree-id18199 . -222) (undo-tree-id18200 . -222) (undo-tree-id18201 . -222) (undo-tree-id18202 . -222) (undo-tree-id18203 . -222) (undo-tree-id18204 . -222) (undo-tree-id18205 . -222) (undo-tree-id18206 . -222) (undo-tree-id18207 . -222) (undo-tree-id18208 . -222) (undo-tree-id18209 . -222) (undo-tree-id18210 . -221) (undo-tree-id18211 . -221) (undo-tree-id18212 . -185) (undo-tree-id18213 . -8) (undo-tree-id18214 . -221) (undo-tree-id18215 . -221) (undo-tree-id18216 . -221) (undo-tree-id18217 . -221) (undo-tree-id18218 . -221) (undo-tree-id18219 . -221) (undo-tree-id18220 . -221) (undo-tree-id18221 . -221) (undo-tree-id18222 . -221) (undo-tree-id18223 . -221) (undo-tree-id18224 . -221) (undo-tree-id18225 . -221) (undo-tree-id18226 . -221) (undo-tree-id18227 . -221) (undo-tree-id18228 . -221) (undo-tree-id18229 . -221) (undo-tree-id18230 . -221) (undo-tree-id18231 . -221) (undo-tree-id18232 . -221) (undo-tree-id18233 . -221) (undo-tree-id18234 . -221) (undo-tree-id18235 . -221) (undo-tree-id18236 . -221) (undo-tree-id18237 . -221) (undo-tree-id18238 . -221) (undo-tree-id18239 . -221) (undo-tree-id18240 . -221) (undo-tree-id18241 . -221) (undo-tree-id18242 . -221) (undo-tree-id18243 . -221) (undo-tree-id18244 . -221) (undo-tree-id18245 . -221) (undo-tree-id18246 . -221) (undo-tree-id18247 . -221) (undo-tree-id18248 . -221) (undo-tree-id18249 . -221) (undo-tree-id18250 . -221) (undo-tree-id18251 . -221) (undo-tree-id18252 . -157) (undo-tree-id18253 . -157) (undo-tree-id18254 . -157) (undo-tree-id18255 . -157) (undo-tree-id18256 . -157) (undo-tree-id18257 . -157) (undo-tree-id18258 . -157) (undo-tree-id18259 . -157) (undo-tree-id18260 . -157) (undo-tree-id18261 . -157) (undo-tree-id18262 . -157) (undo-tree-id18263 . -157) (undo-tree-id18264 . -157) (undo-tree-id18265 . -157) (undo-tree-id18266 . -157) (undo-tree-id18267 . -157) (undo-tree-id18268 . -157) (undo-tree-id18269 . -157) (undo-tree-id18270 . -157) (undo-tree-id18271 . -157) (undo-tree-id18272 . -157) (undo-tree-id18273 . -157) (undo-tree-id18274 . -157) (undo-tree-id18275 . -157) (undo-tree-id18276 . -157) (undo-tree-id18277 . -157) (undo-tree-id18278 . -157) (undo-tree-id18279 . -157) (undo-tree-id18280 . -157) (undo-tree-id18281 . -157) (undo-tree-id18282 . -157) (undo-tree-id18283 . -157) (undo-tree-id18284 . -157) (undo-tree-id18285 . -157) (undo-tree-id18286 . -157) (undo-tree-id18287 . -157) (undo-tree-id18288 . -157) (undo-tree-id18289 . -157) (undo-tree-id18290 . -157) (undo-tree-id18291 . -157) (undo-tree-id18292 . -157) (undo-tree-id18293 . -157) (undo-tree-id18294 . -157) (undo-tree-id18295 . -157) (undo-tree-id18296 . -157) (undo-tree-id18297 . -157) (undo-tree-id18298 . -157) (undo-tree-id18299 . -157) (undo-tree-id18300 . -157) (undo-tree-id18301 . -157) (undo-tree-id18302 . -157) (undo-tree-id18303 . -157) (undo-tree-id18304 . -157) (undo-tree-id18305 . -157) (undo-tree-id18306 . -157) (undo-tree-id18307 . -157) (undo-tree-id18308 . -157) (undo-tree-id18309 . -157) (undo-tree-id18310 . -157) (undo-tree-id18311 . -157) (undo-tree-id18312 . -157) (undo-tree-id18313 . -157) (undo-tree-id18314 . -157) (undo-tree-id18315 . -157) (undo-tree-id18316 . -157) (undo-tree-id18317 . -157) (undo-tree-id18318 . -157) (undo-tree-id18319 . -157) (undo-tree-id18320 . -157) (undo-tree-id18321 . -157) (undo-tree-id18322 . -157) (undo-tree-id18323 . -157) (undo-tree-id18324 . -157) (undo-tree-id18325 . -157) (undo-tree-id18326 . -157) (undo-tree-id18327 . -157) (undo-tree-id18328 . -157) (undo-tree-id18329 . -157) (undo-tree-id18330 . -157) (undo-tree-id18331 . -157) (undo-tree-id18332 . -157) (undo-tree-id18333 . -157) (undo-tree-id18334 . -157) (undo-tree-id18335 . -157) (undo-tree-id18336 . -157) (undo-tree-id18337 . -157) (undo-tree-id18338 . -157) (undo-tree-id18339 . -157) (undo-tree-id18340 . -157) (undo-tree-id18341 . -157) (undo-tree-id18342 . -157) (undo-tree-id18343 . -157) (undo-tree-id18344 . -157) (undo-tree-id18345 . -157) (undo-tree-id18346 . -157) (undo-tree-id18347 . -157) (undo-tree-id18348 . -157) (undo-tree-id18349 . -157) (undo-tree-id18350 . -157) (undo-tree-id18351 . -157) (undo-tree-id18352 . -157) (undo-tree-id18353 . -157) (undo-tree-id18354 . -157) (undo-tree-id18355 . -157) (undo-tree-id18356 . -157) (undo-tree-id18357 . -157) (undo-tree-id18358 . -157) (undo-tree-id18359 . -157) (undo-tree-id18360 . -157) (undo-tree-id18361 . -157) (undo-tree-id18362 . -157) (undo-tree-id18363 . -157) (undo-tree-id18364 . -157) (undo-tree-id18365 . -157) (undo-tree-id18366 . -157) (undo-tree-id18367 . -157) (undo-tree-id18368 . -157) (undo-tree-id18369 . -157) (undo-tree-id18370 . -157) (undo-tree-id18371 . -157) (undo-tree-id18372 . -157) (undo-tree-id18373 . -157) (undo-tree-id18374 . -157) (undo-tree-id18375 . -157) (undo-tree-id18376 . -157) (undo-tree-id18377 . -157) (undo-tree-id18378 . -157) (undo-tree-id18379 . -157) (undo-tree-id18380 . -157) (undo-tree-id18381 . -157) (undo-tree-id18382 . -157) (undo-tree-id18383 . -157) (undo-tree-id18384 . -157) (undo-tree-id18385 . -157) (undo-tree-id18386 . -157) (undo-tree-id18387 . -157) (undo-tree-id18388 . -157) (undo-tree-id18389 . -157) (undo-tree-id18390 . -157) (undo-tree-id18391 . -157) (undo-tree-id18392 . -157) (undo-tree-id18393 . -157) (undo-tree-id18394 . -157) (undo-tree-id18395 . -157) (undo-tree-id18396 . -157) (undo-tree-id18397 . -157) (undo-tree-id18398 . -157) (undo-tree-id18399 . -157) (undo-tree-id18400 . -157) (undo-tree-id18401 . -157) (undo-tree-id18402 . -157) (undo-tree-id18403 . -157) (undo-tree-id18404 . -157) (undo-tree-id18405 . -157) (undo-tree-id18406 . -157) (undo-tree-id18407 . -157) (undo-tree-id18408 . -157) (undo-tree-id18409 . -157) (undo-tree-id18410 . -157) (undo-tree-id18411 . -157) (undo-tree-id18412 . -157) (undo-tree-id18413 . -157) (undo-tree-id18414 . -157) (undo-tree-id18415 . -157) (undo-tree-id18416 . -157) (undo-tree-id18417 . -157) (undo-tree-id18418 . -157) (undo-tree-id18419 . -157) (undo-tree-id18420 . -157) (undo-tree-id18421 . -157) (undo-tree-id18422 . -157) (undo-tree-id18423 . -157) (undo-tree-id18424 . -157) (undo-tree-id18425 . -157) (undo-tree-id18426 . -157) (undo-tree-id18427 . -157) (undo-tree-id18428 . -157) (undo-tree-id18429 . -185) (undo-tree-id18430 . -185) (undo-tree-id18431 . -185) (undo-tree-id18432 . -185) (undo-tree-id18433 . -185) (undo-tree-id18434 . -185) (undo-tree-id18435 . -185) (undo-tree-id18436 . -185) (undo-tree-id18437 . -185) (undo-tree-id18438 . -185) (undo-tree-id18439 . -185) (undo-tree-id18440 . -185) (undo-tree-id18441 . -185) (undo-tree-id18442 . -185) (undo-tree-id18443 . -185) (undo-tree-id18444 . -185) (undo-tree-id18445 . -185) (undo-tree-id18446 . -185) (undo-tree-id18447 . -185) (undo-tree-id18448 . -185) (undo-tree-id18449 . -185) (undo-tree-id18450 . -185) (undo-tree-id18451 . -185) (undo-tree-id18452 . -185) (undo-tree-id18453 . -185) (undo-tree-id18454 . -185) (undo-tree-id18455 . -185) (undo-tree-id18456 . -185) (undo-tree-id18457 . -185) (undo-tree-id18458 . -185) (undo-tree-id18459 . -185) (undo-tree-id18460 . -185) (undo-tree-id18461 . -185) (undo-tree-id18462 . -185) (undo-tree-id18463 . -185) (undo-tree-id18464 . -185) (undo-tree-id18465 . -185) (undo-tree-id18466 . -185) (undo-tree-id18467 . -185) (undo-tree-id18468 . -185) (undo-tree-id18469 . -207) (undo-tree-id18470 . -207) (undo-tree-id18471 . -207) (undo-tree-id18472 . -207) (undo-tree-id18473 . -207) (undo-tree-id18474 . -207) (undo-tree-id18475 . -207) (undo-tree-id18476 . -207) (undo-tree-id18477 . -207) (undo-tree-id18478 . -207) (undo-tree-id18479 . -207) (undo-tree-id18480 . -207) (undo-tree-id18481 . -207) (undo-tree-id18482 . -207) (undo-tree-id18483 . -207) (undo-tree-id18484 . -207) (undo-tree-id18485 . -207) (undo-tree-id18486 . -207) (undo-tree-id18487 . -207) (undo-tree-id18488 . -207) (undo-tree-id18489 . -207) (undo-tree-id18490 . -207) (undo-tree-id18491 . -207) (undo-tree-id18492 . -207) (undo-tree-id18493 . -207) (undo-tree-id18494 . -207) (undo-tree-id18495 . -207) (undo-tree-id18496 . -207) (undo-tree-id18497 . -207) (undo-tree-id18498 . -207) (undo-tree-id18499 . -207) (undo-tree-id18500 . -207) (undo-tree-id18501 . -207) (undo-tree-id18502 . -207) (undo-tree-id18503 . -207) (undo-tree-id18504 . -207) (undo-tree-id18505 . -207) (undo-tree-id18506 . -189) (undo-tree-id18507 . -189) (undo-tree-id18508 . -189) (undo-tree-id18509 . -189) (undo-tree-id18510 . -189) (undo-tree-id18511 . -189) (undo-tree-id18512 . -189) (undo-tree-id18513 . -189) (undo-tree-id18514 . -189) (undo-tree-id18515 . -189) (undo-tree-id18516 . -189) (undo-tree-id18517 . -189) (undo-tree-id18518 . -189) (undo-tree-id18519 . -189) (undo-tree-id18520 . -189) (undo-tree-id18521 . -189) (undo-tree-id18522 . -189) (undo-tree-id18523 . -189) (undo-tree-id18524 . -189) (undo-tree-id18525 . -189) (undo-tree-id18526 . -206) (undo-tree-id18527 . -206) (undo-tree-id18528 . -206) (undo-tree-id18529 . -206) (undo-tree-id18530 . -206) (undo-tree-id18531 . -206) (undo-tree-id18532 . -206) (undo-tree-id18533 . -206) (undo-tree-id18534 . -206) (undo-tree-id18535 . -206) (undo-tree-id18536 . -206) (undo-tree-id18537 . -206) (undo-tree-id18538 . -206) (undo-tree-id18539 . -206) (undo-tree-id18540 . -206) (undo-tree-id18541 . -206) (undo-tree-id18542 . -206) (undo-tree-id18543 . -206) (undo-tree-id18544 . -206) (undo-tree-id18545 . -206) (undo-tree-id18546 . -206) (undo-tree-id18547 . -206) (undo-tree-id18548 . -206) (undo-tree-id18549 . -206) (undo-tree-id18550 . -206) (undo-tree-id18551 . -206) (undo-tree-id18552 . -206) (undo-tree-id18553 . -206) (undo-tree-id18554 . -206) (undo-tree-id18555 . -206) (undo-tree-id18556 . -206) (undo-tree-id18557 . -206) (undo-tree-id18558 . -206) (undo-tree-id18559 . -206) (undo-tree-id18560 . -206) (undo-tree-id18561 . -206) (undo-tree-id18562 . -206) (undo-tree-id18563 . -206) (undo-tree-id18564 . -206) (undo-tree-id18565 . -206) (undo-tree-id18566 . -206) (undo-tree-id18567 . -206) (undo-tree-id18568 . -206) (undo-tree-id18569 . -206) (undo-tree-id18570 . -206) (undo-tree-id18571 . -206) (undo-tree-id18572 . -206) (undo-tree-id18573 . -206) (undo-tree-id18574 . -206) (undo-tree-id18575 . -206) (undo-tree-id18576 . -206) (undo-tree-id18577 . -206) (undo-tree-id18578 . -206) (undo-tree-id18579 . -206) (undo-tree-id18580 . -206) (undo-tree-id18581 . -206) (undo-tree-id18582 . -206) (undo-tree-id18583 . -206) (undo-tree-id18584 . -206) (undo-tree-id18585 . -206) 1604) nil (26026 37475 698229 0) 0 nil])
([nil nil ((1604 . 1608) (#("g" 0 1 (fontified t)) . -1604) (undo-tree-id18058 . -1) (undo-tree-id18059 . -1) (#("e" 0 1 (fontified t)) . -1605) (undo-tree-id18060 . -1) (undo-tree-id18061 . -1) (#("t" 0 1 (fontified t)) . -1606) (undo-tree-id18062 . -1) (undo-tree-id18063 . -1) (#("I" 0 1 (fontified t)) . -1607) (undo-tree-id18064 . -1) (undo-tree-id18065 . -1) (#("n" 0 1 (fontified t)) . -1608) (undo-tree-id18066 . -1) (undo-tree-id18067 . -1) 1609 (1604 . 1609) (1595 . 1604) 1566) nil (26026 37475 698031 0) 0 nil])
([nil nil ((#("
        " 0 1 (fontified t) 1 9 (fontified nil)) . 1595) (undo-tree-id18052 . -9) (undo-tree-id18053 . -9) (#("getIn" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 1604) (undo-tree-id18054 . -5) (undo-tree-id18055 . -5) (1604 . 1609) (#("inde" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1604) (undo-tree-id18056 . -3) (undo-tree-id18057 . -3)) nil (26026 37475 698025 0) 0 nil])
([nil nil ((1596 . 1828)) nil (26026 37475 698022 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . 1785) (undo-tree-id18002 . -1) (undo-tree-id18003 . -1) (undo-tree-id18004 . -1) (undo-tree-id18005 . -1) (undo-tree-id18006 . -1) (undo-tree-id18007 . -1) (undo-tree-id18008 . -1) (undo-tree-id18009 . -1) (undo-tree-id18010 . -1) (undo-tree-id18011 . -1) (undo-tree-id18012 . -1) (undo-tree-id18013 . -1) (undo-tree-id18014 . -1) (undo-tree-id18015 . -1) (undo-tree-id18016 . -1) (undo-tree-id18017 . -1) (undo-tree-id18018 . -1) (undo-tree-id18019 . -1) (undo-tree-id18020 . -1) (undo-tree-id18021 . -1) (undo-tree-id18022 . -1) (undo-tree-id18023 . -1) (undo-tree-id18024 . -1) (undo-tree-id18025 . -1) (undo-tree-id18026 . -1) (undo-tree-id18027 . -1) (undo-tree-id18028 . -1) (undo-tree-id18029 . -1) (undo-tree-id18030 . -1) (undo-tree-id18031 . -1) (undo-tree-id18032 . -1) (undo-tree-id18033 . -1) (undo-tree-id18034 . -1) (undo-tree-id18035 . -1) (undo-tree-id18036 . -1) (undo-tree-id18037 . -1) (undo-tree-id18038 . -1) (undo-tree-id18039 . -1) (undo-tree-id18040 . -1) (undo-tree-id18041 . -1) (undo-tree-id18042 . -1) (undo-tree-id18043 . -1) (undo-tree-id18044 . -1) (undo-tree-id18045 . -1) (undo-tree-id18046 . -1) (undo-tree-id18047 . -1) (undo-tree-id18048 . -1) (undo-tree-id18049 . -1) (undo-tree-id18050 . -1) (undo-tree-id18051 . -1) 1786) nil (26026 37475 698019 0) 0 nil])
([nil nil ((1784 . 1801) (t 26026 37475 713544 405000) 1753) nil (26026 38004 776455 0) 0 nil])
([nil nil ((#("                
" 0 16 (fontified t) 16 17 (fontified t)) . 1785) (undo-tree-id20549 . -17) (undo-tree-id20550 . -16) (undo-tree-id20551 . 2) (undo-tree-id20552 . -17) (undo-tree-id20553 . -17) (undo-tree-id20554 . -17) (undo-tree-id20555 . -17) (undo-tree-id20556 . -17) (undo-tree-id20557 . -17) (undo-tree-id20558 . -17) (undo-tree-id20559 . -17) (undo-tree-id20560 . -17) (undo-tree-id20561 . -17) (undo-tree-id20562 . -17) (undo-tree-id20563 . -17) (undo-tree-id20564 . -17) (undo-tree-id20565 . -17) (undo-tree-id20566 . -17) (undo-tree-id20567 . -17) (undo-tree-id20568 . -17) (undo-tree-id20569 . -17) (undo-tree-id20570 . -17) (undo-tree-id20571 . -17) (undo-tree-id20572 . -17) (undo-tree-id20573 . -17) (undo-tree-id20574 . -17) (undo-tree-id20575 . -17) (undo-tree-id20576 . -17) (undo-tree-id20577 . -17) (undo-tree-id20578 . -17) (undo-tree-id20579 . -17) (undo-tree-id20580 . -17) (undo-tree-id20581 . -15) (undo-tree-id20582 . -14) (undo-tree-id20583 . -17) (undo-tree-id20584 . -17) (undo-tree-id20585 . -17) (undo-tree-id20586 . -17) (undo-tree-id20587 . -17) (undo-tree-id20588 . -17) (undo-tree-id20589 . -17) (undo-tree-id20590 . -17) (undo-tree-id20591 . -17) (undo-tree-id20592 . -17) (undo-tree-id20593 . -17) (undo-tree-id20594 . -17) (undo-tree-id20595 . -17) (undo-tree-id20596 . -17) (undo-tree-id20597 . -17) (undo-tree-id20598 . -17) (undo-tree-id20599 . -17) (undo-tree-id20600 . -17) (undo-tree-id20601 . -17) (undo-tree-id20602 . -17) (undo-tree-id20603 . -17) (undo-tree-id20604 . -17) (undo-tree-id20605 . -17) (undo-tree-id20606 . -17) (undo-tree-id20607 . -16) (undo-tree-id20608 . -16) (undo-tree-id20609 . -16) (undo-tree-id20610 . -16) (undo-tree-id20611 . -16) (undo-tree-id20612 . -16) (undo-tree-id20613 . -16) (undo-tree-id20614 . -16) (undo-tree-id20615 . -16) (undo-tree-id20616 . -16) (undo-tree-id20617 . -16) (undo-tree-id20618 . -16) (undo-tree-id20619 . -16) (undo-tree-id20620 . -16) (undo-tree-id20621 . -16) (undo-tree-id20622 . -16) (undo-tree-id20623 . -16) (undo-tree-id20624 . -16) (undo-tree-id20625 . -16) (undo-tree-id20626 . -16) (undo-tree-id20627 . -16) (undo-tree-id20628 . -16) (undo-tree-id20629 . -16) (undo-tree-id20630 . -16) (undo-tree-id20631 . -16) (undo-tree-id20632 . -16) (undo-tree-id20633 . -16) (undo-tree-id20634 . -16) (undo-tree-id20635 . -16) (undo-tree-id20636 . -16) (undo-tree-id20637 . -16) (undo-tree-id20638 . -16) (undo-tree-id20639 . -16) (undo-tree-id20640 . -16) (undo-tree-id20641 . -16) (undo-tree-id20642 . -16) (undo-tree-id20643 . -16) (undo-tree-id20644 . -16) (undo-tree-id20645 . -16) (undo-tree-id20646 . -16) (undo-tree-id20647 . -16) (undo-tree-id20648 . -16) (undo-tree-id20649 . -16) (undo-tree-id20650 . -16) (undo-tree-id20651 . -16) (undo-tree-id20652 . -16) (undo-tree-id20653 . -16) (undo-tree-id20654 . -16) (undo-tree-id20655 . -16) (undo-tree-id20656 . -16) (undo-tree-id20657 . 1) (undo-tree-id20658 . -16) (undo-tree-id20659 . -16) (undo-tree-id20660 . -16) (undo-tree-id20661 . -16) (undo-tree-id20662 . -16) (undo-tree-id20663 . -16) (undo-tree-id20664 . -16) (undo-tree-id20665 . -16) (undo-tree-id20666 . -16) (undo-tree-id20667 . -16) (undo-tree-id20668 . -16) (undo-tree-id20669 . -16) (undo-tree-id20670 . -16) (undo-tree-id20671 . -16) (undo-tree-id20672 . -16) (undo-tree-id20673 . -16) (undo-tree-id20674 . -16) (undo-tree-id20675 . -16) (undo-tree-id20676 . -16) (undo-tree-id20677 . -16) (undo-tree-id20678 . -16) (undo-tree-id20679 . -16) (undo-tree-id20680 . -16) (undo-tree-id20681 . -16) (undo-tree-id20682 . -16) (undo-tree-id20683 . -16) (undo-tree-id20684 . -16) (undo-tree-id20685 . -16) (undo-tree-id20686 . -16) (undo-tree-id20687 . -16) (undo-tree-id20688 . -16) (undo-tree-id20689 . -16) (undo-tree-id20690 . -16) (undo-tree-id20691 . -16) (undo-tree-id20692 . -16) (undo-tree-id20693 . -16) (undo-tree-id20694 . -16) (undo-tree-id20695 . -16) (undo-tree-id20696 . -16) (undo-tree-id20697 . -16) (undo-tree-id20698 . -16) (undo-tree-id20699 . -16) (undo-tree-id20700 . -16) (undo-tree-id20701 . -16) (undo-tree-id20702 . -16) (undo-tree-id20703 . -16) (undo-tree-id20704 . -16) (undo-tree-id20705 . -16) (undo-tree-id20706 . -16) (undo-tree-id20707 . -16) (undo-tree-id20708 . -16) (undo-tree-id20709 . -16) (undo-tree-id20710 . -16) (undo-tree-id20711 . -16) (undo-tree-id20712 . -16) (undo-tree-id20713 . -16) (undo-tree-id20714 . -16) (undo-tree-id20715 . -16) (undo-tree-id20716 . -16) (undo-tree-id20717 . -16) (undo-tree-id20718 . -16) (undo-tree-id20719 . -16) (undo-tree-id20720 . -16) (undo-tree-id20721 . -16) (undo-tree-id20722 . -16) (undo-tree-id20723 . -16) (undo-tree-id20724 . -15) (undo-tree-id20725 . -15) (undo-tree-id20726 . -15) (undo-tree-id20727 . -15) (undo-tree-id20728 . -15) (undo-tree-id20729 . -15) (undo-tree-id20730 . -15) (undo-tree-id20731 . -15) (undo-tree-id20732 . -15) (undo-tree-id20733 . -15) (undo-tree-id20734 . -15) (undo-tree-id20735 . -15) (undo-tree-id20736 . -15) (undo-tree-id20737 . -15) (undo-tree-id20738 . -15) (undo-tree-id20739 . -15) (undo-tree-id20740 . -15) (undo-tree-id20741 . -15) (undo-tree-id20742 . -15) (undo-tree-id20743 . -15) (undo-tree-id20744 . -15) (undo-tree-id20745 . -15) (undo-tree-id20746 . -15) (undo-tree-id20747 . -15) (undo-tree-id20748 . -15) (undo-tree-id20749 . -15) (undo-tree-id20750 . -15) (undo-tree-id20751 . -15) (undo-tree-id20752 . -15) (undo-tree-id20753 . -15) (undo-tree-id20754 . -15) (undo-tree-id20755 . -15) (undo-tree-id20756 . -15) (undo-tree-id20757 . -15) (undo-tree-id20758 . -15) (undo-tree-id20759 . -15) (undo-tree-id20760 . -15) (undo-tree-id20761 . -15) (undo-tree-id20762 . -15) (undo-tree-id20763 . -15) (undo-tree-id20764 . -15) (undo-tree-id20765 . -15) (undo-tree-id20766 . -15) (undo-tree-id20767 . -15) (undo-tree-id20768 . -15) (undo-tree-id20769 . -15) (undo-tree-id20770 . -15) (undo-tree-id20771 . -15) (undo-tree-id20772 . -15) (undo-tree-id20773 . -15) (undo-tree-id20774 . -15) (undo-tree-id20775 . -15) (undo-tree-id20776 . -15) (undo-tree-id20777 . -15) (undo-tree-id20778 . -15) (undo-tree-id20779 . -15) (undo-tree-id20780 . -15) (undo-tree-id20781 . -15) (undo-tree-id20782 . -15) (undo-tree-id20783 . -15) (undo-tree-id20784 . -15) (undo-tree-id20785 . -15) (undo-tree-id20786 . -15) (undo-tree-id20787 . -15) (undo-tree-id20788 . -15) (undo-tree-id20789 . -15) (undo-tree-id20790 . -15) (undo-tree-id20791 . -15) (undo-tree-id20792 . -15) (undo-tree-id20793 . -15) (undo-tree-id20794 . -15) (undo-tree-id20795 . -15) (undo-tree-id20796 . -15) (undo-tree-id20797 . -15) (undo-tree-id20798 . -15) (undo-tree-id20799 . -15) (undo-tree-id20800 . -15) (undo-tree-id20801 . -15) (undo-tree-id20802 . -15) (undo-tree-id20803 . -15) (undo-tree-id20804 . -15) (undo-tree-id20805 . -15) (undo-tree-id20806 . -15) (undo-tree-id20807 . -15) (undo-tree-id20808 . -15) (undo-tree-id20809 . -15) (undo-tree-id20810 . -15) (undo-tree-id20811 . -15) (undo-tree-id20812 . -15) (undo-tree-id20813 . -15) (undo-tree-id20814 . -15) (undo-tree-id20815 . -15) (undo-tree-id20816 . -15) (undo-tree-id20817 . -15) (undo-tree-id20818 . -15) (undo-tree-id20819 . -15) (undo-tree-id20820 . -15) (undo-tree-id20821 . -15) (undo-tree-id20822 . -15) (undo-tree-id20823 . -15) (undo-tree-id20824 . -15) (undo-tree-id20825 . -15) (undo-tree-id20826 . -15) (undo-tree-id20827 . -15) (undo-tree-id20828 . -15) (undo-tree-id20829 . -15) (undo-tree-id20830 . -15) (undo-tree-id20831 . -15) (undo-tree-id20832 . -14) (undo-tree-id20833 . -14) (undo-tree-id20834 . -14) (undo-tree-id20835 . -14) (undo-tree-id20836 . -14) (undo-tree-id20837 . -14) (undo-tree-id20838 . -14) (undo-tree-id20839 . -14) (undo-tree-id20840 . -14) (undo-tree-id20841 . -14) (undo-tree-id20842 . -14) (undo-tree-id20843 . -14) (undo-tree-id20844 . -14) (undo-tree-id20845 . -14) (undo-tree-id20846 . -14) (undo-tree-id20847 . -14) (undo-tree-id20848 . -14) (undo-tree-id20849 . -14) (undo-tree-id20850 . -14) (undo-tree-id20851 . -14) (undo-tree-id20852 . -14) (undo-tree-id20853 . -14) (undo-tree-id20854 . -14) (undo-tree-id20855 . -14) (undo-tree-id20856 . -14) (undo-tree-id20857 . -14) (undo-tree-id20858 . -14) (undo-tree-id20859 . -14) (undo-tree-id20860 . -14) (undo-tree-id20861 . -14) (undo-tree-id20862 . -14) (undo-tree-id20863 . -14) (undo-tree-id20864 . -14) (undo-tree-id20865 . -14) (undo-tree-id20866 . -14) (undo-tree-id20867 . -17) 1799) nil (26026 38004 776450 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1785) (undo-tree-id20486 . 1) (undo-tree-id20487 . -1) (undo-tree-id20488 . -1) (undo-tree-id20489 . -1) (undo-tree-id20490 . -1) (undo-tree-id20491 . -1) (undo-tree-id20492 . -1) (undo-tree-id20493 . -1) (undo-tree-id20494 . -1) (undo-tree-id20495 . -1) (undo-tree-id20496 . -1) (undo-tree-id20497 . -1) (undo-tree-id20498 . -1) (undo-tree-id20499 . -1) (undo-tree-id20500 . -1) (undo-tree-id20501 . -1) (undo-tree-id20502 . -1) (undo-tree-id20503 . -1) (undo-tree-id20504 . -1) (undo-tree-id20505 . -1) (undo-tree-id20506 . -1) (undo-tree-id20507 . -1) (undo-tree-id20508 . -1) (undo-tree-id20509 . -1) (undo-tree-id20510 . -1) (undo-tree-id20511 . -1) (undo-tree-id20512 . -1) (undo-tree-id20513 . -1) (undo-tree-id20514 . -1) (undo-tree-id20515 . -1) (undo-tree-id20516 . -1) (undo-tree-id20517 . -1) (undo-tree-id20518 . -1) (undo-tree-id20519 . -1) (undo-tree-id20520 . -1) (undo-tree-id20521 . -1) (undo-tree-id20522 . -1) (undo-tree-id20523 . -1) (undo-tree-id20524 . -1) (undo-tree-id20525 . -1) (undo-tree-id20526 . -1) (undo-tree-id20527 . -1) (undo-tree-id20528 . -1) (undo-tree-id20529 . -1) (undo-tree-id20530 . -1) (undo-tree-id20531 . -1) (undo-tree-id20532 . -1) (undo-tree-id20533 . -1) (undo-tree-id20534 . -1) (undo-tree-id20535 . -1) (undo-tree-id20536 . -1) (undo-tree-id20537 . -1) (undo-tree-id20538 . -1) (undo-tree-id20539 . -1) (undo-tree-id20540 . -1) (undo-tree-id20541 . -1) (undo-tree-id20542 . -1) (undo-tree-id20543 . -1) (undo-tree-id20544 . -1) (undo-tree-id20545 . -1) (undo-tree-id20546 . -1) (undo-tree-id20547 . 1) (undo-tree-id20548 . -1)) nil (26026 38004 776338 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1800) (undo-tree-id20417 . -1) (undo-tree-id20418 . -1) (undo-tree-id20419 . -1) (undo-tree-id20420 . -1) (undo-tree-id20421 . -1) (undo-tree-id20422 . -1) (undo-tree-id20423 . -1) (undo-tree-id20424 . -1) (undo-tree-id20425 . -1) (undo-tree-id20426 . -1) (undo-tree-id20427 . -1) (undo-tree-id20428 . -1) (undo-tree-id20429 . -1) (undo-tree-id20430 . -1) (undo-tree-id20431 . -1) (undo-tree-id20432 . -1) (undo-tree-id20433 . -1) (undo-tree-id20434 . -1) (undo-tree-id20435 . -1) (undo-tree-id20436 . -1) (undo-tree-id20437 . -1) (undo-tree-id20438 . -1) (undo-tree-id20439 . -1) (undo-tree-id20440 . -1) (undo-tree-id20441 . -1) (undo-tree-id20442 . -1) (undo-tree-id20443 . -1) (undo-tree-id20444 . -1) (undo-tree-id20445 . -1) (undo-tree-id20446 . -1) (undo-tree-id20447 . -1) (undo-tree-id20448 . -1) (undo-tree-id20449 . -1) (undo-tree-id20450 . -1) (undo-tree-id20451 . -1) (undo-tree-id20452 . -1) (undo-tree-id20453 . -1) (undo-tree-id20454 . -1) (undo-tree-id20455 . -1) (undo-tree-id20456 . -1) (undo-tree-id20457 . -1) (undo-tree-id20458 . -1) (undo-tree-id20459 . -1) (undo-tree-id20460 . -1) (undo-tree-id20461 . -1) (undo-tree-id20462 . -1) (undo-tree-id20463 . -1) (undo-tree-id20464 . -1) (undo-tree-id20465 . -1) (undo-tree-id20466 . -1) (undo-tree-id20467 . -1) (undo-tree-id20468 . -1) (undo-tree-id20469 . -1) (undo-tree-id20470 . -1) (undo-tree-id20471 . -1) (undo-tree-id20472 . -1) (undo-tree-id20473 . -1) (undo-tree-id20474 . -1) (undo-tree-id20475 . -1) (undo-tree-id20476 . -1) (undo-tree-id20477 . -1) (undo-tree-id20478 . -1) (undo-tree-id20479 . -1) (undo-tree-id20480 . -1) (undo-tree-id20481 . -1) (undo-tree-id20482 . -1) (undo-tree-id20483 . -1) (undo-tree-id20484 . -1) (undo-tree-id20485 . -1)) nil (26026 38004 776315 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1810) (undo-tree-id20415 . 1) (undo-tree-id20416 . -1)) nil (26026 38004 776291 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1663 . 1664) (#("
" 0 1 (fontified nil)) . -1694) (1655 . 1695) 1629) nil (26026 38004 776290 0) 0 nil])
([nil nil ((1666 . 1673) (#("current" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t)) . 1666) (undo-tree-id20412 . -6) (undo-tree-id20413 . -7) (undo-tree-id20414 . -7)) nil (26026 38004 776289 0) 0 nil])
([nil nil ((1676 . 1680) (#("iterator().next();" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-3-face) fontified t) 9 10 (face (rainbow-delimiters-depth-3-face) fontified t) 10 11 (fontified t) 11 15 (fontified t) 15 16 (face (rainbow-delimiters-depth-3-face) fontified t) 16 17 (face (rainbow-delimiters-depth-3-face) fontified t) 17 18 (fontified t)) . 1676) (undo-tree-id20407 . -17) (undo-tree-id20408 . -18) (undo-tree-id20409 . -18) (undo-tree-id20410 . -18) (undo-tree-id20411 . -18)) nil (26026 38004 776288 0) 0 nil])
([nil nil ((1673 . 1674) (#(" " 0 1 (fontified t)) . -1673) (undo-tree-id19353 . -1) (undo-tree-id19354 . -1) (undo-tree-id19355 . -1) (undo-tree-id19356 . -1) (undo-tree-id19357 . -1) (undo-tree-id19358 . -1) (undo-tree-id19359 . -1) (undo-tree-id19360 . -1) (undo-tree-id19361 . -1) (undo-tree-id19362 . -1) (undo-tree-id19363 . -1) (undo-tree-id19364 . -1) (undo-tree-id19365 . -1) (undo-tree-id19366 . -1) (undo-tree-id19367 . -1) (undo-tree-id19368 . -1) (undo-tree-id19369 . -1) (undo-tree-id19370 . -1) (undo-tree-id19371 . -1) (undo-tree-id19372 . -1) (undo-tree-id19373 . -1) (undo-tree-id19374 . -1) (undo-tree-id19375 . -1) (undo-tree-id19376 . -1) (undo-tree-id19377 . -1) (undo-tree-id19378 . -1) (undo-tree-id19379 . -1) (undo-tree-id19380 . -1) (undo-tree-id19381 . -1) (undo-tree-id19382 . -1) (undo-tree-id19383 . -1) (undo-tree-id19384 . -1) (undo-tree-id19385 . -1) (undo-tree-id19386 . -1) (undo-tree-id19387 . -1) (undo-tree-id19388 . -1) (undo-tree-id19389 . -1) (undo-tree-id19390 . -1) (undo-tree-id19391 . -1) (undo-tree-id19392 . -1) (undo-tree-id19393 . -1) (undo-tree-id19394 . -1) (undo-tree-id19395 . -1) (undo-tree-id19396 . -1) (undo-tree-id19397 . -1) (undo-tree-id19398 . -1) (undo-tree-id19399 . -1) (undo-tree-id19400 . -1) (undo-tree-id19401 . -1) (undo-tree-id19402 . -1) (undo-tree-id19403 . -1) (undo-tree-id19404 . -1) (undo-tree-id19405 . -1) (undo-tree-id19406 . -1) (undo-tree-id19407 . -1) (undo-tree-id19408 . -1) (undo-tree-id19409 . -1) (undo-tree-id19410 . -1) (undo-tree-id19411 . -1) (undo-tree-id19412 . -1) (undo-tree-id19413 . -1) (undo-tree-id19414 . -1) (undo-tree-id19415 . -1) (undo-tree-id19416 . -1) (undo-tree-id19417 . -1) (undo-tree-id19418 . -1) (undo-tree-id19419 . -1) (undo-tree-id19420 . -1) (undo-tree-id19421 . -1) (undo-tree-id19422 . -1) (undo-tree-id19423 . -1) (undo-tree-id19424 . -1) (undo-tree-id19425 . -1) (undo-tree-id19426 . -1) (undo-tree-id19427 . -1) (undo-tree-id19428 . -1) (undo-tree-id19429 . -1) (undo-tree-id19430 . -1) (undo-tree-id19431 . -1) (undo-tree-id19432 . -1) (undo-tree-id19433 . -1) (undo-tree-id19434 . -1) (undo-tree-id19435 . -1) (undo-tree-id19436 . -1) (undo-tree-id19437 . -1) (undo-tree-id19438 . -1) (undo-tree-id19439 . -1) (undo-tree-id19440 . -1) (undo-tree-id19441 . -1) (undo-tree-id19442 . -1) (undo-tree-id19443 . -1) (undo-tree-id19444 . -1) (undo-tree-id19445 . -1) (undo-tree-id19446 . -1) (undo-tree-id19447 . -1) (undo-tree-id19448 . -1) (undo-tree-id19449 . -1) (undo-tree-id19450 . -1) (undo-tree-id19451 . -1) (undo-tree-id19452 . -1) (undo-tree-id19453 . -1) (undo-tree-id19454 . -1) (undo-tree-id19455 . -1) (undo-tree-id19456 . -1) (undo-tree-id19457 . -1) (undo-tree-id19458 . -1) (undo-tree-id19459 . -1) (undo-tree-id19460 . -1) (undo-tree-id19461 . -1) (undo-tree-id19462 . -1) (undo-tree-id19463 . -1) (undo-tree-id19464 . -1) (undo-tree-id19465 . -1) (undo-tree-id19466 . -1) (undo-tree-id19467 . -1) (undo-tree-id19468 . -1) (undo-tree-id19469 . -1) (undo-tree-id19470 . -1) (undo-tree-id19471 . -1) (undo-tree-id19472 . -1) (undo-tree-id19473 . -1) (undo-tree-id19474 . -1) (undo-tree-id19475 . -1) (undo-tree-id19476 . -1) (undo-tree-id19477 . -1) (undo-tree-id19478 . -1) (undo-tree-id19479 . -1) (undo-tree-id19480 . -1) (undo-tree-id19481 . -1) (undo-tree-id19482 . -1) (undo-tree-id19483 . -1) (undo-tree-id19484 . -1) (undo-tree-id19485 . -1) (undo-tree-id19486 . -1) (undo-tree-id19487 . -1) (undo-tree-id19488 . -1) (undo-tree-id19489 . -1) (undo-tree-id19490 . -1) (undo-tree-id19491 . -1) (undo-tree-id19492 . -1) (undo-tree-id19493 . -1) (undo-tree-id19494 . -1) (undo-tree-id19495 . -1) (undo-tree-id19496 . -1) (undo-tree-id19497 . -1) (undo-tree-id19498 . -1) (undo-tree-id19499 . -1) (undo-tree-id19500 . -1) (undo-tree-id19501 . -1) (undo-tree-id19502 . -1) (undo-tree-id19503 . -1) (undo-tree-id19504 . -1) (undo-tree-id19505 . -1) (undo-tree-id19506 . -1) (undo-tree-id19507 . -1) (undo-tree-id19508 . -1) (undo-tree-id19509 . -1) (undo-tree-id19510 . -1) (undo-tree-id19511 . -1) (undo-tree-id19512 . -1) (undo-tree-id19513 . -1) (undo-tree-id19514 . -1) (undo-tree-id19515 . -1) (undo-tree-id19516 . -1) (undo-tree-id19517 . -1) (undo-tree-id19518 . -1) (undo-tree-id19519 . -1) (undo-tree-id19520 . -1) (undo-tree-id19521 . -1) (undo-tree-id19522 . -1) (undo-tree-id19523 . -1) (undo-tree-id19524 . -1) (undo-tree-id19525 . -1) (undo-tree-id19526 . -1) (undo-tree-id19527 . -1) (undo-tree-id19528 . -1) (undo-tree-id19529 . -1) (undo-tree-id19530 . -1) (undo-tree-id19531 . -1) (undo-tree-id19532 . -1) (undo-tree-id19533 . -1) (undo-tree-id19534 . -1) (undo-tree-id19535 . -1) (undo-tree-id19536 . -1) (undo-tree-id19537 . -1) (undo-tree-id19538 . -1) (undo-tree-id19539 . -1) (undo-tree-id19540 . -1) (undo-tree-id19541 . -1) (undo-tree-id19542 . -1) (undo-tree-id19543 . -1) (undo-tree-id19544 . -1) (undo-tree-id19545 . -1) (undo-tree-id19546 . -1) (undo-tree-id19547 . -1) (undo-tree-id19548 . -1) (undo-tree-id19549 . -1) (undo-tree-id19550 . -1) (undo-tree-id19551 . -1) (undo-tree-id19552 . -1) (undo-tree-id19553 . -1) (undo-tree-id19554 . -1) (undo-tree-id19555 . -1) (undo-tree-id19556 . -1) (undo-tree-id19557 . -1) (undo-tree-id19558 . -1) (undo-tree-id19559 . -1) (undo-tree-id19560 . -1) (undo-tree-id19561 . -1) (undo-tree-id19562 . -1) (undo-tree-id19563 . -1) (undo-tree-id19564 . -1) (undo-tree-id19565 . -1) (undo-tree-id19566 . -1) (undo-tree-id19567 . -1) (undo-tree-id19568 . -1) (undo-tree-id19569 . -1) (undo-tree-id19570 . -1) (undo-tree-id19571 . -1) (undo-tree-id19572 . -1) (undo-tree-id19573 . -1) (undo-tree-id19574 . -1) (undo-tree-id19575 . -1) (undo-tree-id19576 . -1) (undo-tree-id19577 . -1) (undo-tree-id19578 . -1) (undo-tree-id19579 . -1) (undo-tree-id19580 . -1) (undo-tree-id19581 . -1) (undo-tree-id19582 . -1) (undo-tree-id19583 . -1) (undo-tree-id19584 . -1) (undo-tree-id19585 . -1) (undo-tree-id19586 . -1) (undo-tree-id19587 . -1) (undo-tree-id19588 . -1) (undo-tree-id19589 . -1) (undo-tree-id19590 . -1) (undo-tree-id19591 . -1) (undo-tree-id19592 . -1) (undo-tree-id19593 . -1) (undo-tree-id19594 . -1) (undo-tree-id19595 . -1) (undo-tree-id19596 . -1) (undo-tree-id19597 . -1) (undo-tree-id19598 . -1) (undo-tree-id19599 . -1) (undo-tree-id19600 . -1) (undo-tree-id19601 . -1) (undo-tree-id19602 . -1) (undo-tree-id19603 . -1) (undo-tree-id19604 . -1) (undo-tree-id19605 . -1) (undo-tree-id19606 . -1) (undo-tree-id19607 . -1) (undo-tree-id19608 . -1) (undo-tree-id19609 . -1) (undo-tree-id19610 . -1) (undo-tree-id19611 . -1) (undo-tree-id19612 . -1) (undo-tree-id19613 . -1) (undo-tree-id19614 . -1) (undo-tree-id19615 . -1) (undo-tree-id19616 . -1) (undo-tree-id19617 . -1) (undo-tree-id19618 . -1) (undo-tree-id19619 . -1) (undo-tree-id19620 . -1) (undo-tree-id19621 . -1) (undo-tree-id19622 . -1) (undo-tree-id19623 . -1) (undo-tree-id19624 . -1) (undo-tree-id19625 . -1) (undo-tree-id19626 . -1) (undo-tree-id19627 . -1) (undo-tree-id19628 . -1) (undo-tree-id19629 . -1) (undo-tree-id19630 . -1) (undo-tree-id19631 . -1) (undo-tree-id19632 . -1) (undo-tree-id19633 . -1) (undo-tree-id19634 . -1) (undo-tree-id19635 . -1) (undo-tree-id19636 . -1) (undo-tree-id19637 . -1) (undo-tree-id19638 . -1) (undo-tree-id19639 . -1) (undo-tree-id19640 . -1) (undo-tree-id19641 . -1) (undo-tree-id19642 . -1) (undo-tree-id19643 . -1) (undo-tree-id19644 . -1) (undo-tree-id19645 . -1) (undo-tree-id19646 . -1) (undo-tree-id19647 . -1) (undo-tree-id19648 . -1) (undo-tree-id19649 . -1) (undo-tree-id19650 . -1) (undo-tree-id19651 . -1) (undo-tree-id19652 . -1) (undo-tree-id19653 . -1) (undo-tree-id19654 . -1) (undo-tree-id19655 . -1) (undo-tree-id19656 . -1) (undo-tree-id19657 . -1) (undo-tree-id19658 . -1) (undo-tree-id19659 . -1) (undo-tree-id19660 . -1) (undo-tree-id19661 . -1) (undo-tree-id19662 . -1) (undo-tree-id19663 . -1) (undo-tree-id19664 . -1) (undo-tree-id19665 . -1) (undo-tree-id19666 . -1) (undo-tree-id19667 . -1) (undo-tree-id19668 . -1) (undo-tree-id19669 . -1) (undo-tree-id19670 . -1) (undo-tree-id19671 . -1) (undo-tree-id19672 . -1) (undo-tree-id19673 . -1) (undo-tree-id19674 . -1) (undo-tree-id19675 . -1) (undo-tree-id19676 . -1) (undo-tree-id19677 . -1) (undo-tree-id19678 . -1) (undo-tree-id19679 . -1) (undo-tree-id19680 . -1) (undo-tree-id19681 . -1) (undo-tree-id19682 . -1) (undo-tree-id19683 . -1) (undo-tree-id19684 . -1) (undo-tree-id19685 . -1) (undo-tree-id19686 . -1) (undo-tree-id19687 . -1) (undo-tree-id19688 . -1) (undo-tree-id19689 . -1) (undo-tree-id19690 . -1) (undo-tree-id19691 . -1) (undo-tree-id19692 . -1) (undo-tree-id19693 . -1) (undo-tree-id19694 . -1) (undo-tree-id19695 . -1) (undo-tree-id19696 . -1) (undo-tree-id19697 . -1) (undo-tree-id19698 . -1) (undo-tree-id19699 . -1) (undo-tree-id19700 . -1) (undo-tree-id19701 . -1) (undo-tree-id19702 . -1) (undo-tree-id19703 . -1) (undo-tree-id19704 . -1) (undo-tree-id19705 . -1) (undo-tree-id19706 . -1) (undo-tree-id19707 . -1) (undo-tree-id19708 . -1) (undo-tree-id19709 . -1) (undo-tree-id19710 . -1) (undo-tree-id19711 . -1) (undo-tree-id19712 . -1) (undo-tree-id19713 . -1) (undo-tree-id19714 . -1) (undo-tree-id19715 . -1) (undo-tree-id19716 . -1) (undo-tree-id19717 . -1) (undo-tree-id19718 . -1) (undo-tree-id19719 . -1) (undo-tree-id19720 . -1) (undo-tree-id19721 . -1) (undo-tree-id19722 . -1) (undo-tree-id19723 . -1) (undo-tree-id19724 . -1) (undo-tree-id19725 . -1) (undo-tree-id19726 . -1) (undo-tree-id19727 . -1) (undo-tree-id19728 . -1) (undo-tree-id19729 . -1) (undo-tree-id19730 . -1) (undo-tree-id19731 . -1) (undo-tree-id19732 . -1) (undo-tree-id19733 . -1) (undo-tree-id19734 . -1) (undo-tree-id19735 . -1) (undo-tree-id19736 . -1) (undo-tree-id19737 . -1) (undo-tree-id19738 . -1) (undo-tree-id19739 . -1) (undo-tree-id19740 . -1) (undo-tree-id19741 . -1) (undo-tree-id19742 . -1) (undo-tree-id19743 . -1) (undo-tree-id19744 . -1) (undo-tree-id19745 . -1) (undo-tree-id19746 . -1) (undo-tree-id19747 . -1) (undo-tree-id19748 . -1) (undo-tree-id19749 . -1) (undo-tree-id19750 . -1) (undo-tree-id19751 . -1) (undo-tree-id19752 . -1) (undo-tree-id19753 . -1) (undo-tree-id19754 . -1) (undo-tree-id19755 . -1) (undo-tree-id19756 . -1) (undo-tree-id19757 . -1) (undo-tree-id19758 . -1) (undo-tree-id19759 . -1) (undo-tree-id19760 . -1) (undo-tree-id19761 . -1) (undo-tree-id19762 . -1) (undo-tree-id19763 . -1) (undo-tree-id19764 . -1) (undo-tree-id19765 . -1) (undo-tree-id19766 . -1) (undo-tree-id19767 . -1) (undo-tree-id19768 . -1) (undo-tree-id19769 . -1) (undo-tree-id19770 . -1) (undo-tree-id19771 . -1) (undo-tree-id19772 . -1) (undo-tree-id19773 . -1) (undo-tree-id19774 . -1) (undo-tree-id19775 . -1) (undo-tree-id19776 . -1) (undo-tree-id19777 . -1) (undo-tree-id19778 . -1) (undo-tree-id19779 . -1) (undo-tree-id19780 . -1) (undo-tree-id19781 . -1) (undo-tree-id19782 . -1) (undo-tree-id19783 . -1) (undo-tree-id19784 . -1) (undo-tree-id19785 . -1) (undo-tree-id19786 . -1) (undo-tree-id19787 . -1) (undo-tree-id19788 . -1) (undo-tree-id19789 . -1) (undo-tree-id19790 . -1) (undo-tree-id19791 . -1) (undo-tree-id19792 . -1) (undo-tree-id19793 . -1) 1674 (#("= " 0 1 (fontified t) 1 2 (fontified t)) . -1674) (undo-tree-id19794 . -2) (undo-tree-id19795 . -2) (undo-tree-id19796 . -1) (undo-tree-id19797 . -2) (undo-tree-id19798 . -2) (undo-tree-id19799 . -2) (undo-tree-id19800 . -2) (undo-tree-id19801 . -2) (undo-tree-id19802 . -2) (undo-tree-id19803 . -2) (undo-tree-id19804 . -2) (undo-tree-id19805 . -2) (undo-tree-id19806 . -2) (undo-tree-id19807 . -2) (undo-tree-id19808 . -2) (undo-tree-id19809 . -2) (undo-tree-id19810 . -2) (undo-tree-id19811 . -2) (undo-tree-id19812 . -2) (undo-tree-id19813 . -2) (undo-tree-id19814 . -2) (undo-tree-id19815 . -2) (undo-tree-id19816 . -2) (undo-tree-id19817 . -2) (undo-tree-id19818 . -2) (undo-tree-id19819 . -2) (undo-tree-id19820 . -2) (undo-tree-id19821 . -2) (undo-tree-id19822 . -2) (undo-tree-id19823 . -2) (undo-tree-id19824 . -2) (undo-tree-id19825 . -2) (undo-tree-id19826 . -2) (undo-tree-id19827 . -2) (undo-tree-id19828 . -2) (undo-tree-id19829 . -2) (undo-tree-id19830 . -2) (undo-tree-id19831 . -2) (undo-tree-id19832 . -2) (undo-tree-id19833 . -2) (undo-tree-id19834 . -2) (undo-tree-id19835 . -2) (undo-tree-id19836 . -2) (undo-tree-id19837 . -2) (undo-tree-id19838 . -2) (undo-tree-id19839 . -2) (undo-tree-id19840 . -2) (undo-tree-id19841 . -2) (undo-tree-id19842 . -2) (undo-tree-id19843 . -2) (undo-tree-id19844 . -2) (undo-tree-id19845 . -2) (undo-tree-id19846 . -2) (undo-tree-id19847 . -2) (undo-tree-id19848 . -2) (undo-tree-id19849 . -2) (undo-tree-id19850 . -2) (undo-tree-id19851 . -2) (undo-tree-id19852 . -2) (undo-tree-id19853 . -2) (undo-tree-id19854 . -2) (undo-tree-id19855 . -2) (undo-tree-id19856 . -2) (undo-tree-id19857 . -2) (undo-tree-id19858 . -2) (undo-tree-id19859 . -2) (undo-tree-id19860 . -2) (undo-tree-id19861 . -2) (undo-tree-id19862 . -2) (undo-tree-id19863 . -2) (undo-tree-id19864 . -2) (undo-tree-id19865 . -2) (undo-tree-id19866 . -2) (undo-tree-id19867 . -2) (undo-tree-id19868 . -2) (undo-tree-id19869 . -2) (undo-tree-id19870 . -2) (undo-tree-id19871 . -2) (undo-tree-id19872 . -2) (undo-tree-id19873 . -2) (undo-tree-id19874 . -2) (undo-tree-id19875 . -2) (undo-tree-id19876 . -2) (undo-tree-id19877 . -2) (undo-tree-id19878 . -2) (undo-tree-id19879 . -2) (undo-tree-id19880 . -2) (undo-tree-id19881 . -2) (undo-tree-id19882 . -2) (undo-tree-id19883 . -2) (undo-tree-id19884 . -2) (undo-tree-id19885 . -2) (undo-tree-id19886 . -2) (undo-tree-id19887 . -2) (undo-tree-id19888 . -2) (undo-tree-id19889 . -2) (undo-tree-id19890 . -2) (undo-tree-id19891 . -2) (undo-tree-id19892 . -2) (undo-tree-id19893 . -2) (undo-tree-id19894 . -2) (undo-tree-id19895 . -2) (undo-tree-id19896 . -2) (undo-tree-id19897 . -2) (undo-tree-id19898 . -2) (undo-tree-id19899 . -2) (undo-tree-id19900 . -2) (undo-tree-id19901 . -2) (undo-tree-id19902 . -2) (undo-tree-id19903 . -2) (undo-tree-id19904 . -2) (undo-tree-id19905 . -2) (undo-tree-id19906 . -2) (undo-tree-id19907 . -2) (undo-tree-id19908 . -2) (undo-tree-id19909 . -2) (undo-tree-id19910 . -2) (undo-tree-id19911 . -2) (undo-tree-id19912 . -2) (undo-tree-id19913 . -2) (undo-tree-id19914 . -2) (undo-tree-id19915 . -2) (undo-tree-id19916 . -2) (undo-tree-id19917 . -2) (undo-tree-id19918 . -2) (undo-tree-id19919 . -2) (undo-tree-id19920 . -2) (undo-tree-id19921 . -2) (undo-tree-id19922 . -2) (undo-tree-id19923 . -2) (undo-tree-id19924 . -2) (undo-tree-id19925 . -2) (undo-tree-id19926 . -2) (undo-tree-id19927 . -2) (undo-tree-id19928 . -2) (undo-tree-id19929 . -2) (undo-tree-id19930 . -2) (undo-tree-id19931 . -2) (undo-tree-id19932 . -2) (undo-tree-id19933 . -2) (undo-tree-id19934 . -2) (undo-tree-id19935 . -2) (undo-tree-id19936 . -2) (undo-tree-id19937 . -2) (undo-tree-id19938 . -2) (undo-tree-id19939 . -2) (undo-tree-id19940 . -2) (undo-tree-id19941 . -2) (undo-tree-id19942 . -2) (undo-tree-id19943 . -2) (undo-tree-id19944 . -2) (undo-tree-id19945 . -2) (undo-tree-id19946 . -2) (undo-tree-id19947 . -2) (undo-tree-id19948 . -2) (undo-tree-id19949 . -2) (undo-tree-id19950 . -2) (undo-tree-id19951 . -2) (undo-tree-id19952 . -2) (undo-tree-id19953 . -2) (undo-tree-id19954 . -2) (undo-tree-id19955 . -2) (undo-tree-id19956 . -2) (undo-tree-id19957 . -2) (undo-tree-id19958 . -2) (undo-tree-id19959 . -2) (undo-tree-id19960 . -2) (undo-tree-id19961 . -2) (undo-tree-id19962 . -2) (undo-tree-id19963 . -2) (undo-tree-id19964 . -2) (undo-tree-id19965 . -2) (undo-tree-id19966 . -2) (undo-tree-id19967 . -2) (undo-tree-id19968 . -2) (undo-tree-id19969 . -2) (undo-tree-id19970 . -2) (undo-tree-id19971 . -2) (undo-tree-id19972 . -2) (undo-tree-id19973 . -2) (undo-tree-id19974 . -2) (undo-tree-id19975 . -2) (undo-tree-id19976 . -2) (undo-tree-id19977 . -2) (undo-tree-id19978 . -2) (undo-tree-id19979 . -2) (undo-tree-id19980 . -2) (undo-tree-id19981 . -2) (undo-tree-id19982 . -2) (undo-tree-id19983 . -2) (undo-tree-id19984 . -2) (undo-tree-id19985 . -2) (undo-tree-id19986 . -2) (undo-tree-id19987 . -2) (undo-tree-id19988 . -2) (undo-tree-id19989 . -2) (undo-tree-id19990 . -2) (undo-tree-id19991 . -2) (undo-tree-id19992 . -2) (undo-tree-id19993 . -2) (undo-tree-id19994 . -2) (undo-tree-id19995 . -2) (undo-tree-id19996 . -2) (undo-tree-id19997 . -2) (undo-tree-id19998 . -2) (undo-tree-id19999 . -2) (undo-tree-id20000 . -2) (undo-tree-id20001 . -2) (undo-tree-id20002 . -2) (undo-tree-id20003 . -2) (undo-tree-id20004 . -2) (undo-tree-id20005 . -2) (undo-tree-id20006 . -2) (undo-tree-id20007 . -2) (undo-tree-id20008 . -2) (undo-tree-id20009 . -2) (undo-tree-id20010 . -2) (undo-tree-id20011 . -2) (undo-tree-id20012 . -2) (undo-tree-id20013 . -2) (undo-tree-id20014 . -2) (undo-tree-id20015 . -2) (undo-tree-id20016 . -2) (undo-tree-id20017 . -2) (undo-tree-id20018 . -2) (undo-tree-id20019 . -2) (undo-tree-id20020 . -2) (undo-tree-id20021 . -2) (undo-tree-id20022 . -2) (undo-tree-id20023 . -2) (undo-tree-id20024 . -2) (undo-tree-id20025 . -2) (undo-tree-id20026 . -2) (undo-tree-id20027 . -2) (undo-tree-id20028 . -2) (undo-tree-id20029 . -2) (undo-tree-id20030 . -2) (undo-tree-id20031 . -2) (undo-tree-id20032 . -2) (undo-tree-id20033 . -2) (undo-tree-id20034 . -2) (undo-tree-id20035 . -2) (undo-tree-id20036 . -2) (undo-tree-id20037 . -2) (undo-tree-id20038 . -2) (undo-tree-id20039 . -2) (undo-tree-id20040 . -2) (undo-tree-id20041 . -2) (undo-tree-id20042 . -2) (undo-tree-id20043 . -2) (undo-tree-id20044 . -2) (undo-tree-id20045 . -2) (undo-tree-id20046 . -2) (undo-tree-id20047 . -2) (undo-tree-id20048 . -2) (undo-tree-id20049 . -2) (undo-tree-id20050 . -2) (undo-tree-id20051 . -2) (undo-tree-id20052 . -2) (undo-tree-id20053 . -2) (undo-tree-id20054 . -2) (undo-tree-id20055 . -2) (undo-tree-id20056 . -2) (undo-tree-id20057 . -2) (undo-tree-id20058 . -2) (undo-tree-id20059 . -2) (undo-tree-id20060 . -2) (undo-tree-id20061 . -2) (undo-tree-id20062 . -2) (undo-tree-id20063 . -2) (undo-tree-id20064 . -2) (undo-tree-id20065 . -2) (undo-tree-id20066 . -2) (undo-tree-id20067 . -2) (undo-tree-id20068 . -2) (undo-tree-id20069 . -2) (undo-tree-id20070 . -2) (undo-tree-id20071 . -2) (undo-tree-id20072 . -2) (undo-tree-id20073 . -2) (undo-tree-id20074 . -2) (undo-tree-id20075 . -2) (undo-tree-id20076 . -2) (undo-tree-id20077 . -2) (undo-tree-id20078 . -2) (undo-tree-id20079 . -2) (undo-tree-id20080 . -2) (undo-tree-id20081 . -2) (undo-tree-id20082 . -2) (undo-tree-id20083 . -2) (undo-tree-id20084 . -2) (undo-tree-id20085 . -2) (undo-tree-id20086 . -2) (undo-tree-id20087 . -2) (undo-tree-id20088 . -2) (undo-tree-id20089 . -2) (undo-tree-id20090 . -2) (undo-tree-id20091 . -2) (undo-tree-id20092 . -2) (undo-tree-id20093 . -2) (undo-tree-id20094 . -2) (undo-tree-id20095 . -2) (undo-tree-id20096 . -2) (undo-tree-id20097 . -2) (undo-tree-id20098 . -2) (undo-tree-id20099 . -2) (undo-tree-id20100 . -2) (undo-tree-id20101 . -2) (undo-tree-id20102 . -2) (undo-tree-id20103 . -2) (undo-tree-id20104 . -2) (undo-tree-id20105 . -2) (undo-tree-id20106 . -2) (undo-tree-id20107 . -2) (undo-tree-id20108 . -2) (undo-tree-id20109 . -2) (undo-tree-id20110 . -2) (undo-tree-id20111 . -2) (undo-tree-id20112 . -2) (undo-tree-id20113 . -2) (undo-tree-id20114 . -2) (undo-tree-id20115 . -2) (undo-tree-id20116 . -2) (undo-tree-id20117 . -2) (undo-tree-id20118 . -2) (undo-tree-id20119 . -2) (undo-tree-id20120 . -2) (undo-tree-id20121 . -2) (undo-tree-id20122 . -2) (undo-tree-id20123 . -2) (undo-tree-id20124 . -2) (undo-tree-id20125 . -2) (undo-tree-id20126 . -2) (undo-tree-id20127 . -2) (undo-tree-id20128 . -2) (undo-tree-id20129 . -2) (undo-tree-id20130 . -2) (undo-tree-id20131 . -2) (undo-tree-id20132 . -2) (undo-tree-id20133 . -2) (undo-tree-id20134 . -2) (undo-tree-id20135 . -2) (undo-tree-id20136 . -2) (undo-tree-id20137 . -2) (undo-tree-id20138 . -2) (undo-tree-id20139 . -2) (undo-tree-id20140 . -2) (undo-tree-id20141 . -2) (undo-tree-id20142 . -2) 1676 (#("null" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . -1676) (undo-tree-id20143 . -1) (undo-tree-id20144 . -1) (undo-tree-id20145 . -1) (undo-tree-id20146 . -1) (undo-tree-id20147 . -1) (undo-tree-id20148 . -1) (undo-tree-id20149 . -1) (undo-tree-id20150 . -1) (undo-tree-id20151 . -1) (undo-tree-id20152 . -1) (undo-tree-id20153 . -1) (undo-tree-id20154 . -1) (undo-tree-id20155 . -1) (undo-tree-id20156 . -1) (undo-tree-id20157 . -1) (undo-tree-id20158 . -1) (undo-tree-id20159 . -1) (undo-tree-id20160 . -1) (undo-tree-id20161 . -1) (undo-tree-id20162 . -1) (undo-tree-id20163 . -1) (undo-tree-id20164 . -1) (undo-tree-id20165 . -1) (undo-tree-id20166 . -1) (undo-tree-id20167 . -1) (undo-tree-id20168 . -1) (undo-tree-id20169 . -1) (undo-tree-id20170 . -1) (undo-tree-id20171 . -1) (undo-tree-id20172 . -1) (undo-tree-id20173 . -1) (undo-tree-id20174 . -1) (undo-tree-id20175 . -1) (undo-tree-id20176 . -1) (undo-tree-id20177 . -1) (undo-tree-id20178 . -1) (undo-tree-id20179 . -1) (undo-tree-id20180 . -1) (undo-tree-id20181 . -1) (undo-tree-id20182 . -1) (undo-tree-id20183 . -1) (undo-tree-id20184 . -1) (undo-tree-id20185 . -1) (undo-tree-id20186 . -1) (undo-tree-id20187 . -1) (undo-tree-id20188 . -1) (undo-tree-id20189 . -1) (undo-tree-id20190 . -1) (undo-tree-id20191 . -1) (undo-tree-id20192 . -1) (undo-tree-id20193 . -1) (undo-tree-id20194 . -1) (undo-tree-id20195 . -1) (undo-tree-id20196 . -1) (undo-tree-id20197 . -1) (undo-tree-id20198 . -1) (undo-tree-id20199 . -1) (undo-tree-id20200 . -1) (undo-tree-id20201 . -2) (undo-tree-id20202 . -2) (undo-tree-id20203 . -2) (undo-tree-id20204 . -2) (undo-tree-id20205 . -2) (undo-tree-id20206 . -2) (undo-tree-id20207 . -2) (undo-tree-id20208 . -2) (undo-tree-id20209 . -2) (undo-tree-id20210 . -2) (undo-tree-id20211 . -2) (undo-tree-id20212 . -2) (undo-tree-id20213 . -2) (undo-tree-id20214 . -2) (undo-tree-id20215 . -2) (undo-tree-id20216 . -2) (undo-tree-id20217 . -2) (undo-tree-id20218 . -2) (undo-tree-id20219 . -2) (undo-tree-id20220 . -2) (undo-tree-id20221 . -2) (undo-tree-id20222 . -2) (undo-tree-id20223 . -2) (undo-tree-id20224 . -2) (undo-tree-id20225 . -2) (undo-tree-id20226 . -2) (undo-tree-id20227 . -2) (undo-tree-id20228 . -2) (undo-tree-id20229 . -2) (undo-tree-id20230 . -2) (undo-tree-id20231 . -2) (undo-tree-id20232 . -2) (undo-tree-id20233 . -3) (undo-tree-id20234 . -3) (undo-tree-id20235 . -3) (undo-tree-id20236 . -3) (undo-tree-id20237 . -3) (undo-tree-id20238 . -3) (undo-tree-id20239 . -3) (undo-tree-id20240 . -3) (undo-tree-id20241 . -3) (undo-tree-id20242 . -3) (undo-tree-id20243 . -3) (undo-tree-id20244 . -3) (undo-tree-id20245 . -3) (undo-tree-id20246 . -3) (undo-tree-id20247 . -3) (undo-tree-id20248 . -3) (undo-tree-id20249 . -3) (undo-tree-id20250 . -3) (undo-tree-id20251 . -3) (undo-tree-id20252 . -3) (undo-tree-id20253 . -3) (undo-tree-id20254 . -3) (undo-tree-id20255 . -3) (undo-tree-id20256 . -3) (undo-tree-id20257 . -3) (undo-tree-id20258 . -3) (undo-tree-id20259 . -4) (undo-tree-id20260 . -4) (undo-tree-id20261 . -4) (undo-tree-id20262 . -4) (undo-tree-id20263 . -4) (undo-tree-id20264 . -4) (undo-tree-id20265 . -4) (undo-tree-id20266 . -4) (undo-tree-id20267 . -4) (undo-tree-id20268 . -4) (undo-tree-id20269 . -4) (undo-tree-id20270 . -4) (undo-tree-id20271 . -4) (undo-tree-id20272 . -4) (undo-tree-id20273 . -4) (undo-tree-id20274 . -4) (undo-tree-id20275 . -4) (undo-tree-id20276 . -4) (undo-tree-id20277 . -4) (undo-tree-id20278 . -4) (undo-tree-id20279 . -4) (undo-tree-id20280 . -4) (undo-tree-id20281 . -4) (undo-tree-id20282 . -4) (undo-tree-id20283 . -4) (undo-tree-id20284 . -4) (undo-tree-id20285 . -4) (undo-tree-id20286 . -4) (undo-tree-id20287 . -4) (undo-tree-id20288 . -4) (undo-tree-id20289 . -4) (undo-tree-id20290 . -4) (undo-tree-id20291 . -4) (undo-tree-id20292 . -4) (undo-tree-id20293 . -4) (undo-tree-id20294 . -4) (undo-tree-id20295 . -4) (undo-tree-id20296 . -4) (undo-tree-id20297 . -4) (undo-tree-id20298 . -4) (undo-tree-id20299 . -4) (undo-tree-id20300 . -4) (undo-tree-id20301 . -4) (undo-tree-id20302 . -4) (undo-tree-id20303 . -4) (undo-tree-id20304 . -4) (undo-tree-id20305 . -4) (undo-tree-id20306 . -4) (undo-tree-id20307 . -4) (undo-tree-id20308 . -4) (undo-tree-id20309 . -4) (undo-tree-id20310 . -4) (undo-tree-id20311 . -4) (undo-tree-id20312 . -4) (undo-tree-id20313 . -4) (undo-tree-id20314 . -4) (undo-tree-id20315 . -4) (undo-tree-id20316 . -4) (undo-tree-id20317 . -4) (undo-tree-id20318 . -4) (undo-tree-id20319 . -4) (undo-tree-id20320 . -4) (undo-tree-id20321 . -4) (undo-tree-id20322 . -4) (undo-tree-id20323 . -4) (undo-tree-id20324 . -4) (undo-tree-id20325 . -4) (undo-tree-id20326 . -4) (undo-tree-id20327 . -4) (undo-tree-id20328 . -4) (undo-tree-id20329 . -4) (undo-tree-id20330 . -4) (undo-tree-id20331 . -4) (undo-tree-id20332 . -4) (undo-tree-id20333 . -4) (undo-tree-id20334 . -4) (undo-tree-id20335 . -4) (undo-tree-id20336 . -4) (undo-tree-id20337 . -4) (undo-tree-id20338 . -4) (undo-tree-id20339 . -4) (undo-tree-id20340 . -4) (undo-tree-id20341 . -4) (undo-tree-id20342 . -4) (undo-tree-id20343 . -4) (undo-tree-id20344 . -4) (undo-tree-id20345 . -4) (undo-tree-id20346 . -4) (undo-tree-id20347 . -4) (undo-tree-id20348 . -3) (undo-tree-id20349 . -4) (undo-tree-id20350 . -3) (undo-tree-id20351 . -3) (undo-tree-id20352 . -3) (undo-tree-id20353 . -3) (undo-tree-id20354 . -3) (undo-tree-id20355 . -3) (undo-tree-id20356 . -3) (undo-tree-id20357 . -3) (undo-tree-id20358 . -3) (undo-tree-id20359 . -3) (undo-tree-id20360 . -3) (undo-tree-id20361 . -3) (undo-tree-id20362 . -3) (undo-tree-id20363 . -3) (undo-tree-id20364 . -3) (undo-tree-id20365 . -3) (undo-tree-id20366 . -3) (undo-tree-id20367 . -3) (undo-tree-id20368 . -3) (undo-tree-id20369 . -3) (undo-tree-id20370 . -3) (undo-tree-id20371 . -3) (undo-tree-id20372 . -3) (undo-tree-id20373 . -3) (undo-tree-id20374 . -3) (undo-tree-id20375 . -3) (undo-tree-id20376 . -3) (undo-tree-id20377 . -3) (undo-tree-id20378 . -4) (undo-tree-id20379 . -4) (undo-tree-id20380 . -4) (undo-tree-id20381 . -4) (undo-tree-id20382 . -4) (undo-tree-id20383 . -4) (undo-tree-id20384 . -4) (undo-tree-id20385 . -4) (undo-tree-id20386 . -4) (undo-tree-id20387 . -4) (undo-tree-id20388 . -4) (undo-tree-id20389 . -4) (undo-tree-id20390 . -4) (undo-tree-id20391 . -4) (undo-tree-id20392 . -4) (undo-tree-id20393 . -4) (undo-tree-id20394 . -4) (undo-tree-id20395 . -4) (undo-tree-id20396 . -4) (undo-tree-id20397 . -4) (undo-tree-id20398 . -4) (undo-tree-id20399 . -4) (undo-tree-id20400 . -4) (undo-tree-id20401 . -4) (undo-tree-id20402 . -4) (undo-tree-id20403 . -4) (undo-tree-id20404 . -4) (undo-tree-id20405 . -4) (undo-tree-id20406 . -4) 1680) nil (26026 38004 776271 0) 0 nil])
([nil nil ((1804 . 1820)) nil (26026 38004 775893 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1804) (undo-tree-id19198 . -15) (undo-tree-id19199 . -16) (undo-tree-id19200 . -16) (undo-tree-id19201 . -16) (undo-tree-id19202 . -16) (undo-tree-id19203 . -16) (undo-tree-id19204 . -16) (undo-tree-id19205 . -16) (undo-tree-id19206 . -16) (undo-tree-id19207 . -16) (undo-tree-id19208 . -16) (undo-tree-id19209 . -16) (undo-tree-id19210 . -16) (undo-tree-id19211 . -16) (undo-tree-id19212 . -16) (undo-tree-id19213 . -16) (undo-tree-id19214 . -16) (undo-tree-id19215 . -16) (undo-tree-id19216 . -16) (undo-tree-id19217 . -16) (undo-tree-id19218 . -16) (undo-tree-id19219 . -16) (undo-tree-id19220 . -16) (undo-tree-id19221 . -16) (undo-tree-id19222 . -16) (undo-tree-id19223 . -16) (undo-tree-id19224 . -16) (undo-tree-id19225 . -16) (undo-tree-id19226 . -16) (undo-tree-id19227 . -16) (undo-tree-id19228 . -16) (undo-tree-id19229 . -16) (undo-tree-id19230 . -16) (undo-tree-id19231 . -16) (undo-tree-id19232 . -16) (undo-tree-id19233 . -16) (undo-tree-id19234 . -16) (undo-tree-id19235 . -16) (undo-tree-id19236 . -16) (undo-tree-id19237 . -16) (undo-tree-id19238 . -16) (undo-tree-id19239 . -16) (undo-tree-id19240 . -16) (undo-tree-id19241 . -16) (undo-tree-id19242 . -16) (undo-tree-id19243 . -16) (undo-tree-id19244 . -16) (undo-tree-id19245 . -16) (undo-tree-id19246 . -16) (undo-tree-id19247 . -16) (undo-tree-id19248 . -16) (undo-tree-id19249 . -16) (undo-tree-id19250 . -16) (undo-tree-id19251 . -16) (undo-tree-id19252 . -16) (undo-tree-id19253 . -16) (undo-tree-id19254 . -16) (undo-tree-id19255 . -16) (undo-tree-id19256 . -16) (undo-tree-id19257 . -16) (undo-tree-id19258 . -16) (undo-tree-id19259 . -16) (undo-tree-id19260 . -16) (undo-tree-id19261 . -16) (undo-tree-id19262 . -16) (undo-tree-id19263 . -16) (undo-tree-id19264 . -16) (undo-tree-id19265 . -16) (undo-tree-id19266 . -16) (undo-tree-id19267 . -16) (undo-tree-id19268 . -16) (undo-tree-id19269 . -16) (undo-tree-id19270 . -16) (undo-tree-id19271 . -16) (undo-tree-id19272 . -16) (undo-tree-id19273 . -16) (undo-tree-id19274 . -16) (undo-tree-id19275 . -16) (undo-tree-id19276 . -16) (undo-tree-id19277 . -16) (undo-tree-id19278 . -16) (undo-tree-id19279 . -16) (undo-tree-id19280 . -16) (undo-tree-id19281 . -16) (undo-tree-id19282 . -16) (undo-tree-id19283 . -16) (undo-tree-id19284 . -16) (undo-tree-id19285 . -16) (undo-tree-id19286 . -16) (undo-tree-id19287 . -16) (undo-tree-id19288 . -16) (undo-tree-id19289 . -16) (undo-tree-id19290 . -16) (undo-tree-id19291 . -16) (undo-tree-id19292 . -16) (undo-tree-id19293 . -16) (undo-tree-id19294 . -16) (undo-tree-id19295 . -16) (undo-tree-id19296 . -16) (undo-tree-id19297 . -16) (undo-tree-id19298 . -16) (undo-tree-id19299 . -16) (undo-tree-id19300 . -16) (undo-tree-id19301 . -16) (undo-tree-id19302 . -16) (undo-tree-id19303 . -16) (undo-tree-id19304 . -16) (undo-tree-id19305 . -16) (undo-tree-id19306 . -16) (undo-tree-id19307 . -16) (undo-tree-id19308 . -16) (undo-tree-id19309 . -16) (undo-tree-id19310 . -16) (undo-tree-id19311 . -16) (undo-tree-id19312 . -16) (undo-tree-id19313 . -16) (undo-tree-id19314 . -16) (undo-tree-id19315 . -16) (undo-tree-id19316 . -16) (undo-tree-id19317 . -16) (undo-tree-id19318 . -16) (undo-tree-id19319 . -15) (undo-tree-id19320 . -15) (undo-tree-id19321 . -15) (undo-tree-id19322 . -15) (undo-tree-id19323 . -15) (undo-tree-id19324 . -15) (undo-tree-id19325 . -15) (undo-tree-id19326 . -15) (undo-tree-id19327 . -15) (undo-tree-id19328 . -15) (undo-tree-id19329 . -15) (undo-tree-id19330 . -15) (undo-tree-id19331 . -15) (undo-tree-id19332 . -15) (undo-tree-id19333 . -15) (undo-tree-id19334 . -15) (undo-tree-id19335 . -15) (undo-tree-id19336 . -15) (undo-tree-id19337 . -15) (undo-tree-id19338 . -15) (undo-tree-id19339 . -15) (undo-tree-id19340 . -15) (undo-tree-id19341 . -15) (undo-tree-id19342 . -15) (undo-tree-id19343 . -15) (undo-tree-id19344 . -15) (undo-tree-id19345 . -15) (undo-tree-id19346 . -15) (undo-tree-id19347 . -15) (undo-tree-id19348 . -15) (undo-tree-id19349 . -15) (undo-tree-id19350 . -15) (undo-tree-id19351 . -15) (undo-tree-id19352 . -15) 1819) nil (26026 38004 775889 0) 0 nil])
([nil nil ((1820 . 1839) (#("c" 0 1 (fontified t)) . -1820) (undo-tree-id22535 . -1) (undo-tree-id22536 . -1) 1821 (1820 . 1821) (1804 . 1820) (t 26026 38004 794169 357000)) nil (26026 38539 132650 0) 0 nil])
([nil nil ((1837 . 1838) (#("sm" 0 1 (fontified t) 1 2 (fontified t)) . 1837) (undo-tree-id22533 . -1) (undo-tree-id22534 . -2)) nil (26026 38539 132649 0) 0 nil])
([nil nil ((1878 . 1885) (#("null" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 1878) (undo-tree-id22532 . -3)) nil (26026 38539 132648 0) 0 nil])
([nil nil ((1673 . 1680)) nil (26026 38539 132647 0) 0 nil])
([nil nil ((1883 . 1885) (1866 . 1883) (1865 . 1866) (1864 . 1865) (#("else" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 1864) (undo-tree-id22530 . -4) (undo-tree-id22531 . -3) (1860 . 1864) 1864 (1859 . 1864)) nil (26026 38539 132646 0) 0 nil])
([nil nil ((#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1864) (1860 . 1864) 1880 (1867 . 1879) (#("                " 0 16 (fontified nil)) . 1867) (undo-tree-id22524 . -16) (undo-tree-id22525 . -16) (undo-tree-id22526 . -16) (undo-tree-id22527 . -16) (1883 . 1884) (#("fi" 0 2 (fontified t)) . 1883) (undo-tree-id22528 . -1) (undo-tree-id22529 . -1)) nil (26026 38539 132644 0) 0 nil])
([nil nil ((1933 . 1934) (1931 . 1933) (1927 . 1931) (#("next() : E" 0 10 (fontified nil)) . -1927) (undo-tree-id22517 . -10) (1927 . 1937) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1927) (undo-tree-id22518 . -2) (undo-tree-id22519 . -2) 1929 (1927 . 1929) (1926 . 1927) (1924 . 1926) (1916 . 1924) (#("ite" 0 3 (fontified nil)) . 1916) (1916 . 1919) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -1916) (undo-tree-id22520 . -24) (1916 . 1940) (#("iterat" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -1916) (undo-tree-id22521 . -6) (undo-tree-id22522 . -6) 1922 (1914 . 1922) (#("-" 0 1 (fontified t)) . -1914) (undo-tree-id22523 . -1) 1915 (1906 . 1915) (1889 . 1906) (1888 . 1889) (1883 . 1888) (1866 . 1883) 1858) nil (26026 38539 132641 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1596) (undo-tree-id22516 . -8) 1604 (1595 . 1604) 1594) nil (26026 38539 132636 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1780) (undo-tree-id22515 . -12) 1792 (1779 . 1792) 1741) nil (26026 38539 132635 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1848) (undo-tree-id22514 . -16) 1864 (1847 . 1864) 1813) nil (26026 38539 132634 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1596) (undo-tree-id22513 . -1)) nil (26026 38539 132633 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 890)) nil (26026 38539 132632 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 339)) nil (26026 38539 132632 0) 0 nil])
([nil nil ((1197 . 1198) (1196 . 1197) (1193 . 1196) (1191 . 1193) (1190 . 1191) (#("d" 0 1 (fontified t)) . -1190) (undo-tree-id22509 . -1) (undo-tree-id22510 . -1) 1191 (1190 . 1191) (#("+" 0 1 (fontified t)) . -1190) (undo-tree-id22511 . -1) (undo-tree-id22512 . -1) 1191 (1187 . 1191) (1174 . 1187) (1168 . 1174) (1151 . 1168) 1110) nil (26026 38539 132631 0) 0 nil])
([nil nil ((#("                Node<E> previous = get(idx--);
" 0 1 (c-is-sws t fontified t) 1 16 (fontified t) 16 17 (face font-lock-type-face fontified t) 17 18 (face font-lock-type-face fontified t) 18 19 (face font-lock-type-face fontified t) 19 20 (face font-lock-type-face fontified t) 20 21 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 21 22 (face font-lock-type-face fontified t) 22 23 (face (rainbow-delimiters-depth-4-face) category c->-as-paren-syntax fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (face (rainbow-delimiters-depth-4-face) fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (face (rainbow-delimiters-depth-4-face) fontified t) 45 46 (fontified t) 46 47 (fontified t)) . 1152) (undo-tree-id22114 . -46) (undo-tree-id22115 . 23) (undo-tree-id22116 . 1) (undo-tree-id22117 . -24) (undo-tree-id22118 . -24) (undo-tree-id22119 . -24) (undo-tree-id22120 . -35) (undo-tree-id22121 . -24) (undo-tree-id22122 . -24) (undo-tree-id22123 . -24) (undo-tree-id22124 . -24) (undo-tree-id22125 . -24) (undo-tree-id22126 . -24) (undo-tree-id22127 . -24) (undo-tree-id22128 . -24) (undo-tree-id22129 . -24) (undo-tree-id22130 . -24) (undo-tree-id22131 . -24) (undo-tree-id22132 . -24) (undo-tree-id22133 . -24) (undo-tree-id22134 . -24) (undo-tree-id22135 . -24) (undo-tree-id22136 . -24) (undo-tree-id22137 . -24) (undo-tree-id22138 . -24) (undo-tree-id22139 . -24) (undo-tree-id22140 . -24) (undo-tree-id22141 . -24) (undo-tree-id22142 . -24) (undo-tree-id22143 . -24) (undo-tree-id22144 . -24) (undo-tree-id22145 . -24) (undo-tree-id22146 . -24) (undo-tree-id22147 . -24) (undo-tree-id22148 . -24) (undo-tree-id22149 . -24) (undo-tree-id22150 . -24) (undo-tree-id22151 . -24) (undo-tree-id22152 . -24) (undo-tree-id22153 . -24) (undo-tree-id22154 . -24) (undo-tree-id22155 . -24) (undo-tree-id22156 . -24) (undo-tree-id22157 . -24) (undo-tree-id22158 . -24) (undo-tree-id22159 . -24) (undo-tree-id22160 . -24) (undo-tree-id22161 . -24) (undo-tree-id22162 . -24) (undo-tree-id22163 . -24) (undo-tree-id22164 . -24) (undo-tree-id22165 . -24) (undo-tree-id22166 . -24) (undo-tree-id22167 . -24) (undo-tree-id22168 . -24) (undo-tree-id22169 . -24) (undo-tree-id22170 . -24) (undo-tree-id22171 . -24) (undo-tree-id22172 . -24) (undo-tree-id22173 . -24) (undo-tree-id22174 . -24) (undo-tree-id22175 . -24) (undo-tree-id22176 . -24) (undo-tree-id22177 . -24) (undo-tree-id22178 . -24) (undo-tree-id22179 . -24) (undo-tree-id22180 . -24) (undo-tree-id22181 . -24) (undo-tree-id22182 . -24) (undo-tree-id22183 . -24) (undo-tree-id22184 . -24) (undo-tree-id22185 . -24) (undo-tree-id22186 . -24) (undo-tree-id22187 . -24) (undo-tree-id22188 . -24) (undo-tree-id22189 . -24) (undo-tree-id22190 . -24) (undo-tree-id22191 . -24) (undo-tree-id22192 . -24) (undo-tree-id22193 . -24) (undo-tree-id22194 . -24) (undo-tree-id22195 . -24) (undo-tree-id22196 . -24) (undo-tree-id22197 . -24) (undo-tree-id22198 . -24) (undo-tree-id22199 . -24) (undo-tree-id22200 . -24) (undo-tree-id22201 . -24) (undo-tree-id22202 . -24) (undo-tree-id22203 . -24) (undo-tree-id22204 . -24) (undo-tree-id22205 . -24) (undo-tree-id22206 . -24) (undo-tree-id22207 . -24) (undo-tree-id22208 . -24) (undo-tree-id22209 . -24) (undo-tree-id22210 . -24) (undo-tree-id22211 . -24) (undo-tree-id22212 . -24) (undo-tree-id22213 . -24) (undo-tree-id22214 . -24) (undo-tree-id22215 . -24) (undo-tree-id22216 . -24) (undo-tree-id22217 . -24) (undo-tree-id22218 . -24) (undo-tree-id22219 . -24) (undo-tree-id22220 . -24) (undo-tree-id22221 . -24) (undo-tree-id22222 . -24) (undo-tree-id22223 . -24) (undo-tree-id22224 . -24) (undo-tree-id22225 . -24) (undo-tree-id22226 . -24) (undo-tree-id22227 . -24) (undo-tree-id22228 . -24) (undo-tree-id22229 . -24) (undo-tree-id22230 . -24) (undo-tree-id22231 . -24) (undo-tree-id22232 . -24) (undo-tree-id22233 . -24) (undo-tree-id22234 . -24) (undo-tree-id22235 . -24) (undo-tree-id22236 . -24) (undo-tree-id22237 . -24) (undo-tree-id22238 . -24) (undo-tree-id22239 . -24) (undo-tree-id22240 . -24) (undo-tree-id22241 . -24) (undo-tree-id22242 . -24) (undo-tree-id22243 . -24) (undo-tree-id22244 . -24) (undo-tree-id22245 . -24) (undo-tree-id22246 . -24) (undo-tree-id22247 . -24) (undo-tree-id22248 . -24) (undo-tree-id22249 . -24) (undo-tree-id22250 . -24) (undo-tree-id22251 . -24) (undo-tree-id22252 . -24) (undo-tree-id22253 . -24) (undo-tree-id22254 . -24) (undo-tree-id22255 . -24) (undo-tree-id22256 . -24) (undo-tree-id22257 . -24) (undo-tree-id22258 . -24) (undo-tree-id22259 . -24) (undo-tree-id22260 . -24) (undo-tree-id22261 . -24) (undo-tree-id22262 . -24) (undo-tree-id22263 . -24) (undo-tree-id22264 . -24) (undo-tree-id22265 . -24) (undo-tree-id22266 . -24) (undo-tree-id22267 . -24) (undo-tree-id22268 . -24) (undo-tree-id22269 . -24) (undo-tree-id22270 . -24) (undo-tree-id22271 . -24) (undo-tree-id22272 . -24) (undo-tree-id22273 . -24) (undo-tree-id22274 . -24) (undo-tree-id22275 . -24) (undo-tree-id22276 . -24) (undo-tree-id22277 . -24) (undo-tree-id22278 . -24) (undo-tree-id22279 . -24) (undo-tree-id22280 . -24) (undo-tree-id22281 . -24) (undo-tree-id22282 . -24) (undo-tree-id22283 . -24) (undo-tree-id22284 . -24) (undo-tree-id22285 . -24) (undo-tree-id22286 . -24) (undo-tree-id22287 . -24) (undo-tree-id22288 . -23) (undo-tree-id22289 . -23) (undo-tree-id22290 . -23) (undo-tree-id22291 . -23) (undo-tree-id22292 . -23) (undo-tree-id22293 . -23) (undo-tree-id22294 . -23) (undo-tree-id22295 . -23) (undo-tree-id22296 . -23) (undo-tree-id22297 . -23) (undo-tree-id22298 . -23) (undo-tree-id22299 . -23) (undo-tree-id22300 . -23) (undo-tree-id22301 . -23) (undo-tree-id22302 . -23) (undo-tree-id22303 . -23) (undo-tree-id22304 . -23) (undo-tree-id22305 . -23) (undo-tree-id22306 . -23) (undo-tree-id22307 . -23) (undo-tree-id22308 . -23) (undo-tree-id22309 . -23) (undo-tree-id22310 . -23) (undo-tree-id22311 . -23) (undo-tree-id22312 . -23) (undo-tree-id22313 . -23) (undo-tree-id22314 . -23) (undo-tree-id22315 . -23) (undo-tree-id22316 . -23) (undo-tree-id22317 . -23) (undo-tree-id22318 . -23) (undo-tree-id22319 . -23) (undo-tree-id22320 . -23) (undo-tree-id22321 . -23) (undo-tree-id22322 . -23) (undo-tree-id22323 . -23) (undo-tree-id22324 . -23) (undo-tree-id22325 . -23) (undo-tree-id22326 . -23) (undo-tree-id22327 . -23) (undo-tree-id22328 . -23) (undo-tree-id22329 . -23) (undo-tree-id22330 . -23) (undo-tree-id22331 . -23) (undo-tree-id22332 . -23) (undo-tree-id22333 . -23) (undo-tree-id22334 . -23) (undo-tree-id22335 . -23) (undo-tree-id22336 . -23) (undo-tree-id22337 . -23) (undo-tree-id22338 . -23) (undo-tree-id22339 . -23) (undo-tree-id22340 . -23) (undo-tree-id22341 . -23) (undo-tree-id22342 . -24) (undo-tree-id22343 . -24) (undo-tree-id22344 . -24) (undo-tree-id22345 . -24) (undo-tree-id22346 . -24) (undo-tree-id22347 . -24) (undo-tree-id22348 . -24) (undo-tree-id22349 . -24) (undo-tree-id22350 . -24) (undo-tree-id22351 . -24) (undo-tree-id22352 . -24) (undo-tree-id22353 . -24) (undo-tree-id22354 . -24) (undo-tree-id22355 . -24) (undo-tree-id22356 . -24) (undo-tree-id22357 . -24) (undo-tree-id22358 . -24) (undo-tree-id22359 . -24) (undo-tree-id22360 . -24) (undo-tree-id22361 . -33) (undo-tree-id22362 . -33) (undo-tree-id22363 . -33) (undo-tree-id22364 . -33) (undo-tree-id22365 . -33) (undo-tree-id22366 . -33) (undo-tree-id22367 . -33) (undo-tree-id22368 . -33) (undo-tree-id22369 . -33) (undo-tree-id22370 . -33) (undo-tree-id22371 . -33) (undo-tree-id22372 . -33) (undo-tree-id22373 . -33) (undo-tree-id22374 . -33) (undo-tree-id22375 . -33) (undo-tree-id22376 . -33) (undo-tree-id22377 . -33) (undo-tree-id22378 . -33) (undo-tree-id22379 . -33) (undo-tree-id22380 . -35) (undo-tree-id22381 . -35) (undo-tree-id22382 . -35) (undo-tree-id22383 . -35) (undo-tree-id22384 . -35) (undo-tree-id22385 . -35) (undo-tree-id22386 . -35) (undo-tree-id22387 . -35) (undo-tree-id22388 . -35) (undo-tree-id22389 . -35) (undo-tree-id22390 . -35) (undo-tree-id22391 . -35) (undo-tree-id22392 . -35) (undo-tree-id22393 . -35) (undo-tree-id22394 . -35) (undo-tree-id22395 . -35) (undo-tree-id22396 . -35) (undo-tree-id22397 . -35) (undo-tree-id22398 . -35) (undo-tree-id22399 . -38) (undo-tree-id22400 . -38) (undo-tree-id22401 . -38) (undo-tree-id22402 . -38) (undo-tree-id22403 . -38) (undo-tree-id22404 . -38) (undo-tree-id22405 . -38) (undo-tree-id22406 . -38) (undo-tree-id22407 . -38) (undo-tree-id22408 . -38) (undo-tree-id22409 . -38) (undo-tree-id22410 . -38) (undo-tree-id22411 . -38) (undo-tree-id22412 . -38) (undo-tree-id22413 . -38) (undo-tree-id22414 . -38) (undo-tree-id22415 . -38) (undo-tree-id22416 . -38) (undo-tree-id22417 . -38) (undo-tree-id22418 . -38) (undo-tree-id22419 . -38) (undo-tree-id22420 . -38) (undo-tree-id22421 . -38) (undo-tree-id22422 . -38) (undo-tree-id22423 . -38) (undo-tree-id22424 . -38) (undo-tree-id22425 . -38) (undo-tree-id22426 . -35) (undo-tree-id22427 . -35) (undo-tree-id22428 . -35) (undo-tree-id22429 . -35) (undo-tree-id22430 . -35) (undo-tree-id22431 . -35) (undo-tree-id22432 . -35) (undo-tree-id22433 . -35) (undo-tree-id22434 . -35) (undo-tree-id22435 . -35) (undo-tree-id22436 . -35) (undo-tree-id22437 . -35) (undo-tree-id22438 . -35) (undo-tree-id22439 . -35) (undo-tree-id22440 . -35) (undo-tree-id22441 . -35) (undo-tree-id22442 . -35) (undo-tree-id22443 . -35) (undo-tree-id22444 . -35) (undo-tree-id22445 . -35) (undo-tree-id22446 . -35) (undo-tree-id22447 . -35) (undo-tree-id22448 . -35) (undo-tree-id22449 . -35) (undo-tree-id22450 . -35) (undo-tree-id22451 . -35) (undo-tree-id22452 . -35) (undo-tree-id22453 . -35) (undo-tree-id22454 . -35) (undo-tree-id22455 . -35) (undo-tree-id22456 . -35) (undo-tree-id22457 . -35) (undo-tree-id22458 . -35) (undo-tree-id22459 . -35) (undo-tree-id22460 . -35) (undo-tree-id22461 . -35) (undo-tree-id22462 . -35) (undo-tree-id22463 . -35) (undo-tree-id22464 . -35) (undo-tree-id22465 . -35) (undo-tree-id22466 . -35) (undo-tree-id22467 . -35) (undo-tree-id22468 . -35) (undo-tree-id22469 . -35) (undo-tree-id22470 . -35) (undo-tree-id22471 . -35) (undo-tree-id22472 . -35) (undo-tree-id22473 . -35) (undo-tree-id22474 . -35) (undo-tree-id22475 . -35) (undo-tree-id22476 . -35) (undo-tree-id22477 . -35) (undo-tree-id22478 . -35) (undo-tree-id22479 . -35) (undo-tree-id22480 . -35) (undo-tree-id22481 . -35) (undo-tree-id22482 . -35) (undo-tree-id22483 . -35) (undo-tree-id22484 . -35) (undo-tree-id22485 . -35) (undo-tree-id22486 . -35) (undo-tree-id22487 . -35) (undo-tree-id22488 . -35) (undo-tree-id22489 . -35) (undo-tree-id22490 . -35) (undo-tree-id22491 . -35) (undo-tree-id22492 . -35) (undo-tree-id22493 . -35) (undo-tree-id22494 . -35) (undo-tree-id22495 . -35) (undo-tree-id22496 . -35) (undo-tree-id22497 . -35) (undo-tree-id22498 . -35) (undo-tree-id22499 . -35) (undo-tree-id22500 . -35) (undo-tree-id22501 . -35) (undo-tree-id22502 . -35) (undo-tree-id22503 . -35) (undo-tree-id22504 . -35) (undo-tree-id22505 . -35) (undo-tree-id22506 . -35) (undo-tree-id22507 . -35) (undo-tree-id22508 . -47) 1187) nil (26026 38539 132623 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 957 . 958) (#("
" 0 1 (fontified nil)) . -988) (941 . 989) 904) nil (26026 38539 132487 0) 0 nil])
([nil nil ((942 . 950) (#("                " 0 1 (fontified t) 1 15 (fontified t) 15 16 (rear-nonsticky t fontified t)) . -942) (undo-tree-id22045 . -16) (undo-tree-id22046 . -16) (undo-tree-id22047 . -16) (undo-tree-id22048 . -16) (undo-tree-id22049 . -16) (undo-tree-id22050 . -16) (undo-tree-id22051 . -16) (undo-tree-id22052 . -16) (undo-tree-id22053 . -16) (undo-tree-id22054 . -16) (undo-tree-id22055 . -16) (undo-tree-id22056 . -16) (undo-tree-id22057 . -16) (undo-tree-id22058 . -16) (undo-tree-id22059 . -16) (undo-tree-id22060 . -16) (undo-tree-id22061 . -16) (undo-tree-id22062 . -16) (undo-tree-id22063 . -16) (undo-tree-id22064 . -16) (undo-tree-id22065 . -16) (undo-tree-id22066 . -16) (undo-tree-id22067 . -16) (undo-tree-id22068 . -16) (undo-tree-id22069 . -16) (undo-tree-id22070 . -16) (undo-tree-id22071 . -16) (undo-tree-id22072 . -16) (undo-tree-id22073 . -16) (undo-tree-id22074 . -16) (undo-tree-id22075 . -16) (undo-tree-id22076 . -16) (undo-tree-id22077 . -16) (undo-tree-id22078 . -16) (undo-tree-id22079 . -16) (undo-tree-id22080 . -16) (undo-tree-id22081 . -16) (undo-tree-id22082 . -16) (undo-tree-id22083 . -16) (undo-tree-id22084 . -16) (undo-tree-id22085 . -16) (undo-tree-id22086 . -16) (undo-tree-id22087 . -16) (undo-tree-id22088 . -16) (undo-tree-id22089 . -16) (undo-tree-id22090 . -16) (undo-tree-id22091 . -16) (undo-tree-id22092 . -16) (undo-tree-id22093 . -16) (undo-tree-id22094 . -16) (undo-tree-id22095 . -16) (undo-tree-id22096 . -16) (undo-tree-id22097 . -16) (undo-tree-id22098 . -16) (undo-tree-id22099 . -16) (undo-tree-id22100 . -16) (undo-tree-id22101 . -16) (undo-tree-id22102 . -16) (undo-tree-id22103 . -16) (undo-tree-id22104 . -16) (undo-tree-id22105 . -16) (undo-tree-id22106 . -16) (undo-tree-id22107 . -16) (undo-tree-id22108 . -16) (undo-tree-id22109 . -16) (undo-tree-id22110 . -16) (undo-tree-id22111 . -16) (undo-tree-id22112 . -16) (undo-tree-id22113 . -16) 958) nil (26026 38539 132486 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 988 . 989) (#("
" 0 1 (fontified nil)) . -1019) (980 . 1020) 955) nil (26026 38539 132463 0) 0 nil])
([nil nil ((#(">" 0 1 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t)) . 995) (undo-tree-id22043 . -1) (undo-tree-id22044 . -1)) nil (26026 38539 132462 0) 0 nil])
([nil nil ((995 . 996)) nil (26026 38539 132461 0) 0 nil])
([nil nil ((997 . 1001) (#("previous" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t) 7 8 (face font-lock-variable-name-face fontified t)) . 997) (undo-tree-id22040 . -7) (undo-tree-id22041 . -8) (undo-tree-id22042 . -8)) nil (26026 38539 132461 0) 0 nil])
([nil nil ((#("get(idx--);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-3-face) fontified t) 10 11 (fontified t)) . 969) (undo-tree-id22037 . -10) (undo-tree-id22038 . -11) (undo-tree-id22039 . -11)) nil (26026 38539 132459 0) 0 nil])
([nil nil ((#("get(idx--);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-3-face) fontified t) 10 11 (fontified t)) . 993) (undo-tree-id22002 . -10) (undo-tree-id22003 . -3) (undo-tree-id22004 . -3) (undo-tree-id22005 . -3) (undo-tree-id22006 . -3) (undo-tree-id22007 . -3) (undo-tree-id22008 . -3) (undo-tree-id22009 . -3) (undo-tree-id22010 . -3) (undo-tree-id22011 . -3) (undo-tree-id22012 . -3) (undo-tree-id22013 . -3) (undo-tree-id22014 . -3) (undo-tree-id22015 . -3) (undo-tree-id22016 . -3) (undo-tree-id22017 . -3) (undo-tree-id22018 . -3) (undo-tree-id22019 . -3) (undo-tree-id22020 . -3) (undo-tree-id22021 . -3) (undo-tree-id22022 . -3) (undo-tree-id22023 . -3) (undo-tree-id22024 . -3) (undo-tree-id22025 . -3) (undo-tree-id22026 . -3) (undo-tree-id22027 . -3) (undo-tree-id22028 . -3) (undo-tree-id22029 . -3) (undo-tree-id22030 . -3) (undo-tree-id22031 . -3) (undo-tree-id22032 . -3) (undo-tree-id22033 . -3) (undo-tree-id22034 . -3) (undo-tree-id22035 . -11) (undo-tree-id22036 . -11)) nil (26026 38539 132457 0) 0 nil])
([nil nil ((993 . 999)) nil (26026 38539 132445 0) 0 nil])
([nil nil ((970 . 982) (#("        " 0 7 (fontified nil) 7 8 (fontified nil rear-nonsticky t)) . 970) (undo-tree-id21921 . -8) (undo-tree-id21922 . -8) (undo-tree-id21923 . -8) (undo-tree-id21924 . -8) (undo-tree-id21925 . -8) (undo-tree-id21926 . -8) (undo-tree-id21927 . -8) (undo-tree-id21928 . -8) (undo-tree-id21929 . -8) (undo-tree-id21930 . -8) (undo-tree-id21931 . -8) (undo-tree-id21932 . -8) (undo-tree-id21933 . -8) (undo-tree-id21934 . -8) (undo-tree-id21935 . -8) (undo-tree-id21936 . -8) (undo-tree-id21937 . -8) (undo-tree-id21938 . -8) (undo-tree-id21939 . -8) (undo-tree-id21940 . -8) (undo-tree-id21941 . -8) (undo-tree-id21942 . -8) (undo-tree-id21943 . -8) (undo-tree-id21944 . -8) (undo-tree-id21945 . -8) (undo-tree-id21946 . -8) (undo-tree-id21947 . -8) (undo-tree-id21948 . -8) (undo-tree-id21949 . -8) (undo-tree-id21950 . -8) (undo-tree-id21951 . -8) (997 . 998) (#("sm" 0 1 (fontified t) 1 2 (fontified t)) . 997) (undo-tree-id21952 . -1) (undo-tree-id21953 . -2) (undo-tree-id21954 . -1) (undo-tree-id21955 . -1) (undo-tree-id21956 . -1) (undo-tree-id21957 . -1) (undo-tree-id21958 . -1) (undo-tree-id21959 . -1) (undo-tree-id21960 . -2) (undo-tree-id21961 . -2) (undo-tree-id21962 . -2) (undo-tree-id21963 . -2) (undo-tree-id21964 . -2) (undo-tree-id21965 . -2) (undo-tree-id21966 . -2) (undo-tree-id21967 . -2) (undo-tree-id21968 . -2) (undo-tree-id21969 . -2) (undo-tree-id21970 . -2) (undo-tree-id21971 . -2) (undo-tree-id21972 . -2) (undo-tree-id21973 . -2) (undo-tree-id21974 . -2) (undo-tree-id21975 . -2) (undo-tree-id21976 . -2) (undo-tree-id21977 . -2) (undo-tree-id21978 . -2) (undo-tree-id21979 . -2) (undo-tree-id21980 . -1) (undo-tree-id21981 . -1) (undo-tree-id21982 . -1) (undo-tree-id21983 . -1) (undo-tree-id21984 . -1) (undo-tree-id21985 . -1) (undo-tree-id21986 . -1) (undo-tree-id21987 . -1) (undo-tree-id21988 . -1) (undo-tree-id21989 . -1) (undo-tree-id21990 . -1) (undo-tree-id21991 . -1) (undo-tree-id21992 . -1) (undo-tree-id21993 . -1) (undo-tree-id21994 . -1) (undo-tree-id21995 . -1) (undo-tree-id21996 . -1) (undo-tree-id21997 . -1) (undo-tree-id21998 . -1) (undo-tree-id21999 . -1) (undo-tree-id22000 . -2) (undo-tree-id22001 . -2)) nil (26026 38539 132444 0) 0 nil])
([nil nil ((973 . 974) (969 . 973)) nil (26026 38539 132416 0) 0 nil])
([nil nil ((975 . 983) (#("            " 0 12 (fontified t)) . 975) 1006) nil (26026 38539 132415 0) 0 nil])
([nil nil ((1251 . 1252) (1250 . 1251) (1245 . 1250) (#("index" 0 5 (fontified t)) . -1245) (undo-tree-id21482 . -5) (undo-tree-id21483 . -5) (undo-tree-id21484 . -5) (undo-tree-id21485 . -5) (undo-tree-id21486 . -5) (undo-tree-id21487 . -5) (undo-tree-id21488 . -5) (undo-tree-id21489 . -5) (undo-tree-id21490 . -5) (undo-tree-id21491 . -5) (undo-tree-id21492 . -5) (undo-tree-id21493 . -5) (undo-tree-id21494 . -5) (undo-tree-id21495 . -5) (undo-tree-id21496 . -5) (undo-tree-id21497 . -5) (undo-tree-id21498 . -5) (undo-tree-id21499 . -5) (undo-tree-id21500 . -5) (undo-tree-id21501 . -5) (undo-tree-id21502 . -5) (undo-tree-id21503 . -5) (undo-tree-id21504 . -5) (undo-tree-id21505 . -5) (undo-tree-id21506 . -5) (undo-tree-id21507 . -5) (undo-tree-id21508 . -5) (undo-tree-id21509 . -5) (undo-tree-id21510 . -5) (undo-tree-id21511 . -5) (undo-tree-id21512 . -5) (undo-tree-id21513 . -5) (undo-tree-id21514 . -5) (undo-tree-id21515 . -5) (undo-tree-id21516 . -5) (undo-tree-id21517 . -5) (undo-tree-id21518 . -5) (undo-tree-id21519 . -5) (undo-tree-id21520 . -5) (undo-tree-id21521 . -5) (undo-tree-id21522 . -5) (undo-tree-id21523 . -5) (undo-tree-id21524 . -5) (undo-tree-id21525 . -5) (undo-tree-id21526 . -5) (undo-tree-id21527 . -5) (undo-tree-id21528 . -5) (undo-tree-id21529 . -5) (undo-tree-id21530 . -5) (undo-tree-id21531 . -5) (undo-tree-id21532 . -5) (undo-tree-id21533 . -5) (undo-tree-id21534 . -5) (undo-tree-id21535 . -5) (undo-tree-id21536 . -5) (undo-tree-id21537 . -5) (undo-tree-id21538 . -5) (undo-tree-id21539 . -5) (undo-tree-id21540 . -5) (undo-tree-id21541 . -5) (undo-tree-id21542 . -5) (undo-tree-id21543 . -5) (undo-tree-id21544 . -5) (undo-tree-id21545 . -5) (undo-tree-id21546 . -5) (undo-tree-id21547 . -5) (undo-tree-id21548 . -5) (undo-tree-id21549 . -5) (undo-tree-id21550 . -5) (undo-tree-id21551 . -5) (undo-tree-id21552 . -5) (undo-tree-id21553 . -5) (undo-tree-id21554 . -5) (undo-tree-id21555 . -5) (undo-tree-id21556 . -5) (undo-tree-id21557 . -5) (undo-tree-id21558 . -5) (undo-tree-id21559 . -5) (undo-tree-id21560 . -5) (undo-tree-id21561 . -5) (undo-tree-id21562 . -5) (undo-tree-id21563 . -5) (undo-tree-id21564 . -5) (undo-tree-id21565 . -5) (undo-tree-id21566 . -5) (undo-tree-id21567 . -5) (undo-tree-id21568 . -5) (undo-tree-id21569 . -5) (undo-tree-id21570 . -5) (undo-tree-id21571 . -5) (undo-tree-id21572 . -5) (undo-tree-id21573 . -5) (undo-tree-id21574 . -5) (undo-tree-id21575 . -5) (undo-tree-id21576 . -5) (undo-tree-id21577 . -5) (undo-tree-id21578 . -5) (undo-tree-id21579 . -5) (undo-tree-id21580 . -5) (undo-tree-id21581 . -5) (undo-tree-id21582 . -5) (undo-tree-id21583 . -5) (undo-tree-id21584 . -5) (undo-tree-id21585 . -5) (undo-tree-id21586 . -5) (undo-tree-id21587 . -5) (undo-tree-id21588 . -5) (undo-tree-id21589 . -5) (undo-tree-id21590 . -5) (undo-tree-id21591 . -5) (undo-tree-id21592 . -5) (undo-tree-id21593 . -5) (undo-tree-id21594 . -5) (undo-tree-id21595 . -5) (undo-tree-id21596 . -5) (undo-tree-id21597 . -5) (undo-tree-id21598 . -5) (undo-tree-id21599 . -5) (undo-tree-id21600 . -5) (undo-tree-id21601 . -5) (undo-tree-id21602 . -5) (undo-tree-id21603 . -5) (undo-tree-id21604 . -5) (undo-tree-id21605 . -5) (undo-tree-id21606 . -5) (undo-tree-id21607 . -5) (undo-tree-id21608 . -5) (undo-tree-id21609 . -5) (undo-tree-id21610 . -5) (undo-tree-id21611 . -5) (undo-tree-id21612 . -5) (undo-tree-id21613 . -5) (undo-tree-id21614 . -5) (undo-tree-id21615 . -5) (undo-tree-id21616 . -5) (undo-tree-id21617 . -5) (undo-tree-id21618 . -5) (undo-tree-id21619 . -5) (undo-tree-id21620 . -5) (undo-tree-id21621 . -5) (undo-tree-id21622 . -5) (undo-tree-id21623 . -5) (undo-tree-id21624 . -5) (undo-tree-id21625 . -5) (undo-tree-id21626 . -5) (undo-tree-id21627 . -5) (undo-tree-id21628 . -5) (undo-tree-id21629 . -5) (undo-tree-id21630 . -5) (undo-tree-id21631 . -5) (undo-tree-id21632 . -5) (undo-tree-id21633 . -5) (undo-tree-id21634 . -5) (undo-tree-id21635 . -5) (undo-tree-id21636 . -5) (undo-tree-id21637 . -5) (undo-tree-id21638 . -5) (undo-tree-id21639 . -5) (undo-tree-id21640 . -5) (undo-tree-id21641 . -5) (undo-tree-id21642 . -5) (undo-tree-id21643 . -5) (undo-tree-id21644 . -5) (undo-tree-id21645 . -5) (undo-tree-id21646 . -5) (undo-tree-id21647 . -5) (undo-tree-id21648 . -5) (undo-tree-id21649 . -5) (undo-tree-id21650 . -5) (undo-tree-id21651 . -5) (undo-tree-id21652 . -5) (undo-tree-id21653 . -5) (undo-tree-id21654 . -5) (undo-tree-id21655 . -5) (undo-tree-id21656 . -5) (undo-tree-id21657 . -5) (undo-tree-id21658 . -5) (undo-tree-id21659 . -5) (undo-tree-id21660 . -5) (undo-tree-id21661 . -5) (undo-tree-id21662 . -5) (undo-tree-id21663 . -5) (undo-tree-id21664 . -5) (undo-tree-id21665 . -5) (undo-tree-id21666 . -5) (undo-tree-id21667 . -5) (undo-tree-id21668 . -5) (undo-tree-id21669 . -5) (undo-tree-id21670 . -5) (undo-tree-id21671 . -5) (undo-tree-id21672 . -5) (undo-tree-id21673 . -5) (undo-tree-id21674 . -5) (undo-tree-id21675 . -5) 1250 (#("-" 0 1 (fontified t)) . -1250) (undo-tree-id21676 . -1) (undo-tree-id21677 . -1) (undo-tree-id21678 . -1) (undo-tree-id21679 . -1) (undo-tree-id21680 . -1) (undo-tree-id21681 . -1) (undo-tree-id21682 . -1) (undo-tree-id21683 . -1) (undo-tree-id21684 . -1) (undo-tree-id21685 . -1) (undo-tree-id21686 . -1) (undo-tree-id21687 . -1) (undo-tree-id21688 . -1) (undo-tree-id21689 . -1) (undo-tree-id21690 . -1) (undo-tree-id21691 . -1) (undo-tree-id21692 . -1) (undo-tree-id21693 . -1) (undo-tree-id21694 . -1) (undo-tree-id21695 . -1) (undo-tree-id21696 . -1) (undo-tree-id21697 . -1) (undo-tree-id21698 . -1) (undo-tree-id21699 . -1) (undo-tree-id21700 . -1) (undo-tree-id21701 . -1) (undo-tree-id21702 . -1) (undo-tree-id21703 . -1) (undo-tree-id21704 . -1) (undo-tree-id21705 . -1) (undo-tree-id21706 . -1) (undo-tree-id21707 . -1) (undo-tree-id21708 . -1) (undo-tree-id21709 . -1) (undo-tree-id21710 . -1) (undo-tree-id21711 . -1) (undo-tree-id21712 . -1) (undo-tree-id21713 . -1) (undo-tree-id21714 . -1) (undo-tree-id21715 . -1) (undo-tree-id21716 . -1) (undo-tree-id21717 . -1) (undo-tree-id21718 . -1) (undo-tree-id21719 . -1) (undo-tree-id21720 . -1) (undo-tree-id21721 . -1) (undo-tree-id21722 . -1) (undo-tree-id21723 . -1) (undo-tree-id21724 . -1) (undo-tree-id21725 . -1) (undo-tree-id21726 . -1) (undo-tree-id21727 . -1) (undo-tree-id21728 . -1) (undo-tree-id21729 . -1) (undo-tree-id21730 . -1) (undo-tree-id21731 . -1) (undo-tree-id21732 . -1) (undo-tree-id21733 . -1) (undo-tree-id21734 . -1) (undo-tree-id21735 . -1) (undo-tree-id21736 . -1) (undo-tree-id21737 . -1) (undo-tree-id21738 . -1) (undo-tree-id21739 . -1) (undo-tree-id21740 . -1) 1251 (#("-" 0 1 (fontified t)) . -1251) (undo-tree-id21741 . -1) (undo-tree-id21742 . -1) (undo-tree-id21743 . -1) (undo-tree-id21744 . -1) (undo-tree-id21745 . -1) (undo-tree-id21746 . -1) (undo-tree-id21747 . -1) (undo-tree-id21748 . -1) (undo-tree-id21749 . -1) (undo-tree-id21750 . -1) (undo-tree-id21751 . -1) (undo-tree-id21752 . -1) (undo-tree-id21753 . -1) (undo-tree-id21754 . -1) (undo-tree-id21755 . -1) (undo-tree-id21756 . -1) (undo-tree-id21757 . -1) (undo-tree-id21758 . -1) (undo-tree-id21759 . -1) (undo-tree-id21760 . -1) (undo-tree-id21761 . -1) (undo-tree-id21762 . -1) (undo-tree-id21763 . -1) (undo-tree-id21764 . -1) (undo-tree-id21765 . -1) (undo-tree-id21766 . -1) (undo-tree-id21767 . -1) 1252 (1250 . 1252) (1245 . 1250) (#("i" 0 1 (fontified nil)) . 1245) (1245 . 1246) (#("index : int" 0 11 (fontified nil)) . -1245) (undo-tree-id21768 . -11) (1245 . 1256) (#("inde" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1245) (undo-tree-id21769 . -4) (undo-tree-id21770 . -4) (undo-tree-id21771 . -1) (undo-tree-id21772 . -1) (undo-tree-id21773 . -1) (undo-tree-id21774 . -1) (undo-tree-id21775 . -1) (undo-tree-id21776 . -1) (undo-tree-id21777 . -1) (undo-tree-id21778 . -1) (undo-tree-id21779 . -1) (undo-tree-id21780 . -1) (undo-tree-id21781 . -1) (undo-tree-id21782 . -1) (undo-tree-id21783 . -1) (undo-tree-id21784 . -1) (undo-tree-id21785 . -1) (undo-tree-id21786 . -1) (undo-tree-id21787 . -1) (undo-tree-id21788 . -1) (undo-tree-id21789 . -1) (undo-tree-id21790 . -1) (undo-tree-id21791 . -1) (undo-tree-id21792 . -1) (undo-tree-id21793 . -1) (undo-tree-id21794 . -1) (undo-tree-id21795 . -1) (undo-tree-id21796 . -1) (undo-tree-id21797 . -1) (undo-tree-id21798 . -1) (undo-tree-id21799 . -1) (undo-tree-id21800 . -1) (undo-tree-id21801 . -1) (undo-tree-id21802 . -1) (undo-tree-id21803 . -1) (undo-tree-id21804 . -1) (undo-tree-id21805 . -1) (undo-tree-id21806 . -1) (undo-tree-id21807 . -1) (undo-tree-id21808 . -1) (undo-tree-id21809 . -1) (undo-tree-id21810 . -1) (undo-tree-id21811 . -1) (undo-tree-id21812 . -1) (undo-tree-id21813 . -1) (undo-tree-id21814 . -1) (undo-tree-id21815 . -1) (undo-tree-id21816 . -1) (undo-tree-id21817 . -1) (undo-tree-id21818 . -1) (undo-tree-id21819 . -1) (undo-tree-id21820 . -1) (undo-tree-id21821 . -1) (undo-tree-id21822 . -2) (undo-tree-id21823 . -2) (undo-tree-id21824 . -2) (undo-tree-id21825 . -2) (undo-tree-id21826 . -2) (undo-tree-id21827 . -2) (undo-tree-id21828 . -2) (undo-tree-id21829 . -2) (undo-tree-id21830 . -2) (undo-tree-id21831 . -2) (undo-tree-id21832 . -2) (undo-tree-id21833 . -2) (undo-tree-id21834 . -2) (undo-tree-id21835 . -2) (undo-tree-id21836 . -2) (undo-tree-id21837 . -2) (undo-tree-id21838 . -2) (undo-tree-id21839 . -2) (undo-tree-id21840 . -2) (undo-tree-id21841 . -2) (undo-tree-id21842 . -2) (undo-tree-id21843 . -2) (undo-tree-id21844 . -2) (undo-tree-id21845 . -2) (undo-tree-id21846 . -2) (undo-tree-id21847 . -2) (undo-tree-id21848 . -2) (undo-tree-id21849 . -2) (undo-tree-id21850 . -2) (undo-tree-id21851 . -2) (undo-tree-id21852 . -2) (undo-tree-id21853 . -2) (undo-tree-id21854 . -2) (undo-tree-id21855 . -2) (undo-tree-id21856 . -2) (undo-tree-id21857 . -2) (undo-tree-id21858 . -2) (undo-tree-id21859 . -2) (undo-tree-id21860 . -2) (undo-tree-id21861 . -2) (undo-tree-id21862 . -2) (undo-tree-id21863 . -2) (undo-tree-id21864 . -2) (undo-tree-id21865 . -2) (undo-tree-id21866 . -2) (undo-tree-id21867 . -2) (undo-tree-id21868 . -3) (undo-tree-id21869 . -3) (undo-tree-id21870 . -3) (undo-tree-id21871 . -3) (undo-tree-id21872 . -3) (undo-tree-id21873 . -3) (undo-tree-id21874 . -3) (undo-tree-id21875 . -3) (undo-tree-id21876 . -3) (undo-tree-id21877 . -3) (undo-tree-id21878 . -3) (undo-tree-id21879 . -3) (undo-tree-id21880 . -3) (undo-tree-id21881 . -3) (undo-tree-id21882 . -3) (undo-tree-id21883 . -3) (undo-tree-id21884 . -3) (undo-tree-id21885 . -3) (undo-tree-id21886 . -3) (undo-tree-id21887 . -3) (undo-tree-id21888 . -3) (undo-tree-id21889 . -3) (undo-tree-id21890 . -3) (undo-tree-id21891 . -3) (undo-tree-id21892 . -3) (undo-tree-id21893 . -3) (undo-tree-id21894 . -4) (undo-tree-id21895 . -4) (undo-tree-id21896 . -4) (undo-tree-id21897 . -4) (undo-tree-id21898 . -4) (undo-tree-id21899 . -4) (undo-tree-id21900 . -4) (undo-tree-id21901 . -4) (undo-tree-id21902 . -4) (undo-tree-id21903 . -4) (undo-tree-id21904 . -4) (undo-tree-id21905 . -4) (undo-tree-id21906 . -4) (undo-tree-id21907 . -4) (undo-tree-id21908 . -4) (undo-tree-id21909 . -4) (undo-tree-id21910 . -4) (undo-tree-id21911 . -4) (undo-tree-id21912 . -4) (undo-tree-id21913 . -4) (undo-tree-id21914 . -4) (undo-tree-id21915 . -4) (undo-tree-id21916 . -4) (undo-tree-id21917 . -4) (undo-tree-id21918 . -4) (undo-tree-id21919 . -4) (undo-tree-id21920 . -4) 1249 (1245 . 1249) (1244 . 1245) (1230 . 1244) (1213 . 1230) 1191) nil (26026 38539 132409 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1268 . 1269) (#("
" 0 1 (fontified nil)) . -1291) (1252 . 1292) 1248) nil (26026 38539 132252 0) 0 nil])
([nil nil ((1269 . 1273) (#("previous" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 1269) (undo-tree-id21479 . -7) (undo-tree-id21480 . -8) (undo-tree-id21481 . -8)) nil (26026 38539 132251 0) 0 nil])
([nil nil ((1282 . 1283) (1253 . 1265) (#("                " 0 1 (fontified nil) 1 15 (fontified nil) 15 16 (rear-nonsticky t fontified nil)) . 1253) (undo-tree-id21474 . -16) (undo-tree-id21475 . -16) (1285 . 1286) (1283 . 1285) (#("--);" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-4-face) fontified t) 3 4 (fontified t)) . 1283) (undo-tree-id21476 . -3) (undo-tree-id21477 . -4) (undo-tree-id21478 . -4)) nil (26026 38539 132250 0) 0 nil])
([nil nil ((1164 . 1165) (1163 . 1164)) nil (26026 38539 132247 0) 0 nil])
([nil nil ((1298 . 1299) (1285 . 1298) 1284) nil (26026 38539 132247 0) 0 nil])
([nil nil ((1255 . 1271) (#("            " 0 12 (fontified t)) . -1255) (undo-tree-id21453 . -12) (undo-tree-id21454 . -12) (undo-tree-id21455 . -12) (undo-tree-id21456 . -12) (undo-tree-id21457 . -12) (undo-tree-id21458 . -12) (undo-tree-id21459 . -12) (undo-tree-id21460 . -12) (undo-tree-id21461 . -12) (undo-tree-id21462 . -12) (undo-tree-id21463 . -12) (undo-tree-id21464 . -12) (undo-tree-id21465 . -12) (undo-tree-id21466 . -12) (undo-tree-id21467 . -12) (undo-tree-id21468 . -12) (undo-tree-id21469 . -12) (undo-tree-id21470 . -12) (undo-tree-id21471 . -12) (undo-tree-id21472 . -12) (undo-tree-id21473 . -12) 1267) nil (26026 38539 132246 0) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -1320) (1320 . 1322) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1320) (undo-tree-id21329 . -4) (undo-tree-id21330 . -4) (undo-tree-id21331 . -4) (undo-tree-id21332 . -4) (undo-tree-id21333 . -4) (undo-tree-id21334 . -4) (undo-tree-id21335 . -4) (undo-tree-id21336 . -4) (undo-tree-id21337 . -4) (undo-tree-id21338 . -4) (undo-tree-id21339 . -4) (undo-tree-id21340 . -4) (undo-tree-id21341 . -4) (undo-tree-id21342 . -4) (undo-tree-id21343 . -4) (undo-tree-id21344 . -4) (undo-tree-id21345 . -4) (undo-tree-id21346 . -4) (undo-tree-id21347 . -4) (undo-tree-id21348 . -4) (undo-tree-id21349 . -4) (undo-tree-id21350 . -4) (undo-tree-id21351 . -4) (undo-tree-id21352 . -4) (undo-tree-id21353 . -4) (undo-tree-id21354 . -4) (undo-tree-id21355 . -4) (undo-tree-id21356 . -4) (undo-tree-id21357 . -4) (undo-tree-id21358 . -4) (undo-tree-id21359 . -4) (undo-tree-id21360 . -4) (undo-tree-id21361 . -4) (undo-tree-id21362 . -4) (undo-tree-id21363 . -4) (undo-tree-id21364 . -4) (undo-tree-id21365 . -4) (undo-tree-id21366 . -4) (undo-tree-id21367 . -4) (undo-tree-id21368 . -4) (undo-tree-id21369 . -4) (undo-tree-id21370 . -4) (undo-tree-id21371 . -4) (undo-tree-id21372 . -4) (undo-tree-id21373 . -4) (undo-tree-id21374 . -4) (undo-tree-id21375 . -4) (undo-tree-id21376 . -4) (undo-tree-id21377 . -4) (undo-tree-id21378 . -4) (undo-tree-id21379 . -4) (undo-tree-id21380 . -4) (undo-tree-id21381 . -4) (undo-tree-id21382 . -4) (undo-tree-id21383 . -4) (undo-tree-id21384 . -4) (undo-tree-id21385 . -4) (undo-tree-id21386 . -4) (undo-tree-id21387 . -4) (undo-tree-id21388 . -4) (undo-tree-id21389 . -4) (1316 . 1320) 1322 (1321 . 1322) (1320 . 1321) (#(" x" 0 2 (fontified nil)) . -1320) (1320 . 1322) (#("else" 0 1 (face font-lock-keyword-face fontified nil c-is-sws t) 1 4 (face font-lock-keyword-face fontified nil)) . 1320) (undo-tree-id21390 . -4) (undo-tree-id21391 . -3) (undo-tree-id21392 . -3) (undo-tree-id21393 . -3) (undo-tree-id21394 . -3) (undo-tree-id21395 . -3) (undo-tree-id21396 . -3) (undo-tree-id21397 . -3) (undo-tree-id21398 . -3) (undo-tree-id21399 . -3) (undo-tree-id21400 . -3) (undo-tree-id21401 . -3) (undo-tree-id21402 . -3) (undo-tree-id21403 . -3) (undo-tree-id21404 . -3) (undo-tree-id21405 . -3) (undo-tree-id21406 . -3) (undo-tree-id21407 . -3) (undo-tree-id21408 . -3) (undo-tree-id21409 . -3) (undo-tree-id21410 . -3) (undo-tree-id21411 . -3) (undo-tree-id21412 . -3) (undo-tree-id21413 . -3) (undo-tree-id21414 . -3) (undo-tree-id21415 . -3) (undo-tree-id21416 . -3) (undo-tree-id21417 . -3) (undo-tree-id21418 . -3) (undo-tree-id21419 . -3) (undo-tree-id21420 . -3) (undo-tree-id21421 . -3) (undo-tree-id21422 . -3) (undo-tree-id21423 . -3) (undo-tree-id21424 . -3) (undo-tree-id21425 . -3) (undo-tree-id21426 . -3) (undo-tree-id21427 . -3) (undo-tree-id21428 . -3) (undo-tree-id21429 . -3) (undo-tree-id21430 . -3) (undo-tree-id21431 . -3) (undo-tree-id21432 . -3) (undo-tree-id21433 . -3) (undo-tree-id21434 . -3) (undo-tree-id21435 . -3) (undo-tree-id21436 . -3) (undo-tree-id21437 . -3) (undo-tree-id21438 . -4) (undo-tree-id21439 . -4) (undo-tree-id21440 . -4) (undo-tree-id21441 . -4) (undo-tree-id21442 . -4) (undo-tree-id21443 . -4) (undo-tree-id21444 . -4) (undo-tree-id21445 . -4) (undo-tree-id21446 . -4) (undo-tree-id21447 . -4) (undo-tree-id21448 . -4) (undo-tree-id21449 . -4) (undo-tree-id21450 . -4) (undo-tree-id21451 . -4) (undo-tree-id21452 . -4) (1316 . 1320) 1320) nil (26026 38539 132236 0) 0 nil])
([nil nil ((1371 . 1383) (#("                " 0 1 (c-is-sws t fontified nil) 1 16 (c-is-sws t fontified nil)) . 1371) (undo-tree-id21287 . -16) (undo-tree-id21288 . -16) (undo-tree-id21289 . -16) (undo-tree-id21290 . -16) (undo-tree-id21291 . -16) (undo-tree-id21292 . -16) (undo-tree-id21293 . -16) (undo-tree-id21294 . -16) (undo-tree-id21295 . -16) (undo-tree-id21296 . -16) (undo-tree-id21297 . -16) (undo-tree-id21298 . -16) (undo-tree-id21299 . -16) (undo-tree-id21300 . -16) (undo-tree-id21301 . -16) (undo-tree-id21302 . -16) (undo-tree-id21303 . -16) (undo-tree-id21304 . -16) (undo-tree-id21305 . -16) (undo-tree-id21306 . -16) (undo-tree-id21307 . -16) (undo-tree-id21308 . -16) (undo-tree-id21309 . -16) (undo-tree-id21310 . -16) (undo-tree-id21311 . -16) (undo-tree-id21312 . -16) (undo-tree-id21313 . -16) (undo-tree-id21314 . -16) (undo-tree-id21315 . -16) (undo-tree-id21316 . -16) (undo-tree-id21317 . -16) (undo-tree-id21318 . -16) (undo-tree-id21319 . -16) (undo-tree-id21320 . -16) (undo-tree-id21321 . -16) (undo-tree-id21322 . -16) (undo-tree-id21323 . -16) (undo-tree-id21324 . -16) (undo-tree-id21325 . -16) (undo-tree-id21326 . -16) (undo-tree-id21327 . -16) (undo-tree-id21328 . -16) (1387 . 1388) (1370 . 1387) 1340) nil (26026 38539 132192 0) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -1291) (undo-tree-id21088 . -16) (undo-tree-id21089 . -16) (undo-tree-id21090 . -16) (undo-tree-id21091 . -16) (undo-tree-id21092 . -16) (undo-tree-id21093 . -16) (undo-tree-id21094 . -16) (undo-tree-id21095 . -16) (undo-tree-id21096 . -16) (undo-tree-id21097 . -16) (undo-tree-id21098 . -16) (undo-tree-id21099 . -16) (undo-tree-id21100 . -16) (undo-tree-id21101 . -16) (undo-tree-id21102 . -16) (undo-tree-id21103 . -16) (undo-tree-id21104 . -16) (undo-tree-id21105 . -16) (undo-tree-id21106 . -16) (undo-tree-id21107 . -16) (undo-tree-id21108 . -16) (undo-tree-id21109 . -16) (undo-tree-id21110 . -16) (undo-tree-id21111 . -16) (undo-tree-id21112 . -16) (undo-tree-id21113 . -16) (undo-tree-id21114 . -16) (undo-tree-id21115 . -16) (undo-tree-id21116 . -16) (undo-tree-id21117 . -16) (undo-tree-id21118 . -16) (undo-tree-id21119 . -16) (undo-tree-id21120 . -16) (undo-tree-id21121 . -16) (undo-tree-id21122 . -16) (undo-tree-id21123 . -16) (undo-tree-id21124 . -16) (undo-tree-id21125 . -16) (undo-tree-id21126 . -16) (undo-tree-id21127 . -16) (undo-tree-id21128 . -16) (undo-tree-id21129 . -16) (undo-tree-id21130 . -16) (undo-tree-id21131 . -16) (undo-tree-id21132 . -16) (undo-tree-id21133 . -16) (undo-tree-id21134 . -16) (undo-tree-id21135 . -16) (undo-tree-id21136 . -16) (undo-tree-id21137 . -16) (undo-tree-id21138 . -16) (undo-tree-id21139 . -16) (undo-tree-id21140 . -16) (undo-tree-id21141 . -16) (undo-tree-id21142 . -16) (undo-tree-id21143 . -16) (undo-tree-id21144 . -16) (undo-tree-id21145 . -16) (undo-tree-id21146 . -16) (undo-tree-id21147 . -16) (undo-tree-id21148 . -16) (undo-tree-id21149 . -16) (undo-tree-id21150 . -16) (undo-tree-id21151 . -16) (undo-tree-id21152 . -16) (undo-tree-id21153 . -16) (undo-tree-id21154 . -16) (undo-tree-id21155 . -16) (undo-tree-id21156 . -16) (undo-tree-id21157 . -16) (undo-tree-id21158 . -16) (undo-tree-id21159 . -16) (undo-tree-id21160 . -16) (undo-tree-id21161 . -16) (undo-tree-id21162 . -16) (undo-tree-id21163 . -16) (undo-tree-id21164 . -16) (undo-tree-id21165 . -16) (undo-tree-id21166 . -16) (undo-tree-id21167 . -16) (undo-tree-id21168 . -16) (undo-tree-id21169 . -16) (undo-tree-id21170 . -16) (undo-tree-id21171 . -16) (undo-tree-id21172 . -16) (undo-tree-id21173 . -16) (undo-tree-id21174 . -16) (undo-tree-id21175 . -16) (undo-tree-id21176 . -16) (undo-tree-id21177 . -16) (undo-tree-id21178 . -16) (undo-tree-id21179 . -16) (undo-tree-id21180 . -16) (undo-tree-id21181 . -16) (undo-tree-id21182 . -16) (undo-tree-id21183 . -16) (undo-tree-id21184 . -16) (undo-tree-id21185 . -16) (undo-tree-id21186 . -16) (undo-tree-id21187 . -16) (undo-tree-id21188 . -16) (undo-tree-id21189 . -16) (undo-tree-id21190 . -16) (undo-tree-id21191 . -16) (undo-tree-id21192 . -16) 1307 (1291 . 1307) (#("                " 0 16 (fontified nil)) . 1290) (undo-tree-id21193 . -16) (undo-tree-id21194 . -16) (undo-tree-id21195 . -16) (undo-tree-id21196 . -16) (undo-tree-id21197 . -16) (undo-tree-id21198 . -16) (undo-tree-id21199 . -16) (undo-tree-id21200 . -16) (undo-tree-id21201 . -16) (undo-tree-id21202 . -16) (undo-tree-id21203 . -16) (undo-tree-id21204 . -16) (undo-tree-id21205 . -16) (undo-tree-id21206 . -16) (undo-tree-id21207 . -16) (undo-tree-id21208 . -16) (undo-tree-id21209 . -16) (undo-tree-id21210 . -16) (undo-tree-id21211 . -16) (undo-tree-id21212 . -16) (undo-tree-id21213 . -16) (undo-tree-id21214 . -16) (undo-tree-id21215 . -16) (undo-tree-id21216 . -16) (undo-tree-id21217 . -16) (undo-tree-id21218 . -16) (undo-tree-id21219 . -16) (undo-tree-id21220 . -16) (undo-tree-id21221 . -16) (undo-tree-id21222 . -16) (undo-tree-id21223 . -16) (undo-tree-id21224 . -16) (undo-tree-id21225 . -16) (undo-tree-id21226 . -16) (undo-tree-id21227 . -16) (undo-tree-id21228 . -16) (undo-tree-id21229 . -16) (undo-tree-id21230 . -16) (undo-tree-id21231 . -16) (undo-tree-id21232 . -16) (undo-tree-id21233 . -16) (undo-tree-id21234 . -16) (undo-tree-id21235 . -16) (undo-tree-id21236 . -16) (undo-tree-id21237 . -16) (undo-tree-id21238 . -16) (undo-tree-id21239 . -16) (undo-tree-id21240 . -16) (undo-tree-id21241 . -16) (undo-tree-id21242 . -16) (undo-tree-id21243 . -16) (undo-tree-id21244 . -16) (undo-tree-id21245 . -16) (undo-tree-id21246 . -16) (undo-tree-id21247 . -16) (undo-tree-id21248 . -16) (undo-tree-id21249 . -16) (undo-tree-id21250 . -16) (undo-tree-id21251 . -16) (undo-tree-id21252 . -16) (undo-tree-id21253 . -16) (undo-tree-id21254 . -16) (undo-tree-id21255 . -16) (undo-tree-id21256 . -16) (undo-tree-id21257 . -16) (undo-tree-id21258 . -16) (undo-tree-id21259 . -16) (undo-tree-id21260 . -16) (undo-tree-id21261 . -16) (undo-tree-id21262 . -16) (undo-tree-id21263 . -16) (undo-tree-id21264 . -16) (undo-tree-id21265 . -16) (undo-tree-id21266 . -16) (undo-tree-id21267 . -16) (undo-tree-id21268 . -16) (undo-tree-id21269 . -16) (undo-tree-id21270 . -16) (undo-tree-id21271 . -16) (undo-tree-id21272 . -16) (undo-tree-id21273 . -16) (undo-tree-id21274 . -16) (undo-tree-id21275 . -16) (undo-tree-id21276 . -16) (undo-tree-id21277 . -16) (undo-tree-id21278 . -16) (undo-tree-id21279 . -16) (undo-tree-id21280 . -16) (undo-tree-id21281 . -16) (undo-tree-id21282 . -16) (undo-tree-id21283 . -16) (undo-tree-id21284 . -16) (undo-tree-id21285 . -16) (undo-tree-id21286 . -16) (1306 . 1307) (1289 . 1306) 1267) nil (26026 38539 132173 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1135) (undo-tree-id21013 . -12) (undo-tree-id21014 . -12) (undo-tree-id21015 . -12) (undo-tree-id21016 . -12) (undo-tree-id21017 . -12) (undo-tree-id21018 . -12) (undo-tree-id21019 . -12) (undo-tree-id21020 . -12) (undo-tree-id21021 . -12) (undo-tree-id21022 . -12) (undo-tree-id21023 . -12) (undo-tree-id21024 . -12) (undo-tree-id21025 . -12) (undo-tree-id21026 . -12) (undo-tree-id21027 . -12) (undo-tree-id21028 . -12) (undo-tree-id21029 . -12) (undo-tree-id21030 . -12) (undo-tree-id21031 . -12) (undo-tree-id21032 . -12) (undo-tree-id21033 . -12) (undo-tree-id21034 . -12) (undo-tree-id21035 . -12) (undo-tree-id21036 . -12) (undo-tree-id21037 . -12) (undo-tree-id21038 . -12) (undo-tree-id21039 . -12) (undo-tree-id21040 . -12) (undo-tree-id21041 . -12) (undo-tree-id21042 . -12) (undo-tree-id21043 . -12) (undo-tree-id21044 . -12) (undo-tree-id21045 . -12) (undo-tree-id21046 . -12) (undo-tree-id21047 . -12) (undo-tree-id21048 . -12) (undo-tree-id21049 . -12) (undo-tree-id21050 . -12) (undo-tree-id21051 . -12) (undo-tree-id21052 . -12) (undo-tree-id21053 . -12) (undo-tree-id21054 . -12) (undo-tree-id21055 . -12) (undo-tree-id21056 . -12) (undo-tree-id21057 . -12) (undo-tree-id21058 . -12) (undo-tree-id21059 . -12) 1147 (1135 . 1147) (#("            " 0 12 (fontified nil)) . 1134) (undo-tree-id21060 . -12) (undo-tree-id21061 . -12) (undo-tree-id21062 . -12) (undo-tree-id21063 . -12) (undo-tree-id21064 . -12) (undo-tree-id21065 . -12) (undo-tree-id21066 . -12) (undo-tree-id21067 . -12) (undo-tree-id21068 . -12) (undo-tree-id21069 . -12) (undo-tree-id21070 . -12) (undo-tree-id21071 . -12) (undo-tree-id21072 . -12) (undo-tree-id21073 . -12) (undo-tree-id21074 . -12) (undo-tree-id21075 . -12) (undo-tree-id21076 . -12) (undo-tree-id21077 . -12) (undo-tree-id21078 . -12) (undo-tree-id21079 . -12) (undo-tree-id21080 . -12) (undo-tree-id21081 . -12) (undo-tree-id21082 . -12) (undo-tree-id21083 . -12) (undo-tree-id21084 . -12) (undo-tree-id21085 . -12) (undo-tree-id21086 . -12) (undo-tree-id21087 . -12) (1146 . 1147) (1133 . 1146) 1095) nil (26026 38539 132098 0) 0 nil])
([nil nil ((1153 . 1170) (1149 . 1153) (1147 . 1149) (1135 . 1147)) nil (26026 38539 132069 0) 0 nil])
([nil nil ((1170 . 1173)) nil (26026 38539 132068 0) 0 nil])
([nil nil ((1225 . 1228)) nil (26026 38539 132068 0) 0 nil])
([nil nil ((1228 . 1229)) nil (26026 38539 132067 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1334) (undo-tree-id20870 . 1) (undo-tree-id20871 . -1) (undo-tree-id20872 . -1) (undo-tree-id20873 . -1) (undo-tree-id20874 . -1) (undo-tree-id20875 . -1) (undo-tree-id20876 . -1) (undo-tree-id20877 . -1) (undo-tree-id20878 . -1) (undo-tree-id20879 . -1) (undo-tree-id20880 . -1) (undo-tree-id20881 . -1) (undo-tree-id20882 . -1) (undo-tree-id20883 . -1) (undo-tree-id20884 . -1) (undo-tree-id20885 . -1) (undo-tree-id20886 . -1) (undo-tree-id20887 . -1) (undo-tree-id20888 . -1) (undo-tree-id20889 . -1) (undo-tree-id20890 . -1) (undo-tree-id20891 . -1) (undo-tree-id20892 . -1) (undo-tree-id20893 . -1) (undo-tree-id20894 . -1) (undo-tree-id20895 . -1) (undo-tree-id20896 . -1) (undo-tree-id20897 . -1) (undo-tree-id20898 . -1) (undo-tree-id20899 . -1) (undo-tree-id20900 . -1) (undo-tree-id20901 . -1) (undo-tree-id20902 . -1) (undo-tree-id20903 . -1) (undo-tree-id20904 . -1) (undo-tree-id20905 . -1) (undo-tree-id20906 . -1) (undo-tree-id20907 . -1) (undo-tree-id20908 . -1) (undo-tree-id20909 . -1) (undo-tree-id20910 . -1) (undo-tree-id20911 . -1) (undo-tree-id20912 . -1) (undo-tree-id20913 . -1) (undo-tree-id20914 . -1) (undo-tree-id20915 . -1) (undo-tree-id20916 . -1) (undo-tree-id20917 . -1) (undo-tree-id20918 . -1) (undo-tree-id20919 . -1) (undo-tree-id20920 . -1) (undo-tree-id20921 . -1) (undo-tree-id20922 . -1) (undo-tree-id20923 . -1) (undo-tree-id20924 . -1) (undo-tree-id20925 . -1) (undo-tree-id20926 . -1) (undo-tree-id20927 . -1) (undo-tree-id20928 . -1) (undo-tree-id20929 . -1) (undo-tree-id20930 . -1) (undo-tree-id20931 . -1) (undo-tree-id20932 . -1) (undo-tree-id20933 . -1) (undo-tree-id20934 . -1) (undo-tree-id20935 . -1) (undo-tree-id20936 . -1) (undo-tree-id20937 . -1) (undo-tree-id20938 . -1) (undo-tree-id20939 . -1) (undo-tree-id20940 . -1) (undo-tree-id20941 . -1) (undo-tree-id20942 . -1) (undo-tree-id20943 . -1) (undo-tree-id20944 . -1) (undo-tree-id20945 . -1) (undo-tree-id20946 . -1) (undo-tree-id20947 . -1) (undo-tree-id20948 . -1) (undo-tree-id20949 . -1) (undo-tree-id20950 . -1) (undo-tree-id20951 . -1) (undo-tree-id20952 . -1) (undo-tree-id20953 . -1) (undo-tree-id20954 . -1) (undo-tree-id20955 . -1) (undo-tree-id20956 . -1) (undo-tree-id20957 . -1) (undo-tree-id20958 . -1) (undo-tree-id20959 . -1) (undo-tree-id20960 . -1) (undo-tree-id20961 . -1) (undo-tree-id20962 . -1) (undo-tree-id20963 . -1) (undo-tree-id20964 . -1) (undo-tree-id20965 . -1) (undo-tree-id20966 . -1) (undo-tree-id20967 . -1) (undo-tree-id20968 . -1) (undo-tree-id20969 . -1) (undo-tree-id20970 . -1) (undo-tree-id20971 . -1) (undo-tree-id20972 . -1) (undo-tree-id20973 . -1) (undo-tree-id20974 . -1) (undo-tree-id20975 . -1) (undo-tree-id20976 . -1) (undo-tree-id20977 . -1) (undo-tree-id20978 . -1) (undo-tree-id20979 . -1) (undo-tree-id20980 . -1) (undo-tree-id20981 . -1) (undo-tree-id20982 . -1) (undo-tree-id20983 . -1) (undo-tree-id20984 . -1) (undo-tree-id20985 . -1) (undo-tree-id20986 . -1) (undo-tree-id20987 . -1) (undo-tree-id20988 . -1) (undo-tree-id20989 . -1) (undo-tree-id20990 . -1) (undo-tree-id20991 . -1) (undo-tree-id20992 . -1) (undo-tree-id20993 . -1) (undo-tree-id20994 . -1) (undo-tree-id20995 . -1) (undo-tree-id20996 . -1) (undo-tree-id20997 . -1) (undo-tree-id20998 . -1) (undo-tree-id20999 . -1) (undo-tree-id21000 . -1) (undo-tree-id21001 . -1) (undo-tree-id21002 . -1) (undo-tree-id21003 . -1) (undo-tree-id21004 . -1) (undo-tree-id21005 . -1) (undo-tree-id21006 . -1) (undo-tree-id21007 . -1) (undo-tree-id21008 . -1) (undo-tree-id21009 . -1) (undo-tree-id21010 . -1) (undo-tree-id21011 . -1) (undo-tree-id21012 . -1)) nil (26026 38539 132064 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1334) (undo-tree-id20868 . 1) (undo-tree-id20869 . -1)) nil (26026 38539 132002 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1454) (undo-tree-id24919 . -1) (undo-tree-id24920 . -1) 1455 (1454 . 1455) (1437 . 1454) (1436 . 1437) (1431 . 1436) (1414 . 1431) (t 26026 38539 148537 845000) 1392) nil (26026 39337 991317 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 949 . 950) (#("
" 0 1 (fontified nil)) . -974) (941 . 975) 904) nil (26026 39337 991316 0) 0 nil])
([nil nil ((958 . 965) (#("previous" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t) 7 8 (face font-lock-variable-name-face fontified t)) . 958) (undo-tree-id24918 . -7)) nil (26026 39337 991315 0) 0 nil])
([nil nil ((983 . 985) (979 . 983) (#("next() : E" 0 10 (fontified nil)) . -979) (undo-tree-id24911 . -10) (979 . 989) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -979) (undo-tree-id24912 . -2) (undo-tree-id24913 . -2) 981 (978 . 981) (976 . 978) (968 . 976) (#("i" 0 1 (fontified nil)) . 968) (968 . 969) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -968) (undo-tree-id24914 . -24) (968 . 992) (#("iterat" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -968) (undo-tree-id24915 . -6) (undo-tree-id24916 . -6) 974 (968 . 974) (#("null" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 968) (undo-tree-id24917 . -3)) nil (26026 39337 991313 0) 0 nil])
([nil nil ((#("Node" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . 950) (undo-tree-id24910 . -3)) nil (26026 39337 991309 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 950)) nil (26026 39337 991309 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 951)) nil (26026 39337 991308 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -942) (undo-tree-id24909 . -8) 950 (941 . 950) 898) nil (26026 39337 991308 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -982) (undo-tree-id24908 . -8) 990 (981 . 990) 943) nil (26026 39337 991307 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1045) (undo-tree-id24907 . -8) 1053 (1044 . 1053) 1016) nil (26026 39337 991306 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1045) (undo-tree-id24906 . 1)) nil (26026 39337 991305 0) 0 nil])
([nil nil ((#("Node" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . 991) (undo-tree-id24905 . -3)) nil (26026 39337 991304 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 991)) nil (26026 39337 991303 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 992)) nil (26026 39337 991302 0) 0 nil])
([nil nil ((#("Node" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t)) . 1018) (undo-tree-id24904 . -3)) nil (26026 39337 991302 0) 0 nil])
([nil nil ((#("<" 0 1 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t)) . 1018)) nil (26026 39337 991301 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 1019)) nil (26026 39337 991301 0) 0 nil])
([nil nil ((1510 . 1511) (1508 . 1510) (1504 . 1508) (#("next() : E" 0 10 (fontified nil)) . -1504) (undo-tree-id24898 . -10) (1504 . 1514) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1504) (undo-tree-id24899 . -2) (undo-tree-id24900 . -2) 1506 (1503 . 1506) (1501 . 1503) (1493 . 1501) (#("i" 0 1 (fontified nil)) . 1493) (1493 . 1494) (#("iterator() : Iterator<E>" 0 21 (fontified nil) 21 22 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 22 23 (fontified nil) 23 24 (fontified nil category c->-as-paren-syntax)) . -1493) (undo-tree-id24901 . -24) (1493 . 1517) (#("iter" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1493) (undo-tree-id24902 . -4) (undo-tree-id24903 . -3) 1497 (1483 . 1497) (1466 . 1483) 1460) nil (26026 39337 991300 0) 0 nil])
([nil nil ((#("                
" 0 16 (fontified t) 16 17 (fontified t)) . 1512) (undo-tree-id24896 . -16) (undo-tree-id24897 . -15) 1527) nil (26026 39337 991296 0) 0 nil])
([nil nil ((1376 . 1377) (#("
" 0 1 (fontified t)) . -1376) (undo-tree-id24506 . -1) (undo-tree-id24507 . -1) (undo-tree-id24508 . -1) (undo-tree-id24509 . -1) (undo-tree-id24510 . -1) (undo-tree-id24511 . -1) (undo-tree-id24512 . -1) (undo-tree-id24513 . -1) (undo-tree-id24514 . -1) (undo-tree-id24515 . -1) (undo-tree-id24516 . -1) (undo-tree-id24517 . -1) (undo-tree-id24518 . -1) (undo-tree-id24519 . -1) (undo-tree-id24520 . -1) (undo-tree-id24521 . -1) (undo-tree-id24522 . -1) (undo-tree-id24523 . -1) (undo-tree-id24524 . -1) (undo-tree-id24525 . -1) (undo-tree-id24526 . -1) (undo-tree-id24527 . -1) (undo-tree-id24528 . -1) (undo-tree-id24529 . -1) (undo-tree-id24530 . -1) (undo-tree-id24531 . -1) (undo-tree-id24532 . -1) (undo-tree-id24533 . -1) (undo-tree-id24534 . -1) (undo-tree-id24535 . -1) (undo-tree-id24536 . -1) (undo-tree-id24537 . -1) (undo-tree-id24538 . -1) (undo-tree-id24539 . -1) (undo-tree-id24540 . -1) (undo-tree-id24541 . -1) (undo-tree-id24542 . -1) (undo-tree-id24543 . -1) (undo-tree-id24544 . -1) (undo-tree-id24545 . -1) (undo-tree-id24546 . -1) (undo-tree-id24547 . -1) (undo-tree-id24548 . -1) (undo-tree-id24549 . -1) (undo-tree-id24550 . -1) (undo-tree-id24551 . -1) (undo-tree-id24552 . -1) (undo-tree-id24553 . -1) (undo-tree-id24554 . -1) (undo-tree-id24555 . -1) (undo-tree-id24556 . -1) (undo-tree-id24557 . -1) (undo-tree-id24558 . -1) (undo-tree-id24559 . -1) (undo-tree-id24560 . -1) (undo-tree-id24561 . -1) (undo-tree-id24562 . -1) (undo-tree-id24563 . -1) (undo-tree-id24564 . -1) (undo-tree-id24565 . -1) (undo-tree-id24566 . -1) (undo-tree-id24567 . -1) (undo-tree-id24568 . -1) (undo-tree-id24569 . -1) (undo-tree-id24570 . -1) (undo-tree-id24571 . -1) (undo-tree-id24572 . -1) (undo-tree-id24573 . -1) (undo-tree-id24574 . -1) (undo-tree-id24575 . -1) (undo-tree-id24576 . -1) (undo-tree-id24577 . -1) (undo-tree-id24578 . -1) (undo-tree-id24579 . -1) (undo-tree-id24580 . -1) (undo-tree-id24581 . -1) (undo-tree-id24582 . -1) (undo-tree-id24583 . -1) (undo-tree-id24584 . -1) (undo-tree-id24585 . -1) (undo-tree-id24586 . -1) (undo-tree-id24587 . -1) (undo-tree-id24588 . -1) (undo-tree-id24589 . -1) (undo-tree-id24590 . -1) (undo-tree-id24591 . -1) (undo-tree-id24592 . -1) (undo-tree-id24593 . -1) (undo-tree-id24594 . -1) (undo-tree-id24595 . -1) (undo-tree-id24596 . -1) (undo-tree-id24597 . -1) (undo-tree-id24598 . -1) (undo-tree-id24599 . -1) (undo-tree-id24600 . -1) (undo-tree-id24601 . -1) (undo-tree-id24602 . -1) (undo-tree-id24603 . -1) (undo-tree-id24604 . -1) (undo-tree-id24605 . -1) (undo-tree-id24606 . -1) (undo-tree-id24607 . -1) (undo-tree-id24608 . -1) (undo-tree-id24609 . -1) (undo-tree-id24610 . -1) (undo-tree-id24611 . -1) (undo-tree-id24612 . -1) (undo-tree-id24613 . -1) (undo-tree-id24614 . -1) (undo-tree-id24615 . -1) (undo-tree-id24616 . -1) (undo-tree-id24617 . -1) (undo-tree-id24618 . -1) (undo-tree-id24619 . -1) (undo-tree-id24620 . -1) (undo-tree-id24621 . -1) (undo-tree-id24622 . -1) (undo-tree-id24623 . -1) (undo-tree-id24624 . -1) (undo-tree-id24625 . -1) (undo-tree-id24626 . -1) (undo-tree-id24627 . -1) (undo-tree-id24628 . -1) (undo-tree-id24629 . -1) (undo-tree-id24630 . -1) (undo-tree-id24631 . -1) (undo-tree-id24632 . -1) (undo-tree-id24633 . -1) (undo-tree-id24634 . -1) (undo-tree-id24635 . -1) (undo-tree-id24636 . -1) (undo-tree-id24637 . -1) (undo-tree-id24638 . -1) (undo-tree-id24639 . -1) (undo-tree-id24640 . -1) (undo-tree-id24641 . -1) (undo-tree-id24642 . -1) (undo-tree-id24643 . -1) (undo-tree-id24644 . -1) (undo-tree-id24645 . -1) (undo-tree-id24646 . -1) (undo-tree-id24647 . -1) (undo-tree-id24648 . -1) (undo-tree-id24649 . -1) (undo-tree-id24650 . -1) (undo-tree-id24651 . -1) (undo-tree-id24652 . -1) (undo-tree-id24653 . -1) (undo-tree-id24654 . -1) (undo-tree-id24655 . -1) (undo-tree-id24656 . -1) (undo-tree-id24657 . -1) (undo-tree-id24658 . -1) (undo-tree-id24659 . -1) (undo-tree-id24660 . -1) (undo-tree-id24661 . -1) (undo-tree-id24662 . -1) (undo-tree-id24663 . -1) (undo-tree-id24664 . -1) (undo-tree-id24665 . -1) (undo-tree-id24666 . -1) (undo-tree-id24667 . -1) (undo-tree-id24668 . -1) (undo-tree-id24669 . -1) (undo-tree-id24670 . -1) (undo-tree-id24671 . -1) (undo-tree-id24672 . -1) (undo-tree-id24673 . -1) (undo-tree-id24674 . -1) (undo-tree-id24675 . -1) (undo-tree-id24676 . -1) (undo-tree-id24677 . -1) (undo-tree-id24678 . -1) (undo-tree-id24679 . -1) (undo-tree-id24680 . -1) (undo-tree-id24681 . -1) (undo-tree-id24682 . -1) (undo-tree-id24683 . -1) (undo-tree-id24684 . -1) (undo-tree-id24685 . -1) (undo-tree-id24686 . -1) (undo-tree-id24687 . -1) (undo-tree-id24688 . -1) (undo-tree-id24689 . -1) (undo-tree-id24690 . -1) (undo-tree-id24691 . -1) (undo-tree-id24692 . -1) (undo-tree-id24693 . -1) (undo-tree-id24694 . -1) (undo-tree-id24695 . -1) (undo-tree-id24696 . -1) (undo-tree-id24697 . -1) (undo-tree-id24698 . -1) (undo-tree-id24699 . -1) (undo-tree-id24700 . -1) (undo-tree-id24701 . -1) (undo-tree-id24702 . -1) (undo-tree-id24703 . -1) (undo-tree-id24704 . -1) (undo-tree-id24705 . -1) (undo-tree-id24706 . -1) (undo-tree-id24707 . -1) (undo-tree-id24708 . -1) (undo-tree-id24709 . -1) (undo-tree-id24710 . -1) (undo-tree-id24711 . -1) (undo-tree-id24712 . -1) (undo-tree-id24713 . -1) (undo-tree-id24714 . -1) (undo-tree-id24715 . -1) (undo-tree-id24716 . -1) (undo-tree-id24717 . -1) (undo-tree-id24718 . -1) (undo-tree-id24719 . -1) (undo-tree-id24720 . -1) (undo-tree-id24721 . -1) (undo-tree-id24722 . -1) (undo-tree-id24723 . -1) (undo-tree-id24724 . -1) (undo-tree-id24725 . -1) (undo-tree-id24726 . -1) (undo-tree-id24727 . -1) (undo-tree-id24728 . -1) (undo-tree-id24729 . -1) (undo-tree-id24730 . -1) (undo-tree-id24731 . -1) (undo-tree-id24732 . -1) (undo-tree-id24733 . -1) (undo-tree-id24734 . -1) (undo-tree-id24735 . -1) (undo-tree-id24736 . -1) (undo-tree-id24737 . -1) (undo-tree-id24738 . -1) (undo-tree-id24739 . -1) (undo-tree-id24740 . -1) (undo-tree-id24741 . -1) (undo-tree-id24742 . -1) (undo-tree-id24743 . -1) (undo-tree-id24744 . -1) (undo-tree-id24745 . -1) (undo-tree-id24746 . -1) (undo-tree-id24747 . -1) (undo-tree-id24748 . -1) (undo-tree-id24749 . -1) (undo-tree-id24750 . -1) (undo-tree-id24751 . -1) (undo-tree-id24752 . -1) (undo-tree-id24753 . -1) (undo-tree-id24754 . -1) (undo-tree-id24755 . -1) (undo-tree-id24756 . -1) (undo-tree-id24757 . -1) (undo-tree-id24758 . -1) (undo-tree-id24759 . -1) (undo-tree-id24760 . -1) (undo-tree-id24761 . -1) (undo-tree-id24762 . -1) (undo-tree-id24763 . -1) (undo-tree-id24764 . -1) (undo-tree-id24765 . -1) (undo-tree-id24766 . -1) (undo-tree-id24767 . -1) (undo-tree-id24768 . -1) (undo-tree-id24769 . -1) (undo-tree-id24770 . -1) (undo-tree-id24771 . -1) (undo-tree-id24772 . -1) (undo-tree-id24773 . -1) (undo-tree-id24774 . -1) (undo-tree-id24775 . -1) (undo-tree-id24776 . -1) (undo-tree-id24777 . -1) (undo-tree-id24778 . -1) (undo-tree-id24779 . -1) (undo-tree-id24780 . -1) (undo-tree-id24781 . -1) (undo-tree-id24782 . -1) (undo-tree-id24783 . -1) (undo-tree-id24784 . -1) (undo-tree-id24785 . -1) (undo-tree-id24786 . -1) (undo-tree-id24787 . -1) (undo-tree-id24788 . -1) (undo-tree-id24789 . -1) (undo-tree-id24790 . -1) (undo-tree-id24791 . -1) (undo-tree-id24792 . -1) (undo-tree-id24793 . -1) (undo-tree-id24794 . -1) (undo-tree-id24795 . -1) (undo-tree-id24796 . -1) (undo-tree-id24797 . -1) (undo-tree-id24798 . -1) (undo-tree-id24799 . -1) (undo-tree-id24800 . -1) (undo-tree-id24801 . -1) (undo-tree-id24802 . -1) (undo-tree-id24803 . -1) (undo-tree-id24804 . -1) (undo-tree-id24805 . -1) (undo-tree-id24806 . -1) (undo-tree-id24807 . -1) (undo-tree-id24808 . -1) (undo-tree-id24809 . -1) (undo-tree-id24810 . -1) (undo-tree-id24811 . -1) (undo-tree-id24812 . -1) (undo-tree-id24813 . -1) (undo-tree-id24814 . -1) (undo-tree-id24815 . -1) (undo-tree-id24816 . -1) (undo-tree-id24817 . -1) (undo-tree-id24818 . -1) (undo-tree-id24819 . -1) (undo-tree-id24820 . -1) (undo-tree-id24821 . -1) (undo-tree-id24822 . -1) (undo-tree-id24823 . -1) (undo-tree-id24824 . -1) (undo-tree-id24825 . -1) (undo-tree-id24826 . -1) (undo-tree-id24827 . -1) (undo-tree-id24828 . -1) (undo-tree-id24829 . -1) (undo-tree-id24830 . -1) (undo-tree-id24831 . -1) (undo-tree-id24832 . -1) (undo-tree-id24833 . -1) (undo-tree-id24834 . -1) (undo-tree-id24835 . -1) (undo-tree-id24836 . -1) (undo-tree-id24837 . -1) (undo-tree-id24838 . -1) (undo-tree-id24839 . -1) (undo-tree-id24840 . -1) (undo-tree-id24841 . -1) (undo-tree-id24842 . -1) (undo-tree-id24843 . -1) (undo-tree-id24844 . -1) (undo-tree-id24845 . -1) (undo-tree-id24846 . -1) (undo-tree-id24847 . -1) (undo-tree-id24848 . -1) (undo-tree-id24849 . -1) (undo-tree-id24850 . -1) (undo-tree-id24851 . -1) (undo-tree-id24852 . -1) (undo-tree-id24853 . -1) (undo-tree-id24854 . -1) (undo-tree-id24855 . -1) (undo-tree-id24856 . -1) (undo-tree-id24857 . -1) (undo-tree-id24858 . -1) (undo-tree-id24859 . -1) (undo-tree-id24860 . -1) (undo-tree-id24861 . -1) (undo-tree-id24862 . -1) (undo-tree-id24863 . -1) (undo-tree-id24864 . -1) (undo-tree-id24865 . -1) (undo-tree-id24866 . -1) (undo-tree-id24867 . -1) (undo-tree-id24868 . -1) (undo-tree-id24869 . -1) (undo-tree-id24870 . -1) (undo-tree-id24871 . -1) (undo-tree-id24872 . -1) (undo-tree-id24873 . -1) (undo-tree-id24874 . -1) (undo-tree-id24875 . -1) (undo-tree-id24876 . -1) (undo-tree-id24877 . -1) (undo-tree-id24878 . -1) (undo-tree-id24879 . -1) (undo-tree-id24880 . -1) (undo-tree-id24881 . -1) (undo-tree-id24882 . -1) (undo-tree-id24883 . -1) (undo-tree-id24884 . -1) (undo-tree-id24885 . -1) (undo-tree-id24886 . -1) (undo-tree-id24887 . -1) (undo-tree-id24888 . -1) (undo-tree-id24889 . -1) (undo-tree-id24890 . -1) (undo-tree-id24891 . -1) (undo-tree-id24892 . -1) (undo-tree-id24893 . -1) (undo-tree-id24894 . -1) 1377 (#("            " 0 1 (fontified t c-is-sws t) 1 12 (fontified t)) . -1377) (undo-tree-id24895 . -12) 1389) nil (26026 39337 991289 0) 0 nil])
([nil nil ((1364 . 1380) (#("                " 0 16 (fontified nil)) . 1363) (undo-tree-id24500 . -16) (undo-tree-id24501 . -16) (1379 . 1380) (#("n" 0 1 (fontified t)) . -1379) (undo-tree-id24502 . -1) (undo-tree-id24503 . -1) (#("e" 0 1 (fontified t)) . -1380) (undo-tree-id24504 . -1) (undo-tree-id24505 . -1) 1381 (1379 . 1381) (1362 . 1379) 1341) nil (26026 39337 991156 0) 0 nil])
([nil nil ((1399 . 1400) (1395 . 1399) (#("ne" 0 2 (fontified nil)) . 1395) (1395 . 1397) (#("next : E" 0 8 (fontified nil)) . -1395) (undo-tree-id24487 . -8) (1395 . 1403) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1395) (undo-tree-id24488 . -2) (undo-tree-id24489 . -2) 1397 (1395 . 1397) (#("newNode" 0 7 (fontified t)) . -1395) (undo-tree-id24490 . -7) 1402 (1395 . 1402) (#("n" 0 1 (fontified nil)) . 1395) (1395 . 1396) (#("newNode : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -1395) (undo-tree-id24491 . -28) (1395 . 1423) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1395) (undo-tree-id24492 . -2) (undo-tree-id24493 . -2) 1397 (1392 . 1397) (1388 . 1392) (#("next : MyALDAList.Node<E>" 0 22 (fontified nil) 22 23 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 23 24 (fontified nil) 24 25 (fontified nil category c->-as-paren-syntax)) . -1388) (undo-tree-id24494 . -25) (1388 . 1413) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1388) (undo-tree-id24495 . -2) (undo-tree-id24496 . -1) 1390 (1387 . 1390) (1380 . 1387) (#("new" 0 3 (fontified nil)) . 1380) (1380 . 1383) (#("newNode : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -1380) (undo-tree-id24497 . -28) (1380 . 1408) (#("newNode" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -1380) (undo-tree-id24498 . -7) (undo-tree-id24499 . -7) 1387 (1383 . 1387) (1380 . 1383) (1363 . 1380) 1363) nil (26026 39337 991151 0) 0 nil])
([nil nil ((1408 . 1410) (1400 . 1408) (#("getClass() : Class<?>" 0 18 (fontified nil) 18 19 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 19 20 (fontified nil) 20 21 (fontified nil category c->-as-paren-syntax)) . -1400) (undo-tree-id24484 . -21) (1400 . 1421) (#("get" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -1400) (undo-tree-id24485 . -3) (undo-tree-id24486 . -3) 1403 (1399 . 1403)) nil (26026 39337 991144 0) 0 nil])
([nil nil ((1399 . 1400) (#("." 0 1 (fontified t)) . -1399) (undo-tree-id24478 . -1) (undo-tree-id24479 . -1) (undo-tree-id24480 . -1) (undo-tree-id24481 . -1) 1400 (#("getClass();" 0 8 (fontified t) 8 9 (face (rainbow-delimiters-depth-5-face) fontified t) 9 10 (face (rainbow-delimiters-depth-5-face) fontified t) 10 11 (fontified t)) . 1400) (undo-tree-id24482 . -10) (undo-tree-id24483 . 1)) nil (26026 39337 991142 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1399)) nil (26026 39337 991139 0) 0 nil])
([nil nil ((1399 . 1400)) nil (26026 39337 991139 0) 0 nil])
([nil nil ((1440 . 1441) (1433 . 1440) (#("new" 0 3 (fontified nil)) . 1433) (1433 . 1436) (#("newNode : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -1433) (undo-tree-id24475 . -28) (1433 . 1461) (#("new" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t)) . -1433) (undo-tree-id24476 . -3) (undo-tree-id24477 . -3) 1436 (1417 . 1436) (1400 . 1417) 1399) nil (26026 39337 991138 0) 0 nil])
([nil nil ((1425 . 1426) (#("." 0 1 (fontified t)) . -1425) (undo-tree-id24474 . -1) 1426) nil (26026 39337 991136 0) 0 nil])
([nil nil ((1442 . 1447) (1435 . 1442) (1434 . 1435) (1418 . 1434) (1397 . 1418) (1388 . 1397) (1387 . 1388) (#(";" 0 1 (face font-lock-comment-face fontified t)) . -1387) (undo-tree-id24472 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1388) (undo-tree-id24473 . -1) 1389 (1388 . 1389) (1387 . 1388) (1382 . 1387) (1380 . 1382) (1363 . 1380) 1363) nil (26026 39337 991135 0) 0 nil])
([nil nil ((1315 . 1332) (#("tidigare " 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face font-lock-comment-face fontified t) 6 7 (c-in-sws t face font-lock-comment-face fontified t) 7 8 (c-in-sws t face font-lock-comment-face fontified t) 8 9 (c-in-sws t face font-lock-comment-face fontified t)) . -1315) (undo-tree-id24470 . -9) 1324 (1314 . 1324) (1308 . 1314) (1306 . 1308) (1290 . 1306) (#("                " 0 1 (c-is-sws t fontified nil) 1 16 (c-is-sws t fontified nil)) . 1289) (undo-tree-id24471 . -16) (1305 . 1306) (1288 . 1305) 1287) nil (26026 39337 991132 0) 0 nil])
([nil nil ((1315 . 1323)) nil (26026 39337 991130 0) 0 nil])
([nil nil ((1315 . 1324) (#("noderna" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 6 (face font-lock-comment-face fontified t) 6 7 (face font-lock-comment-face fontified t)) . 1315) (undo-tree-id24469 . -6)) nil (26026 39337 991129 0) 0 nil])
([nil nil ((1605 . 1608) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1605) (undo-tree-id24459 . -1) 1606 (1605 . 1606) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1605) (undo-tree-id24460 . -1) 1606 (1604 . 1606) (#("index" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t)) . -1604) (undo-tree-id24461 . -5) 1609 (#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -1609) (undo-tree-id24462 . -1) 1610 (#("             " 0 1 (c-is-sws t fontified t) 1 13 (c-is-sws t fontified t)) . -1610) (undo-tree-id24463 . -13) 1623 (#(" " 0 1 (c-is-sws t fontified t)) . -1623) (undo-tree-id24464 . -1) (#(" " 0 1 (c-is-sws t fontified t)) . -1624) (undo-tree-id24465 . -1) (#(" " 0 1 (c-is-sws t fontified t)) . -1625) (undo-tree-id24466 . -1) 1626 (1609 . 1626) (1599 . 1609) (1597 . 1599) (1581 . 1597) (#("                " 0 16 (fontified nil)) . 1580) (undo-tree-id24467 . -16) (1596 . 1597) (#("ä" 0 1 (fontified t)) . -1596) (undo-tree-id24468 . -1) 1597 (1596 . 1597) (1579 . 1596) 1572) nil (26026 39337 991127 0) 0 nil])
([nil nil ((1649 . 1653) (1645 . 1649) (#("size : int" 0 10 (fontified nil)) . -1645) (undo-tree-id24451 . -10) (1645 . 1655) (#("si" 0 1 (fontified t) 1 2 (fontified t)) . -1645) (undo-tree-id24452 . -2) (undo-tree-id24453 . -2) 1647 (1645 . 1647) (#("z" 0 1 (fontified t)) . -1645) (undo-tree-id24454 . -1) (undo-tree-id24455 . -1) (#("i" 0 1 (fontified t)) . -1646) (undo-tree-id24456 . -1) (undo-tree-id24457 . -1) 1647 (1646 . 1647) (1640 . 1646) (1623 . 1640) (1604 . 1623) (#("size" 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face font-lock-comment-face fontified t)) . 1604) (undo-tree-id24458 . -3)) nil (26026 39337 991121 0) 0 nil])
([nil nil ((1651 . 1652) (#("sm" 0 2 (fontified t)) . 1651) (undo-tree-id24450 . -1)) nil (26026 39337 991117 0) 0 nil])
([nil nil ((1703 . 1709) (#("har" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t)) . -1703) (undo-tree-id24443 . -3) 1706 (1703 . 1706) (#("hi" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t)) . -1703) (undo-tree-id24444 . -2) 1705 (1688 . 1705) (1670 . 1686) (#("            " 0 12 (c-is-sws t fontified nil)) . 1670) (1682 . 1684) (#("c" 0 1 (fontified t)) . -1682) (undo-tree-id24445 . -1) 1683 (1682 . 1683) (#(" " 0 1 (fontified t)) . -1682) (undo-tree-id24446 . -1) (#(" " 0 1 (fontified t)) . -1683) (undo-tree-id24447 . -1) (#(" " 0 1 (fontified t)) . -1684) (undo-tree-id24448 . -1) (#(" " 0 1 (fontified t)) . -1685) (undo-tree-id24449 . -1) 1686 (1669 . 1686) 1668) nil (26026 39337 991115 0) 0 nil])
([nil nil ((1709 . 1712)) nil (26026 39337 991111 0) 0 nil])
([nil nil ((#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1731) (1727 . 1731) 1757 (1753 . 1757)) nil (26026 39337 991110 0) 0 nil])
([nil nil ((#("// om noden inte hittas..." 0 1 (face font-lock-comment-delimiter-face c-in-sws t c-is-sws t fontified t) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 2 3 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face font-lock-comment-face c-in-sws t fontified t) 6 7 (face font-lock-comment-face c-in-sws t fontified t) 7 8 (face font-lock-comment-face c-in-sws t fontified t) 8 9 (face font-lock-comment-face c-in-sws t fontified t) 9 11 (face font-lock-comment-face c-in-sws t fontified t) 11 12 (face font-lock-comment-face c-in-sws t fontified t) 12 13 (face font-lock-comment-face c-in-sws t fontified t) 13 14 (face font-lock-comment-face c-in-sws t fontified t) 14 15 (face font-lock-comment-face c-in-sws t fontified t) 15 17 (face font-lock-comment-face c-in-sws t fontified t) 17 18 (face font-lock-comment-face c-in-sws t fontified t) 18 19 (face font-lock-comment-face c-in-sws t fontified t) 19 20 (face font-lock-comment-face c-in-sws t fontified t) 20 21 (face font-lock-comment-face c-in-sws t fontified t) 21 22 (face font-lock-comment-face c-in-sws t fontified t) 22 23 (face font-lock-comment-face c-in-sws t fontified t) 23 24 (c-in-sws t face font-lock-comment-face fontified t) 24 25 (c-in-sws t face font-lock-comment-face fontified t) 25 26 (c-in-sws t face font-lock-comment-face fontified t)) . 1686) (undo-tree-id24304 . -25) (undo-tree-id24305 . -6) (undo-tree-id24306 . -6) (undo-tree-id24307 . -6) (undo-tree-id24308 . -6) (undo-tree-id24309 . -6) (undo-tree-id24310 . -6) (undo-tree-id24311 . -6) (undo-tree-id24312 . -6) (undo-tree-id24313 . -6) (undo-tree-id24314 . -6) (undo-tree-id24315 . -6) (undo-tree-id24316 . -6) (undo-tree-id24317 . -6) (undo-tree-id24318 . -6) (undo-tree-id24319 . -6) (undo-tree-id24320 . -6) (undo-tree-id24321 . -6) (undo-tree-id24322 . -6) (undo-tree-id24323 . -6) (undo-tree-id24324 . -6) (undo-tree-id24325 . -6) (undo-tree-id24326 . -6) (undo-tree-id24327 . -6) (undo-tree-id24328 . -6) (undo-tree-id24329 . -6) (undo-tree-id24330 . -6) (undo-tree-id24331 . -6) (undo-tree-id24332 . -6) (undo-tree-id24333 . -6) (undo-tree-id24334 . -6) (undo-tree-id24335 . -6) (undo-tree-id24336 . -6) (undo-tree-id24337 . -6) (undo-tree-id24338 . -6) (undo-tree-id24339 . -6) (undo-tree-id24340 . -6) (undo-tree-id24341 . -6) (undo-tree-id24342 . -6) (undo-tree-id24343 . -6) (undo-tree-id24344 . -6) (undo-tree-id24345 . -6) (undo-tree-id24346 . -6) (undo-tree-id24347 . -6) (undo-tree-id24348 . -6) (undo-tree-id24349 . -6) (undo-tree-id24350 . -6) (undo-tree-id24351 . -6) (undo-tree-id24352 . -6) (undo-tree-id24353 . -6) (undo-tree-id24354 . -6) (undo-tree-id24355 . -6) (undo-tree-id24356 . -6) (undo-tree-id24357 . -6) (undo-tree-id24358 . -6) (undo-tree-id24359 . -6) (undo-tree-id24360 . -6) (undo-tree-id24361 . -6) (undo-tree-id24362 . -6) (undo-tree-id24363 . -6) (undo-tree-id24364 . -6) (undo-tree-id24365 . -6) (undo-tree-id24366 . -6) (undo-tree-id24367 . -6) (undo-tree-id24368 . -6) (undo-tree-id24369 . -6) (undo-tree-id24370 . -6) (undo-tree-id24371 . -6) (undo-tree-id24372 . -6) (undo-tree-id24373 . -6) (undo-tree-id24374 . -6) (undo-tree-id24375 . -6) (undo-tree-id24376 . -6) (undo-tree-id24377 . -6) (undo-tree-id24378 . -6) (undo-tree-id24379 . -6) (undo-tree-id24380 . -6) (undo-tree-id24381 . -6) (undo-tree-id24382 . -6) (undo-tree-id24383 . -6) (undo-tree-id24384 . -6) (undo-tree-id24385 . -6) (undo-tree-id24386 . -6) (undo-tree-id24387 . -6) (undo-tree-id24388 . -6) (undo-tree-id24389 . -6) (undo-tree-id24390 . -6) (undo-tree-id24391 . -6) (undo-tree-id24392 . -6) (undo-tree-id24393 . -6) (undo-tree-id24394 . -6) (undo-tree-id24395 . -6) (undo-tree-id24396 . -6) (undo-tree-id24397 . -6) (undo-tree-id24398 . -6) (undo-tree-id24399 . -6) (undo-tree-id24400 . -6) (undo-tree-id24401 . -6) (undo-tree-id24402 . -6) (undo-tree-id24403 . -6) (undo-tree-id24404 . -6) (undo-tree-id24405 . -6) (undo-tree-id24406 . -6) (undo-tree-id24407 . -6) (undo-tree-id24408 . -6) (undo-tree-id24409 . -6) (undo-tree-id24410 . -6) (undo-tree-id24411 . -6) (undo-tree-id24412 . -6) (undo-tree-id24413 . -6) (undo-tree-id24414 . -6) (undo-tree-id24415 . -6) (undo-tree-id24416 . -6) (undo-tree-id24417 . -6) (undo-tree-id24418 . -6) (undo-tree-id24419 . -6) (undo-tree-id24420 . -6) (undo-tree-id24421 . -6) (undo-tree-id24422 . -3) (undo-tree-id24423 . -3) (undo-tree-id24424 . -3) (undo-tree-id24425 . -3) (undo-tree-id24426 . -3) (undo-tree-id24427 . -3) (undo-tree-id24428 . -3) (undo-tree-id24429 . -3) (undo-tree-id24430 . -3) (undo-tree-id24431 . -3) (undo-tree-id24432 . -3) (undo-tree-id24433 . -3) (undo-tree-id24434 . -3) (undo-tree-id24435 . -3) (undo-tree-id24436 . -3) (undo-tree-id24437 . -3) (undo-tree-id24438 . -3) (undo-tree-id24439 . -3) (undo-tree-id24440 . -3) (undo-tree-id24441 . -26) (undo-tree-id24442 . -26)) nil (26026 39337 991108 0) 0 nil])
([nil nil ((#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1705) (undo-tree-id24280 . -1) (undo-tree-id24281 . -1) (undo-tree-id24282 . -1) (undo-tree-id24283 . -1) (undo-tree-id24284 . -1) (undo-tree-id24285 . -1) (undo-tree-id24286 . -1) (undo-tree-id24287 . -1) (undo-tree-id24288 . -1) (undo-tree-id24289 . -1) (undo-tree-id24290 . -1) (undo-tree-id24291 . -1) (undo-tree-id24292 . -1) (undo-tree-id24293 . -1) (undo-tree-id24294 . -1) (undo-tree-id24295 . -1) (undo-tree-id24296 . -1) (undo-tree-id24297 . -1) (undo-tree-id24298 . -1) (undo-tree-id24299 . -1) (undo-tree-id24300 . -1) (undo-tree-id24301 . -1) (undo-tree-id24302 . -1) (undo-tree-id24303 . -1) (1701 . 1705) 1708 (1707 . 1708)) nil (26026 39337 991062 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1733 . 1734) (nil fontified nil 1708 . 1734) (1708 . 1734) 1707) nil (26026 39337 991053 0) 0 nil])
([nil nil ((#("                
" 0 16 (c-in-sws t c-is-sws t fontified t) 16 17 (fontified t)) . 1670) (undo-tree-id24027 . -16) (undo-tree-id24028 . -15) (undo-tree-id24029 . -16) (undo-tree-id24030 . -16) (undo-tree-id24031 . -16) (undo-tree-id24032 . -16) (undo-tree-id24033 . -16) (undo-tree-id24034 . -16) (undo-tree-id24035 . -16) (undo-tree-id24036 . -16) (undo-tree-id24037 . -16) (undo-tree-id24038 . -16) (undo-tree-id24039 . -16) (undo-tree-id24040 . -16) (undo-tree-id24041 . -16) (undo-tree-id24042 . -16) (undo-tree-id24043 . -16) (undo-tree-id24044 . -16) (undo-tree-id24045 . -16) (undo-tree-id24046 . -16) (undo-tree-id24047 . -16) (undo-tree-id24048 . -16) (undo-tree-id24049 . -16) (undo-tree-id24050 . -16) (undo-tree-id24051 . -16) (undo-tree-id24052 . -16) (undo-tree-id24053 . -16) (undo-tree-id24054 . -16) (undo-tree-id24055 . -16) (undo-tree-id24056 . -16) (undo-tree-id24057 . -16) (undo-tree-id24058 . -16) (undo-tree-id24059 . -16) (undo-tree-id24060 . -16) (undo-tree-id24061 . -16) (undo-tree-id24062 . -16) (undo-tree-id24063 . -16) (undo-tree-id24064 . -16) (undo-tree-id24065 . -16) (undo-tree-id24066 . -16) (undo-tree-id24067 . -16) (undo-tree-id24068 . -16) (undo-tree-id24069 . -16) (undo-tree-id24070 . -16) (undo-tree-id24071 . -16) (undo-tree-id24072 . -16) (undo-tree-id24073 . -16) (undo-tree-id24074 . -16) (undo-tree-id24075 . -16) (undo-tree-id24076 . -16) (undo-tree-id24077 . -16) (undo-tree-id24078 . -16) (undo-tree-id24079 . -16) (undo-tree-id24080 . -16) (undo-tree-id24081 . -16) (undo-tree-id24082 . -16) (undo-tree-id24083 . -16) (undo-tree-id24084 . -16) (undo-tree-id24085 . -16) (undo-tree-id24086 . -16) (undo-tree-id24087 . -16) (undo-tree-id24088 . -16) (undo-tree-id24089 . -16) (undo-tree-id24090 . -16) (undo-tree-id24091 . -16) (undo-tree-id24092 . -16) (undo-tree-id24093 . -16) (undo-tree-id24094 . -16) (undo-tree-id24095 . -16) (undo-tree-id24096 . -16) (undo-tree-id24097 . -16) (undo-tree-id24098 . -16) (undo-tree-id24099 . -16) (undo-tree-id24100 . -16) (undo-tree-id24101 . -16) (undo-tree-id24102 . -16) (undo-tree-id24103 . -16) (undo-tree-id24104 . -16) (undo-tree-id24105 . -16) (undo-tree-id24106 . -16) (undo-tree-id24107 . -16) (undo-tree-id24108 . -16) (undo-tree-id24109 . -16) (undo-tree-id24110 . -16) (undo-tree-id24111 . -16) (undo-tree-id24112 . -16) (undo-tree-id24113 . -16) (undo-tree-id24114 . -16) (undo-tree-id24115 . -16) (undo-tree-id24116 . -16) (undo-tree-id24117 . -16) (undo-tree-id24118 . -16) (undo-tree-id24119 . -16) (undo-tree-id24120 . -16) (undo-tree-id24121 . -16) (undo-tree-id24122 . -16) (undo-tree-id24123 . -16) (undo-tree-id24124 . -16) (undo-tree-id24125 . -16) (undo-tree-id24126 . -16) (undo-tree-id24127 . -16) (undo-tree-id24128 . -16) (undo-tree-id24129 . -16) (undo-tree-id24130 . -16) (undo-tree-id24131 . -16) (undo-tree-id24132 . -16) (undo-tree-id24133 . -16) (undo-tree-id24134 . -16) (undo-tree-id24135 . -16) (undo-tree-id24136 . -16) (undo-tree-id24137 . -16) (undo-tree-id24138 . -16) (undo-tree-id24139 . -16) (undo-tree-id24140 . -16) (undo-tree-id24141 . -16) (undo-tree-id24142 . -16) (undo-tree-id24143 . -16) (undo-tree-id24144 . -16) (undo-tree-id24145 . -16) (undo-tree-id24146 . -16) (undo-tree-id24147 . -16) (undo-tree-id24148 . -16) (undo-tree-id24149 . -16) (undo-tree-id24150 . -16) (undo-tree-id24151 . -16) (undo-tree-id24152 . -16) (undo-tree-id24153 . -16) (undo-tree-id24154 . -16) (undo-tree-id24155 . -16) (undo-tree-id24156 . -16) (undo-tree-id24157 . -16) (undo-tree-id24158 . -16) (undo-tree-id24159 . -16) (undo-tree-id24160 . -16) (undo-tree-id24161 . -16) (undo-tree-id24162 . -16) (undo-tree-id24163 . -16) (undo-tree-id24164 . -16) (undo-tree-id24165 . -16) (undo-tree-id24166 . -16) (undo-tree-id24167 . -16) (undo-tree-id24168 . -16) (undo-tree-id24169 . -16) (undo-tree-id24170 . -16) (undo-tree-id24171 . -16) (undo-tree-id24172 . -16) (undo-tree-id24173 . -16) (undo-tree-id24174 . -16) (undo-tree-id24175 . -16) (undo-tree-id24176 . -16) (undo-tree-id24177 . -16) (undo-tree-id24178 . -16) (undo-tree-id24179 . -16) (undo-tree-id24180 . -16) (undo-tree-id24181 . -16) (undo-tree-id24182 . -16) (undo-tree-id24183 . -16) (undo-tree-id24184 . -16) (undo-tree-id24185 . -15) (undo-tree-id24186 . -15) (undo-tree-id24187 . -15) (undo-tree-id24188 . -15) (undo-tree-id24189 . -15) (undo-tree-id24190 . -15) (undo-tree-id24191 . -15) (undo-tree-id24192 . -15) (undo-tree-id24193 . -15) (undo-tree-id24194 . -15) (undo-tree-id24195 . -15) (undo-tree-id24196 . -15) (undo-tree-id24197 . -15) (undo-tree-id24198 . -15) (undo-tree-id24199 . -15) (undo-tree-id24200 . -15) (undo-tree-id24201 . -15) (undo-tree-id24202 . -15) (undo-tree-id24203 . -15) (undo-tree-id24204 . -15) (undo-tree-id24205 . -15) (undo-tree-id24206 . -15) (undo-tree-id24207 . -15) (undo-tree-id24208 . -15) (undo-tree-id24209 . -15) (undo-tree-id24210 . -15) (undo-tree-id24211 . -15) (undo-tree-id24212 . -15) (undo-tree-id24213 . -15) (undo-tree-id24214 . -15) (undo-tree-id24215 . -15) (undo-tree-id24216 . -15) (undo-tree-id24217 . -15) (undo-tree-id24218 . -15) (undo-tree-id24219 . -15) (undo-tree-id24220 . -15) (undo-tree-id24221 . -15) (undo-tree-id24222 . -17) (undo-tree-id24223 . -17) (undo-tree-id24224 . -15) (undo-tree-id24225 . -15) (undo-tree-id24226 . -15) (undo-tree-id24227 . -15) (undo-tree-id24228 . -15) (undo-tree-id24229 . -15) (undo-tree-id24230 . -15) (undo-tree-id24231 . -15) (undo-tree-id24232 . -15) (undo-tree-id24233 . -15) (undo-tree-id24234 . -15) (undo-tree-id24235 . -15) (undo-tree-id24236 . -15) (undo-tree-id24237 . -15) (undo-tree-id24238 . -15) (undo-tree-id24239 . -15) (undo-tree-id24240 . -15) (undo-tree-id24241 . -15) (undo-tree-id24242 . -15) (undo-tree-id24243 . -15) (undo-tree-id24244 . -15) (undo-tree-id24245 . -15) (undo-tree-id24246 . -15) (undo-tree-id24247 . -15) (undo-tree-id24248 . -15) (undo-tree-id24249 . -15) (undo-tree-id24250 . -15) (undo-tree-id24251 . -15) (undo-tree-id24252 . -15) (undo-tree-id24253 . -15) (undo-tree-id24254 . -15) (undo-tree-id24255 . -15) (undo-tree-id24256 . -15) (undo-tree-id24257 . -15) (undo-tree-id24258 . -15) (undo-tree-id24259 . -15) (undo-tree-id24260 . -15) (undo-tree-id24261 . -15) (undo-tree-id24262 . -15) (undo-tree-id24263 . -15) (undo-tree-id24264 . -15) (undo-tree-id24265 . -15) (undo-tree-id24266 . -15) (undo-tree-id24267 . -15) (undo-tree-id24268 . -15) (undo-tree-id24269 . -15) (undo-tree-id24270 . -15) (undo-tree-id24271 . -15) (undo-tree-id24272 . -15) (undo-tree-id24273 . -15) (undo-tree-id24274 . -15) (undo-tree-id24275 . -15) (undo-tree-id24276 . -15) (undo-tree-id24277 . -15) (undo-tree-id24278 . -15) (undo-tree-id24279 . -17) 1685) nil (26026 39337 991049 0) 0 nil])
([nil nil ((1759 . 1760) (#("=" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -1759) (undo-tree-id23972 . -1) (undo-tree-id23973 . -1) (undo-tree-id23974 . -1) (undo-tree-id23975 . -1) (undo-tree-id23976 . -1) (undo-tree-id23977 . -1) (undo-tree-id23978 . -1) (undo-tree-id23979 . -1) (undo-tree-id23980 . -1) (undo-tree-id23981 . -1) (undo-tree-id23982 . -1) (undo-tree-id23983 . -1) (undo-tree-id23984 . -1) (undo-tree-id23985 . -1) (undo-tree-id23986 . -1) (undo-tree-id23987 . -1) (undo-tree-id23988 . -1) (undo-tree-id23989 . -1) (undo-tree-id23990 . -1) (undo-tree-id23991 . -1) (undo-tree-id23992 . -1) (undo-tree-id23993 . -1) (undo-tree-id23994 . -1) (undo-tree-id23995 . -1) (undo-tree-id23996 . -1) (undo-tree-id23997 . -1) (undo-tree-id23998 . -1) (undo-tree-id23999 . -1) (undo-tree-id24000 . -1) (undo-tree-id24001 . -1) (undo-tree-id24002 . -1) (undo-tree-id24003 . -1) (undo-tree-id24004 . -1) (undo-tree-id24005 . -1) (undo-tree-id24006 . -1) (undo-tree-id24007 . -1) (undo-tree-id24008 . -1) (undo-tree-id24009 . -1) (undo-tree-id24010 . -1) (undo-tree-id24011 . -1) (undo-tree-id24012 . -1) (undo-tree-id24013 . -1) (undo-tree-id24014 . -1) (undo-tree-id24015 . -1) (undo-tree-id24016 . -1) (undo-tree-id24017 . -1) (undo-tree-id24018 . -1) (undo-tree-id24019 . -1) (undo-tree-id24020 . -1) (undo-tree-id24021 . -1) (undo-tree-id24022 . -1) (undo-tree-id24023 . -1) (undo-tree-id24024 . -1) 1760 (1758 . 1760) (#("," 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 1758) (undo-tree-id24025 . -1) (undo-tree-id24026 . -1)) nil (26026 39337 990962 0) 0 nil])
([nil nil ((1436 . 1445) (1434 . 1436) (1417 . 1434) 1417) nil (26026 39337 990943 0) 0 nil])
([nil nil ((#("                // ... länka om omkringliggande noder
" 0 16 (fontified t c-is-sws t c-in-sws t) 16 17 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 17 18 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 18 19 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face font-lock-comment-face fontified t c-in-sws t) 40 41 (face font-lock-comment-face fontified t c-in-sws t) 41 42 (face font-lock-comment-face fontified t c-in-sws t) 42 43 (face font-lock-comment-face fontified t c-in-sws t) 43 44 (face font-lock-comment-face fontified t c-in-sws t) 44 45 (face font-lock-comment-face fontified t c-in-sws t) 45 46 (face font-lock-comment-face fontified t c-in-sws t) 46 48 (face font-lock-comment-face fontified t c-in-sws t) 48 49 (face font-lock-comment-face fontified t c-in-sws t) 49 50 (face font-lock-comment-face fontified t c-in-sws t) 50 51 (face font-lock-comment-face fontified t c-in-sws t) 51 52 (face font-lock-comment-face fontified t c-in-sws t) 52 53 (face font-lock-comment-face fontified t c-in-sws t) 53 54 (c-in-sws t face font-lock-comment-face fontified t)) . 1235) (undo-tree-id23818 . -53) (undo-tree-id23819 . -26) (undo-tree-id23820 . -54) (undo-tree-id23821 . -54) (undo-tree-id23822 . -54) (undo-tree-id23823 . -54) (undo-tree-id23824 . -54) (undo-tree-id23825 . -54) (undo-tree-id23826 . -54) (undo-tree-id23827 . -54) (undo-tree-id23828 . -54) (undo-tree-id23829 . -54) (undo-tree-id23830 . -54) (undo-tree-id23831 . -54) (undo-tree-id23832 . -54) (undo-tree-id23833 . -41) (undo-tree-id23834 . -41) (undo-tree-id23835 . -41) (undo-tree-id23836 . -41) (undo-tree-id23837 . -41) (undo-tree-id23838 . -41) (undo-tree-id23839 . -41) (undo-tree-id23840 . -41) (undo-tree-id23841 . -41) (undo-tree-id23842 . -41) (undo-tree-id23843 . -41) (undo-tree-id23844 . -41) (undo-tree-id23845 . -41) (undo-tree-id23846 . -41) (undo-tree-id23847 . -41) (undo-tree-id23848 . -41) (undo-tree-id23849 . -41) (undo-tree-id23850 . -41) (undo-tree-id23851 . -41) (undo-tree-id23852 . -41) (undo-tree-id23853 . -41) (undo-tree-id23854 . -41) (undo-tree-id23855 . -41) (undo-tree-id23856 . -41) (undo-tree-id23857 . -41) (undo-tree-id23858 . -41) (undo-tree-id23859 . -54) (undo-tree-id23860 . -54) (undo-tree-id23861 . -54) (undo-tree-id23862 . -54) (undo-tree-id23863 . -54) (undo-tree-id23864 . -54) (undo-tree-id23865 . -54) (undo-tree-id23866 . -54) (undo-tree-id23867 . -54) (undo-tree-id23868 . -54) (undo-tree-id23869 . -54) (undo-tree-id23870 . -54) (undo-tree-id23871 . -54) (undo-tree-id23872 . -54) (undo-tree-id23873 . -54) (undo-tree-id23874 . -54) (undo-tree-id23875 . -54) (undo-tree-id23876 . -54) (undo-tree-id23877 . -54) (undo-tree-id23878 . -54) (undo-tree-id23879 . -54) (undo-tree-id23880 . -54) (undo-tree-id23881 . -54) (undo-tree-id23882 . -54) (undo-tree-id23883 . -54) (undo-tree-id23884 . -54) (undo-tree-id23885 . -26) (undo-tree-id23886 . -26) (undo-tree-id23887 . -26) (undo-tree-id23888 . -26) (undo-tree-id23889 . -26) (undo-tree-id23890 . -26) (undo-tree-id23891 . -26) (undo-tree-id23892 . -26) (undo-tree-id23893 . -26) (undo-tree-id23894 . -26) (undo-tree-id23895 . -26) (undo-tree-id23896 . -26) (undo-tree-id23897 . -26) (undo-tree-id23898 . -26) (undo-tree-id23899 . -26) (undo-tree-id23900 . -26) (undo-tree-id23901 . -26) (undo-tree-id23902 . -26) (undo-tree-id23903 . -26) (undo-tree-id23904 . -26) (undo-tree-id23905 . -26) (undo-tree-id23906 . -26) (undo-tree-id23907 . -26) (undo-tree-id23908 . -26) (undo-tree-id23909 . -26) (undo-tree-id23910 . -26) (undo-tree-id23911 . -26) (undo-tree-id23912 . -26) (undo-tree-id23913 . -26) (undo-tree-id23914 . -26) (undo-tree-id23915 . -26) (undo-tree-id23916 . -26) (undo-tree-id23917 . -26) (undo-tree-id23918 . -26) (undo-tree-id23919 . -26) (undo-tree-id23920 . -26) (undo-tree-id23921 . -26) (undo-tree-id23922 . -26) (undo-tree-id23923 . -26) (undo-tree-id23924 . -26) (undo-tree-id23925 . -26) (undo-tree-id23926 . -26) (undo-tree-id23927 . -26) (undo-tree-id23928 . -26) (undo-tree-id23929 . -26) (undo-tree-id23930 . -26) (undo-tree-id23931 . -26) (undo-tree-id23932 . -26) (undo-tree-id23933 . -26) (undo-tree-id23934 . -26) (undo-tree-id23935 . -26) (undo-tree-id23936 . -26) (undo-tree-id23937 . -26) (undo-tree-id23938 . -26) (undo-tree-id23939 . -26) (undo-tree-id23940 . -26) (undo-tree-id23941 . -26) (undo-tree-id23942 . -26) (undo-tree-id23943 . -26) (undo-tree-id23944 . -26) (undo-tree-id23945 . -26) (undo-tree-id23946 . -26) (undo-tree-id23947 . -26) (undo-tree-id23948 . -26) (undo-tree-id23949 . -26) (undo-tree-id23950 . -26) (undo-tree-id23951 . -26) (undo-tree-id23952 . -26) (undo-tree-id23953 . -26) (undo-tree-id23954 . -26) (undo-tree-id23955 . -26) (undo-tree-id23956 . -26) (undo-tree-id23957 . -26) (undo-tree-id23958 . -26) (undo-tree-id23959 . -26) (undo-tree-id23960 . -26) (undo-tree-id23961 . -26) (undo-tree-id23962 . -26) (undo-tree-id23963 . -26) (undo-tree-id23964 . -26) (undo-tree-id23965 . -26) (undo-tree-id23966 . -26) (undo-tree-id23967 . -26) (undo-tree-id23968 . -26) (undo-tree-id23969 . -26) (undo-tree-id23970 . -26) (undo-tree-id23971 . -54) 1261) nil (26026 39337 990940 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1235) (undo-tree-id23817 . -1)) nil (26026 39337 990888 0) 0 nil])
([nil nil ((1391 . 1404) (#("previous" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 6 (face font-lock-comment-face fontified t) 6 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-face fontified t)) . -1391) (undo-tree-id23341 . -8) (undo-tree-id23342 . -1) (undo-tree-id23343 . -1) (undo-tree-id23344 . -1) (undo-tree-id23345 . -1) (undo-tree-id23346 . -1) (undo-tree-id23347 . -1) (undo-tree-id23348 . -1) (undo-tree-id23349 . -1) (undo-tree-id23350 . -1) (undo-tree-id23351 . -1) (undo-tree-id23352 . -1) (undo-tree-id23353 . -1) (undo-tree-id23354 . -1) (undo-tree-id23355 . -2) (undo-tree-id23356 . -2) (undo-tree-id23357 . -2) (undo-tree-id23358 . -2) (undo-tree-id23359 . -2) (undo-tree-id23360 . -2) (undo-tree-id23361 . -2) (undo-tree-id23362 . -2) (undo-tree-id23363 . -2) (undo-tree-id23364 . -2) (undo-tree-id23365 . -2) (undo-tree-id23366 . -2) (undo-tree-id23367 . -2) (undo-tree-id23368 . -3) (undo-tree-id23369 . -3) (undo-tree-id23370 . -3) (undo-tree-id23371 . -3) (undo-tree-id23372 . -3) (undo-tree-id23373 . -3) (undo-tree-id23374 . -3) (undo-tree-id23375 . -3) (undo-tree-id23376 . -3) (undo-tree-id23377 . -3) (undo-tree-id23378 . -3) (undo-tree-id23379 . -3) (undo-tree-id23380 . -3) (undo-tree-id23381 . -3) (undo-tree-id23382 . -3) (undo-tree-id23383 . -3) (undo-tree-id23384 . -3) (undo-tree-id23385 . -3) (undo-tree-id23386 . -3) (undo-tree-id23387 . -4) (undo-tree-id23388 . -4) (undo-tree-id23389 . -4) (undo-tree-id23390 . -4) (undo-tree-id23391 . -4) (undo-tree-id23392 . -4) (undo-tree-id23393 . -4) (undo-tree-id23394 . -4) (undo-tree-id23395 . -4) (undo-tree-id23396 . -4) (undo-tree-id23397 . -4) (undo-tree-id23398 . -4) (undo-tree-id23399 . -4) (undo-tree-id23400 . -5) (undo-tree-id23401 . -5) (undo-tree-id23402 . -5) (undo-tree-id23403 . -5) (undo-tree-id23404 . -5) (undo-tree-id23405 . -5) (undo-tree-id23406 . -5) (undo-tree-id23407 . -5) (undo-tree-id23408 . -5) (undo-tree-id23409 . -5) (undo-tree-id23410 . -5) (undo-tree-id23411 . -5) (undo-tree-id23412 . -5) (undo-tree-id23413 . -5) (undo-tree-id23414 . -5) (undo-tree-id23415 . -5) (undo-tree-id23416 . -5) (undo-tree-id23417 . -5) (undo-tree-id23418 . -5) (undo-tree-id23419 . -6) (undo-tree-id23420 . -6) (undo-tree-id23421 . -6) (undo-tree-id23422 . -6) (undo-tree-id23423 . -6) (undo-tree-id23424 . -6) (undo-tree-id23425 . -6) (undo-tree-id23426 . -6) (undo-tree-id23427 . -6) (undo-tree-id23428 . -6) (undo-tree-id23429 . -6) (undo-tree-id23430 . -6) (undo-tree-id23431 . -6) (undo-tree-id23432 . -6) (undo-tree-id23433 . -6) (undo-tree-id23434 . -6) (undo-tree-id23435 . -6) (undo-tree-id23436 . -6) (undo-tree-id23437 . -6) (undo-tree-id23438 . -6) (undo-tree-id23439 . -6) (undo-tree-id23440 . -6) (undo-tree-id23441 . -6) (undo-tree-id23442 . -6) (undo-tree-id23443 . -6) (undo-tree-id23444 . -7) (undo-tree-id23445 . -7) (undo-tree-id23446 . -7) (undo-tree-id23447 . -7) (undo-tree-id23448 . -7) (undo-tree-id23449 . -7) (undo-tree-id23450 . -7) (undo-tree-id23451 . -7) (undo-tree-id23452 . -7) (undo-tree-id23453 . -7) (undo-tree-id23454 . -7) (undo-tree-id23455 . -7) (undo-tree-id23456 . -7) (undo-tree-id23457 . -7) (undo-tree-id23458 . -7) (undo-tree-id23459 . -7) (undo-tree-id23460 . -7) (undo-tree-id23461 . -7) (undo-tree-id23462 . -7) (undo-tree-id23463 . -8) (undo-tree-id23464 . -8) (undo-tree-id23465 . -8) (undo-tree-id23466 . -8) (undo-tree-id23467 . -8) (undo-tree-id23468 . -8) (undo-tree-id23469 . -8) (undo-tree-id23470 . -8) (undo-tree-id23471 . -8) (undo-tree-id23472 . -8) (undo-tree-id23473 . -8) (undo-tree-id23474 . -8) (undo-tree-id23475 . -8) (undo-tree-id23476 . -8) (undo-tree-id23477 . -8) (undo-tree-id23478 . -8) (undo-tree-id23479 . -8) (undo-tree-id23480 . -8) (undo-tree-id23481 . -8) (undo-tree-id23482 . -8) (undo-tree-id23483 . -8) (undo-tree-id23484 . -8) (undo-tree-id23485 . -8) (undo-tree-id23486 . -8) (undo-tree-id23487 . -8) (undo-tree-id23488 . -8) (undo-tree-id23489 . -8) (undo-tree-id23490 . -8) (undo-tree-id23491 . -8) (undo-tree-id23492 . -8) (undo-tree-id23493 . -8) (undo-tree-id23494 . -8) 1399 (1391 . 1399) (#("omkringliggande" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 5 (face font-lock-comment-face fontified t) 5 6 (face font-lock-comment-face fontified t) 6 7 (face font-lock-comment-face fontified t) 7 8 (face font-lock-comment-face fontified t) 8 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t) 10 11 (face font-lock-comment-face fontified t) 11 12 (face font-lock-comment-face fontified t) 12 13 (face font-lock-comment-face fontified t) 13 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t)) . -1391) (undo-tree-id23495 . -15) (undo-tree-id23496 . -1) (undo-tree-id23497 . -1) (undo-tree-id23498 . -1) (undo-tree-id23499 . -1) (undo-tree-id23500 . -1) (undo-tree-id23501 . -1) (undo-tree-id23502 . -1) (undo-tree-id23503 . -1) (undo-tree-id23504 . -1) (undo-tree-id23505 . -1) (undo-tree-id23506 . -1) (undo-tree-id23507 . -1) (undo-tree-id23508 . -1) (undo-tree-id23509 . -2) (undo-tree-id23510 . -2) (undo-tree-id23511 . -2) (undo-tree-id23512 . -2) (undo-tree-id23513 . -2) (undo-tree-id23514 . -2) (undo-tree-id23515 . -2) (undo-tree-id23516 . -2) (undo-tree-id23517 . -2) (undo-tree-id23518 . -2) (undo-tree-id23519 . -2) (undo-tree-id23520 . -2) (undo-tree-id23521 . -2) (undo-tree-id23522 . -2) (undo-tree-id23523 . -2) (undo-tree-id23524 . -2) (undo-tree-id23525 . -2) (undo-tree-id23526 . -2) (undo-tree-id23527 . -2) (undo-tree-id23528 . -3) (undo-tree-id23529 . -3) (undo-tree-id23530 . -3) (undo-tree-id23531 . -3) (undo-tree-id23532 . -3) (undo-tree-id23533 . -3) (undo-tree-id23534 . -3) (undo-tree-id23535 . -3) (undo-tree-id23536 . -3) (undo-tree-id23537 . -3) (undo-tree-id23538 . -3) (undo-tree-id23539 . -3) (undo-tree-id23540 . -3) (undo-tree-id23541 . -3) (undo-tree-id23542 . -3) (undo-tree-id23543 . -3) (undo-tree-id23544 . -3) (undo-tree-id23545 . -3) (undo-tree-id23546 . -3) (undo-tree-id23547 . -5) (undo-tree-id23548 . -5) (undo-tree-id23549 . -5) (undo-tree-id23550 . -5) (undo-tree-id23551 . -5) (undo-tree-id23552 . -5) (undo-tree-id23553 . -5) (undo-tree-id23554 . -5) (undo-tree-id23555 . -5) (undo-tree-id23556 . -5) (undo-tree-id23557 . -5) (undo-tree-id23558 . -5) (undo-tree-id23559 . -5) (undo-tree-id23560 . -6) (undo-tree-id23561 . -6) (undo-tree-id23562 . -6) (undo-tree-id23563 . -6) (undo-tree-id23564 . -6) (undo-tree-id23565 . -6) (undo-tree-id23566 . -6) (undo-tree-id23567 . -6) (undo-tree-id23568 . -6) (undo-tree-id23569 . -6) (undo-tree-id23570 . -6) (undo-tree-id23571 . -6) (undo-tree-id23572 . -6) (undo-tree-id23573 . -6) (undo-tree-id23574 . -6) (undo-tree-id23575 . -6) (undo-tree-id23576 . -6) (undo-tree-id23577 . -6) (undo-tree-id23578 . -6) (undo-tree-id23579 . -7) (undo-tree-id23580 . -7) (undo-tree-id23581 . -7) (undo-tree-id23582 . -7) (undo-tree-id23583 . -7) (undo-tree-id23584 . -7) (undo-tree-id23585 . -7) (undo-tree-id23586 . -7) (undo-tree-id23587 . -7) (undo-tree-id23588 . -7) (undo-tree-id23589 . -7) (undo-tree-id23590 . -7) (undo-tree-id23591 . -7) (undo-tree-id23592 . -7) (undo-tree-id23593 . -7) (undo-tree-id23594 . -7) (undo-tree-id23595 . -7) (undo-tree-id23596 . -7) (undo-tree-id23597 . -7) (undo-tree-id23598 . -7) (undo-tree-id23599 . -7) (undo-tree-id23600 . -7) (undo-tree-id23601 . -7) (undo-tree-id23602 . -7) (undo-tree-id23603 . -7) (undo-tree-id23604 . -8) (undo-tree-id23605 . -8) (undo-tree-id23606 . -8) (undo-tree-id23607 . -8) (undo-tree-id23608 . -8) (undo-tree-id23609 . -8) (undo-tree-id23610 . -8) (undo-tree-id23611 . -8) (undo-tree-id23612 . -8) (undo-tree-id23613 . -8) (undo-tree-id23614 . -8) (undo-tree-id23615 . -8) (undo-tree-id23616 . -8) (undo-tree-id23617 . -8) (undo-tree-id23618 . -8) (undo-tree-id23619 . -8) (undo-tree-id23620 . -8) (undo-tree-id23621 . -8) (undo-tree-id23622 . -8) (undo-tree-id23623 . -9) (undo-tree-id23624 . -9) (undo-tree-id23625 . -9) (undo-tree-id23626 . -9) (undo-tree-id23627 . -9) (undo-tree-id23628 . -9) (undo-tree-id23629 . -9) (undo-tree-id23630 . -9) (undo-tree-id23631 . -9) (undo-tree-id23632 . -9) (undo-tree-id23633 . -9) (undo-tree-id23634 . -9) (undo-tree-id23635 . -9) (undo-tree-id23636 . -9) (undo-tree-id23637 . -9) (undo-tree-id23638 . -9) (undo-tree-id23639 . -9) (undo-tree-id23640 . -9) (undo-tree-id23641 . -9) (undo-tree-id23642 . -10) (undo-tree-id23643 . -10) (undo-tree-id23644 . -10) (undo-tree-id23645 . -10) (undo-tree-id23646 . -10) (undo-tree-id23647 . -10) (undo-tree-id23648 . -10) (undo-tree-id23649 . -10) (undo-tree-id23650 . -10) (undo-tree-id23651 . -10) (undo-tree-id23652 . -10) (undo-tree-id23653 . -10) (undo-tree-id23654 . -10) (undo-tree-id23655 . -10) (undo-tree-id23656 . -10) (undo-tree-id23657 . -10) (undo-tree-id23658 . -10) (undo-tree-id23659 . -10) (undo-tree-id23660 . -10) (undo-tree-id23661 . -11) (undo-tree-id23662 . -11) (undo-tree-id23663 . -11) (undo-tree-id23664 . -11) (undo-tree-id23665 . -11) (undo-tree-id23666 . -11) (undo-tree-id23667 . -11) (undo-tree-id23668 . -11) (undo-tree-id23669 . -11) (undo-tree-id23670 . -11) (undo-tree-id23671 . -11) (undo-tree-id23672 . -11) (undo-tree-id23673 . -11) (undo-tree-id23674 . -11) (undo-tree-id23675 . -11) (undo-tree-id23676 . -11) (undo-tree-id23677 . -11) (undo-tree-id23678 . -11) (undo-tree-id23679 . -11) (undo-tree-id23680 . -12) (undo-tree-id23681 . -12) (undo-tree-id23682 . -12) (undo-tree-id23683 . -12) (undo-tree-id23684 . -12) (undo-tree-id23685 . -12) (undo-tree-id23686 . -12) (undo-tree-id23687 . -13) (undo-tree-id23688 . -13) (undo-tree-id23689 . -13) (undo-tree-id23690 . -13) (undo-tree-id23691 . -13) (undo-tree-id23692 . -13) (undo-tree-id23693 . -13) (undo-tree-id23694 . -13) (undo-tree-id23695 . -13) (undo-tree-id23696 . -13) (undo-tree-id23697 . -13) (undo-tree-id23698 . -13) (undo-tree-id23699 . -13) (undo-tree-id23700 . -13) (undo-tree-id23701 . -13) (undo-tree-id23702 . -13) (undo-tree-id23703 . -13) (undo-tree-id23704 . -13) (undo-tree-id23705 . -13) (undo-tree-id23706 . -14) (undo-tree-id23707 . -14) (undo-tree-id23708 . -14) (undo-tree-id23709 . -14) (undo-tree-id23710 . -14) (undo-tree-id23711 . -14) (undo-tree-id23712 . -14) (undo-tree-id23713 . -14) (undo-tree-id23714 . -14) (undo-tree-id23715 . -14) (undo-tree-id23716 . -14) (undo-tree-id23717 . -14) (undo-tree-id23718 . -14) (undo-tree-id23719 . -15) (undo-tree-id23720 . -15) (undo-tree-id23721 . -15) (undo-tree-id23722 . -15) (undo-tree-id23723 . -15) (undo-tree-id23724 . -15) (undo-tree-id23725 . -15) (undo-tree-id23726 . -15) (undo-tree-id23727 . -15) (undo-tree-id23728 . -15) (undo-tree-id23729 . -15) (undo-tree-id23730 . -15) (undo-tree-id23731 . -15) (undo-tree-id23732 . -15) (undo-tree-id23733 . -15) (undo-tree-id23734 . -15) (undo-tree-id23735 . -15) (undo-tree-id23736 . -15) (undo-tree-id23737 . -15) (undo-tree-id23738 . -15) (undo-tree-id23739 . -15) (undo-tree-id23740 . -15) (undo-tree-id23741 . -15) (undo-tree-id23742 . -15) (undo-tree-id23743 . -15) (undo-tree-id23744 . -15) (undo-tree-id23745 . -15) (undo-tree-id23746 . -15) (undo-tree-id23747 . -15) (undo-tree-id23748 . -15) (undo-tree-id23749 . -15) (undo-tree-id23750 . -15) (undo-tree-id23751 . -15) (undo-tree-id23752 . -15) (undo-tree-id23753 . -15) (undo-tree-id23754 . -15) (undo-tree-id23755 . -15) (undo-tree-id23756 . -15) (undo-tree-id23757 . -15) 1406 (1394 . 1406) (1391 . 1394) (#("pre" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t)) . -1391) (undo-tree-id23758 . -3) (undo-tree-id23759 . -1) (undo-tree-id23760 . -1) (undo-tree-id23761 . -1) (undo-tree-id23762 . -1) (undo-tree-id23763 . -1) (undo-tree-id23764 . -1) (undo-tree-id23765 . -1) (undo-tree-id23766 . -1) (undo-tree-id23767 . -1) (undo-tree-id23768 . -1) (undo-tree-id23769 . -1) (undo-tree-id23770 . -1) (undo-tree-id23771 . -1) (undo-tree-id23772 . -2) (undo-tree-id23773 . -2) (undo-tree-id23774 . -2) (undo-tree-id23775 . -2) (undo-tree-id23776 . -2) (undo-tree-id23777 . -2) (undo-tree-id23778 . -2) (undo-tree-id23779 . -2) (undo-tree-id23780 . -2) (undo-tree-id23781 . -2) (undo-tree-id23782 . -2) (undo-tree-id23783 . -2) (undo-tree-id23784 . -2) (undo-tree-id23785 . -2) (undo-tree-id23786 . -2) (undo-tree-id23787 . -2) (undo-tree-id23788 . -2) (undo-tree-id23789 . -2) (undo-tree-id23790 . -2) (undo-tree-id23791 . -3) (undo-tree-id23792 . -3) (undo-tree-id23793 . -3) (undo-tree-id23794 . -3) (undo-tree-id23795 . -3) (undo-tree-id23796 . -3) (undo-tree-id23797 . -3) (undo-tree-id23798 . -3) (undo-tree-id23799 . -3) (undo-tree-id23800 . -3) (undo-tree-id23801 . -3) (undo-tree-id23802 . -3) (undo-tree-id23803 . -3) (undo-tree-id23804 . -3) (undo-tree-id23805 . -3) (undo-tree-id23806 . -3) (undo-tree-id23807 . -3) (undo-tree-id23808 . -3) (undo-tree-id23809 . -3) (undo-tree-id23810 . -3) (undo-tree-id23811 . -3) (undo-tree-id23812 . -3) (undo-tree-id23813 . -3) (undo-tree-id23814 . -3) (undo-tree-id23815 . -3) (undo-tree-id23816 . -3) 1394 (1390 . 1394)) nil (26026 39337 990880 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 1473) (undo-tree-id23312 . -1) (undo-tree-id23313 . -1) (undo-tree-id23314 . -1) (undo-tree-id23315 . -1) (undo-tree-id23316 . -1) (undo-tree-id23317 . -1) (undo-tree-id23318 . -1) (undo-tree-id23319 . -1) (undo-tree-id23320 . -1) (undo-tree-id23321 . -1) (undo-tree-id23322 . -1) (undo-tree-id23323 . -1) (undo-tree-id23324 . -1) (undo-tree-id23325 . -1) (undo-tree-id23326 . -1) (undo-tree-id23327 . -1) (undo-tree-id23328 . -1) (undo-tree-id23329 . -1) (undo-tree-id23330 . -1) (undo-tree-id23331 . -1) (undo-tree-id23332 . -1) (undo-tree-id23333 . -1) (undo-tree-id23334 . -1) (undo-tree-id23335 . -1) (undo-tree-id23336 . -1) (undo-tree-id23337 . -1) (undo-tree-id23338 . -1) (undo-tree-id23339 . -1) (undo-tree-id23340 . -1)) nil (26026 39337 990722 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-comment-face fontified t)) . 1473) (undo-tree-id23310 . -1) (undo-tree-id23311 . -1)) nil (26026 39337 990711 0) 0 nil])
([nil nil ((1882 . 1900) (1861 . 1882) (1859 . 1861) (1854 . 1859) 1854) nil (26026 39337 990710 0) 0 nil])
([nil nil ((2091 . 2098) (2077 . 2091) (#("el" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t)) . -2077) (undo-tree-id23251 . -2) (undo-tree-id23252 . -1) (undo-tree-id23253 . -1) (undo-tree-id23254 . -1) (undo-tree-id23255 . -1) (undo-tree-id23256 . -1) (undo-tree-id23257 . -1) (undo-tree-id23258 . -1) (undo-tree-id23259 . -1) (undo-tree-id23260 . -1) (undo-tree-id23261 . -1) (undo-tree-id23262 . -1) (undo-tree-id23263 . -1) (undo-tree-id23264 . -1) (undo-tree-id23265 . -2) (undo-tree-id23266 . -2) (undo-tree-id23267 . -2) (undo-tree-id23268 . -2) (undo-tree-id23269 . -2) (undo-tree-id23270 . -2) (undo-tree-id23271 . -2) (undo-tree-id23272 . -2) (undo-tree-id23273 . -2) (undo-tree-id23274 . -2) (undo-tree-id23275 . -2) (undo-tree-id23276 . -2) (undo-tree-id23277 . -2) (undo-tree-id23278 . -2) (undo-tree-id23279 . -2) (undo-tree-id23280 . -2) (undo-tree-id23281 . -2) (undo-tree-id23282 . -2) (undo-tree-id23283 . -2) (undo-tree-id23284 . -2) (undo-tree-id23285 . -2) (undo-tree-id23286 . -2) (undo-tree-id23287 . -2) (undo-tree-id23288 . -2) (undo-tree-id23289 . -2) (undo-tree-id23290 . -2) (undo-tree-id23291 . -2) (undo-tree-id23292 . -2) (undo-tree-id23293 . -2) (undo-tree-id23294 . -2) (undo-tree-id23295 . -2) (undo-tree-id23296 . -2) (undo-tree-id23297 . -2) (undo-tree-id23298 . -2) (undo-tree-id23299 . -2) (undo-tree-id23300 . -2) (undo-tree-id23301 . -2) (undo-tree-id23302 . -2) (undo-tree-id23303 . -2) (undo-tree-id23304 . -2) (undo-tree-id23305 . -2) (undo-tree-id23306 . -2) (undo-tree-id23307 . -2) (undo-tree-id23308 . -2) (undo-tree-id23309 . -2) 2079 (2068 . 2079) (2066 . 2068) (2061 . 2066) 2061) nil (26026 39337 990708 0) 0 nil])
([nil nil ((2295 . 2313) (2274 . 2295) (2272 . 2274) (2267 . 2272) 2267) nil (26026 39337 990688 0) 0 nil])
([nil nil ((2793 . 2795) (2772 . 2793) (2751 . 2772) (2746 . 2751) (2744 . 2746) (#("*" 0 1 (fontified t)) . -2744) (undo-tree-id23146 . -1) (undo-tree-id23147 . -1) (undo-tree-id23148 . -1) (undo-tree-id23149 . -1) (undo-tree-id23150 . -1) (undo-tree-id23151 . -1) (undo-tree-id23152 . -1) (undo-tree-id23153 . -1) (undo-tree-id23154 . -1) (undo-tree-id23155 . -1) (undo-tree-id23156 . -1) (undo-tree-id23157 . -1) (undo-tree-id23158 . -1) (undo-tree-id23159 . -1) (undo-tree-id23160 . -1) (undo-tree-id23161 . -1) (undo-tree-id23162 . -1) (undo-tree-id23163 . -1) (undo-tree-id23164 . -1) (undo-tree-id23165 . -1) (undo-tree-id23166 . -1) (undo-tree-id23167 . -1) (undo-tree-id23168 . -1) (undo-tree-id23169 . -1) (undo-tree-id23170 . -1) (undo-tree-id23171 . -1) (undo-tree-id23172 . -1) (undo-tree-id23173 . -1) (undo-tree-id23174 . -1) (undo-tree-id23175 . -1) (undo-tree-id23176 . -1) (undo-tree-id23177 . -1) (undo-tree-id23178 . -1) (undo-tree-id23179 . -1) (undo-tree-id23180 . -1) (undo-tree-id23181 . -1) (undo-tree-id23182 . -1) (undo-tree-id23183 . -1) (undo-tree-id23184 . -1) (undo-tree-id23185 . -1) (undo-tree-id23186 . -1) (undo-tree-id23187 . -1) (undo-tree-id23188 . -1) (undo-tree-id23189 . -1) (undo-tree-id23190 . -1) (undo-tree-id23191 . -1) (undo-tree-id23192 . -1) (undo-tree-id23193 . -1) (undo-tree-id23194 . -1) (undo-tree-id23195 . -1) (undo-tree-id23196 . -1) (undo-tree-id23197 . -1) (undo-tree-id23198 . -1) (undo-tree-id23199 . -1) (undo-tree-id23200 . -1) (undo-tree-id23201 . -1) (undo-tree-id23202 . -1) (undo-tree-id23203 . -1) (undo-tree-id23204 . -1) (undo-tree-id23205 . -1) (undo-tree-id23206 . -1) (undo-tree-id23207 . -1) (undo-tree-id23208 . -1) (undo-tree-id23209 . -1) (undo-tree-id23210 . -1) (#("*" 0 1 (fontified t)) . -2745) (undo-tree-id23211 . -1) (undo-tree-id23212 . -1) (undo-tree-id23213 . -1) (undo-tree-id23214 . -1) (undo-tree-id23215 . -1) (undo-tree-id23216 . -1) (undo-tree-id23217 . -1) (undo-tree-id23218 . -1) (undo-tree-id23219 . -1) (undo-tree-id23220 . -1) (undo-tree-id23221 . -1) (undo-tree-id23222 . -1) (undo-tree-id23223 . -1) (undo-tree-id23224 . -1) (undo-tree-id23225 . -1) (undo-tree-id23226 . -1) (undo-tree-id23227 . -1) (undo-tree-id23228 . -1) (undo-tree-id23229 . -1) (undo-tree-id23230 . -1) (undo-tree-id23231 . -1) (undo-tree-id23232 . -1) (undo-tree-id23233 . -1) (undo-tree-id23234 . -1) (undo-tree-id23235 . -1) (undo-tree-id23236 . -1) (undo-tree-id23237 . -1) (undo-tree-id23238 . -1) (undo-tree-id23239 . -1) (undo-tree-id23240 . -1) (undo-tree-id23241 . -1) (undo-tree-id23242 . -1) (undo-tree-id23243 . -1) (undo-tree-id23244 . -1) (undo-tree-id23245 . -1) (undo-tree-id23246 . -1) (undo-tree-id23247 . -1) (undo-tree-id23248 . -1) (undo-tree-id23249 . -1) (undo-tree-id23250 . -1) 2746 (2744 . 2746) (2739 . 2744) 2739) nil (26026 39337 990685 0) 0 nil])
([nil nil ((3116 . 3129) (3095 . 3116) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -3095) (undo-tree-id23119 . -1) (undo-tree-id23120 . -1) (undo-tree-id23121 . -1) (undo-tree-id23122 . -1) (undo-tree-id23123 . -1) (undo-tree-id23124 . -1) (undo-tree-id23125 . -1) (undo-tree-id23126 . -1) (undo-tree-id23127 . -1) (undo-tree-id23128 . -1) (undo-tree-id23129 . -1) (undo-tree-id23130 . -1) (undo-tree-id23131 . -1) (undo-tree-id23132 . -1) (undo-tree-id23133 . -1) (undo-tree-id23134 . -1) (undo-tree-id23135 . -1) (undo-tree-id23136 . -1) (undo-tree-id23137 . -1) (undo-tree-id23138 . -1) (undo-tree-id23139 . -1) (undo-tree-id23140 . -1) (undo-tree-id23141 . -1) (undo-tree-id23142 . -1) (undo-tree-id23143 . -1) (undo-tree-id23144 . -1) (undo-tree-id23145 . -1) 3096 (3087 . 3096) (3086 . 3087) (3084 . 3086) (3079 . 3084) 3079) nil (26026 39337 990646 0) 0 nil])
([nil nil ((#("indexet " 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 4 (c-in-sws t face font-lock-comment-face fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 7 (c-in-sws t face font-lock-comment-face fontified t) 7 8 (c-in-sws t face font-lock-comment-face fontified t)) . 3097) (undo-tree-id22966 . -7) (undo-tree-id22967 . -1) (undo-tree-id22968 . -1) (undo-tree-id22969 . -1) (undo-tree-id22970 . -1) (undo-tree-id22971 . -1) (undo-tree-id22972 . -1) (undo-tree-id22973 . -1) (undo-tree-id22974 . -1) (undo-tree-id22975 . -1) (undo-tree-id22976 . -1) (undo-tree-id22977 . -1) (undo-tree-id22978 . -1) (undo-tree-id22979 . -1) (undo-tree-id22980 . -1) (undo-tree-id22981 . -1) (undo-tree-id22982 . -1) (undo-tree-id22983 . -1) (undo-tree-id22984 . -1) (undo-tree-id22985 . -1) (undo-tree-id22986 . -2) (undo-tree-id22987 . -2) (undo-tree-id22988 . -2) (undo-tree-id22989 . -2) (undo-tree-id22990 . -2) (undo-tree-id22991 . -2) (undo-tree-id22992 . -2) (undo-tree-id22993 . -2) (undo-tree-id22994 . -2) (undo-tree-id22995 . -2) (undo-tree-id22996 . -2) (undo-tree-id22997 . -2) (undo-tree-id22998 . -2) (undo-tree-id22999 . -2) (undo-tree-id23000 . -2) (undo-tree-id23001 . -2) (undo-tree-id23002 . -2) (undo-tree-id23003 . -2) (undo-tree-id23004 . -2) (undo-tree-id23005 . -2) (undo-tree-id23006 . -2) (undo-tree-id23007 . -2) (undo-tree-id23008 . -2) (undo-tree-id23009 . -2) (undo-tree-id23010 . -2) (undo-tree-id23011 . -4) (undo-tree-id23012 . -4) (undo-tree-id23013 . -4) (undo-tree-id23014 . -4) (undo-tree-id23015 . -4) (undo-tree-id23016 . -4) (undo-tree-id23017 . -4) (undo-tree-id23018 . -4) (undo-tree-id23019 . -4) (undo-tree-id23020 . -4) (undo-tree-id23021 . -4) (undo-tree-id23022 . -4) (undo-tree-id23023 . -4) (undo-tree-id23024 . -4) (undo-tree-id23025 . -4) (undo-tree-id23026 . -4) (undo-tree-id23027 . -4) (undo-tree-id23028 . -4) (undo-tree-id23029 . -4) (undo-tree-id23030 . -5) (undo-tree-id23031 . -5) (undo-tree-id23032 . -5) (undo-tree-id23033 . -5) (undo-tree-id23034 . -5) (undo-tree-id23035 . -5) (undo-tree-id23036 . -5) (undo-tree-id23037 . -5) (undo-tree-id23038 . -5) (undo-tree-id23039 . -5) (undo-tree-id23040 . -5) (undo-tree-id23041 . -5) (undo-tree-id23042 . -5) (undo-tree-id23043 . -5) (undo-tree-id23044 . -5) (undo-tree-id23045 . -5) (undo-tree-id23046 . -5) (undo-tree-id23047 . -5) (undo-tree-id23048 . -5) (undo-tree-id23049 . -7) (undo-tree-id23050 . -7) (undo-tree-id23051 . -7) (undo-tree-id23052 . -7) (undo-tree-id23053 . -7) (undo-tree-id23054 . -7) (undo-tree-id23055 . -7) (undo-tree-id23056 . -7) (undo-tree-id23057 . -7) (undo-tree-id23058 . -7) (undo-tree-id23059 . -7) (undo-tree-id23060 . -7) (undo-tree-id23061 . -7) (undo-tree-id23062 . -7) (undo-tree-id23063 . -7) (undo-tree-id23064 . -7) (undo-tree-id23065 . -7) (undo-tree-id23066 . -7) (undo-tree-id23067 . -7) (undo-tree-id23068 . -8) (undo-tree-id23069 . -8) (undo-tree-id23070 . -8) (undo-tree-id23071 . -8) (undo-tree-id23072 . -8) (undo-tree-id23073 . -8) (undo-tree-id23074 . -8) (undo-tree-id23075 . -8) (undo-tree-id23076 . -8) (undo-tree-id23077 . -8) (undo-tree-id23078 . -8) (undo-tree-id23079 . -8) (undo-tree-id23080 . -8) (undo-tree-id23081 . -8) (undo-tree-id23082 . -8) (undo-tree-id23083 . -8) (undo-tree-id23084 . -8) (undo-tree-id23085 . -8) (undo-tree-id23086 . -8) (undo-tree-id23087 . -8) (undo-tree-id23088 . -8) (undo-tree-id23089 . -8) (undo-tree-id23090 . -8) (undo-tree-id23091 . -8) (undo-tree-id23092 . -8) (undo-tree-id23093 . -8) (undo-tree-id23094 . -8) (undo-tree-id23095 . -8) (undo-tree-id23096 . -8) (undo-tree-id23097 . -8) (undo-tree-id23098 . -8) (undo-tree-id23099 . -8) (undo-tree-id23100 . -8) (undo-tree-id23101 . -8) (undo-tree-id23102 . -8) (undo-tree-id23103 . -8) (undo-tree-id23104 . -8) (undo-tree-id23105 . -8) (undo-tree-id23106 . -8) (undo-tree-id23107 . -8) (undo-tree-id23108 . -8) (undo-tree-id23109 . -8) (undo-tree-id23110 . -8) (undo-tree-id23111 . -8) (undo-tree-id23112 . -8) (undo-tree-id23113 . -8) (undo-tree-id23114 . -8) (undo-tree-id23115 . -8) (undo-tree-id23116 . -8) (undo-tree-id23117 . -8) (undo-tree-id23118 . -8)) nil (26026 39337 990633 0) 0 nil])
([nil nil ((#("av " 0 1 (face font-lock-comment-face fontified t) 1 3 (face font-lock-comment-face fontified t)) . 3097) (undo-tree-id22919 . -2) (undo-tree-id22920 . -1) (undo-tree-id22921 . -1) (undo-tree-id22922 . -1) (undo-tree-id22923 . -1) (undo-tree-id22924 . -1) (undo-tree-id22925 . -1) (undo-tree-id22926 . -1) (undo-tree-id22927 . -1) (undo-tree-id22928 . -1) (undo-tree-id22929 . -1) (undo-tree-id22930 . -1) (undo-tree-id22931 . -1) (undo-tree-id22932 . -1) (undo-tree-id22933 . -3) (undo-tree-id22934 . -3) (undo-tree-id22935 . -3) (undo-tree-id22936 . -3) (undo-tree-id22937 . -3) (undo-tree-id22938 . -3) (undo-tree-id22939 . -3) (undo-tree-id22940 . -3) (undo-tree-id22941 . -3) (undo-tree-id22942 . -3) (undo-tree-id22943 . -3) (undo-tree-id22944 . -3) (undo-tree-id22945 . -3) (undo-tree-id22946 . -3) (undo-tree-id22947 . -3) (undo-tree-id22948 . -3) (undo-tree-id22949 . -3) (undo-tree-id22950 . -3) (undo-tree-id22951 . -3) (undo-tree-id22952 . -3) (undo-tree-id22953 . -3) (undo-tree-id22954 . -3) (undo-tree-id22955 . -3) (undo-tree-id22956 . -3) (undo-tree-id22957 . -3) (undo-tree-id22958 . -3) (undo-tree-id22959 . -3) (undo-tree-id22960 . -3) (undo-tree-id22961 . -3) (undo-tree-id22962 . -3) (undo-tree-id22963 . -3) (undo-tree-id22964 . -3) (undo-tree-id22965 . -3)) nil (26026 39337 990579 0) 0 nil])
([nil nil ((3118 . 3125)) nil (26026 39337 990562 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -3549) (undo-tree-id22851 . -1) (undo-tree-id22852 . -1) (undo-tree-id22853 . -1) (undo-tree-id22854 . -1) (undo-tree-id22855 . -1) (undo-tree-id22856 . -1) (undo-tree-id22857 . -1) (undo-tree-id22858 . -1) (undo-tree-id22859 . -1) (undo-tree-id22860 . -1) (undo-tree-id22861 . -1) (undo-tree-id22862 . -1) (undo-tree-id22863 . -1) (undo-tree-id22864 . -1) (undo-tree-id22865 . -1) (undo-tree-id22866 . -1) (undo-tree-id22867 . -1) (undo-tree-id22868 . -1) (undo-tree-id22869 . -1) (undo-tree-id22870 . -1) (undo-tree-id22871 . -1) (undo-tree-id22872 . -1) (undo-tree-id22873 . -1) (undo-tree-id22874 . -1) (undo-tree-id22875 . -1) (undo-tree-id22876 . -1) (undo-tree-id22877 . -1) (undo-tree-id22878 . -1) 3550 (3529 . 3550) (#("bbo" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t)) . -3529) (undo-tree-id22879 . -3) (undo-tree-id22880 . -3) (undo-tree-id22881 . -3) (undo-tree-id22882 . -3) (undo-tree-id22883 . -3) (undo-tree-id22884 . -3) (undo-tree-id22885 . -3) (undo-tree-id22886 . -3) (undo-tree-id22887 . -3) (undo-tree-id22888 . -3) (undo-tree-id22889 . -3) (undo-tree-id22890 . -3) (undo-tree-id22891 . -3) (undo-tree-id22892 . -3) (undo-tree-id22893 . -3) (undo-tree-id22894 . -3) (undo-tree-id22895 . -3) (undo-tree-id22896 . -3) (undo-tree-id22897 . -3) (undo-tree-id22898 . -3) (undo-tree-id22899 . -3) (undo-tree-id22900 . -3) (undo-tree-id22901 . -3) (undo-tree-id22902 . -3) (undo-tree-id22903 . -3) (undo-tree-id22904 . -3) (undo-tree-id22905 . -3) (undo-tree-id22906 . -3) (undo-tree-id22907 . -3) (undo-tree-id22908 . -3) (undo-tree-id22909 . -3) (undo-tree-id22910 . -3) (undo-tree-id22911 . -3) (undo-tree-id22912 . -3) (undo-tree-id22913 . -3) (undo-tree-id22914 . -3) (undo-tree-id22915 . -3) (undo-tree-id22916 . -3) (undo-tree-id22917 . -3) (undo-tree-id22918 . -3) 3532 (3526 . 3532) (3525 . 3526) (3523 . 3525) (3518 . 3523) 3518) nil (26026 39337 990560 0) 0 nil])
([nil nil ((3688 . 3691) (3667 . 3688) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -3667) (undo-tree-id22752 . -1) (undo-tree-id22753 . -1) (undo-tree-id22754 . -1) (undo-tree-id22755 . -1) (undo-tree-id22756 . -1) (undo-tree-id22757 . -1) (undo-tree-id22758 . -1) (undo-tree-id22759 . -1) (undo-tree-id22760 . -1) (undo-tree-id22761 . -1) (undo-tree-id22762 . -1) (undo-tree-id22763 . -1) (undo-tree-id22764 . -1) (undo-tree-id22765 . -1) (undo-tree-id22766 . -1) (undo-tree-id22767 . -1) (undo-tree-id22768 . -1) (undo-tree-id22769 . -1) (undo-tree-id22770 . -1) (undo-tree-id22771 . -1) (undo-tree-id22772 . -1) (undo-tree-id22773 . -1) (undo-tree-id22774 . -1) (undo-tree-id22775 . -1) (undo-tree-id22776 . -1) (undo-tree-id22777 . -1) (undo-tree-id22778 . -1) (undo-tree-id22779 . -1) (undo-tree-id22780 . -1) (undo-tree-id22781 . -1) (undo-tree-id22782 . -1) (undo-tree-id22783 . -1) (undo-tree-id22784 . -1) (undo-tree-id22785 . -1) (undo-tree-id22786 . -1) (undo-tree-id22787 . -1) (undo-tree-id22788 . -1) (undo-tree-id22789 . -1) (undo-tree-id22790 . -1) (undo-tree-id22791 . -1) (undo-tree-id22792 . -1) (undo-tree-id22793 . -1) (undo-tree-id22794 . -1) (undo-tree-id22795 . -1) (undo-tree-id22796 . -1) (undo-tree-id22797 . -1) (undo-tree-id22798 . -1) (undo-tree-id22799 . -1) (undo-tree-id22800 . -1) (undo-tree-id22801 . -1) (undo-tree-id22802 . -1) (undo-tree-id22803 . -1) (undo-tree-id22804 . -1) (undo-tree-id22805 . -1) (undo-tree-id22806 . -1) (undo-tree-id22807 . -1) (undo-tree-id22808 . -1) (undo-tree-id22809 . -1) (undo-tree-id22810 . -1) (undo-tree-id22811 . -1) (undo-tree-id22812 . -1) (undo-tree-id22813 . -1) (undo-tree-id22814 . -1) (undo-tree-id22815 . -1) (undo-tree-id22816 . -1) (undo-tree-id22817 . -1) (undo-tree-id22818 . -1) (undo-tree-id22819 . -1) (undo-tree-id22820 . -1) (undo-tree-id22821 . -1) (undo-tree-id22822 . -1) (undo-tree-id22823 . -1) (undo-tree-id22824 . -1) (undo-tree-id22825 . -1) (undo-tree-id22826 . -1) (undo-tree-id22827 . -1) (undo-tree-id22828 . -1) (undo-tree-id22829 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -3668) (undo-tree-id22830 . -1) (undo-tree-id22831 . -1) (undo-tree-id22832 . -1) (undo-tree-id22833 . -1) (undo-tree-id22834 . -1) (undo-tree-id22835 . -1) (undo-tree-id22836 . -1) (undo-tree-id22837 . -1) (undo-tree-id22838 . -1) (undo-tree-id22839 . -1) (undo-tree-id22840 . -1) (undo-tree-id22841 . -1) (undo-tree-id22842 . -1) (undo-tree-id22843 . -1) (undo-tree-id22844 . -1) (undo-tree-id22845 . -1) (undo-tree-id22846 . -1) (undo-tree-id22847 . -1) (undo-tree-id22848 . -1) (undo-tree-id22849 . -1) (undo-tree-id22850 . -1) 3669 (3668 . 3669) (3664 . 3668) (3662 . 3664) (3657 . 3662) 3657) nil (26026 39337 990533 0) 0 nil])
([nil nil ((3689 . 3694) (#("\"t" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t)) . 3689) (undo-tree-id22648 . -1) (undo-tree-id22649 . -1) (undo-tree-id22650 . -1) (undo-tree-id22651 . -1) (undo-tree-id22652 . -1) (undo-tree-id22653 . -1) (undo-tree-id22654 . -1) (undo-tree-id22655 . -1) (undo-tree-id22656 . -1) (undo-tree-id22657 . -1) (undo-tree-id22658 . -1) (undo-tree-id22659 . -1) (undo-tree-id22660 . -1) (undo-tree-id22661 . -1) (undo-tree-id22662 . -1) (undo-tree-id22663 . -1) (undo-tree-id22664 . -1) (undo-tree-id22665 . -1) (undo-tree-id22666 . -1) (undo-tree-id22667 . -1) (undo-tree-id22668 . -2) (undo-tree-id22669 . -2) (undo-tree-id22670 . -2) (undo-tree-id22671 . -2) (undo-tree-id22672 . -2) (undo-tree-id22673 . -2) (undo-tree-id22674 . -2) (undo-tree-id22675 . -2) (undo-tree-id22676 . -2) (undo-tree-id22677 . -2) (undo-tree-id22678 . -2) (undo-tree-id22679 . -2) (undo-tree-id22680 . -2) (undo-tree-id22681 . -2) (undo-tree-id22682 . -2) (undo-tree-id22683 . -2) (undo-tree-id22684 . -2) (undo-tree-id22685 . -2) (undo-tree-id22686 . -2) (undo-tree-id22687 . -1) (undo-tree-id22688 . -1) (undo-tree-id22689 . -1) (undo-tree-id22690 . -1) (undo-tree-id22691 . -1) (undo-tree-id22692 . -1) (undo-tree-id22693 . -1) (undo-tree-id22694 . -1) (undo-tree-id22695 . -1) (undo-tree-id22696 . -1) (undo-tree-id22697 . -1) (undo-tree-id22698 . -1) (undo-tree-id22699 . -1) (undo-tree-id22700 . -1) (undo-tree-id22701 . -1) (undo-tree-id22702 . -1) (undo-tree-id22703 . -1) (undo-tree-id22704 . -1) (undo-tree-id22705 . -1) (undo-tree-id22706 . -1) (undo-tree-id22707 . -1) (undo-tree-id22708 . -1) (undo-tree-id22709 . -1) (undo-tree-id22710 . -1) (undo-tree-id22711 . -1) (undo-tree-id22712 . -1) (undo-tree-id22713 . -1) (undo-tree-id22714 . -1) (undo-tree-id22715 . -1) (undo-tree-id22716 . -1) (undo-tree-id22717 . -1) (undo-tree-id22718 . -1) (undo-tree-id22719 . -1) (undo-tree-id22720 . -1) (undo-tree-id22721 . -1) (undo-tree-id22722 . -1) (undo-tree-id22723 . -1) (undo-tree-id22724 . -1) (undo-tree-id22725 . -1) (undo-tree-id22726 . -1) (undo-tree-id22727 . -1) (undo-tree-id22728 . -1) (undo-tree-id22729 . -1) (undo-tree-id22730 . -1) (undo-tree-id22731 . -1) (undo-tree-id22732 . -1) (undo-tree-id22733 . -1) (undo-tree-id22734 . -1) (undo-tree-id22735 . -1) (undo-tree-id22736 . -1) (undo-tree-id22737 . -1) (undo-tree-id22738 . -1) (undo-tree-id22739 . -1) (undo-tree-id22740 . -1) (undo-tree-id22741 . -1) (undo-tree-id22742 . -1) (undo-tree-id22743 . -1) (undo-tree-id22744 . -1) (undo-tree-id22745 . -1) (undo-tree-id22746 . -1) (undo-tree-id22747 . -1) (undo-tree-id22748 . -2) (undo-tree-id22749 . -2) (undo-tree-id22750 . -2) (undo-tree-id22751 . -2)) nil (26026 39337 990494 0) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -3532) (undo-tree-id22537 . -1) (undo-tree-id22538 . -1) (undo-tree-id22539 . -1) (undo-tree-id22540 . -1) (undo-tree-id22541 . -1) (undo-tree-id22542 . -1) (undo-tree-id22543 . -1) (undo-tree-id22544 . -1) (undo-tree-id22545 . -1) (undo-tree-id22546 . -1) (undo-tree-id22547 . -1) (undo-tree-id22548 . -1) (undo-tree-id22549 . -1) (undo-tree-id22550 . -1) (undo-tree-id22551 . -1) (undo-tree-id22552 . -1) (undo-tree-id22553 . -1) (undo-tree-id22554 . -1) (undo-tree-id22555 . -1) (undo-tree-id22556 . -1) (undo-tree-id22557 . -1) (undo-tree-id22558 . -1) (undo-tree-id22559 . -1) (undo-tree-id22560 . -1) (undo-tree-id22561 . -1) (undo-tree-id22562 . -1) (undo-tree-id22563 . -1) (undo-tree-id22564 . -1) (undo-tree-id22565 . -1) (undo-tree-id22566 . -1) (undo-tree-id22567 . -1) (undo-tree-id22568 . -1) (undo-tree-id22569 . -1) (undo-tree-id22570 . -1) (undo-tree-id22571 . -1) (undo-tree-id22572 . -1) (undo-tree-id22573 . -1) (undo-tree-id22574 . -1) (undo-tree-id22575 . -1) (undo-tree-id22576 . -1) (undo-tree-id22577 . -1) (undo-tree-id22578 . -1) (undo-tree-id22579 . -1) (undo-tree-id22580 . -1) (undo-tree-id22581 . -1) (undo-tree-id22582 . -1) (undo-tree-id22583 . -1) (undo-tree-id22584 . -1) (undo-tree-id22585 . -1) (undo-tree-id22586 . -1) (undo-tree-id22587 . -1) (undo-tree-id22588 . -1) (undo-tree-id22589 . -1) (undo-tree-id22590 . -1) (undo-tree-id22591 . -1) (undo-tree-id22592 . -1) (undo-tree-id22593 . -1) (undo-tree-id22594 . -1) (undo-tree-id22595 . -1) (undo-tree-id22596 . -1) (undo-tree-id22597 . -1) (undo-tree-id22598 . -1) (undo-tree-id22599 . -1) (undo-tree-id22600 . -1) (undo-tree-id22601 . -1) (undo-tree-id22602 . -1) (undo-tree-id22603 . -1) (undo-tree-id22604 . -1) (undo-tree-id22605 . -1) (undo-tree-id22606 . -1) (undo-tree-id22607 . -1) (undo-tree-id22608 . -1) (undo-tree-id22609 . -1) (undo-tree-id22610 . -1) (undo-tree-id22611 . -1) (undo-tree-id22612 . -1) (undo-tree-id22613 . -1) (undo-tree-id22614 . -1) (undo-tree-id22615 . -1) (undo-tree-id22616 . -1) (undo-tree-id22617 . -1) (undo-tree-id22618 . -1) (undo-tree-id22619 . -1) (undo-tree-id22620 . -1) (undo-tree-id22621 . -1) (undo-tree-id22622 . -1) (undo-tree-id22623 . -1) (undo-tree-id22624 . -1) (undo-tree-id22625 . -1) (undo-tree-id22626 . -1) (undo-tree-id22627 . -1) (undo-tree-id22628 . -1) (undo-tree-id22629 . -1) (undo-tree-id22630 . -1) (undo-tree-id22631 . -1) (undo-tree-id22632 . -1) (undo-tree-id22633 . -1) (undo-tree-id22634 . -1) (undo-tree-id22635 . -1) (undo-tree-id22636 . -1) (undo-tree-id22637 . -1) (undo-tree-id22638 . -1) (undo-tree-id22639 . -1) (undo-tree-id22640 . -1) (undo-tree-id22641 . -1) (undo-tree-id22642 . -1) (undo-tree-id22643 . -1) (undo-tree-id22644 . -1) (undo-tree-id22645 . -1) (undo-tree-id22646 . -1) (undo-tree-id22647 . -1) (#("                " 0 1 (fontified t) 1 16 (fontified t c-in-sws t c-is-sws t)) . -1638) 3693) nil (26026 39337 990449 0) 0 nil])
([nil nil ((#("    // returnera storleken på listan
" 0 4 (fontified t c-is-sws t c-in-sws t) 4 5 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 5 6 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 6 7 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face font-lock-comment-face fontified t c-in-sws t) 11 12 (face font-lock-comment-face fontified t c-in-sws t) 12 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face font-lock-comment-face fontified t c-in-sws t) 15 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 22 (face font-lock-comment-face fontified t c-in-sws t) 22 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t)) . 3641) (undo-tree-id24996 . -36) (undo-tree-id24997 . 1) (undo-tree-id24998 . -35) 3676 (t 26026 39338 8029 338000)) nil (26026 39433 952307 0) 0 nil])
([nil nil ((#("    // ta bort alla elementen
" 0 4 (fontified t c-is-sws t c-in-sws t) 4 5 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 5 6 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 6 7 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t) 8 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face font-lock-comment-face fontified t c-in-sws t) 11 12 (face font-lock-comment-face fontified t c-in-sws t) 12 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face font-lock-comment-face fontified t c-in-sws t) 15 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (c-in-sws t face font-lock-comment-face fontified t)) . 3503) (undo-tree-id24994 . -29) (undo-tree-id24995 . -22) 3525) nil (26026 39433 952304 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3797)) nil (26026 39433 952303 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4043)) nil (26026 39433 952303 0) 0 nil])
([nil nil ((4408 . 4420) (4406 . 4408) (4397 . 4406) 4397) nil (26026 39433 952302 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -339) (undo-tree-id24993 . -8) 347 (338 . 347) 327) nil (26026 39433 952301 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -890) (undo-tree-id24992 . -8) 898 (889 . 898) 846) nil (26026 39433 952300 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2330) (undo-tree-id24991 . -8) 2338 (2329 . 2338) 2300) nil (26026 39433 952299 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2824) (undo-tree-id24990 . -8) 2832 (2823 . 2832) 2783) nil (26026 39433 952298 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3150) (undo-tree-id24989 . -8) 3158 (3149 . 3158) 3114) nil (26026 39433 952297 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3802) (undo-tree-id24955 . -8) (undo-tree-id24956 . -8) (undo-tree-id24957 . -8) (undo-tree-id24958 . -8) (undo-tree-id24959 . -8) (undo-tree-id24960 . -8) (undo-tree-id24961 . -8) (undo-tree-id24962 . -8) (undo-tree-id24963 . -8) (undo-tree-id24964 . -8) (undo-tree-id24965 . -8) (undo-tree-id24966 . -8) (undo-tree-id24967 . -8) (undo-tree-id24968 . -8) (undo-tree-id24969 . -8) (undo-tree-id24970 . -8) (undo-tree-id24971 . -8) (undo-tree-id24972 . -8) (undo-tree-id24973 . -8) (undo-tree-id24974 . -8) (undo-tree-id24975 . -8) (undo-tree-id24976 . -8) (undo-tree-id24977 . -8) (undo-tree-id24978 . -8) (undo-tree-id24979 . -8) (undo-tree-id24980 . -8) (undo-tree-id24981 . -8) (undo-tree-id24982 . -8) (undo-tree-id24983 . -8) (undo-tree-id24984 . -8) (undo-tree-id24985 . -8) (undo-tree-id24986 . -8) (undo-tree-id24987 . -8) (undo-tree-id24988 . -8) 3810 (3801 . 3810) 3767) nil (26026 39433 952295 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -4049) (undo-tree-id24921 . -8) (undo-tree-id24922 . -8) (undo-tree-id24923 . -8) (undo-tree-id24924 . -8) (undo-tree-id24925 . -8) (undo-tree-id24926 . -8) (undo-tree-id24927 . -8) (undo-tree-id24928 . -8) (undo-tree-id24929 . -8) (undo-tree-id24930 . -8) (undo-tree-id24931 . -8) (undo-tree-id24932 . -8) (undo-tree-id24933 . -8) (undo-tree-id24934 . -8) (undo-tree-id24935 . -8) (undo-tree-id24936 . -8) (undo-tree-id24937 . -8) (undo-tree-id24938 . -8) (undo-tree-id24939 . -8) (undo-tree-id24940 . -8) (undo-tree-id24941 . -8) (undo-tree-id24942 . -8) (undo-tree-id24943 . -8) (undo-tree-id24944 . -8) (undo-tree-id24945 . -8) (undo-tree-id24946 . -8) (undo-tree-id24947 . -8) (undo-tree-id24948 . -8) (undo-tree-id24949 . -8) (undo-tree-id24950 . -8) (undo-tree-id24951 . -8) (undo-tree-id24952 . -8) (undo-tree-id24953 . -8) (undo-tree-id24954 . -8) 4057 (4048 . 4057) 3977) nil (26026 39433 952275 0) 0 nil])
([nil nil ((733 . 741) (#("        " 0 8 (fontified nil)) . 732) (undo-tree-id559 . -8) (740 . 741) (731 . 740) (t 26026 39433 969047 287000) 708) nil (26029 18082 184028 0) 0 nil])
([nil nil ((753 . 767) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -753) (undo-tree-id550 . -1) (#("m" 0 1 (face font-lock-comment-face fontified t)) . -754) (undo-tree-id551 . -1) (#("k" 0 1 (face font-lock-comment-face fontified t)) . -755) (undo-tree-id552 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -756) (undo-tree-id553 . -1) 757 (744 . 757) (743 . 744) (733 . 741) (#("       " 0 7 (fontified nil)) . 733) (undo-tree-id554 . -7) (740 . 742) (#(" " 0 1 (fontified t)) . -740) (undo-tree-id555 . -1) (undo-tree-id556 . -1) 741 (733 . 741) (#("       " 0 7 (fontified nil)) . -733) (undo-tree-id557 . -7) (undo-tree-id558 . -7) (#(" " 0 1 (fontified t)) . 740)) nil (26029 18082 184025 0) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -598) (598 . 600) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 598) (594 . 598) 600 (599 . 600) (598 . 599) (#(" x" 0 2 (fontified nil)) . -598) (598 . 600) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 598) (undo-tree-id549 . -4) (594 . 598) 598) nil (26029 18082 184020 0) 0 nil])
([nil nil ((735 . 743) (#("            " 0 12 (fontified nil)) . 735) (undo-tree-id547 . -12) (747 . 748) (735 . 747) (#("            " 0 12 (fontified nil)) . 734) (undo-tree-id548 . -12) (746 . 747) (733 . 746) 719) nil (26029 18082 184019 0) 0 nil])
([nil nil ((#("        // länka om föregående nod
" 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 9 10 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 10 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 12 (face font-lock-comment-face fontified t c-in-sws t) 12 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face font-lock-comment-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t)) . 746) (undo-tree-id545 . -8) (undo-tree-id546 . -34) 754) nil (26029 18082 184017 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 742 . 743) (#("
" 0 1 (fontified nil c-in-sws t face font-lock-comment-face)) . -769) (734 . 770)) nil (26029 18082 184016 0) 0 nil])
([nil nil ((735 . 747) (#("        " 0 7 (fontified t c-is-sws t c-in-sws t) 7 8 (rear-nonsticky t fontified t c-is-sws t c-in-sws t)) . -735) (undo-tree-id544 . -8) 743) nil (26029 18082 184015 0) 0 nil])
([nil nil ((773 . 774)) nil (26029 18082 184015 0) 0 nil])
([nil nil ((787 . 796) (774 . 787) 773) nil (26029 18082 184014 0) 0 nil])
([nil nil ((#("            tail.next
" 0 1 (c-is-sws t fontified t) 1 12 (c-is-sws t fontified t) 12 13 (c-is-sws t fontified t) 13 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 775) (undo-tree-id540 . -20) (undo-tree-id541 . -20) (undo-tree-id542 . 1) (undo-tree-id543 . -21) 795) nil (26029 18082 184014 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 717 . 718) (#("
" 0 1 (fontified nil)) . -727) (705 . 728) 667) nil (26029 18082 184012 0) 0 nil])
([nil nil ((737 . 738) (730 . 737) (#("n" 0 1 (fontified nil)) . 730) (730 . 731) (#("newNode : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -730) (undo-tree-id534 . -28) (730 . 758) (#("new" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t)) . -730) (undo-tree-id535 . -3) (undo-tree-id536 . -3) 733 (729 . 733) (728 . 729) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -728) (undo-tree-id537 . -1) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -729) (undo-tree-id538 . -1) 730 (729 . 730) (#("ö" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -729) (undo-tree-id539 . -1) 730 (727 . 730)) nil (26029 18082 184010 0) 0 nil])
([nil nil ((692 . 697)) nil (26029 18082 184006 0) 0 nil])
([nil nil ((760 . 781) (#("länka " 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 6 (face font-lock-comment-face fontified t)) . -760) (undo-tree-id516 . -6) 766 (#("ta" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t)) . -766) (undo-tree-id517 . -2) 768 (767 . 768) (759 . 767) (757 . 759) (#("*" 0 1 (fontified t)) . -757) (undo-tree-id518 . -1) (undo-tree-id519 . -1) 758 (#("*" 0 1 (fontified t)) . -758) (undo-tree-id520 . -1) (undo-tree-id521 . -1) 759 (757 . 759) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -757) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -758) (undo-tree-id524 . -1) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -759) (undo-tree-id525 . -1) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -760) (undo-tree-id526 . -1) 761 (758 . 761) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -758) (undo-tree-id527 . -1) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -759) (undo-tree-id528 . -1) 760 (757 . 760) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -757) (undo-tree-id529 . -1) (#("´" 0 1 (fontified nil face font-lock-type-face)) . -758) 759 (758 . 759) (#("n" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -758) (undo-tree-id530 . -1) 759 (757 . 759) (#("\\" 0 1 (fontified t c-is-sws t)) . -757) (undo-tree-id531 . -1) (#("\\" 0 1 (fontified t)) . -758) (undo-tree-id532 . -1) (#("´" 0 1 (fontified nil)) . -759) 760 (757 . 760) (745 . 757) (#("            " 0 12 (fontified nil)) . 744) (undo-tree-id533 . -12) (756 . 757) (743 . 756) 742) nil (26029 18082 184004 0) 0 nil])
([nil nil ((#("            // länka om föregående nod 
" 0 12 (fontified t c-is-sws t c-in-sws t) 12 13 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 13 14 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 14 15 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face font-lock-comment-face fontified t c-in-sws t)) . 811) (undo-tree-id514 . -35) (undo-tree-id515 . -39) 846) nil (26029 18082 183994 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 810)) nil (26029 18082 183993 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 820)) nil (26029 18082 183992 0) 0 nil])
([nil nil ((243 . 248) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -243) (undo-tree-id513 . -1) 244 (242 . 244) (240 . 242) (235 . 240) 235) nil (26029 18082 183992 0) 0 nil])
([nil nil ((1470 . 1472) (1449 . 1470) (1447 . 1449) (1431 . 1447) (#("                " 0 16 (fontified nil)) . 1430) (undo-tree-id512 . -16) (1446 . 1447) (1429 . 1446) 1391) nil (26029 18082 183990 0) 0 nil])
([nil nil ((1468 . 1488) (1467 . 1468) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1467) (undo-tree-id508 . -1) 1468 (1450 . 1468) (#("s " 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t)) . -1450) (undo-tree-id509 . -2) 1452 (#("t" 0 1 (face font-lock-comment-face fontified t)) . -1452) (undo-tree-id510 . -1) 1453 (1450 . 1453) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1450) (undo-tree-id511 . -1) 1451 (1449 . 1451) (1447 . 1449) (1430 . 1447) 1430) nil (26029 18082 183989 0) 0 nil])
([nil nil ((1486 . 1488) (#("en" 0 2 (c-in-sws t face font-lock-comment-face fontified t)) . 1486) (undo-tree-id507 . -1)) nil (26029 18082 183986 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1516) (undo-tree-id505 . -1) 1517 (1515 . 1517) (1514 . 1515) (1508 . 1514) (#("atlls" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t)) . -1508) (undo-tree-id506 . -5) 1513 (1508 . 1513)) nil (26029 18082 183985 0) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1537)) nil (26029 18082 183983 0) 0 nil])
([nil nil ((1610 . 1611) (1608 . 1610) (#("d" 0 1 (face font-lock-type-face fontified t)) . -1608) (undo-tree-id500 . -1) 1609 (1606 . 1609) (1605 . 1606) (1599 . 1605) (#("equals(Object obj) : boolean" 0 28 (fontified nil)) . -1599) (undo-tree-id501 . -28) (1599 . 1627) (#("equ" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1599) (undo-tree-id502 . -3) (undo-tree-id503 . -3) 1602 (1594 . 1602) (1593 . 1594) (1590 . 1593) (1574 . 1590) (#("                " 0 16 (fontified nil)) . 1573) (undo-tree-id504 . -16) (1589 . 1590) (1572 . 1589) 1571) nil (26029 18082 183982 0) 0 nil])
([nil nil ((1615 . 1631) (#("                    " 0 20 (fontified nil)) . 1615) (undo-tree-id499 . -20) (1635 . 1636) (1614 . 1635) (1613 . 1614) (1612 . 1613) (1611 . 1612)) nil (26029 18082 183979 0) 0 nil])
([nil nil ((#("                    " 0 20 (fontified t)) . -1616) (undo-tree-id497 . -20) 1636 (1616 . 1636) (#("                    " 0 20 (fontified nil)) . 1615) (undo-tree-id498 . -20) (1635 . 1636) (1614 . 1635) 1590) nil (26029 18082 183978 0) 0 nil])
([nil nil ((1615 . 1635)) nil (26029 18082 183976 0) 0 nil])
([nil nil ((1641 . 1647) (#("n" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -1641) (undo-tree-id495 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -1642) (undo-tree-id496 . -1) 1643 (1637 . 1643) (1615 . 1635) (#("                   " 0 19 (fontified nil)) . 1615) (1634 . 1636)) nil (26029 18082 183976 0) 0 nil])
([nil nil ((1663 . 1665) (1642 . 1663) (#("något " 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face font-lock-comment-face fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face font-lock-comment-face fontified t)) . 1642) (undo-tree-id493 . 1) (undo-tree-id494 . -5)) nil (26029 18082 183973 0) 0 nil])
([nil nil ((1712 . 1713) (1711 . 1712) (1705 . 1711)) nil (26029 18082 183972 0) 0 nil])
([nil nil ((1722 . 1737) (#("dessa" 0 5 (face font-lock-comment-face fontified t)) . 1722) (undo-tree-id492 . -4)) nil (26029 18082 183971 0) 0 nil])
([nil nil ((#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1735)) nil (26029 18082 183971 0) 0 nil])
([nil nil ((1736 . 1737)) nil (26029 18082 183970 0) 0 nil])
([nil nil ((#("                // öka storleken på listan
                this.size++;
" 0 16 (fontified t c-is-sws t c-in-sws t) 16 17 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 17 19 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 19 43 (face font-lock-comment-face fontified t c-in-sws t) 43 59 (fontified t c-in-sws t c-is-sws t) 59 60 (face font-lock-keyword-face fontified t c-is-sws t) 60 63 (face font-lock-keyword-face fontified t) 63 72 (fontified t)) . 1907) (undo-tree-id487 . -27) (undo-tree-id488 . -70) (undo-tree-id489 . -71) (undo-tree-id490 . -70) (undo-tree-id491 . -27) 1934) nil (26029 18082 183970 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -2102) (undo-tree-id485 . -8) 2110 (2102 . 2110) (#("        " 0 8 (fontified nil)) . 2101) (undo-tree-id486 . -8) (2109 . 2110) (2100 . 2109) 2099) nil (26029 18082 183963 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2118 . 2119) (#("
" 0 1 (fontified nil)) . -2174) (2102 . 2175)) nil (26029 18082 183962 0) 0 nil])
([nil nil ((2103 . 2111) (#("                " 0 15 (c-is-sws t c-in-sws t fontified t) 15 16 (rear-nonsticky t c-is-sws t c-in-sws t fontified t)) . -2103) (undo-tree-id484 . -16) 2119) nil (26029 18082 183961 0) 0 nil])
([nil nil ((2138 . 2146) (#("                " 0 1 (fontified t c-is-sws t) 1 16 (fontified t c-is-sws t)) . 2138) (undo-tree-id483 . -8) 2146) nil (26029 18082 183960 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2102)) nil (26029 18082 183959 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2101)) nil (26029 18082 183959 0) 0 nil])
([nil nil ((1906 . 1922)) nil (26029 18082 183958 0) 0 nil])
([nil nil ((1906 . 1922) (#("               " 0 15 (fontified nil)) . -1906) (undo-tree-id482 . -15) (#(" " 0 1 (fontified t)) . 1921)) nil (26029 18082 183958 0) 0 nil])
([nil nil ((#("                
" 0 16 (fontified t) 16 17 (fontified t)) . 1906) (undo-tree-id476 . -15) (undo-tree-id477 . -17) (undo-tree-id478 . -16) (undo-tree-id479 . -17) (undo-tree-id480 . -17) (undo-tree-id481 . -17) 1921) nil (26029 18082 183957 0) 0 nil])
([nil nil ((#("// om noden har hittats..." 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 26 (face font-lock-comment-face fontified t c-in-sws t)) . 1279) (undo-tree-id475 . -25)) nil (26029 18082 183955 0) 0 nil])
([nil nil ((1311 . 1312)) nil (26029 18082 183953 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1337 . 1338) (nil fontified nil 1312 . 1338) (1312 . 1338) 1311) nil (26029 18082 183953 0) 0 nil])
([nil nil ((1378 . 1385) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1378) (undo-tree-id472 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -1379) (undo-tree-id473 . -1) 1380 (1364 . 1380) (#("elementen previous och next" 0 27 (face font-lock-comment-face fontified t c-in-sws t)) . 1364) (undo-tree-id474 . -26)) nil (26029 18082 183952 0) 0 nil])
([nil nil ((1733 . 1738) (#("element" 0 7 (face font-lock-comment-face fontified t c-in-sws t)) . 1733) (undo-tree-id471 . -6)) nil (26029 18082 183950 0) 0 nil])
([nil nil ((1800 . 1801)) nil (26029 18082 183949 0) 0 nil])
([nil nil ((1808 . 1809)) nil (26029 18082 183949 0) 0 nil])
([nil nil ((1800 . 1801) (#("'" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 1800) (undo-tree-id470 . -1)) nil (26029 18082 183948 0) 0 nil])
([nil nil ((#("                next = get(idx++);
" 0 1 (fontified t c-is-sws t) 1 16 (fontified t c-is-sws t c-in-sws t) 16 17 (fontified t c-is-sws t) 17 26 (fontified t) 26 27 (face (rainbow-delimiters-depth-5-face) fontified t) 27 32 (fontified t) 32 33 (face (rainbow-delimiters-depth-5-face) fontified t) 33 34 (fontified t) 34 35 (fontified t)) . 1533) (undo-tree-id468 . -34) (undo-tree-id469 . -33) 1566) nil (26029 18082 183948 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1440 . 1441) (#("
" 0 1 (fontified nil)) . -1459) (1424 . 1460) 1386) nil (26029 18082 183947 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 1568)) nil (26029 18082 183946 0) 0 nil])
([nil nil ((1446 . 1450)) nil (26029 18082 183945 0) 0 nil])
([nil nil ((#("            
" 0 12 (fontified t c-is-sws t c-in-sws t) 12 13 (fontified t)) . 1267) (undo-tree-id466 . -12) (undo-tree-id467 . -11) 1278) nil (26029 18082 183945 0) 0 nil])
([nil nil ((#("                    " 0 20 (fontified t)) . -1600) (undo-tree-id465 . -20) 1620 (1599 . 1620) 1579) nil (26029 18082 183944 0) 0 nil])
([nil nil ((#("så " 0 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t)) . 1477) (undo-tree-id444 . -2) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -3) (undo-tree-id454 . -3) (undo-tree-id455 . -3) (undo-tree-id456 . -3) (undo-tree-id457 . -3) (undo-tree-id458 . -3) (undo-tree-id459 . -3) (undo-tree-id460 . -3) (undo-tree-id461 . -3) (undo-tree-id462 . -3) (undo-tree-id463 . -3) (undo-tree-id464 . -3)) nil (26029 18082 183942 0) 0 nil])
([nil nil ((#("vi " 0 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t)) . 1477) (undo-tree-id442 . -2) (undo-tree-id443 . -3)) nil (26029 18082 183934 0) 0 nil])
([nil nil ((1477 . 1482) (#("inte" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 3 (c-in-sws t face font-lock-comment-face fontified t) 3 4 (c-in-sws t face font-lock-comment-face fontified t)) . 1477) (undo-tree-id439 . -3) (undo-tree-id440 . -4) (undo-tree-id441 . -4)) nil (26029 18082 183933 0) 0 nil])
([nil nil ((1681 . 1682) (1674 . 1681) (#("newN" 0 4 (fontified nil)) . 1674) (1674 . 1678) (#("newNode : MyALDAList.Node<E>" 0 25 (fontified nil) 25 26 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 26 27 (fontified nil) 27 28 (fontified nil category c->-as-paren-syntax)) . -1674) (undo-tree-id293 . -28) (1674 . 1702) (#("newNo" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -1674) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -4) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -4) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) (undo-tree-id368 . -4) (undo-tree-id369 . -4) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -5) (undo-tree-id414 . -5) (undo-tree-id415 . -5) (undo-tree-id416 . -5) (undo-tree-id417 . -5) (undo-tree-id418 . -5) (undo-tree-id419 . -5) (undo-tree-id420 . -5) (undo-tree-id421 . -5) (undo-tree-id422 . -5) (undo-tree-id423 . -5) (undo-tree-id424 . -5) (undo-tree-id425 . -5) (undo-tree-id426 . -5) (undo-tree-id427 . -5) (undo-tree-id428 . -5) (undo-tree-id429 . -5) (undo-tree-id430 . -5) (undo-tree-id431 . -5) (undo-tree-id432 . -5) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) 1679 (1667 . 1679) (1646 . 1667) 1629) nil (26029 18082 183929 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1595) (undo-tree-id292 . -1)) nil (26029 18082 183872 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . 1682) (undo-tree-id291 . -1)) nil (26029 18082 183872 0) 0 nil])
([nil nil ((#("                }
" 0 16 (fontified t c-is-sws t) 16 17 (face (rainbow-delimiters-depth-5-face) fontified t c-is-sws t) 17 18 (fontified t)) . 1682) (undo-tree-id286 . -17) (undo-tree-id287 . -17) (undo-tree-id288 . -17) (undo-tree-id289 . -17) (undo-tree-id290 . -18)) nil (26029 18082 183871 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1592) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-5-face) fontified t)) . -1593) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) 1594) nil (26029 18082 183865 0) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -1700) (1700 . 1702) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1700) (1696 . 1700) 1702 (1701 . 1702) (1700 . 1701) (#(" x" 0 2 (fontified nil)) . -1700) (1700 . 1702) (#("else" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3 4 (fontified nil face font-lock-type-face)) . 1700) (undo-tree-id84 . -3) (1696 . 1700) 1700 (1696 . 1700) (1680 . 1696)) nil (26029 18082 183778 0) 0 nil])
([nil nil ((1939 . 1940) (1922 . 1939) 1903) nil (26029 18082 183776 0) 0 nil])
([nil nil ((1845 . 1865) (#("                " 0 1 (fontified t c-is-sws t) 1 12 (fontified t c-is-sws t c-in-sws t) 12 13 (fontified t c-is-sws t c-in-sws t) 13 16 (fontified t c-is-sws t c-in-sws t)) . -1845) (undo-tree-id64 . -16) (undo-tree-id65 . -16) (undo-tree-id66 . -16) (undo-tree-id67 . -16) (undo-tree-id68 . -16) (undo-tree-id69 . -16) (undo-tree-id70 . -16) (undo-tree-id71 . -16) (undo-tree-id72 . -16) (undo-tree-id73 . -16) (undo-tree-id74 . -16) (undo-tree-id75 . -16) (undo-tree-id76 . -16) (undo-tree-id77 . -16) (undo-tree-id78 . -16) (undo-tree-id79 . -16) (undo-tree-id80 . -16) (undo-tree-id81 . -16) (undo-tree-id82 . -16) (undo-tree-id83 . -16) 1861) nil (26029 18082 183775 0) 0 nil])
([nil nil ((1703 . 1723) (#("                " 0 16 (fontified t c-is-sws t c-in-sws t)) . 1703) 1723) nil (26029 18082 183767 0) 0 nil])
([nil nil ((1765 . 1785) (#("                " 0 1 (c-is-sws t fontified t) 1 16 (c-is-sws t fontified t c-in-sws t)) . 1765) 1789) nil (26029 18082 183767 0) 0 nil])
([nil nil ((1894 . 1914) (#("                " 0 16 (fontified t)) . 1894) (undo-tree-id2 . -16) (undo-tree-id3 . -16) (undo-tree-id4 . -16) (undo-tree-id5 . -16) (undo-tree-id6 . -16) (undo-tree-id7 . -16) (undo-tree-id8 . -16) (undo-tree-id9 . -16) (undo-tree-id10 . -16) (undo-tree-id11 . -16) (undo-tree-id12 . -16) (undo-tree-id13 . -16) (undo-tree-id14 . -16) (undo-tree-id15 . -16) (undo-tree-id16 . -16) (undo-tree-id17 . -16) (undo-tree-id18 . -16) (undo-tree-id19 . -16) (undo-tree-id20 . -16) (undo-tree-id21 . -16) (undo-tree-id22 . -16) (undo-tree-id23 . -16) (undo-tree-id24 . -16) (undo-tree-id25 . -16) (undo-tree-id26 . -16) (undo-tree-id27 . -16) (undo-tree-id28 . -16) (undo-tree-id29 . -16) (undo-tree-id30 . -16) (undo-tree-id31 . -16) (undo-tree-id32 . -16) (undo-tree-id33 . -16) (undo-tree-id34 . -16) (undo-tree-id35 . -16) (undo-tree-id36 . -16) (undo-tree-id37 . -16) (undo-tree-id38 . -16) (undo-tree-id39 . -16) (undo-tree-id40 . -16) (undo-tree-id41 . -16) (undo-tree-id42 . -16) (undo-tree-id43 . -16) (undo-tree-id44 . -16) (undo-tree-id45 . -16) (undo-tree-id46 . -16) (undo-tree-id47 . -16) (undo-tree-id48 . -16) (undo-tree-id49 . -16) (undo-tree-id50 . -16) (undo-tree-id51 . -16) (undo-tree-id52 . -16) (undo-tree-id53 . -16) (undo-tree-id54 . -16) (undo-tree-id55 . -16) (undo-tree-id56 . -16) (undo-tree-id57 . -16) (undo-tree-id58 . -16) (undo-tree-id59 . -16) (undo-tree-id60 . -16) (undo-tree-id61 . -16) (undo-tree-id62 . -16) (undo-tree-id63 . -16) 1922) nil (26029 18082 183765 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1957) (undo-tree-id0 . 1) (undo-tree-id1 . -1)) nil (26029 18082 183742 0) 0 nil])
([nil nil ((1886 . 1890) (#("data" 0 4 (fontified nil)) . 1886) (1886 . 1890) (#("data : E" 0 8 (fontified nil)) . -1886) (undo-tree-id1472 . -8) (1886 . 1894) (#("data" 0 4 (fontified t)) . -1886) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) 1890 (1886 . 1890) (#("data" 0 4 (fontified nil)) . 1886) (1886 . 1890) (#("data : E" 0 8 (fontified nil)) . -1886) (undo-tree-id1475 . -8) (1886 . 1894) (#("data" 0 4 (fontified t)) . -1886) (undo-tree-id1476 . -4) (undo-tree-id1477 . -4) 1890 (1886 . 1890) (#("data : E" 0 8 (fontified nil)) . -1886) (undo-tree-id1478 . -8) (1886 . 1894) (#("d" 0 1 (fontified t)) . -1886) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) 1887 (1885 . 1887) (t 26029 18082 203430 501000)) nil (26029 18966 482431 0) 0 nil])
([nil nil ((1935 . 1937) (1932 . 1935)) nil (26029 18966 482425 0) 0 nil])
([nil nil ((#("next" 0 4 (fontified t)) . 1928) (undo-tree-id1471 . -3)) nil (26029 18966 482425 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1928)) nil (26029 18966 482424 0) 0 nil])
([nil nil ((#("data " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 1928) (undo-tree-id1469 . 1) (undo-tree-id1470 . -4)) nil (26029 18966 482424 0) 0 nil])
([nil nil ((1928 . 1929)) nil (26029 18966 482422 0) 0 nil])
([nil nil ((1927 . 1932) (#("." 0 1 (fontified t)) . -1927) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) 1928 (1927 . 1928) (#("." 0 1 (fontified t)) . -1927) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 1928 (1927 . 1928) (#("." 0 1 (fontified t)) . -1927) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#("d" 0 1 (fontified t)) . -1928) (undo-tree-id1468 . -1) 1929 (1928 . 1929)) nil (26029 18966 482422 0) 0 nil])
([nil nil ((#("& " 0 2 (face font-lock-comment-face fontified t c-in-sws t)) . 1820) (undo-tree-id1459 . -1)) nil (26029 18966 482418 0) 0 nil])
([nil nil ((#("next " 0 5 (face font-lock-comment-face fontified t)) . 1820) (undo-tree-id1458 . -4)) nil (26029 18966 482417 0) 0 nil])
([nil nil ((#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . 1842)) nil (26029 18966 482415 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-comment-face fontified t)) . 1842)) nil (26029 18966 482415 0) 0 nil])
([nil nil ((1171 . 1175) (#("next : MyALDAList.Node<E>" 0 22 (fontified nil) 22 23 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 23 24 (fontified nil) 24 25 (fontified nil category c->-as-paren-syntax)) . -1171) (undo-tree-id1454 . -25) (1171 . 1196) (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1171) (undo-tree-id1455 . -2) (undo-tree-id1456 . -2) 1173 (1166 . 1173) (1158 . 1166) (#("        " 0 8 (fontified nil)) . 1157) (undo-tree-id1457 . -8) (1165 . 1166) (1156 . 1165) 1155) nil (26029 18966 482414 0) 0 nil])
([nil nil ((#("        head.next
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 17 (fontified t) 17 18 (fontified t)) . 1158) (undo-tree-id1450 . 1) (undo-tree-id1451 . -17) (undo-tree-id1452 . -16) (undo-tree-id1453 . -16) 1174) nil (26029 18966 482411 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1158) (undo-tree-id1449 . 1)) nil (26029 18966 482410 0) 0 nil])
([nil nil ((3860 . 3861) (#("&" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -3860) (undo-tree-id1447 . -1) 3861 (3860 . 3861) (#(">" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -3860) (undo-tree-id1448 . -1) 3861 (3854 . 3861) (3853 . 3854) (3848 . 3853) (3841 . 3848) (3839 . 3841) (3838 . 3839)) nil (26029 18966 482409 0) 0 nil])
([nil nil ((#("    // kolla om listan innehåller det angivna elementet
" 0 4 (fontified t c-is-sws t c-in-sws t) 4 5 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5 7 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 7 25 (face font-lock-comment-face fontified t c-in-sws t) 25 45 (face font-lock-comment-face fontified t c-in-sws t) 45 49 (face font-lock-comment-face fontified t c-in-sws t) 49 55 (face font-lock-comment-face fontified t c-in-sws t) 55 56 (face font-lock-comment-face fontified t c-in-sws t)) . 3095) (undo-tree-id1445 . -55) (undo-tree-id1446 . -35) 3130) nil (26029 18966 482407 0) 0 nil])
([nil nil ((#("    // returnera det angivna elementets index
" 0 4 (fontified t c-is-sws t c-in-sws t) 4 5 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5 7 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 7 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 45 (face font-lock-comment-face fontified t c-in-sws t) 45 46 (face font-lock-comment-face fontified t c-in-sws t)) . 3380) (undo-tree-id1443 . -45) (undo-tree-id1444 . -35) 3415) nil (26029 18966 482405 0) 0 nil])
([nil nil ((#("        // iterera över listan tills elementet har hittats
" 0 2 (fontified t c-is-sws t c-in-sws t) 2 4 (fontified t c-is-sws t c-in-sws t) 4 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 37 (face font-lock-comment-face fontified t c-in-sws t) 37 39 (face font-lock-comment-face fontified t c-in-sws t) 39 46 (face font-lock-comment-face fontified t c-in-sws t) 46 58 (face font-lock-comment-face fontified t c-in-sws t) 58 59 (face font-lock-comment-face fontified t c-in-sws t)) . 3137) (undo-tree-id1360 . -58) (undo-tree-id1361 . -34) (undo-tree-id1362 . -34) (undo-tree-id1363 . -34) (undo-tree-id1364 . -34) (undo-tree-id1365 . -34) (undo-tree-id1366 . -34) (undo-tree-id1367 . -34) (undo-tree-id1368 . -34) (undo-tree-id1369 . -34) (undo-tree-id1370 . -34) (undo-tree-id1371 . -34) (undo-tree-id1372 . -34) (undo-tree-id1373 . -34) (undo-tree-id1374 . -34) (undo-tree-id1375 . -34) (undo-tree-id1376 . -34) (undo-tree-id1377 . -34) (undo-tree-id1378 . -34) (undo-tree-id1379 . -34) (undo-tree-id1380 . -34) (undo-tree-id1381 . -34) (undo-tree-id1382 . -34) (undo-tree-id1383 . -34) (undo-tree-id1384 . -34) (undo-tree-id1385 . -34) (undo-tree-id1386 . -34) (undo-tree-id1387 . -34) (undo-tree-id1388 . -34) (undo-tree-id1389 . -34) (undo-tree-id1390 . -34) (undo-tree-id1391 . -34) (undo-tree-id1392 . -34) (undo-tree-id1393 . -34) (undo-tree-id1394 . -34) (undo-tree-id1395 . -34) (undo-tree-id1396 . -34) (undo-tree-id1397 . -34) (undo-tree-id1398 . -34) (undo-tree-id1399 . -34) (undo-tree-id1400 . -34) (undo-tree-id1401 . -34) (undo-tree-id1402 . -34) (undo-tree-id1403 . -34) (undo-tree-id1404 . -34) (undo-tree-id1405 . -34) (undo-tree-id1406 . -34) (undo-tree-id1407 . -34) (undo-tree-id1408 . -34) (undo-tree-id1409 . -34) (undo-tree-id1410 . -34) (undo-tree-id1411 . -34) (undo-tree-id1412 . -34) (undo-tree-id1413 . -34) (undo-tree-id1414 . -34) (undo-tree-id1415 . -34) (undo-tree-id1416 . -34) (undo-tree-id1417 . -34) (undo-tree-id1418 . -34) (undo-tree-id1419 . -34) (undo-tree-id1420 . -34) (undo-tree-id1421 . -34) (undo-tree-id1422 . -34) (undo-tree-id1423 . -34) (undo-tree-id1424 . -34) (undo-tree-id1425 . -34) (undo-tree-id1426 . -34) (undo-tree-id1427 . -34) (undo-tree-id1428 . -34) (undo-tree-id1429 . -34) (undo-tree-id1430 . -34) (undo-tree-id1431 . -34) (undo-tree-id1432 . -34) (undo-tree-id1433 . -34) (undo-tree-id1434 . -34) (undo-tree-id1435 . -34) (undo-tree-id1436 . -34) (undo-tree-id1437 . -34) (undo-tree-id1438 . -34) (undo-tree-id1439 . -34) (undo-tree-id1440 . -34) (undo-tree-id1441 . -34) (undo-tree-id1442 . -59) 3171) nil (26029 18966 482403 0) 0 nil])
([nil nil ((#("        // iterera över listan tills elementet har hittats
" 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 58 (face font-lock-comment-face fontified t c-in-sws t) 58 59 (face font-lock-comment-face fontified t c-in-sws t)) . 3419) (undo-tree-id1277 . -58) (undo-tree-id1278 . -34) (undo-tree-id1279 . -34) (undo-tree-id1280 . -34) (undo-tree-id1281 . -34) (undo-tree-id1282 . -34) (undo-tree-id1283 . -34) (undo-tree-id1284 . -34) (undo-tree-id1285 . -34) (undo-tree-id1286 . -34) (undo-tree-id1287 . -34) (undo-tree-id1288 . -34) (undo-tree-id1289 . -34) (undo-tree-id1290 . -34) (undo-tree-id1291 . -34) (undo-tree-id1292 . -34) (undo-tree-id1293 . -34) (undo-tree-id1294 . -34) (undo-tree-id1295 . -34) (undo-tree-id1296 . -34) (undo-tree-id1297 . -34) (undo-tree-id1298 . -34) (undo-tree-id1299 . -34) (undo-tree-id1300 . -34) (undo-tree-id1301 . -34) (undo-tree-id1302 . -34) (undo-tree-id1303 . -34) (undo-tree-id1304 . -34) (undo-tree-id1305 . -34) (undo-tree-id1306 . -34) (undo-tree-id1307 . -34) (undo-tree-id1308 . -34) (undo-tree-id1309 . -34) (undo-tree-id1310 . -34) (undo-tree-id1311 . -34) (undo-tree-id1312 . -34) (undo-tree-id1313 . -34) (undo-tree-id1314 . -34) (undo-tree-id1315 . -34) (undo-tree-id1316 . -34) (undo-tree-id1317 . -34) (undo-tree-id1318 . -34) (undo-tree-id1319 . -34) (undo-tree-id1320 . -34) (undo-tree-id1321 . -34) (undo-tree-id1322 . -34) (undo-tree-id1323 . -34) (undo-tree-id1324 . -34) (undo-tree-id1325 . -34) (undo-tree-id1326 . -34) (undo-tree-id1327 . -34) (undo-tree-id1328 . -34) (undo-tree-id1329 . -34) (undo-tree-id1330 . -34) (undo-tree-id1331 . -34) (undo-tree-id1332 . -34) (undo-tree-id1333 . -34) (undo-tree-id1334 . -34) (undo-tree-id1335 . -34) (undo-tree-id1336 . -34) (undo-tree-id1337 . -34) (undo-tree-id1338 . -34) (undo-tree-id1339 . -34) (undo-tree-id1340 . -34) (undo-tree-id1341 . -34) (undo-tree-id1342 . -34) (undo-tree-id1343 . -34) (undo-tree-id1344 . -34) (undo-tree-id1345 . -34) (undo-tree-id1346 . -34) (undo-tree-id1347 . -34) (undo-tree-id1348 . -34) (undo-tree-id1349 . -34) (undo-tree-id1350 . -34) (undo-tree-id1351 . -34) (undo-tree-id1352 . -34) (undo-tree-id1353 . -34) (undo-tree-id1354 . -34) (undo-tree-id1355 . -34) (undo-tree-id1356 . -34) (undo-tree-id1357 . -34) (undo-tree-id1358 . -34) (undo-tree-id1359 . -59) 3453) nil (26029 18966 482371 0) 0 nil])
([nil nil ((#("        // iterera över listan tills indexet har hittats
" 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 57 (face font-lock-comment-face fontified t c-in-sws t)) . 2786) (undo-tree-id1179 . -56) (undo-tree-id1180 . -34) (undo-tree-id1181 . -34) (undo-tree-id1182 . -34) (undo-tree-id1183 . -34) (undo-tree-id1184 . -34) (undo-tree-id1185 . -34) (undo-tree-id1186 . -34) (undo-tree-id1187 . -34) (undo-tree-id1188 . -34) (undo-tree-id1189 . -34) (undo-tree-id1190 . -34) (undo-tree-id1191 . -34) (undo-tree-id1192 . -34) (undo-tree-id1193 . -34) (undo-tree-id1194 . -34) (undo-tree-id1195 . -34) (undo-tree-id1196 . -34) (undo-tree-id1197 . -34) (undo-tree-id1198 . -34) (undo-tree-id1199 . -34) (undo-tree-id1200 . -34) (undo-tree-id1201 . -34) (undo-tree-id1202 . -34) (undo-tree-id1203 . -34) (undo-tree-id1204 . -34) (undo-tree-id1205 . -34) (undo-tree-id1206 . -34) (undo-tree-id1207 . -34) (undo-tree-id1208 . -34) (undo-tree-id1209 . -34) (undo-tree-id1210 . -34) (undo-tree-id1211 . -34) (undo-tree-id1212 . -34) (undo-tree-id1213 . -34) (undo-tree-id1214 . -34) (undo-tree-id1215 . -34) (undo-tree-id1216 . -34) (undo-tree-id1217 . -34) (undo-tree-id1218 . -34) (undo-tree-id1219 . -34) (undo-tree-id1220 . -34) (undo-tree-id1221 . -34) (undo-tree-id1222 . -34) (undo-tree-id1223 . -34) (undo-tree-id1224 . -34) (undo-tree-id1225 . -34) (undo-tree-id1226 . -34) (undo-tree-id1227 . -34) (undo-tree-id1228 . -34) (undo-tree-id1229 . -34) (undo-tree-id1230 . -34) (undo-tree-id1231 . -34) (undo-tree-id1232 . -34) (undo-tree-id1233 . -34) (undo-tree-id1234 . -34) (undo-tree-id1235 . -34) (undo-tree-id1236 . -34) (undo-tree-id1237 . -34) (undo-tree-id1238 . -34) (undo-tree-id1239 . -34) (undo-tree-id1240 . -34) (undo-tree-id1241 . -34) (undo-tree-id1242 . -34) (undo-tree-id1243 . -34) (undo-tree-id1244 . -34) (undo-tree-id1245 . -34) (undo-tree-id1246 . -34) (undo-tree-id1247 . -34) (undo-tree-id1248 . -34) (undo-tree-id1249 . -34) (undo-tree-id1250 . -34) (undo-tree-id1251 . -34) (undo-tree-id1252 . -34) (undo-tree-id1253 . -34) (undo-tree-id1254 . -34) (undo-tree-id1255 . -34) (undo-tree-id1256 . -34) (undo-tree-id1257 . -34) (undo-tree-id1258 . -34) (undo-tree-id1259 . -34) (undo-tree-id1260 . -34) (undo-tree-id1261 . -34) (undo-tree-id1262 . -34) (undo-tree-id1263 . -34) (undo-tree-id1264 . -34) (undo-tree-id1265 . -34) (undo-tree-id1266 . -34) (undo-tree-id1267 . -34) (undo-tree-id1268 . -34) (undo-tree-id1269 . -34) (undo-tree-id1270 . -34) (undo-tree-id1271 . -34) (undo-tree-id1272 . -34) (undo-tree-id1273 . -34) (undo-tree-id1274 . -34) (undo-tree-id1275 . -34) (undo-tree-id1276 . -57) 2820) nil (26029 18966 482341 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2893) (undo-tree-id1178 . -1)) nil (26029 18966 482301 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2855) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -2856) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) 2857) nil (26029 18966 482297 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2902) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -2903) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) 2904) nil (26029 18966 482220 0) 0 nil])
([nil nil ((#("    // hitta elementet på det angivna indexet
" 0 4 (fontified t c-is-sws t c-in-sws t) 4 5 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 5 7 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 7 35 (face font-lock-comment-face fontified t c-in-sws t) 35 46 (face font-lock-comment-face fontified t c-in-sws t)) . 2622) (undo-tree-id560 . -45) (undo-tree-id561 . -12) (undo-tree-id562 . -34) (undo-tree-id563 . -34) (undo-tree-id564 . -34) (undo-tree-id565 . -34) (undo-tree-id566 . -34) (undo-tree-id567 . -34) (undo-tree-id568 . -34) (undo-tree-id569 . -34) (undo-tree-id570 . -34) (undo-tree-id571 . -34) (undo-tree-id572 . -34) (undo-tree-id573 . -34) (undo-tree-id574 . -34) (undo-tree-id575 . -34) (undo-tree-id576 . -34) (undo-tree-id577 . -34) (undo-tree-id578 . -34) (undo-tree-id579 . -34) (undo-tree-id580 . -34) (undo-tree-id581 . -34) (undo-tree-id582 . -34) (undo-tree-id583 . -34) (undo-tree-id584 . -34) (undo-tree-id585 . -34) (undo-tree-id586 . -34) (undo-tree-id587 . -34) (undo-tree-id588 . -34) (undo-tree-id589 . -34) (undo-tree-id590 . -34) (undo-tree-id591 . -34) (undo-tree-id592 . -34) (undo-tree-id593 . -34) (undo-tree-id594 . -34) (undo-tree-id595 . -34) (undo-tree-id596 . -34) (undo-tree-id597 . -34) (undo-tree-id598 . -34) (undo-tree-id599 . -34) (undo-tree-id600 . -34) (undo-tree-id601 . -34) (undo-tree-id602 . -34) (undo-tree-id603 . -34) (undo-tree-id604 . -34) (undo-tree-id605 . -34) (undo-tree-id606 . -34) (undo-tree-id607 . -34) (undo-tree-id608 . -34) (undo-tree-id609 . -34) (undo-tree-id610 . -34) (undo-tree-id611 . -34) (undo-tree-id612 . -34) (undo-tree-id613 . -34) (undo-tree-id614 . -34) (undo-tree-id615 . -34) (undo-tree-id616 . -34) (undo-tree-id617 . -34) (undo-tree-id618 . -34) (undo-tree-id619 . -34) (undo-tree-id620 . -34) (undo-tree-id621 . -34) (undo-tree-id622 . -34) (undo-tree-id623 . -34) (undo-tree-id624 . -34) (undo-tree-id625 . -34) (undo-tree-id626 . -34) (undo-tree-id627 . -34) (undo-tree-id628 . -34) (undo-tree-id629 . -34) (undo-tree-id630 . -34) (undo-tree-id631 . -34) (undo-tree-id632 . -34) (undo-tree-id633 . -34) (undo-tree-id634 . -34) (undo-tree-id635 . -34) (undo-tree-id636 . -34) (undo-tree-id637 . -34) (undo-tree-id638 . -34) (undo-tree-id639 . -34) (undo-tree-id640 . -34) (undo-tree-id641 . -34) (undo-tree-id642 . -34) (undo-tree-id643 . -34) (undo-tree-id644 . -34) (undo-tree-id645 . -34) (undo-tree-id646 . -12) (undo-tree-id647 . -12) (undo-tree-id648 . -12) (undo-tree-id649 . -12) (undo-tree-id650 . -12) (undo-tree-id651 . -12) (undo-tree-id652 . -12) (undo-tree-id653 . -12) (undo-tree-id654 . -12) (undo-tree-id655 . -12) (undo-tree-id656 . -12) (undo-tree-id657 . -12) (undo-tree-id658 . -12) (undo-tree-id659 . -12) (undo-tree-id660 . -12) (undo-tree-id661 . -12) (undo-tree-id662 . -12) (undo-tree-id663 . -12) (undo-tree-id664 . -12) (undo-tree-id665 . -12) (undo-tree-id666 . -12) (undo-tree-id667 . -12) (undo-tree-id668 . -12) (undo-tree-id669 . -12) (undo-tree-id670 . -12) (undo-tree-id671 . -12) (undo-tree-id672 . -12) (undo-tree-id673 . -12) (undo-tree-id674 . -12) (undo-tree-id675 . -12) (undo-tree-id676 . -12) (undo-tree-id677 . -12) (undo-tree-id678 . -12) (undo-tree-id679 . -12) (undo-tree-id680 . -12) (undo-tree-id681 . -12) (undo-tree-id682 . -12) (undo-tree-id683 . -12) (undo-tree-id684 . -12) (undo-tree-id685 . -12) (undo-tree-id686 . -12) (undo-tree-id687 . -12) (undo-tree-id688 . -12) (undo-tree-id689 . -12) (undo-tree-id690 . -12) (undo-tree-id691 . -12) (undo-tree-id692 . -12) (undo-tree-id693 . -12) (undo-tree-id694 . -12) (undo-tree-id695 . -12) (undo-tree-id696 . -12) (undo-tree-id697 . -12) (undo-tree-id698 . -12) (undo-tree-id699 . -12) (undo-tree-id700 . -12) (undo-tree-id701 . -12) (undo-tree-id702 . -12) (undo-tree-id703 . -12) (undo-tree-id704 . -12) (undo-tree-id705 . -12) (undo-tree-id706 . -12) (undo-tree-id707 . -12) (undo-tree-id708 . -12) (undo-tree-id709 . -12) (undo-tree-id710 . -12) (undo-tree-id711 . -12) (undo-tree-id712 . -12) (undo-tree-id713 . -12) (undo-tree-id714 . -12) (undo-tree-id715 . -46) 2634) nil (26029 18966 482126 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 833) 247 (t 26029 18966 499019 973000)) nil (26029 33185 229977 0) 0 nil])
([nil nil ((1909 . 1911) (t 26029 19040 840335 962000)) nil (26029 33185 229976 0) 0 nil])
([nil nil ((4500 . 4532) (#("public E remove() {
        " 0 1 (c-is-sws t fontified nil face font-lock-keyword-face) 1 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil) 7 8 (fontified nil face font-lock-type-face) 8 9 (fontified nil) 9 10 (fontified nil face font-lock-function-name-face) 10 15 (fontified nil face font-lock-function-name-face) 15 16 (fontified nil face (rainbow-delimiters-depth-3-face)) 16 17 (fontified nil face (rainbow-delimiters-depth-3-face)) 17 18 (fontified nil) 18 19 (fontified nil face (rainbow-delimiters-depth-3-face)) 19 28 (fontified nil)) . 4500) (t 26029 20519 922050 836000)) nil (26029 33185 229976 0) 0 nil])
([nil nil ((736 . 868) (#("tail.next = newNode;
" 0 1 (c-is-sws t fontified nil) 1 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil)) . 736) 247 (t 26029 21064 594912 965000)) nil (26029 33185 229975 0) 0 nil])
([nil nil ((52 . 4618) (#("public class MyALDAList<E> implements ALDAList<E> {

    private int size;
    private Node<E> head;
    private Node<E> tail;

    public MyALDAList() {
        this.size = 0;
    }

    // DONE?
    // lägg till en ny nod i början om listan är tom, annars i slutet
    public void add(E element) {

        Node<E> newNode = new Node<>(element, null);

        // kolla om listan är tom
        if (size() == 0)
            // om ja: noden ska sättas in på första index
            // alltså, länka head till newNode
            head = newNode;
        else {
            // om nej: noden ska sättas in på sista index
            // alltså, länka tail.next till newNode
            // kolla om tail är tom
            if (!(tail == null))
                tail.next = newNode; // peka om nuvaranda tail till newNode
            // gör newNode till tail
            tail = newNode;
        }
        // öka storleken på listan
        this.size++;
    }

    // lägg till en ny nod på det angivna indexet
    public void add(int index, E element) {

        Node<E> newNode = new Node<>(element, null);

        E current = iterator().next();

        E previous = null;
        E next = null;
        int idx = 0;

        // iterera över listan tills det angivna indexet har hittats
        while (iterator().hasNext()) {

            if (idx == index) { // om noden har hittats...
                // hitta omkringliggande noder
                previous = get(idx--);
                next     = get(idx++);

                // kolla om vi är i slutet av listan
                // alltså, kolla om next är tail
                if (tail.equals(next))
                    // gör den nya noden till tail
                    tail = newNode;
                else {
                    // annars, länka om omkringliggande noder
                    // TODO: hur länka om när previous är \"element\", inte nod?
                    newNode.next.data = next;
                    //previous.next = newNode;
                }
            } else { // om noden inte hittas...
                // ... gå till nästa nod & öka index
                idx++;
                current = iterator().next();
            }
        }
        // öka storleken på listan
        this.size++;
    }

    // ta bort element på det angivna indexet
    public E remove(int index) {
        // iterera över listan tills indexet har hittats

        // länka om omkringliggande noder
        return null;
    }

    // ta bort det angivna elementet
    public boolean remove(E element) {
        // iterera över listan tills elementet har hittats

        // länka om omkringliggande noder
        return true;
    }

    public E get(int index) {

        int idx = 0;
        E current = iterator().next();
        E element = null;

        while (iterator().hasNext()) {

            if (idx == index)
                element = current;
            else {
                idx++;
                current = iterator().next();
            }
        }
        return element;
    }

    public boolean contains(E element) {

        E current = iterator().next();

        while (iterator().hasNext()) {

            if (current == element)
                return true;
        }
        return false;
    }

    public int indexOf(E element) {

        int idx = 0;
        E current = iterator().next();

        while (iterator().hasNext()) {

            if (current == element)
                break;
            else {
                idx++;
                current = iterator().next();
            } // måste break:a igen?
        }
        return idx;
    }

    public void clear() {
        this.size = 0;
        this.head = null;
        this.tail = null;
    }

    public int size() {
        return this.size;
    }

    public java.util.Iterator<E> iterator() {
        return new MyALDAListIterator();
    }

    private static class Node<E> {

        public E data;
        public Node<E> next;

        public Node(E data, Node<E> next) {
            this.data = data;
            this.next = next;
        }
    }

    private class MyALDAListIterator implements java.util.Iterator<E> {

        private Node<E> current = head;

        public boolean hasNext() {
            return current != tail;
        }

        public E next() {
            if (!hasNext())
           " 0 1 (c-is-sws t face font-lock-keyword-face) 1 6 (face font-lock-keyword-face) 7 11 (face font-lock-keyword-face) 11 12 (face font-lock-keyword-face) 13 23 (face font-lock-type-face) 23 24 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face) c-<>-c-types-set t) 24 25 (face font-lock-type-face) 25 26 (category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face)) 27 37 (face font-lock-keyword-face) 38 46 (face font-lock-type-face) 46 47 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-1-face) c-<>-c-types-set t) 47 48 (face font-lock-type-face) 48 49 (category c->-as-paren-syntax face (rainbow-delimiters-depth-1-face)) 50 51 (face (rainbow-delimiters-depth-1-face)) 57 64 (face font-lock-keyword-face) 65 67 (face font-lock-type-face) 67 68 (face font-lock-type-face) 69 73 (face font-lock-variable-name-face) 79 86 (face font-lock-keyword-face) 87 91 (face font-lock-type-face) 91 92 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t) 92 93 (face font-lock-type-face) 93 94 (category c->-as-paren-syntax face (rainbow-delimiters-depth-2-face)) 95 99 (face font-lock-variable-name-face) 105 112 (face font-lock-keyword-face) 113 117 (face font-lock-type-face) 117 118 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t) 118 119 (face font-lock-type-face) 119 120 (category c->-as-paren-syntax face (rainbow-delimiters-depth-2-face)) 121 125 (face font-lock-variable-name-face) 132 138 (face font-lock-keyword-face) 149 150 (face (rainbow-delimiters-depth-2-face)) 150 151 (face (rainbow-delimiters-depth-2-face)) 152 153 (face (rainbow-delimiters-depth-2-face)) 162 166 (face font-lock-keyword-face) 181 182 (face (rainbow-delimiters-depth-2-face)) 188 189 (face font-lock-comment-delimiter-face) 189 190 (face font-lock-comment-delimiter-face) 190 191 (face font-lock-comment-delimiter-face) 191 192 (face font-lock-comment-face) 192 193 (face font-lock-comment-face) 193 194 (face font-lock-comment-face) 194 195 (face font-lock-comment-face) 195 196 (face font-lock-comment-face) 196 197 (face font-lock-comment-face) 201 202 (face font-lock-comment-delimiter-face) 202 204 (face font-lock-comment-delimiter-face) 204 267 (face font-lock-comment-face) 271 272 (face font-lock-keyword-face) 272 277 (face font-lock-keyword-face) 278 281 (face font-lock-type-face) 281 282 (face font-lock-type-face) 283 286 (face font-lock-function-name-face) 286 287 (face (rainbow-delimiters-depth-2-face)) 287 288 (face font-lock-type-face) 289 296 (face font-lock-variable-name-face) 296 297 (face (rainbow-delimiters-depth-2-face)) 298 299 (face (rainbow-delimiters-depth-2-face)) 309 313 (face font-lock-type-face) 313 314 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t) 314 315 (face font-lock-type-face) 315 316 (category c->-as-paren-syntax face (rainbow-delimiters-depth-3-face)) 317 324 (face font-lock-variable-name-face) 327 330 (face font-lock-keyword-face) 331 335 (face font-lock-type-face) 335 336 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t) 336 337 (category c->-as-paren-syntax face (rainbow-delimiters-depth-3-face)) 337 338 (face (rainbow-delimiters-depth-3-face)) 347 351 (face font-lock-constant-face) 351 352 (face (rainbow-delimiters-depth-3-face)) 363 364 (face font-lock-comment-delimiter-face) 364 366 (face font-lock-comment-delimiter-face) 366 389 (face font-lock-comment-face) 397 398 (face font-lock-keyword-face) 398 399 (face font-lock-keyword-face) 400 401 (face (rainbow-delimiters-depth-3-face)) 405 406 (face (rainbow-delimiters-depth-4-face)) 406 407 (face (rainbow-delimiters-depth-4-face)) 412 413 (face (rainbow-delimiters-depth-3-face)) 426 427 (face font-lock-comment-delimiter-face) 427 429 (face font-lock-comment-delimiter-face) 429 472 (face font-lock-comment-face) 484 487 (face font-lock-comment-delimiter-face) 487 519 (face font-lock-comment-face) 555 559 (face font-lock-keyword-face) 560 561 (face (rainbow-delimiters-depth-3-face)) 562 574 (c-is-sws t c-in-sws t) 574 575 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 575 577 (c-in-sws t face font-lock-comment-delimiter-face) 577 619 (c-in-sws t face font-lock-comment-face) 619 620 (c-in-sws t face font-lock-comment-face) 620 621 (c-in-sws t) 621 632 (c-in-sws t) 632 633 (c-in-sws t face font-lock-comment-delimiter-face) 633 635 (c-in-sws t face font-lock-comment-delimiter-face) 635 653 (c-in-sws t face font-lock-comment-face) 653 654 (c-in-sws t face font-lock-comment-face) 654 655 (c-in-sws t face font-lock-comment-face) 655 656 (c-in-sws t face font-lock-comment-face) 656 657 (c-in-sws t face font-lock-comment-face) 657 658 (c-in-sws t face font-lock-comment-face) 658 671 (c-in-sws t face font-lock-comment-face) 671 672 (c-in-sws t face font-lock-comment-face) 672 673 (c-in-sws t c-is-sws t) 673 683 (c-in-sws t c-is-sws t) 683 684 (c-in-sws t c-is-sws t rear-nonsticky t) 684 685 (c-is-sws t) 720 721 (c-is-sws t) 817 829 (c-is-sws t) 829 830 (c-is-sws t face font-lock-comment-delimiter-face) 830 831 (face font-lock-comment-delimiter-face) 831 832 (face font-lock-comment-delimiter-face) 832 833 (face font-lock-comment-face) 833 834 (face font-lock-comment-face) 834 836 (face font-lock-comment-face) 836 837 (face font-lock-comment-face) 837 838 (face font-lock-comment-face) 838 839 (face font-lock-comment-face) 839 840 (face font-lock-comment-face) 840 841 (face font-lock-comment-face) 841 842 (face font-lock-comment-face) 842 844 (face font-lock-comment-face) 844 845 (face font-lock-comment-face) 845 846 (face font-lock-comment-face) 846 847 (face font-lock-comment-face) 847 848 (face font-lock-comment-face) 848 849 (face font-lock-comment-face) 849 850 (face font-lock-comment-face) 850 852 (face font-lock-comment-face) 852 853 (face font-lock-comment-face) 853 854 (face font-lock-comment-face) 866 867 (c-is-sws t) 890 891 (face (rainbow-delimiters-depth-3-face)) 900 901 (face font-lock-comment-delimiter-face) 901 903 (face font-lock-comment-delimiter-face) 903 927 (face font-lock-comment-face) 935 936 (face font-lock-keyword-face) 936 939 (face font-lock-keyword-face) 952 953 (face (rainbow-delimiters-depth-2-face)) 959 960 (face font-lock-comment-delimiter-face) 960 962 (face font-lock-comment-delimiter-face) 962 1005 (face font-lock-comment-face) 1009 1010 (face font-lock-keyword-face) 1010 1015 (face font-lock-keyword-face) 1016 1019 (face font-lock-type-face) 1019 1020 (face font-lock-type-face) 1021 1024 (face font-lock-function-name-face) 1024 1025 (face (rainbow-delimiters-depth-2-face)) 1025 1028 (face font-lock-type-face) 1029 1034 (face font-lock-variable-name-face) 1036 1037 (face font-lock-type-face) 1038 1045 (face font-lock-variable-name-face) 1045 1046 (face (rainbow-delimiters-depth-2-face)) 1047 1048 (face (rainbow-delimiters-depth-2-face)) 1058 1062 (face font-lock-type-face) 1062 1063 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t) 1063 1064 (face font-lock-type-face) 1064 1065 (category c->-as-paren-syntax face (rainbow-delimiters-depth-3-face)) 1066 1073 (face font-lock-variable-name-face) 1076 1079 (face font-lock-keyword-face) 1080 1084 (face font-lock-type-face) 1084 1085 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t) 1085 1086 (category c->-as-paren-syntax face (rainbow-delimiters-depth-3-face)) 1086 1087 (face (rainbow-delimiters-depth-3-face)) 1096 1100 (face font-lock-constant-face) 1100 1101 (face (rainbow-delimiters-depth-3-face)) 1112 1113 (face font-lock-type-face) 1114 1121 (face font-lock-variable-name-face) 1132 1133 (face (rainbow-delimiters-depth-3-face)) 1133 1134 (face (rainbow-delimiters-depth-3-face)) 1139 1140 (face (rainbow-delimiters-depth-3-face)) 1140 1141 (face (rainbow-delimiters-depth-3-face)) 1152 1153 (face font-lock-type-face) 1154 1162 (face font-lock-variable-name-face) 1165 1169 (face font-lock-constant-face) 1179 1180 (face font-lock-type-face) 1181 1185 (face font-lock-variable-name-face) 1188 1192 (face font-lock-constant-face) 1202 1204 (face font-lock-type-face) 1204 1205 (face font-lock-type-face) 1206 1209 (face font-lock-variable-name-face) 1224 1225 (face font-lock-comment-delimiter-face) 1225 1227 (face font-lock-comment-delimiter-face) 1227 1284 (face font-lock-comment-face) 1284 1285 (face font-lock-comment-face) 1293 1294 (face font-lock-keyword-face) 1294 1298 (face font-lock-keyword-face) 1299 1300 (face (rainbow-delimiters-depth-3-face)) 1308 1309 (face (rainbow-delimiters-depth-4-face)) 1309 1310 (face (rainbow-delimiters-depth-4-face)) 1318 1319 (face (rainbow-delimiters-depth-4-face)) 1319 1320 (face (rainbow-delimiters-depth-4-face)) 1320 1321 (face (rainbow-delimiters-depth-3-face)) 1322 1323 (face (rainbow-delimiters-depth-3-face)) 1337 1338 (face font-lock-keyword-face) 1338 1339 (face font-lock-keyword-face) 1340 1341 (face (rainbow-delimiters-depth-4-face)) 1353 1354 (face (rainbow-delimiters-depth-4-face)) 1355 1356 (face (rainbow-delimiters-depth-4-face)) 1357 1358 (face font-lock-comment-delimiter-face) 1358 1360 (face font-lock-comment-delimiter-face) 1360 1382 (face font-lock-comment-face) 1382 1383 (face font-lock-comment-face rear-nonsticky t) 1383 1384 (face font-lock-comment-face) 1400 1401 (face font-lock-comment-delimiter-face) 1401 1403 (face font-lock-comment-delimiter-face) 1403 1409 (face font-lock-comment-face) 1409 1410 (face font-lock-comment-face) 1410 1411 (face font-lock-comment-face) 1411 1412 (face font-lock-comment-face) 1412 1413 (face font-lock-comment-face) 1413 1414 (face font-lock-comment-face) 1414 1415 (face font-lock-comment-face) 1415 1416 (face font-lock-comment-face) 1416 1417 (face font-lock-comment-face) 1417 1418 (face font-lock-comment-face) 1418 1419 (face font-lock-comment-face) 1419 1420 (face font-lock-comment-face) 1420 1422 (face font-lock-comment-face) 1422 1423 (face font-lock-comment-face) 1423 1425 (face font-lock-comment-face) 1425 1426 (face font-lock-comment-face) 1426 1427 (face font-lock-comment-face) 1427 1428 (face font-lock-comment-face) 1428 1429 (face font-lock-comment-face) 1429 1430 (face font-lock-comment-face) 1430 1431 (face font-lock-comment-face) 1461 1462 (face (rainbow-delimiters-depth-5-face)) 1467 1468 (face (rainbow-delimiters-depth-5-face)) 1485 1486 (rear-nonsticky t) 1500 1501 (face (rainbow-delimiters-depth-5-face)) 1506 1507 (face (rainbow-delimiters-depth-5-face)) 1526 1527 (face font-lock-comment-delimiter-face) 1527 1528 (face font-lock-comment-delimiter-face) 1528 1529 (face font-lock-comment-delimiter-face) 1529 1530 (face font-lock-comment-face) 1530 1531 (face font-lock-comment-face) 1531 1532 (face font-lock-comment-face) 1532 1533 (face font-lock-comment-face) 1533 1534 (face font-lock-comment-face) 1534 1535 (face font-lock-comment-face) 1535 1536 (face font-lock-comment-face) 1536 1537 (face font-lock-comment-face) 1537 1538 (face font-lock-comment-face) 1538 1539 (face font-lock-comment-face) 1539 1540 (face font-lock-comment-face) 1540 1541 (face font-lock-comment-face) 1541 1542 (face font-lock-comment-face) 1542 1544 (face font-lock-comment-face) 1544 1545 (face font-lock-comment-face) 1545 1546 (face font-lock-comment-face) 1546 1548 (face font-lock-comment-face) 1548 1549 (face font-lock-comment-face) 1549 1550 (face font-lock-comment-face) 1550 1552 (face font-lock-comment-face) 1552 1553 (face font-lock-comment-face) 1553 1554 (face font-lock-comment-face) 1554 1556 (face font-lock-comment-face) 1556 1557 (face font-lock-comment-face) 1557 1558 (face font-lock-comment-face) 1558 1559 (face font-lock-comment-face) 1559 1560 (face font-lock-comment-face) 1560 1561 (face font-lock-comment-face) 1561 1562 (face font-lock-comment-face) 1562 1563 (face font-lock-comment-face) 1579 1580 (face font-lock-comment-delimiter-face) 1580 1581 (face font-lock-comment-delimiter-face) 1581 1582 (face font-lock-comment-delimiter-face) 1582 1583 (face font-lock-comment-face) 1583 1584 (face font-lock-comment-face) 1584 1585 (face font-lock-comment-face) 1585 1586 (face font-lock-comment-face) 1586 1588 (face font-lock-comment-face) 1588 1589 (face font-lock-comment-face) 1589 1590 (face font-lock-comment-face) 1590 1591 (face font-lock-comment-face) 1591 1592 (face font-lock-comment-face) 1592 1593 (face font-lock-comment-face) 1593 1594 (face font-lock-comment-face) 1594 1596 (face font-lock-comment-face) 1596 1597 (face font-lock-comment-face) 1597 1598 (face font-lock-comment-face) 1598 1599 (face font-lock-comment-face) 1599 1600 (face font-lock-comment-face) 1600 1601 (face font-lock-comment-face) 1601 1602 (face font-lock-comment-face) 1602 1603 (face font-lock-comment-face) 1603 1604 (face font-lock-comment-face) 1604 1605 (face font-lock-comment-face) 1605 1607 (face font-lock-comment-face) 1607 1608 (face font-lock-comment-face) 1608 1610 (face font-lock-comment-face) 1610 1611 (face font-lock-comment-face) 1611 1612 (face font-lock-comment-face) 1628 1629 (face font-lock-keyword-face) 1629 1630 (face font-lock-keyword-face) 1631 1632 (face (rainbow-delimiters-depth-5-face)) 1643 1644 (face (rainbow-delimiters-depth-6-face)) 1648 1649 (face (rainbow-delimiters-depth-6-face)) 1649 1650 (face (rainbow-delimiters-depth-5-face)) 1671 1672 (face font-lock-comment-delimiter-face) 1672 1673 (face font-lock-comment-delimiter-face) 1673 1674 (face font-lock-comment-delimiter-face) 1674 1675 (face font-lock-comment-face) 1675 1676 (face font-lock-comment-face) 1676 1677 (face font-lock-comment-face) 1677 1678 (face font-lock-comment-face) 1678 1679 (face font-lock-comment-face) 1679 1681 (face font-lock-comment-face) 1681 1682 (face font-lock-comment-face) 1682 1683 (face font-lock-comment-face) 1683 1684 (face font-lock-comment-face) 1684 1686 (face font-lock-comment-face) 1686 1687 (face font-lock-comment-face) 1687 1688 (face font-lock-comment-face) 1688 1689 (face font-lock-comment-face) 1689 1691 (face font-lock-comment-face) 1691 1692 (face font-lock-comment-face) 1692 1693 (face font-lock-comment-face) 1693 1694 (face font-lock-comment-face) 1694 1695 (face font-lock-comment-face) 1695 1696 (face font-lock-comment-face) 1696 1697 (face font-lock-comment-face) 1697 1698 (face font-lock-comment-face) 1698 1700 (face font-lock-comment-face) 1700 1701 (face font-lock-comment-face) 1701 1702 (face font-lock-comment-face) 1754 1758 (face font-lock-keyword-face) 1759 1760 (face (rainbow-delimiters-depth-5-face)) 1781 1782 (face font-lock-comment-delimiter-face) 1782 1784 (face font-lock-comment-delimiter-face) 1784 1786 (face font-lock-comment-face) 1786 1787 (face font-lock-comment-face) 1787 1788 (face font-lock-comment-face) 1788 1789 (face font-lock-comment-face) 1789 1790 (face font-lock-comment-face) 1790 1791 (face font-lock-comment-face) 1791 1792 (face font-lock-comment-face) 1792 1801 (face font-lock-comment-face) 1801 1802 (face font-lock-comment-face) 1802 1803 (face font-lock-comment-face) 1803 1804 (face font-lock-comment-face) 1804 1805 (face font-lock-comment-face) 1805 1806 (face font-lock-comment-face) 1806 1807 (face font-lock-comment-face) 1807 1808 (face font-lock-comment-face) 1808 1809 (face font-lock-comment-face) 1809 1810 (face font-lock-comment-face) 1810 1811 (face font-lock-comment-face) 1811 1812 (face font-lock-comment-face) 1812 1813 (face font-lock-comment-face) 1813 1814 (face font-lock-comment-face) 1814 1815 (face font-lock-comment-face) 1815 1816 (face font-lock-comment-face) 1816 1817 (face font-lock-comment-face) 1817 1818 (face font-lock-comment-face) 1818 1819 (face font-lock-comment-face) 1819 1820 (face font-lock-comment-face) 1820 1821 (face font-lock-comment-face) 1821 1822 (face font-lock-comment-face) 1822 1823 (face font-lock-comment-face) 1843 1844 (face font-lock-comment-delimiter-face) 1844 1846 (face font-lock-comment-delimiter-face) 1846 1877 (face font-lock-comment-face) 1877 1878 (face font-lock-comment-face) 1878 1880 (face font-lock-comment-face) 1880 1881 (face font-lock-comment-face) 1881 1882 (face font-lock-comment-face) 1882 1889 (face font-lock-comment-face) 1889 1890 (face font-lock-comment-face) 1890 1899 (face font-lock-comment-face) 1899 1900 (face font-lock-comment-face) 1900 1901 (face font-lock-comment-face) 1901 1902 (face font-lock-comment-face) 1968 1969 (c-is-sws t) 2011 2012 (c-is-sws t face (rainbow-delimiters-depth-5-face)) 2025 2026 (face (rainbow-delimiters-depth-4-face)) 2027 2031 (face font-lock-keyword-face) 2032 2033 (face (rainbow-delimiters-depth-4-face)) 2034 2035 (face font-lock-comment-delimiter-face) 2035 2037 (face font-lock-comment-delimiter-face) 2037 2060 (face font-lock-comment-face) 2060 2061 (face font-lock-comment-face) 2077 2078 (face font-lock-comment-delimiter-face) 2078 2080 (face font-lock-comment-delimiter-face) 2080 2114 (face font-lock-comment-face) 2171 2172 (face (rainbow-delimiters-depth-5-face)) 2172 2173 (face (rainbow-delimiters-depth-5-face)) 2178 2179 (face (rainbow-delimiters-depth-5-face)) 2179 2180 (face (rainbow-delimiters-depth-5-face)) 2194 2195 (face (rainbow-delimiters-depth-4-face)) 2204 2205 (face (rainbow-delimiters-depth-3-face)) 2214 2215 (face font-lock-comment-delimiter-face) 2215 2217 (face font-lock-comment-delimiter-face) 2217 2240 (face font-lock-comment-face) 2240 2241 (face font-lock-comment-face) 2249 2250 (face font-lock-keyword-face) 2250 2253 (face font-lock-keyword-face) 2266 2267 (face (rainbow-delimiters-depth-2-face)) 2273 2274 (face font-lock-comment-delimiter-face) 2274 2276 (face font-lock-comment-delimiter-face) 2276 2315 (face font-lock-comment-face) 2319 2320 (face font-lock-keyword-face) 2320 2325 (face font-lock-keyword-face) 2326 2327 (face font-lock-type-face) 2328 2334 (face font-lock-function-name-face) 2334 2335 (face (rainbow-delimiters-depth-2-face)) 2335 2338 (face font-lock-type-face) 2339 2344 (face font-lock-variable-name-face) 2344 2345 (face (rainbow-delimiters-depth-2-face)) 2346 2347 (face (rainbow-delimiters-depth-2-face)) 2356 2359 (face font-lock-comment-delimiter-face) 2359 2405 (face font-lock-comment-face) 2414 2417 (face font-lock-comment-delimiter-face) 2417 2448 (face font-lock-comment-face) 2456 2462 (face font-lock-keyword-face) 2463 2467 (face font-lock-constant-face) 2473 2474 (face (rainbow-delimiters-depth-2-face)) 2480 2481 (face font-lock-comment-delimiter-face) 2481 2483 (face font-lock-comment-delimiter-face) 2483 2491 (face font-lock-comment-face) 2491 2512 (face font-lock-comment-face) 2512 2513 (face font-lock-comment-face) 2517 2518 (face font-lock-keyword-face) 2518 2523 (face font-lock-keyword-face) 2524 2530 (face font-lock-type-face) 2530 2531 (face font-lock-type-face) 2532 2538 (face font-lock-function-name-face) 2538 2539 (face (rainbow-delimiters-depth-2-face)) 2539 2540 (face font-lock-type-face) 2541 2547 (face font-lock-variable-name-face) 2547 2548 (face font-lock-variable-name-face) 2548 2549 (face (rainbow-delimiters-depth-2-face)) 2550 2551 (face (rainbow-delimiters-depth-2-face)) 2560 2561 (face font-lock-comment-delimiter-face) 2561 2563 (face font-lock-comment-delimiter-face) 2563 2565 (face font-lock-comment-face) 2565 2566 (face font-lock-comment-face) 2566 2580 (face font-lock-comment-face) 2580 2583 (face font-lock-comment-face) 2583 2598 (face font-lock-comment-face) 2598 2610 (face font-lock-comment-face) 2610 2611 (face font-lock-comment-face) 2620 2621 (face font-lock-comment-delimiter-face) 2621 2623 (face font-lock-comment-delimiter-face) 2623 2624 (face font-lock-comment-face) 2624 2649 (face font-lock-comment-face) 2649 2653 (face font-lock-comment-face) 2653 2654 (face font-lock-comment-face) 2662 2663 (face font-lock-keyword-face) 2663 2668 (face font-lock-keyword-face) 2669 2673 (face font-lock-constant-face) 2679 2680 (face (rainbow-delimiters-depth-2-face)) 2686 2687 (face font-lock-keyword-face) 2687 2692 (face font-lock-keyword-face) 2693 2694 (face font-lock-type-face) 2695 2698 (face font-lock-function-name-face) 2698 2699 (face (rainbow-delimiters-depth-2-face)) 2699 2702 (face font-lock-type-face) 2703 2708 (face font-lock-variable-name-face) 2708 2709 (face (rainbow-delimiters-depth-2-face)) 2710 2711 (face (rainbow-delimiters-depth-2-face)) 2721 2723 (face font-lock-type-face) 2723 2724 (face font-lock-type-face) 2725 2728 (face font-lock-variable-name-face) 2742 2743 (face font-lock-type-face) 2744 2751 (face font-lock-variable-name-face) 2762 2763 (face (rainbow-delimiters-depth-3-face)) 2763 2764 (face (rainbow-delimiters-depth-3-face)) 2769 2770 (face (rainbow-delimiters-depth-3-face)) 2770 2771 (face (rainbow-delimiters-depth-3-face)) 2781 2782 (face font-lock-type-face) 2783 2790 (face font-lock-variable-name-face) 2793 2797 (face font-lock-constant-face) 2808 2809 (face font-lock-keyword-face) 2809 2813 (face font-lock-keyword-face) 2814 2815 (face (rainbow-delimiters-depth-3-face)) 2823 2824 (face (rainbow-delimiters-depth-4-face)) 2824 2825 (face (rainbow-delimiters-depth-4-face)) 2833 2834 (face (rainbow-delimiters-depth-4-face)) 2834 2835 (face (rainbow-delimiters-depth-4-face)) 2835 2836 (face (rainbow-delimiters-depth-3-face)) 2837 2838 (face (rainbow-delimiters-depth-3-face)) 2852 2854 (face font-lock-keyword-face) 2855 2856 (face (rainbow-delimiters-depth-4-face)) 2868 2869 (face (rainbow-delimiters-depth-4-face)) 2917 2921 (face font-lock-keyword-face) 2922 2923 (face (rainbow-delimiters-depth-4-face)) 2981 2982 (face (rainbow-delimiters-depth-5-face)) 2982 2983 (face (rainbow-delimiters-depth-5-face)) 2988 2989 (face (rainbow-delimiters-depth-5-face)) 2989 2990 (face (rainbow-delimiters-depth-5-face)) 3004 3005 (face (rainbow-delimiters-depth-4-face)) 3014 3015 (face (rainbow-delimiters-depth-3-face)) 3024 3030 (face font-lock-keyword-face) 3044 3045 (face (rainbow-delimiters-depth-2-face)) 3051 3052 (face font-lock-keyword-face) 3052 3056 (face font-lock-keyword-face) 3056 3057 (face font-lock-keyword-face) 3058 3064 (face font-lock-type-face) 3064 3065 (face font-lock-type-face) 3066 3074 (face font-lock-function-name-face) 3074 3075 (face (rainbow-delimiters-depth-2-face)) 3075 3076 (face font-lock-type-face) 3077 3084 (face font-lock-variable-name-face) 3084 3085 (face (rainbow-delimiters-depth-2-face)) 3086 3087 (face (rainbow-delimiters-depth-2-face)) 3097 3098 (face font-lock-type-face) 3099 3106 (face font-lock-variable-name-face) 3117 3118 (face (rainbow-delimiters-depth-3-face)) 3118 3119 (face (rainbow-delimiters-depth-3-face)) 3124 3125 (face (rainbow-delimiters-depth-3-face)) 3125 3126 (face (rainbow-delimiters-depth-3-face)) 3137 3142 (face font-lock-keyword-face) 3143 3144 (face (rainbow-delimiters-depth-3-face)) 3152 3153 (face (rainbow-delimiters-depth-4-face)) 3153 3154 (face (rainbow-delimiters-depth-4-face)) 3162 3163 (face (rainbow-delimiters-depth-4-face)) 3163 3164 (face (rainbow-delimiters-depth-4-face)) 3164 3165 (face (rainbow-delimiters-depth-3-face)) 3166 3167 (face (rainbow-delimiters-depth-3-face)) 3181 3183 (face font-lock-keyword-face) 3184 3185 (face (rainbow-delimiters-depth-4-face)) 3203 3204 (face (rainbow-delimiters-depth-4-face)) 3221 3224 (face font-lock-keyword-face) 3224 3227 (face font-lock-keyword-face) 3228 3231 (face font-lock-constant-face) 3231 3232 (face font-lock-constant-face) 3242 3243 (face (rainbow-delimiters-depth-3-face)) 3252 3258 (face font-lock-keyword-face) 3259 3262 (face font-lock-constant-face) 3262 3264 (face font-lock-constant-face) 3270 3271 (face (rainbow-delimiters-depth-2-face)) 3277 3278 (face font-lock-keyword-face) 3278 3283 (face font-lock-keyword-face) 3284 3286 (face font-lock-type-face) 3286 3287 (face font-lock-type-face) 3288 3291 (face font-lock-function-name-face) 3291 3292 (face font-lock-function-name-face) 3292 3295 (face font-lock-function-name-face) 3295 3296 (face (rainbow-delimiters-depth-2-face)) 3296 3297 (face font-lock-type-face) 3298 3299 (face font-lock-variable-name-face) 3299 3300 (face font-lock-variable-name-face) 3300 3305 (face font-lock-variable-name-face) 3305 3306 (face (rainbow-delimiters-depth-2-face)) 3307 3308 (face (rainbow-delimiters-depth-2-face)) 3318 3320 (face font-lock-type-face) 3320 3321 (face font-lock-type-face) 3322 3325 (face font-lock-variable-name-face) 3339 3340 (face font-lock-type-face) 3341 3348 (face font-lock-variable-name-face) 3359 3360 (face (rainbow-delimiters-depth-3-face)) 3360 3361 (face (rainbow-delimiters-depth-3-face)) 3366 3367 (face (rainbow-delimiters-depth-3-face)) 3367 3368 (face (rainbow-delimiters-depth-3-face)) 3379 3380 (face font-lock-keyword-face) 3380 3384 (face font-lock-keyword-face) 3385 3386 (face (rainbow-delimiters-depth-3-face)) 3394 3395 (face (rainbow-delimiters-depth-4-face)) 3395 3396 (face (rainbow-delimiters-depth-4-face)) 3404 3405 (face (rainbow-delimiters-depth-4-face)) 3405 3406 (face (rainbow-delimiters-depth-4-face)) 3406 3407 (face (rainbow-delimiters-depth-3-face)) 3408 3409 (face (rainbow-delimiters-depth-3-face)) 3423 3425 (face font-lock-keyword-face) 3426 3427 (face (rainbow-delimiters-depth-4-face)) 3445 3446 (face (rainbow-delimiters-depth-4-face)) 3463 3468 (face font-lock-keyword-face) 3482 3486 (face font-lock-keyword-face) 3487 3488 (face (rainbow-delimiters-depth-4-face)) 3546 3547 (face (rainbow-delimiters-depth-5-face)) 3547 3548 (face (rainbow-delimiters-depth-5-face)) 3553 3554 (face (rainbow-delimiters-depth-5-face)) 3554 3555 (face (rainbow-delimiters-depth-5-face)) 3569 3570 (face (rainbow-delimiters-depth-4-face)) 3571 3572 (face font-lock-comment-delimiter-face) 3572 3573 (face font-lock-comment-delimiter-face) 3573 3574 (face font-lock-comment-delimiter-face) 3574 3575 (face font-lock-comment-face) 3575 3576 (face font-lock-comment-face) 3576 3577 (face font-lock-comment-face) 3577 3578 (face font-lock-comment-face) 3578 3579 (face font-lock-comment-face) 3579 3580 (face font-lock-comment-face) 3580 3581 (face font-lock-comment-face) 3581 3582 (face font-lock-comment-face) 3582 3583 (face font-lock-comment-face) 3583 3584 (face font-lock-comment-face) 3584 3585 (face font-lock-comment-face) 3585 3586 (face font-lock-comment-face) 3586 3587 (face font-lock-comment-face) 3587 3588 (face font-lock-comment-face) 3588 3589 (face font-lock-comment-face) 3589 3590 (face font-lock-comment-face) 3590 3591 (face font-lock-comment-face) 3591 3592 (face font-lock-comment-face) 3592 3593 (face font-lock-comment-face) 3593 3594 (face font-lock-comment-face) 3602 3603 (face (rainbow-delimiters-depth-3-face)) 3612 3618 (face font-lock-keyword-face) 3628 3629 (face (rainbow-delimiters-depth-2-face)) 3635 3641 (face font-lock-keyword-face) 3642 3645 (face font-lock-type-face) 3645 3646 (face font-lock-type-face) 3647 3652 (face font-lock-function-name-face) 3652 3653 (face (rainbow-delimiters-depth-2-face)) 3653 3654 (face (rainbow-delimiters-depth-2-face)) 3655 3656 (face (rainbow-delimiters-depth-2-face)) 3665 3669 (face font-lock-keyword-face) 3688 3692 (face font-lock-keyword-face) 3700 3704 (face font-lock-constant-face) 3714 3718 (face font-lock-keyword-face) 3726 3730 (face font-lock-constant-face) 3736 3737 (face (rainbow-delimiters-depth-2-face)) 3743 3749 (face font-lock-keyword-face) 3750 3752 (face font-lock-type-face) 3752 3753 (face font-lock-type-face) 3754 3758 (face font-lock-function-name-face) 3758 3759 (face (rainbow-delimiters-depth-2-face)) 3759 3760 (face (rainbow-delimiters-depth-2-face)) 3761 3762 (face (rainbow-delimiters-depth-2-face)) 3771 3777 (face font-lock-keyword-face) 3778 3782 (face font-lock-keyword-face) 3793 3794 (face (rainbow-delimiters-depth-2-face)) 3800 3806 (face font-lock-keyword-face) 3807 3811 (face font-lock-constant-face) 3812 3816 (face font-lock-constant-face) 3817 3825 (face font-lock-type-face) 3825 3826 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t) 3826 3827 (face font-lock-type-face) 3827 3828 (category c->-as-paren-syntax face (rainbow-delimiters-depth-2-face)) 3829 3837 (face font-lock-function-name-face) 3837 3838 (face (rainbow-delimiters-depth-2-face)) 3838 3839 (face (rainbow-delimiters-depth-2-face)) 3840 3841 (face (rainbow-delimiters-depth-2-face)) 3850 3856 (face font-lock-keyword-face) 3857 3860 (face font-lock-keyword-face) 3861 3879 (face font-lock-type-face) 3879 3880 (face (rainbow-delimiters-depth-3-face)) 3880 3881 (face (rainbow-delimiters-depth-3-face)) 3887 3888 (face (rainbow-delimiters-depth-2-face)) 3894 3901 (face font-lock-keyword-face) 3902 3908 (face font-lock-keyword-face) 3909 3913 (face font-lock-keyword-face) 3913 3914 (face font-lock-keyword-face) 3915 3919 (face font-lock-type-face) 3919 3920 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t) 3920 3921 (face font-lock-type-face) 3921 3922 (category c->-as-paren-syntax face (rainbow-delimiters-depth-2-face)) 3923 3924 (face (rainbow-delimiters-depth-2-face)) 3934 3940 (face font-lock-keyword-face) 3941 3942 (face font-lock-type-face) 3943 3947 (face font-lock-variable-name-face) 3957 3963 (face font-lock-keyword-face) 3964 3968 (face font-lock-type-face) 3968 3969 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t) 3969 3970 (face font-lock-type-face) 3970 3971 (category c->-as-paren-syntax face (rainbow-delimiters-depth-3-face)) 3972 3976 (face font-lock-variable-name-face) 3987 3993 (face font-lock-keyword-face) 3998 3999 (face (rainbow-delimiters-depth-3-face)) 3999 4000 (face font-lock-type-face) 4001 4005 (face font-lock-variable-name-face) 4007 4011 (face font-lock-type-face) 4011 4012 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t) 4012 4013 (face font-lock-type-face) 4013 4014 (category c->-as-paren-syntax face (rainbow-delimiters-depth-4-face)) 4015 4019 (face font-lock-variable-name-face) 4019 4020 (face (rainbow-delimiters-depth-3-face)) 4021 4022 (face (rainbow-delimiters-depth-3-face)) 4035 4039 (face font-lock-keyword-face) 4065 4069 (face font-lock-keyword-face) 4091 4092 (face (rainbow-delimiters-depth-3-face)) 4097 4098 (face (rainbow-delimiters-depth-2-face)) 4104 4111 (face font-lock-keyword-face) 4112 4116 (face font-lock-keyword-face) 4116 4117 (face font-lock-keyword-face) 4118 4136 (face font-lock-type-face) 4137 4147 (face font-lock-keyword-face) 4148 4152 (face font-lock-constant-face) 4153 4157 (face font-lock-constant-face) 4158 4166 (face font-lock-type-face) 4166 4167 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t) 4167 4168 (face font-lock-type-face) 4168 4169 (category c->-as-paren-syntax face (rainbow-delimiters-depth-2-face)) 4170 4171 (face (rainbow-delimiters-depth-2-face)) 4181 4188 (face font-lock-keyword-face) 4189 4193 (face font-lock-type-face) 4193 4194 (category c-<-as-paren-syntax face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t) 4194 4195 (face font-lock-type-face) 4195 4196 (category c->-as-paren-syntax face (rainbow-delimiters-depth-3-face)) 4197 4204 (face font-lock-variable-name-face) 4222 4228 (face font-lock-keyword-face) 4229 4235 (face font-lock-type-face) 4235 4236 (face font-lock-type-face) 4237 4244 (face font-lock-function-name-face) 4244 4245 (face (rainbow-delimiters-depth-3-face)) 4245 4246 (face (rainbow-delimiters-depth-3-face)) 4247 4248 (face (rainbow-delimiters-depth-3-face)) 4261 4267 (face font-lock-keyword-face) 4293 4294 (face (rainbow-delimiters-depth-3-face)) 4304 4310 (face font-lock-keyword-face) 4311 4312 (face font-lock-type-face) 4313 4317 (face font-lock-function-name-face) 4317 4318 (face (rainbow-delimiters-depth-3-face)) 4318 4319 (face (rainbow-delimiters-depth-3-face)) 4320 4321 (face (rainbow-delimiters-depth-3-face)) 4334 4336 (face font-lock-keyword-face) 4337 4338 (face (rainbow-delimiters-depth-4-face)) 4338 4339 (face font-lock-negation-char-face) 4346 4347 (face (rainbow-delimiters-depth-5-face)) 4347 4348 (face (rainbow-delimiters-depth-5-face)) 4348 4349 (face (rainbow-delimiters-depth-4-face))) . 52) (undo-tree-id1752 . -1216) (undo-tree-id1753 . -2405) (undo-tree-id1754 . -2405) (undo-tree-id1755 . 1445) (undo-tree-id1756 . -2682) (undo-tree-id1757 . -2682) (undo-tree-id1758 . -2013) (undo-tree-id1759 . 2348) (undo-tree-id1760 . -2013) (undo-tree-id1761 . -2013) (undo-tree-id1762 . -2013) (undo-tree-id1763 . -4173) (undo-tree-id1764 . -195) (undo-tree-id1765 . -1357) (undo-tree-id1766 . -1216) (undo-tree-id1767 . -4173) 247 (t 26029 21481 375795 244000)) nil (26029 33185 229974 0) 0 nil])
([nil nil ((2838 . 3044) (#("current = iterator().next();
        E element = null;

        while (iterator().hasNext()) {

            if (idx == index)
                element = current;
            else {
                idx++;
                current = iterator().next()" 0 246 (fontified nil)) . 2838) 256 (t 26029 31131 647144 460000)) nil (26029 33185 229968 0) 0 nil])
([nil nil ((4576 . 4617) (#("//     throw new java.util.NoSuchElement" 0 1 (fontified nil c-is-sws t) 1 2 (fontified nil) 2 3 (fontified nil) 3 7 (fontified nil) 7 8 (fontified nil face font-lock-keyword-face) 8 9 (fontified nil face font-lock-keyword-face) 9 12 (fontified nil face font-lock-keyword-face) 12 13 (fontified nil) 13 16 (fontified nil face font-lock-keyword-face) 16 17 (fontified nil) 17 21 (fontified nil face font-lock-constant-face) 21 22 (fontified nil) 22 26 (fontified nil face font-lock-constant-face) 26 27 (fontified nil) 27 40 (fontified nil face font-lock-type-face)) . 4576) (undo-tree-id1750 . 38) (undo-tree-id1751 . 38) 256 (t 26029 31198 435344 8000)) nil (26029 33185 229967 0) 0 nil])
([nil nil ((1165 . 4556) (#("// iterera över listan tills det angivna indexet har hittats
        while (iterator().hasNext()) {
            
            E current = iterator().next();  
            E previous = null;
            E next = null;
            int idx = 0;
            
            if (idx == index) { // om noden har hittats...
                // hitta omkringliggande noder
                previous = get(idx--);
                next     = get(idx++);

                // kolla om vi är i slutet av listan
                // alltså, kolla om next är tail
                if (tail.equals(next))
                    // gör den nya noden till tail
                    tail = newNode;
                else {
                    // annars, länka om omkringliggande noder
                    // TODO: hur länka om när previous är \"element\", inte nod?
                    newNode.next.data = next;
                    //previous.next = newNode;
                }
            } else { // om noden inte hittas...
                // ... gå till nästa nod & öka index
                idx++;
                current = iterator().next();
            }
        }
        // öka storleken på listan
        this.size++;
    }

    // ta bort element på det angivna indexet
    public E remove(int index) {
        // iterera över listan tills indexet har hittats

        // länka om omkringliggande noder
        return null;
    }

    // ta bort det angivna elementet
    public boolean remove(E element) {
        // iterera över listan tills elementet har hittats

        // länka om omkringliggande noder
        return true;
    }

    public E get(int index) {

        int idx = 0;
        E element = null;

        while (iterator().hasNext()) {

            E current = iterator().next();

            if (idx == index)
                element = current;
            else {
                idx++;
            }
        }
        return element;
    }

    public boolean contains(E element) {

        E current = iterator().next();

        while (iterator().hasNext()) {

            if (current == element)
                return true;
        }
        return false;
    }

    public int indexOf(E element) {

        int idx = 0;
        E current = iterator().next();

        while (iterator().hasNext()) {

            if (current == element)
                break;
            else {
                idx++;
                current = iterator().next();
            } // måste break:a igen?
        }
        return idx;
    }

    public void clear() {
        this.size = 0;
        this.head = null;
        this.tail = null;
    }

    public int size() {
        return this.size;
    }

    public java.util.Iterator<E> iterator() {
        return new MyALDAListIterator();
    }

    private static class Node<E> {

        private E data;
        private Node<E> next;

        Node(E data, Node<E> next) {
            this.data = data;
            this.next = next;
        }
        
        public E getData() {
            return this.data;
        }
        
        public Node<E> getNext() {
            return this.next;
        }
    }

    private class MyALDAListIterator implements java.util.Iterator<E> {

        private Node<E> current = head;

        public boolean hasNext() {
            return current != tail;
        }

        public E next() {
            // if (!hasNext())
                 throw new java.lang.IndexOutOfBoundsException();

            E nextNode = current.data" 0 1 (c-is-sws t fontified nil) 1 69 (fontified nil) 69 70 (c-is-sws t fontified nil) 70 1673 (fontified nil) 1673 1879 (fontified nil) 1879 2714 (fontified nil) 2714 2715 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 2715 2716 (fontified nil) 2716 2717 (fontified nil category c->-as-paren-syntax) 2717 2808 (fontified nil) 2808 2809 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 2809 2810 (fontified nil) 2810 2811 (fontified nil category c->-as-paren-syntax) 2811 2859 (fontified nil) 2859 2860 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 2860 2861 (fontified nil) 2861 2862 (fontified nil category c->-as-paren-syntax) 2862 2895 (fontified nil) 2895 2896 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 2896 2897 (fontified nil) 2897 2898 (fontified nil category c->-as-paren-syntax) 2898 3083 (fontified nil) 3083 3084 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 3084 3085 (fontified nil) 3085 3086 (fontified nil category c->-as-paren-syntax) 3086 3212 (fontified nil) 3212 3213 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 3213 3214 (fontified nil) 3214 3215 (fontified nil category c->-as-paren-syntax) 3215 3239 (fontified nil) 3239 3240 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 3240 3241 (fontified nil) 3241 3242 (fontified nil category c->-as-paren-syntax) 3242 3368 (fontified nil) 3368 3381 (fontified nil c-is-sws t c-in-sws t) 3381 3399 (fontified nil c-in-sws t) 3399 3411 (fontified nil c-in-sws t c-is-sws t) 3411 3417 (fontified nil c-is-sws t) 3417 3452 (fontified nil) 3452 3453 (c-is-sws t fontified nil face font-lock-type-face) 3453 3461 (fontified nil face font-lock-type-face) 3461 3462 (fontified nil face (rainbow-delimiters-depth-4-face)) 3462 3463 (fontified nil face (rainbow-delimiters-depth-4-face)) 3463 3465 (fontified nil) 3478 3479 (c-is-sws t face font-lock-type-face) 3480 3488 (face font-lock-variable-name-face)) . 1165) (undo-tree-id1747 . 51) (undo-tree-id1748 . 51) (undo-tree-id1749 . -3216) 256 (t 26029 31270 417682 251000)) nil (26029 33185 229966 0) 0 nil])
([nil nil ((#("// " 0 1 (c-is-sws t fontified nil) 1 3 (fontified nil)) . 4428) 256 (t 26029 31604 741607 300000)) nil (26029 33185 229964 0) 0 nil])
([nil nil ((3737 . 3936) 256 (t 26029 31647 404321 302000)) nil (26029 33185 229964 0) 0 nil])
([nil nil ((3778 . 3935) (#("
        String items = \"\";

        while (iterator().hasNext()) {
            items += iterator().next() + \"\\n\";
        }
        return items" 0 145 (fontified nil)) . 3778) 256 (t 26029 32056 575673 518000)) nil (26029 33185 229963 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 3919) 256 (t 26029 32182 271736 39000)) nil (26029 33185 229962 0) 0 nil])
([nil nil ((2689 . 3126) (#("
        int idx = 0;
        E element = null;

        while (iterator().hasNext()) {

            E current = iterator().next();

            if (idx == index)
                element = current;
            else {
                idx++;
            }
        }
        return element;" 0 287 (fontified nil)) . 2689) 256 (t 26029 32203 332215 887000)) nil (26029 33185 229962 0) 0 nil])
([nil nil ((#("/**
 * @author Martin Lönn Andersson malo2669
 */

 public class MyALDAList<E> implements ALDAList<E> {

    private int size;
    private Node<E> head;
    private Node<E> tail;

    public MyALDAList() {
        this.size = 0;
    }

    // DONE?
    // lägg till en ny nod i början om listan är tom, annars i slutet
    public void add(E element) {

        Node<E> newNode = new Node<>(element, null);

        // kolla om listan är tom
        if (size() == 0)
            // om ja: noden ska sättas in på första index
            // alltså, länka head till newNode
            head = newNode;
        else {
            // om nej: noden ska sättas in på sista index
            // alltså, länka tail.next till newNode
            // kolla om tail är tom
            if (!(tail == null))
                tail.next = newNode; // peka om nuvaranda tail till newNode
            // gör newNode till tail
            tail = newNode;
        }
        // öka storleken på listan
        this.size++;
    }

    // lägg till en ny nod på det angivna indexet
    public void add(int index, E element) {

        Node<E> newNode = new Node<>(element, null);

        int idx = 0;

        // iterera över listan tills det angivna indexet har hittats
        while (iterator().hasNext()) {
            
            E current = iterator().next();  
            
            if (idx == index) { // om noden har hittats...
                // hitta omkringliggande noder
                E previous = get(idx--);
                E next     = get(idx++);

                // kolla om vi är i slutet av listan
                // alltså, kolla om next är tail
                if (tail.equals(next))
                    // gör den nya noden till tail
                    tail = newNode;
                else {
                    // annars, länka om omkringliggande noder
                    // TODO: hur länka om när previous är \"element\", inte nod?
                    newNode.getNext().data = next;
                    //previous.next = newNode;
                }
            } else { // om noden inte hittas...
                // ... öka index
                idx++;
            }
        }
        // öka storleken på listan
        this.size++;
    }

    // ta bort element på det angivna indexet
    public E remove(int index) {
        // iterera över listan tills indexet har hittats

        // länka om omkringliggande noder
        return null;
    }

    // ta bort det angivna elementet
    public boolean remove(E element) {
        // iterera över listan tills elementet har hittats

        // länka om omkringliggande noder
        return true;
    }

    public E get(int index) {
        if (size() == 0)
            throw new java.lang.IndexOutOfBoundsException();
        else {
            int idx = 0;
            E element = null;

            while (iterator().hasNext()) {

                E current = iterator().next();

                if (idx == index)
                    element = current;
                else {
                    idx++;
                }
            }
        return element;
        }
    }

    public boolean contains(E element) {

        E current = iterator().next();

        while (iterator().hasNext()) {

            if (current == element)
                return true;
        }
        return false;
    }

    public int indexOf(E element) {

        int idx = 0;
        E current = iterator().next();

        while (iterator().hasNext()) {

            if (current == element)
                break;
            else {
                idx++;
                current = iterator().next();
            } // måste break:a igen?
        }
        return idx;
    }

    public void clear() {
        this.size = 0;
        this.head = null;
        this.tail = null;
    }

    public int size() {
        return this.size;
    }

    @Override
    public String toString() {
        String items = \"\";

        while (iterator().hasNext()) {
            items += iterator().next() + \", \";
        }
        return \"[\" + items + \"]\";
    }

    public java.util.Iterator<E> iterator() {
        return new MyALDAListIterator();
    }

    private static class Node<E> {

        private E data;
        private Node<E> next;

        Node(E data, Node<E> next) {
            this.data = data;
            this.next = next;
        }
        
        public E getData() {
            return this.data;
        }
        
        public Node<E> getNext() {
            return this.next;
        }
    }

    private class MyALDAListIterator implements java.util.Iterator<E> {

        private Node<E> current = head;

        public boolean hasNext() {
            return current != tail;
        }

        public E next() {
            if (!hasNext())
                 throw new java.lang.IndexOutOfBoundsException();

            E nextNode = current.getData();
            current = current.next;
            return nextNode;
        }

        // ska ha med?
        //public E remove() {
        //}
    }
}
" 0 1 (c-in-sws t face font-lock-doc-face c-is-sws t fontified t) 1 3 (c-in-sws t face font-lock-doc-face fontified t) 3 7 (c-in-sws t face font-lock-doc-face fontified t) 7 14 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face) fontified t) 14 46 (c-in-sws t face font-lock-doc-face fontified t) 46 48 (c-in-sws t face font-lock-doc-face fontified t) 48 49 (c-in-sws t face font-lock-doc-face fontified t) 49 50 (c-is-sws t fontified t) 50 51 (c-is-sws t fontified t) 51 52 (c-is-sws t fontified t) 52 53 (face font-lock-keyword-face c-is-sws t fontified t) 53 58 (face font-lock-keyword-face fontified t) 58 59 (fontified t) 59 63 (face font-lock-keyword-face fontified t) 63 64 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 75 (face font-lock-type-face fontified t) 75 76 (face (rainbow-delimiters-depth-1-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 76 77 (face font-lock-type-face fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) category c->-as-paren-syntax fontified t) 78 79 (fontified t) 79 89 (face font-lock-keyword-face fontified t) 89 90 (fontified t) 90 98 (face font-lock-type-face fontified t) 98 99 (face (rainbow-delimiters-depth-1-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 99 100 (face font-lock-type-face fontified t) 100 101 (face (rainbow-delimiters-depth-1-face) category c->-as-paren-syntax fontified t) 101 102 (fontified t) 102 103 (face (rainbow-delimiters-depth-1-face) fontified t) 103 109 (fontified t) 109 116 (face font-lock-keyword-face fontified t) 116 117 (fontified t) 117 119 (face font-lock-type-face fontified t) 119 120 (face font-lock-type-face c-type c-decl-id-start fontified t) 120 121 (fontified t) 121 125 (face font-lock-variable-name-face fontified t) 125 131 (fontified t) 131 138 (face font-lock-keyword-face fontified t) 138 139 (fontified t) 139 143 (face font-lock-type-face fontified t) 143 144 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 144 145 (face font-lock-type-face fontified t) 145 146 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t) 146 147 (fontified t) 147 151 (face font-lock-variable-name-face fontified t) 151 157 (fontified t) 157 164 (face font-lock-keyword-face fontified t) 164 165 (fontified t) 165 169 (face font-lock-type-face fontified t) 169 170 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 170 171 (face font-lock-type-face fontified t) 171 172 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t) 172 173 (fontified t) 173 177 (face font-lock-variable-name-face fontified t) 177 184 (fontified t) 184 190 (face font-lock-keyword-face fontified t) 190 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-2-face) fontified t) 202 203 (face (rainbow-delimiters-depth-2-face) fontified t) 203 204 (fontified t) 204 205 (face (rainbow-delimiters-depth-2-face) fontified t) 205 214 (fontified t) 214 218 (face font-lock-keyword-face fontified t) 218 233 (fontified t) 233 234 (face (rainbow-delimiters-depth-2-face) fontified t) 234 236 (fontified t) 236 240 (c-is-sws t c-in-sws t fontified t) 240 241 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 241 243 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 243 249 (c-in-sws t face font-lock-comment-face fontified t) 249 253 (c-in-sws t fontified t) 253 256 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 256 319 (c-in-sws t face font-lock-comment-face fontified t) 319 323 (c-in-sws t c-is-sws t fontified t) 323 324 (c-is-sws t face font-lock-keyword-face fontified t) 324 329 (face font-lock-keyword-face fontified t) 329 330 (fontified t) 330 333 (face font-lock-type-face fontified t) 333 334 (face font-lock-type-face c-type c-decl-id-start fontified t) 334 335 (fontified t) 335 338 (face font-lock-function-name-face fontified t) 338 339 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 339 340 (face font-lock-type-face fontified t) 340 341 (fontified t) 341 348 (face font-lock-variable-name-face fontified t) 348 349 (face (rainbow-delimiters-depth-2-face) fontified t) 349 350 (fontified t) 350 351 (face (rainbow-delimiters-depth-2-face) fontified t) 351 361 (fontified t) 361 365 (face font-lock-type-face fontified t) 365 366 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 366 367 (face font-lock-type-face fontified t) 367 368 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t) 368 369 (fontified t) 369 376 (face font-lock-variable-name-face fontified t) 376 379 (fontified t) 379 382 (face font-lock-keyword-face fontified t) 382 383 (fontified t) 383 387 (face font-lock-type-face fontified t) 387 388 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 388 389 (face (rainbow-delimiters-depth-3-face) category c->-as-paren-syntax fontified t) 389 390 (face (rainbow-delimiters-depth-3-face) fontified t) 390 399 (fontified t) 399 403 (face font-lock-constant-face fontified t) 403 404 (face (rainbow-delimiters-depth-3-face) fontified t) 404 415 (fontified t) 415 418 (face font-lock-comment-delimiter-face fontified t) 418 441 (face font-lock-comment-face fontified t) 441 449 (fontified t) 449 451 (face font-lock-keyword-face fontified t) 451 452 (fontified t) 452 453 (face (rainbow-delimiters-depth-3-face) fontified t) 453 457 (fontified t) 457 458 (face (rainbow-delimiters-depth-4-face) fontified t) 458 459 (face (rainbow-delimiters-depth-4-face) fontified t) 459 464 (fontified t) 464 465 (face (rainbow-delimiters-depth-3-face) fontified t) 465 478 (fontified t) 478 481 (face font-lock-comment-delimiter-face fontified t) 481 524 (face font-lock-comment-face fontified t) 524 536 (fontified t) 536 539 (face font-lock-comment-delimiter-face fontified t) 539 571 (face font-lock-comment-face fontified t) 571 607 (fontified t) 607 611 (face font-lock-keyword-face fontified t) 611 612 (fontified t) 612 613 (face (rainbow-delimiters-depth-3-face) fontified t) 613 626 (fontified t) 626 629 (face font-lock-comment-delimiter-face fontified t) 629 672 (face font-lock-comment-face fontified t) 672 684 (fontified t) 684 687 (face font-lock-comment-delimiter-face fontified t) 687 724 (face font-lock-comment-face fontified t) 724 736 (fontified t) 736 739 (face font-lock-comment-delimiter-face fontified t) 739 760 (face font-lock-comment-face fontified t) 760 772 (fontified t) 772 774 (face font-lock-keyword-face fontified t) 774 775 (fontified t) 775 776 (face (rainbow-delimiters-depth-4-face) fontified t) 776 777 (face font-lock-negation-char-face fontified t) 777 778 (face (rainbow-delimiters-depth-5-face) fontified t) 778 786 (fontified t) 786 790 (face font-lock-constant-face fontified t) 790 791 (face (rainbow-delimiters-depth-5-face) fontified t) 791 792 (face (rainbow-delimiters-depth-4-face) fontified t) 792 829 (fontified t) 829 830 (c-is-sws t c-in-sws t fontified t) 830 831 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 831 833 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 833 869 (c-in-sws t face font-lock-comment-face fontified t) 869 881 (c-in-sws t fontified t) 881 884 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 884 906 (c-in-sws t face font-lock-comment-face fontified t) 906 918 (c-in-sws t c-is-sws t fontified t) 918 919 (c-is-sws t fontified t) 919 942 (fontified t) 942 943 (face (rainbow-delimiters-depth-3-face) fontified t) 943 952 (fontified t) 952 955 (face font-lock-comment-delimiter-face fontified t) 955 979 (face font-lock-comment-face fontified t) 979 987 (fontified t) 987 991 (face font-lock-keyword-face fontified t) 991 1004 (fontified t) 1004 1005 (face (rainbow-delimiters-depth-2-face) fontified t) 1005 1007 (fontified t) 1007 1011 (c-is-sws t c-in-sws t fontified t) 1011 1012 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1012 1014 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1014 1057 (c-in-sws t face font-lock-comment-face fontified t) 1057 1061 (c-in-sws t c-is-sws t fontified t) 1061 1062 (c-is-sws t face font-lock-keyword-face fontified t) 1062 1067 (face font-lock-keyword-face fontified t) 1067 1068 (fontified t) 1068 1071 (face font-lock-type-face fontified t) 1071 1072 (face font-lock-type-face c-type c-decl-id-start fontified t) 1072 1073 (fontified t) 1073 1076 (face font-lock-function-name-face fontified t) 1076 1077 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 1077 1080 (face font-lock-type-face fontified t) 1080 1081 (fontified t) 1081 1086 (face font-lock-variable-name-face fontified t) 1086 1087 (c-type c-decl-arg-start fontified t) 1087 1088 (fontified t) 1088 1089 (face font-lock-type-face fontified t) 1089 1090 (fontified t) 1090 1097 (face font-lock-variable-name-face fontified t) 1097 1098 (face (rainbow-delimiters-depth-2-face) fontified t) 1098 1099 (fontified t) 1099 1100 (face (rainbow-delimiters-depth-2-face) fontified t) 1100 1110 (fontified t) 1110 1114 (face font-lock-type-face fontified t) 1114 1115 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 1115 1116 (face font-lock-type-face fontified t) 1116 1117 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start category c->-as-paren-syntax fontified t) 1117 1118 (fontified t) 1118 1125 (face font-lock-variable-name-face fontified t) 1125 1128 (fontified t) 1128 1131 (face font-lock-keyword-face fontified t) 1131 1132 (fontified t) 1132 1136 (face font-lock-type-face fontified t) 1136 1137 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 1137 1138 (face (rainbow-delimiters-depth-3-face) category c->-as-paren-syntax fontified t) 1138 1139 (face (rainbow-delimiters-depth-3-face) fontified t) 1139 1148 (fontified t) 1148 1152 (face font-lock-constant-face fontified t) 1152 1153 (face (rainbow-delimiters-depth-3-face) fontified t) 1153 1164 (fontified t) 1164 1166 (face font-lock-type-face fontified t) 1166 1167 (face font-lock-type-face c-type c-decl-id-start fontified t) 1167 1168 (fontified t) 1168 1171 (face font-lock-variable-name-face fontified t) 1171 1178 (fontified t) 1178 1186 (c-is-sws t c-in-sws t fontified t) 1186 1187 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1187 1189 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1189 1247 (c-in-sws t face font-lock-comment-face fontified t) 1247 1255 (c-in-sws t c-is-sws t fontified t) 1255 1256 (c-is-sws t face font-lock-keyword-face fontified t) 1256 1260 (face font-lock-keyword-face fontified t) 1260 1261 (fontified t) 1261 1262 (face (rainbow-delimiters-depth-3-face) fontified t) 1262 1270 (fontified t) 1270 1271 (face (rainbow-delimiters-depth-4-face) fontified t) 1271 1272 (face (rainbow-delimiters-depth-4-face) fontified t) 1272 1280 (fontified t) 1280 1281 (face (rainbow-delimiters-depth-4-face) fontified t) 1281 1282 (face (rainbow-delimiters-depth-4-face) fontified t) 1282 1283 (face (rainbow-delimiters-depth-3-face) fontified t) 1283 1284 (fontified t) 1284 1285 (face (rainbow-delimiters-depth-3-face) fontified t) 1285 1311 (fontified t) 1311 1312 (face font-lock-type-face c-type c-decl-id-start fontified t) 1312 1313 (fontified t) 1313 1320 (face font-lock-variable-name-face fontified t) 1320 1331 (fontified t) 1331 1332 (face (rainbow-delimiters-depth-4-face) fontified t) 1332 1333 (face (rainbow-delimiters-depth-4-face) fontified t) 1333 1338 (fontified t) 1338 1339 (face (rainbow-delimiters-depth-4-face) fontified t) 1339 1340 (face (rainbow-delimiters-depth-4-face) fontified t) 1340 1369 (fontified t) 1369 1371 (face font-lock-keyword-face fontified t) 1371 1372 (fontified t) 1372 1373 (face (rainbow-delimiters-depth-4-face) fontified t) 1373 1385 (fontified t) 1385 1386 (face (rainbow-delimiters-depth-4-face) fontified t) 1386 1387 (fontified t) 1387 1388 (face (rainbow-delimiters-depth-4-face) fontified t) 1388 1389 (c-is-sws t c-in-sws t fontified t) 1389 1390 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1390 1392 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1392 1416 (c-in-sws t face font-lock-comment-face fontified t) 1416 1432 (c-in-sws t fontified t) 1432 1435 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1435 1463 (c-in-sws t face font-lock-comment-face fontified t) 1463 1479 (c-in-sws t c-is-sws t fontified t) 1479 1480 (face font-lock-type-face c-type c-decl-id-start c-is-sws t fontified t) 1480 1481 (fontified t) 1481 1489 (face font-lock-variable-name-face fontified t) 1489 1495 (fontified t) 1495 1496 (face (rainbow-delimiters-depth-5-face) fontified t) 1496 1500 (fontified t) 1500 1501 (fontified t) 1501 1502 (face (rainbow-delimiters-depth-5-face) fontified t) 1502 1504 (fontified t) 1504 1520 (fontified t) 1520 1521 (face font-lock-type-face c-type c-decl-id-start fontified t) 1521 1522 (fontified t) 1522 1526 (face font-lock-variable-name-face fontified t) 1526 1536 (fontified t) 1536 1537 (face (rainbow-delimiters-depth-5-face) fontified t) 1537 1542 (fontified t) 1542 1543 (face (rainbow-delimiters-depth-5-face) fontified t) 1543 1562 (fontified t) 1562 1565 (face font-lock-comment-delimiter-face fontified t) 1565 1599 (face font-lock-comment-face fontified t) 1599 1615 (fontified t) 1615 1618 (face font-lock-comment-delimiter-face fontified t) 1618 1648 (face font-lock-comment-face fontified t) 1648 1664 (fontified t) 1664 1666 (face font-lock-keyword-face fontified t) 1666 1667 (fontified t) 1667 1668 (face (rainbow-delimiters-depth-5-face) fontified t) 1668 1679 (fontified t) 1679 1680 (face (rainbow-delimiters-depth-6-face) fontified t) 1680 1684 (fontified t) 1684 1685 (face (rainbow-delimiters-depth-6-face) fontified t) 1685 1686 (face (rainbow-delimiters-depth-5-face) fontified t) 1686 1707 (fontified t) 1707 1708 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 1708 1710 (face font-lock-comment-delimiter-face fontified t) 1710 1738 (face font-lock-comment-face fontified t) 1738 1758 (fontified t) 1758 1759 (c-is-sws t fontified t) 1759 1790 (fontified t) 1790 1794 (face font-lock-keyword-face fontified t) 1794 1795 (fontified t) 1795 1796 (face (rainbow-delimiters-depth-5-face) fontified t) 1796 1797 (fontified t) 1797 1817 (c-is-sws t c-in-sws t fontified t) 1817 1818 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1818 1820 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1820 1859 (c-in-sws t face font-lock-comment-face fontified t) 1859 1879 (c-in-sws t fontified t) 1879 1882 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1882 1938 (c-in-sws t face font-lock-comment-face fontified t) 1938 1958 (c-in-sws t c-is-sws t fontified t) 1958 1959 (c-is-sws t fontified t) 1959 1973 (fontified t) 1973 1974 (face (rainbow-delimiters-depth-6-face) fontified t) 1974 1975 (face (rainbow-delimiters-depth-6-face) fontified t) 1975 2009 (fontified t) 2009 2011 (face font-lock-comment-delimiter-face fontified t) 2011 2036 (face font-lock-comment-face fontified t) 2036 2052 (fontified t) 2052 2053 (face (rainbow-delimiters-depth-5-face) fontified t) 2053 2066 (fontified t) 2066 2067 (face (rainbow-delimiters-depth-4-face) fontified t) 2067 2068 (fontified t) 2068 2072 (face font-lock-keyword-face fontified t) 2072 2073 (fontified t) 2073 2074 (face (rainbow-delimiters-depth-4-face) fontified t) 2074 2075 (c-is-sws t c-in-sws t fontified t) 2075 2076 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 2076 2078 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2078 2102 (c-in-sws t face font-lock-comment-face fontified t) 2102 2118 (c-in-sws t fontified t) 2118 2121 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2121 2135 (c-in-sws t face font-lock-comment-face fontified t) 2135 2151 (c-in-sws t c-is-sws t fontified t) 2151 2152 (c-is-sws t fontified t) 2152 2170 (fontified t) 2170 2171 (face (rainbow-delimiters-depth-4-face) fontified t) 2171 2180 (fontified t) 2180 2181 (face (rainbow-delimiters-depth-3-face) fontified t) 2181 2190 (fontified t) 2190 2193 (face font-lock-comment-delimiter-face fontified t) 2193 2217 (face font-lock-comment-face fontified t) 2217 2225 (fontified t) 2225 2229 (face font-lock-keyword-face fontified t) 2229 2242 (fontified t) 2242 2243 (face (rainbow-delimiters-depth-2-face) fontified t) 2243 2245 (fontified t) 2245 2249 (c-is-sws t c-in-sws t fontified t) 2249 2250 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 2250 2252 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2252 2291 (c-in-sws t face font-lock-comment-face fontified t) 2291 2295 (c-in-sws t c-is-sws t fontified t) 2295 2296 (c-is-sws t face font-lock-keyword-face fontified t) 2296 2301 (face font-lock-keyword-face fontified t) 2301 2302 (fontified t) 2302 2303 (face font-lock-type-face c-type c-decl-id-start fontified t) 2303 2304 (fontified t) 2304 2310 (face font-lock-function-name-face fontified t) 2310 2311 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 2311 2314 (face font-lock-type-face fontified t) 2314 2315 (fontified t) 2315 2320 (face font-lock-variable-name-face fontified t) 2320 2321 (face (rainbow-delimiters-depth-2-face) fontified t) 2321 2322 (fontified t) 2322 2323 (face (rainbow-delimiters-depth-2-face) fontified t) 2323 2332 (fontified t) 2332 2335 (face font-lock-comment-delimiter-face fontified t) 2335 2381 (face font-lock-comment-face fontified t) 2381 2390 (fontified t) 2390 2393 (face font-lock-comment-delimiter-face fontified t) 2393 2424 (face font-lock-comment-face fontified t) 2424 2432 (fontified t) 2432 2438 (face font-lock-keyword-face fontified t) 2438 2439 (fontified t) 2439 2443 (face font-lock-constant-face fontified t) 2443 2449 (fontified t) 2449 2450 (face (rainbow-delimiters-depth-2-face) fontified t) 2450 2452 (fontified t) 2452 2456 (c-is-sws t c-in-sws t fontified t) 2456 2457 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 2457 2459 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2459 2489 (c-in-sws t face font-lock-comment-face fontified t) 2489 2493 (c-in-sws t c-is-sws t fontified t) 2493 2494 (c-is-sws t face font-lock-keyword-face fontified t) 2494 2499 (face font-lock-keyword-face fontified t) 2499 2500 (fontified t) 2500 2506 (face font-lock-type-face fontified t) 2506 2507 (face font-lock-type-face c-type c-decl-id-start fontified t) 2507 2508 (fontified t) 2508 2514 (face font-lock-function-name-face fontified t) 2514 2515 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 2515 2516 (face font-lock-type-face fontified t) 2516 2517 (fontified t) 2517 2524 (face font-lock-variable-name-face fontified t) 2524 2525 (face (rainbow-delimiters-depth-2-face) fontified t) 2525 2526 (fontified t) 2526 2527 (face (rainbow-delimiters-depth-2-face) fontified t) 2527 2536 (fontified t) 2536 2539 (face font-lock-comment-delimiter-face fontified t) 2539 2587 (face font-lock-comment-face fontified t) 2587 2596 (fontified t) 2596 2599 (face font-lock-comment-delimiter-face fontified t) 2599 2630 (face font-lock-comment-face fontified t) 2630 2638 (fontified t) 2638 2644 (face font-lock-keyword-face fontified t) 2644 2645 (fontified t) 2645 2649 (face font-lock-constant-face fontified t) 2649 2655 (fontified t) 2655 2656 (face (rainbow-delimiters-depth-2-face) fontified t) 2656 2662 (fontified t) 2662 2668 (face font-lock-keyword-face fontified t) 2668 2669 (fontified t) 2669 2670 (face font-lock-type-face c-type c-decl-id-start fontified t) 2670 2671 (fontified t) 2671 2674 (face font-lock-function-name-face fontified t) 2674 2675 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 2675 2678 (face font-lock-type-face fontified t) 2678 2679 (fontified t) 2679 2684 (face font-lock-variable-name-face fontified t) 2684 2685 (face (rainbow-delimiters-depth-2-face) fontified t) 2685 2686 (fontified t) 2686 2687 (face (rainbow-delimiters-depth-2-face) fontified t) 2687 2688 (fontified t) 2688 2696 (fontified t) 2696 2698 (face font-lock-keyword-face fontified t) 2698 2699 (fontified t) 2699 2700 (face (rainbow-delimiters-depth-3-face) fontified t) 2700 2704 (fontified t) 2704 2705 (face (rainbow-delimiters-depth-4-face) fontified t) 2705 2706 (face (rainbow-delimiters-depth-4-face) fontified t) 2706 2711 (fontified t) 2711 2712 (face (rainbow-delimiters-depth-3-face) fontified t) 2712 2725 (fontified t) 2725 2730 (face font-lock-keyword-face fontified t) 2730 2731 (fontified t) 2731 2734 (face font-lock-keyword-face fontified t) 2734 2735 (fontified t) 2735 2739 (face font-lock-constant-face fontified t) 2739 2740 (fontified t) 2740 2744 (face font-lock-constant-face fontified t) 2744 2745 (fontified t) 2745 2770 (face font-lock-type-face fontified t) 2770 2771 (face (rainbow-delimiters-depth-3-face) fontified t) 2771 2772 (face (rainbow-delimiters-depth-3-face) fontified t) 2772 2782 (fontified t) 2782 2786 (face font-lock-keyword-face fontified t) 2786 2787 (fontified t) 2787 2788 (face (rainbow-delimiters-depth-3-face) fontified t) 2788 2801 (fontified t) 2801 2803 (face font-lock-type-face fontified t) 2803 2804 (face font-lock-type-face c-type c-decl-id-start fontified t) 2804 2805 (fontified t) 2805 2808 (face font-lock-variable-name-face fontified t) 2808 2826 (fontified t) 2826 2827 (face font-lock-type-face c-type c-decl-id-start fontified t) 2827 2828 (fontified t) 2828 2835 (face font-lock-variable-name-face fontified t) 2835 2838 (fontified t) 2838 2842 (face font-lock-constant-face fontified t) 2842 2857 (fontified t) 2857 2862 (face font-lock-keyword-face fontified t) 2862 2863 (fontified t) 2863 2864 (face (rainbow-delimiters-depth-4-face) fontified t) 2864 2872 (fontified t) 2872 2873 (face (rainbow-delimiters-depth-5-face) fontified t) 2873 2874 (face (rainbow-delimiters-depth-5-face) fontified t) 2874 2882 (fontified t) 2882 2883 (face (rainbow-delimiters-depth-5-face) fontified t) 2883 2884 (face (rainbow-delimiters-depth-5-face) fontified t) 2884 2885 (face (rainbow-delimiters-depth-4-face) fontified t) 2885 2886 (fontified t) 2886 2887 (face (rainbow-delimiters-depth-4-face) fontified t) 2887 2905 (fontified t) 2905 2906 (face font-lock-type-face c-type c-decl-id-start fontified t) 2906 2907 (fontified t) 2907 2914 (face font-lock-variable-name-face fontified t) 2914 2925 (fontified t) 2925 2926 (face (rainbow-delimiters-depth-5-face) fontified t) 2926 2927 (face (rainbow-delimiters-depth-5-face) fontified t) 2927 2932 (fontified t) 2932 2933 (face (rainbow-delimiters-depth-5-face) fontified t) 2933 2934 (face (rainbow-delimiters-depth-5-face) fontified t) 2934 2953 (fontified t) 2953 2955 (face font-lock-keyword-face fontified t) 2955 2956 (fontified t) 2956 2957 (face (rainbow-delimiters-depth-5-face) fontified t) 2957 2969 (fontified t) 2969 2970 (face (rainbow-delimiters-depth-5-face) fontified t) 2970 3004 (fontified t) 3004 3009 (fontified t) 3009 3026 (fontified t) 3026 3030 (face font-lock-keyword-face fontified t) 3030 3031 (fontified t) 3031 3032 (face (rainbow-delimiters-depth-5-face) fontified t) 3032 3076 (fontified t) 3076 3077 (face (rainbow-delimiters-depth-5-face) fontified t) 3077 3090 (fontified t) 3090 3091 (face (rainbow-delimiters-depth-4-face) fontified t) 3091 3100 (fontified t) 3100 3106 (face font-lock-keyword-face fontified t) 3106 3124 (fontified t) 3124 3125 (face (rainbow-delimiters-depth-3-face) fontified t) 3125 3130 (fontified t) 3130 3131 (face (rainbow-delimiters-depth-2-face) fontified t) 3131 3137 (fontified t) 3137 3143 (face font-lock-keyword-face fontified t) 3143 3144 (fontified t) 3144 3150 (face font-lock-type-face fontified t) 3150 3151 (face font-lock-type-face c-type c-decl-id-start fontified t) 3151 3152 (fontified t) 3152 3160 (face font-lock-function-name-face fontified t) 3160 3161 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 3161 3162 (face font-lock-type-face fontified t) 3162 3163 (fontified t) 3163 3170 (face font-lock-variable-name-face fontified t) 3170 3171 (face (rainbow-delimiters-depth-2-face) fontified t) 3171 3172 (fontified t) 3172 3173 (face (rainbow-delimiters-depth-2-face) fontified t) 3173 3183 (fontified t) 3183 3184 (face font-lock-type-face c-type c-decl-id-start fontified t) 3184 3185 (fontified t) 3185 3192 (face font-lock-variable-name-face fontified t) 3192 3203 (fontified t) 3203 3204 (face (rainbow-delimiters-depth-3-face) fontified t) 3204 3205 (face (rainbow-delimiters-depth-3-face) fontified t) 3205 3210 (fontified t) 3210 3211 (face (rainbow-delimiters-depth-3-face) fontified t) 3211 3212 (face (rainbow-delimiters-depth-3-face) fontified t) 3212 3223 (fontified t) 3223 3228 (face font-lock-keyword-face fontified t) 3228 3229 (fontified t) 3229 3230 (face (rainbow-delimiters-depth-3-face) fontified t) 3230 3238 (fontified t) 3238 3239 (face (rainbow-delimiters-depth-4-face) fontified t) 3239 3240 (face (rainbow-delimiters-depth-4-face) fontified t) 3240 3248 (fontified t) 3248 3249 (face (rainbow-delimiters-depth-4-face) fontified t) 3249 3250 (face (rainbow-delimiters-depth-4-face) fontified t) 3250 3251 (face (rainbow-delimiters-depth-3-face) fontified t) 3251 3252 (fontified t) 3252 3253 (face (rainbow-delimiters-depth-3-face) fontified t) 3253 3267 (fontified t) 3267 3269 (face font-lock-keyword-face fontified t) 3269 3270 (fontified t) 3270 3271 (face (rainbow-delimiters-depth-4-face) fontified t) 3271 3289 (fontified t) 3289 3290 (face (rainbow-delimiters-depth-4-face) fontified t) 3290 3307 (fontified t) 3307 3313 (face font-lock-keyword-face fontified t) 3313 3314 (fontified t) 3314 3318 (face font-lock-constant-face fontified t) 3318 3328 (fontified t) 3328 3329 (face (rainbow-delimiters-depth-3-face) fontified t) 3329 3338 (fontified t) 3338 3344 (face font-lock-keyword-face fontified t) 3344 3345 (fontified t) 3345 3350 (face font-lock-constant-face fontified t) 3350 3356 (fontified t) 3356 3357 (face (rainbow-delimiters-depth-2-face) fontified t) 3357 3363 (fontified t) 3363 3369 (face font-lock-keyword-face fontified t) 3369 3370 (fontified t) 3370 3372 (face font-lock-type-face fontified t) 3372 3373 (face font-lock-type-face c-type c-decl-id-start fontified t) 3373 3374 (fontified t) 3374 3381 (face font-lock-function-name-face fontified t) 3381 3382 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 3382 3383 (face font-lock-type-face fontified t) 3383 3384 (fontified t) 3384 3391 (face font-lock-variable-name-face fontified t) 3391 3392 (face (rainbow-delimiters-depth-2-face) fontified t) 3392 3393 (fontified t) 3393 3394 (face (rainbow-delimiters-depth-2-face) fontified t) 3394 3404 (fontified t) 3404 3406 (face font-lock-type-face fontified t) 3406 3407 (face font-lock-type-face c-type c-decl-id-start fontified t) 3407 3408 (fontified t) 3408 3411 (face font-lock-variable-name-face fontified t) 3411 3425 (fontified t) 3425 3426 (face font-lock-type-face c-type c-decl-id-start fontified t) 3426 3427 (fontified t) 3427 3434 (face font-lock-variable-name-face fontified t) 3434 3445 (fontified t) 3445 3446 (face (rainbow-delimiters-depth-3-face) fontified t) 3446 3447 (face (rainbow-delimiters-depth-3-face) fontified t) 3447 3452 (fontified t) 3452 3453 (face (rainbow-delimiters-depth-3-face) fontified t) 3453 3454 (face (rainbow-delimiters-depth-3-face) fontified t) 3454 3465 (fontified t) 3465 3470 (face font-lock-keyword-face fontified t) 3470 3471 (fontified t) 3471 3472 (face (rainbow-delimiters-depth-3-face) fontified t) 3472 3480 (fontified t) 3480 3481 (face (rainbow-delimiters-depth-4-face) fontified t) 3481 3482 (face (rainbow-delimiters-depth-4-face) fontified t) 3482 3490 (fontified t) 3490 3491 (face (rainbow-delimiters-depth-4-face) fontified t) 3491 3492 (face (rainbow-delimiters-depth-4-face) fontified t) 3492 3493 (face (rainbow-delimiters-depth-3-face) fontified t) 3493 3494 (fontified t) 3494 3495 (face (rainbow-delimiters-depth-3-face) fontified t) 3495 3509 (fontified t) 3509 3511 (face font-lock-keyword-face fontified t) 3511 3512 (fontified t) 3512 3513 (face (rainbow-delimiters-depth-4-face) fontified t) 3513 3531 (fontified t) 3531 3532 (face (rainbow-delimiters-depth-4-face) fontified t) 3532 3549 (fontified t) 3549 3554 (face font-lock-keyword-face fontified t) 3554 3568 (fontified t) 3568 3572 (face font-lock-keyword-face fontified t) 3572 3573 (fontified t) 3573 3574 (face (rainbow-delimiters-depth-4-face) fontified t) 3574 3632 (fontified t) 3632 3633 (face (rainbow-delimiters-depth-5-face) fontified t) 3633 3634 (face (rainbow-delimiters-depth-5-face) fontified t) 3634 3639 (fontified t) 3639 3640 (face (rainbow-delimiters-depth-5-face) fontified t) 3640 3641 (face (rainbow-delimiters-depth-5-face) fontified t) 3641 3655 (fontified t) 3655 3656 (face (rainbow-delimiters-depth-4-face) fontified t) 3656 3657 (fontified t) 3657 3660 (face font-lock-comment-delimiter-face fontified t) 3660 3680 (face font-lock-comment-face fontified t) 3680 3688 (fontified t) 3688 3689 (face (rainbow-delimiters-depth-3-face) fontified t) 3689 3698 (fontified t) 3698 3704 (face font-lock-keyword-face fontified t) 3704 3714 (fontified t) 3714 3715 (face (rainbow-delimiters-depth-2-face) fontified t) 3715 3721 (fontified t) 3721 3727 (face font-lock-keyword-face fontified t) 3727 3728 (fontified t) 3728 3731 (face font-lock-type-face fontified t) 3731 3732 (face font-lock-type-face c-type c-decl-id-start fontified t) 3732 3733 (fontified t) 3733 3738 (face font-lock-function-name-face fontified t) 3738 3739 (face (rainbow-delimiters-depth-2-face) fontified t) 3739 3740 (face (rainbow-delimiters-depth-2-face) fontified t) 3740 3741 (fontified t) 3741 3742 (face (rainbow-delimiters-depth-2-face) fontified t) 3742 3751 (fontified t) 3751 3755 (face font-lock-keyword-face fontified t) 3755 3774 (fontified t) 3774 3778 (face font-lock-keyword-face fontified t) 3778 3786 (fontified t) 3786 3790 (face font-lock-constant-face fontified t) 3790 3800 (fontified t) 3800 3804 (face font-lock-keyword-face fontified t) 3804 3812 (fontified t) 3812 3816 (face font-lock-constant-face fontified t) 3816 3822 (fontified t) 3822 3823 (face (rainbow-delimiters-depth-2-face) fontified t) 3823 3829 (fontified t) 3829 3835 (face font-lock-keyword-face fontified t) 3835 3836 (fontified t) 3836 3838 (face font-lock-type-face fontified t) 3838 3839 (face font-lock-type-face c-type c-decl-id-start fontified t) 3839 3840 (fontified t) 3840 3844 (face font-lock-function-name-face fontified t) 3844 3845 (face (rainbow-delimiters-depth-2-face) fontified t) 3845 3846 (face (rainbow-delimiters-depth-2-face) fontified t) 3846 3847 (fontified t) 3847 3848 (face (rainbow-delimiters-depth-2-face) fontified t) 3848 3857 (fontified t) 3857 3863 (face font-lock-keyword-face fontified t) 3863 3864 (fontified t) 3864 3868 (face font-lock-keyword-face fontified t) 3868 3879 (fontified t) 3879 3880 (face (rainbow-delimiters-depth-2-face) fontified t) 3880 3886 (fontified t) 3886 3895 (face c-annotation-face fontified t) 3895 3900 (fontified t) 3900 3906 (face font-lock-keyword-face fontified t) 3906 3907 (fontified t) 3907 3912 (face font-lock-type-face fontified t) 3912 3913 (face font-lock-type-face c-type c-decl-id-start fontified t) 3913 3914 (fontified t) 3914 3922 (face font-lock-function-name-face fontified t) 3922 3923 (face (rainbow-delimiters-depth-2-face) fontified t) 3923 3924 (face (rainbow-delimiters-depth-2-face) fontified t) 3924 3925 (fontified t) 3925 3926 (face (rainbow-delimiters-depth-2-face) fontified t) 3926 3927 (fontified t) 3927 3935 (fontified t) 3935 3940 (face font-lock-type-face fontified t) 3940 3941 (face font-lock-type-face c-type c-decl-id-start fontified t) 3941 3942 (fontified t) 3942 3947 (face font-lock-variable-name-face fontified t) 3947 3950 (fontified t) 3950 3952 (face font-lock-string-face fontified t) 3952 3963 (fontified t) 3963 3968 (face font-lock-keyword-face fontified t) 3968 3969 (fontified t) 3969 3970 (face (rainbow-delimiters-depth-3-face) fontified t) 3970 3978 (fontified t) 3978 3979 (face (rainbow-delimiters-depth-4-face) fontified t) 3979 3980 (face (rainbow-delimiters-depth-4-face) fontified t) 3980 3988 (fontified t) 3988 3989 (face (rainbow-delimiters-depth-4-face) fontified t) 3989 3990 (face (rainbow-delimiters-depth-4-face) fontified t) 3990 3991 (face (rainbow-delimiters-depth-3-face) fontified t) 3991 3992 (fontified t) 3992 3993 (face (rainbow-delimiters-depth-3-face) fontified t) 3993 4023 (fontified t) 4023 4024 (face (rainbow-delimiters-depth-4-face) fontified t) 4024 4025 (face (rainbow-delimiters-depth-4-face) fontified t) 4025 4030 (fontified t) 4030 4031 (face (rainbow-delimiters-depth-4-face) fontified t) 4031 4032 (face (rainbow-delimiters-depth-4-face) fontified t) 4032 4035 (fontified t) 4035 4039 (face font-lock-string-face fontified t) 4039 4049 (fontified t) 4049 4050 (face (rainbow-delimiters-depth-3-face) fontified t) 4050 4059 (fontified t) 4059 4065 (face font-lock-keyword-face fontified t) 4065 4066 (fontified t) 4066 4069 (face font-lock-string-face fontified t) 4069 4080 (fontified t) 4080 4083 (face font-lock-string-face fontified t) 4083 4089 (fontified t) 4089 4090 (face (rainbow-delimiters-depth-2-face) fontified t) 4090 4096 (fontified t) 4096 4102 (face font-lock-keyword-face fontified t) 4102 4103 (fontified t) 4103 4107 (face font-lock-constant-face fontified t) 4107 4108 (fontified t) 4108 4112 (face font-lock-constant-face fontified t) 4112 4113 (fontified t) 4113 4121 (face font-lock-type-face fontified t) 4121 4122 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4122 4123 (face font-lock-type-face fontified t) 4123 4124 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4124 4125 (fontified t) 4125 4133 (face font-lock-function-name-face fontified t) 4133 4134 (face (rainbow-delimiters-depth-2-face) fontified t) 4134 4135 (face (rainbow-delimiters-depth-2-face) fontified t) 4135 4136 (fontified t) 4136 4137 (face (rainbow-delimiters-depth-2-face) fontified t) 4137 4146 (fontified t) 4146 4152 (face font-lock-keyword-face fontified t) 4152 4153 (fontified t) 4153 4156 (face font-lock-keyword-face fontified t) 4156 4157 (fontified t) 4157 4175 (face font-lock-type-face fontified t) 4175 4176 (face (rainbow-delimiters-depth-3-face) fontified t) 4176 4177 (face (rainbow-delimiters-depth-3-face) fontified t) 4177 4183 (fontified t) 4183 4184 (face (rainbow-delimiters-depth-2-face) fontified t) 4184 4190 (fontified t) 4190 4197 (face font-lock-keyword-face fontified t) 4197 4198 (fontified t) 4198 4204 (face font-lock-keyword-face fontified t) 4204 4205 (fontified t) 4205 4209 (face font-lock-keyword-face fontified t) 4209 4210 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 4210 4211 (fontified t) 4211 4215 (face font-lock-type-face fontified t) 4215 4216 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4216 4217 (face font-lock-type-face fontified t) 4217 4218 (face (rainbow-delimiters-depth-2-face) fontified t category c->-as-paren-syntax) 4218 4219 (fontified t) 4219 4220 (face (rainbow-delimiters-depth-2-face) fontified t) 4220 4230 (fontified t) 4230 4237 (face font-lock-keyword-face fontified t) 4237 4238 (fontified t) 4238 4239 (face font-lock-type-face c-type c-decl-id-start fontified t) 4239 4240 (fontified t) 4240 4244 (face font-lock-variable-name-face fontified t) 4244 4254 (fontified t) 4254 4261 (face font-lock-keyword-face fontified t) 4261 4262 (fontified t) 4262 4266 (face font-lock-type-face fontified t) 4266 4267 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4267 4268 (face font-lock-type-face fontified t) 4268 4269 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4269 4270 (fontified t) 4270 4274 (face font-lock-variable-name-face fontified t) 4274 4289 (fontified t) 4289 4290 (face (rainbow-delimiters-depth-3-face) fontified t) 4290 4291 (face font-lock-type-face fontified t) 4291 4292 (fontified t) 4292 4296 (face font-lock-variable-name-face fontified t) 4296 4298 (fontified t) 4298 4302 (face font-lock-type-face fontified t) 4302 4303 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4303 4304 (face font-lock-type-face fontified t) 4304 4305 (face (rainbow-delimiters-depth-4-face) fontified t category c->-as-paren-syntax) 4305 4306 (fontified t) 4306 4310 (face font-lock-variable-name-face fontified t) 4310 4311 (face (rainbow-delimiters-depth-3-face) fontified t) 4311 4312 (fontified t) 4312 4313 (face (rainbow-delimiters-depth-3-face) fontified t) 4313 4326 (fontified t) 4326 4330 (face font-lock-keyword-face fontified t) 4330 4356 (fontified t) 4356 4360 (face font-lock-keyword-face fontified t) 4360 4382 (fontified t) 4382 4383 (face (rainbow-delimiters-depth-3-face) fontified t) 4383 4401 (fontified t) 4401 4407 (face font-lock-keyword-face fontified t) 4407 4408 (fontified t) 4408 4409 (face font-lock-type-face c-type c-decl-id-start fontified t) 4409 4410 (fontified t) 4410 4417 (face font-lock-function-name-face fontified t) 4417 4418 (face (rainbow-delimiters-depth-3-face) fontified t) 4418 4419 (face (rainbow-delimiters-depth-3-face) fontified t) 4419 4420 (fontified t) 4420 4421 (face (rainbow-delimiters-depth-3-face) fontified t) 4421 4434 (fontified t) 4434 4440 (face font-lock-keyword-face fontified t) 4440 4441 (fontified t) 4441 4445 (face font-lock-keyword-face fontified t) 4445 4460 (fontified t) 4460 4461 (face (rainbow-delimiters-depth-3-face) fontified t) 4461 4479 (fontified t) 4479 4485 (face font-lock-keyword-face fontified t) 4485 4486 (fontified t) 4486 4490 (face font-lock-type-face fontified t) 4490 4491 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4491 4492 (face font-lock-type-face fontified t) 4492 4493 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4493 4494 (fontified t) 4494 4501 (face font-lock-function-name-face fontified t) 4501 4502 (face (rainbow-delimiters-depth-3-face) fontified t) 4502 4503 (face (rainbow-delimiters-depth-3-face) fontified t) 4503 4504 (fontified t) 4504 4505 (face (rainbow-delimiters-depth-3-face) fontified t) 4505 4509 (fontified t) 4509 4518 (fontified t) 4518 4524 (fontified t face font-lock-keyword-face) 4524 4525 (fontified t) 4525 4529 (fontified t face font-lock-keyword-face) 4529 4536 (fontified t) 4536 4544 (fontified t) 4544 4545 (face (rainbow-delimiters-depth-3-face) fontified t) 4545 4550 (fontified t) 4550 4551 (face (rainbow-delimiters-depth-2-face) fontified t) 4551 4557 (fontified t) 4557 4564 (face font-lock-keyword-face fontified t) 4564 4565 (fontified t) 4565 4569 (face font-lock-keyword-face fontified t) 4569 4570 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 4570 4571 (fontified t) 4571 4589 (face font-lock-type-face fontified t) 4589 4590 (fontified t) 4590 4600 (face font-lock-keyword-face fontified t) 4600 4601 (fontified t) 4601 4605 (face font-lock-constant-face fontified t) 4605 4606 (fontified t) 4606 4610 (face font-lock-constant-face fontified t) 4610 4611 (fontified t) 4611 4619 (face font-lock-type-face fontified t) 4619 4620 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4620 4621 (face font-lock-type-face fontified t) 4621 4622 (face (rainbow-delimiters-depth-2-face) fontified t category c->-as-paren-syntax) 4622 4623 (fontified t) 4623 4624 (face (rainbow-delimiters-depth-2-face) fontified t) 4624 4634 (fontified t) 4634 4641 (face font-lock-keyword-face fontified t) 4641 4642 (fontified t) 4642 4646 (face font-lock-type-face fontified t) 4646 4647 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4647 4648 (face font-lock-type-face fontified t) 4648 4649 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4649 4650 (fontified t) 4650 4657 (face font-lock-variable-name-face fontified t) 4657 4675 (fontified t) 4675 4681 (face font-lock-keyword-face fontified t) 4681 4682 (fontified t) 4682 4688 (face font-lock-type-face fontified t) 4688 4689 (face font-lock-type-face c-type c-decl-id-start fontified t) 4689 4690 (fontified t) 4690 4697 (face font-lock-function-name-face fontified t) 4697 4698 (face (rainbow-delimiters-depth-3-face) fontified t) 4698 4699 (face (rainbow-delimiters-depth-3-face) fontified t) 4699 4700 (fontified t) 4700 4701 (face (rainbow-delimiters-depth-3-face) fontified t) 4701 4714 (fontified t) 4714 4720 (face font-lock-keyword-face fontified t) 4720 4746 (fontified t) 4746 4747 (face (rainbow-delimiters-depth-3-face) fontified t) 4747 4757 (fontified t) 4757 4763 (face font-lock-keyword-face fontified t) 4763 4764 (fontified t) 4764 4765 (face font-lock-type-face c-type c-decl-id-start fontified t) 4765 4766 (fontified t) 4766 4770 (face font-lock-function-name-face fontified t) 4770 4771 (face (rainbow-delimiters-depth-3-face) fontified t) 4771 4772 (face (rainbow-delimiters-depth-3-face) fontified t) 4772 4773 (fontified t) 4773 4774 (face (rainbow-delimiters-depth-3-face) fontified t) 4774 4787 (fontified t) 4787 4789 (face font-lock-keyword-face fontified t) 4789 4790 (fontified t) 4790 4791 (face (rainbow-delimiters-depth-4-face) fontified t) 4791 4792 (face font-lock-negation-char-face fontified t) 4792 4799 (fontified t) 4799 4800 (face (rainbow-delimiters-depth-5-face) fontified t) 4800 4801 (face (rainbow-delimiters-depth-5-face) fontified t) 4801 4802 (face (rainbow-delimiters-depth-4-face) fontified t) 4802 4820 (fontified t) 4820 4821 (face font-lock-keyword-face fontified t) 4821 4825 (face font-lock-keyword-face fontified t) 4825 4826 (fontified t) 4826 4829 (face font-lock-keyword-face fontified t) 4829 4830 (fontified t) 4830 4834 (face font-lock-constant-face fontified t) 4834 4835 (fontified t) 4835 4839 (face font-lock-constant-face fontified t) 4839 4840 (fontified t) 4840 4865 (face font-lock-type-face fontified t) 4865 4866 (face (rainbow-delimiters-depth-4-face) fontified t) 4866 4867 (face (rainbow-delimiters-depth-4-face) fontified t) 4867 4882 (fontified t) 4882 4883 (face font-lock-type-face c-type c-decl-id-start fontified t) 4883 4884 (fontified t) 4884 4892 (face font-lock-variable-name-face fontified t) 4892 4910 (fontified t) 4910 4911 (face (rainbow-delimiters-depth-4-face) fontified t) 4911 4912 (face (rainbow-delimiters-depth-4-face) fontified t) 4912 4914 (fontified t) 4914 4962 (fontified t) 4962 4968 (face font-lock-keyword-face fontified t) 4968 4987 (fontified t) 4987 4988 (face (rainbow-delimiters-depth-3-face) fontified t) 4988 4990 (fontified t) 4990 4998 (fontified t) 4998 4999 (face font-lock-comment-delimiter-face fontified t) 4999 5001 (face font-lock-comment-delimiter-face fontified t) 5001 5012 (face font-lock-comment-face fontified t) 5012 5013 (face font-lock-comment-face fontified t) 5013 5021 (fontified t) 5021 5022 (face font-lock-comment-delimiter-face fontified t) 5022 5023 (face font-lock-comment-delimiter-face fontified t) 5023 5043 (face font-lock-comment-face fontified t) 5043 5051 (fontified t) 5051 5052 (face font-lock-comment-delimiter-face fontified t) 5052 5053 (face font-lock-comment-delimiter-face fontified t) 5053 5054 (face font-lock-comment-face fontified t) 5054 5055 (face font-lock-comment-face fontified t) 5055 5059 (fontified t) 5059 5060 (face (rainbow-delimiters-depth-2-face) fontified t) 5060 5061 (fontified t) 5061 5062 (face (rainbow-delimiters-depth-1-face) fontified t) 5062 5063 (fontified t)) . 1) (undo-tree-id1728 . -5063) (undo-tree-id1729 . -51) (undo-tree-id1730 . -51) (undo-tree-id1731 . 151) (undo-tree-id1732 . -5062) (undo-tree-id1733 . -2) (undo-tree-id1734 . -5063) (undo-tree-id1735 . -51) (undo-tree-id1736 . -255) (undo-tree-id1737 . -51) (undo-tree-id1738 . -51) (undo-tree-id1739 . -51) (undo-tree-id1740 . -51) (undo-tree-id1741 . -5063) (undo-tree-id1742 . -5063) (undo-tree-id1743 . -3927) (undo-tree-id1744 . -243) (undo-tree-id1745 . -243) (undo-tree-id1746 . -2) 5064 (t 26029 32584 942359 989000)) nil (26029 33185 229961 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -5064) (1 . 5065)) nil (26029 33185 229954 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1)) nil (26029 33185 229953 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1157) (undo-tree-id1724 . -8) (undo-tree-id1725 . -8) 1165 (1157 . 1165) (#("        " 0 8 (fontified nil)) . 1156) (undo-tree-id1726 . -8) (undo-tree-id1727 . -8) (1164 . 1165) (1155 . 1164) 1103) nil (26029 33185 229952 0) 0 nil])
([nil nil ((1157 . 1166) 1157) nil (26029 33185 229951 0) 0 nil])
([nil nil ((1242 . 1243) (1240 . 1242) (#(";" 0 1 (fontified t)) . -1240) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) 1241 (1240 . 1241) (1205 . 1240) (#("java.lang.Index" 0 1 (face font-lock-constant-face fontified nil) 1 2 (face font-lock-constant-face fontified nil) 2 3 (face font-lock-constant-face fontified nil) 3 4 (face font-lock-constant-face fontified nil) 4 5 (fontified nil) 5 6 (face font-lock-constant-face fontified nil) 6 7 (face font-lock-constant-face fontified nil) 7 8 (face font-lock-constant-face fontified nil) 8 9 (face font-lock-constant-face fontified nil) 9 10 (fontified nil) 10 15 (fontified nil)) . 1205) (undo-tree-id1700 . -10) (undo-tree-id1701 . -10) (1215 . 1220) (#("IndexOutOfBoundsException()" 0 27 (fontified nil)) . -1215) (undo-tree-id1702 . -27) (1215 . 1242) (#("Index" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t)) . -1215) (undo-tree-id1703 . -5) (undo-tree-id1704 . -5) 1220 (1211 . 1220) (1195 . 1211) (#("throew " 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -1195) (undo-tree-id1705 . -7) (undo-tree-id1706 . -7) 1202 (#("ne" 0 1 (fontified t) 1 2 (fontified t)) . -1202) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) 1204 (1195 . 1204) (1183 . 1195) (#(" " 0 1 (fontified nil)) . 1182) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (1183 . 1184) (#("{" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -1183) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) 1184 (1183 . 1184) (1182 . 1183) (1181 . 1182) (#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -1181) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) 1182 (1181 . 1182) (1177 . 1181) (1176 . 1177) (1174 . 1176) (1170 . 1174) (#("siz" 0 3 (fontified nil)) . 1170) (1170 . 1173) (#("size : int" 0 10 (fontified nil)) . -1170) (undo-tree-id1715 . -10) (1170 . 1180) (#("size" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1170) (undo-tree-id1716 . -4) (undo-tree-id1717 . -3) 1174 (1170 . 1174) (#("f" 0 1 (fontified t)) . -1170) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (#("i" 0 1 (fontified t)) . -1171) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) 1172 (1170 . 1172) (1169 . 1170) (1166 . 1169) (1158 . 1166) (#("       " 0 7 (fontified nil)) . -1158) (undo-tree-id1722 . -7) (undo-tree-id1723 . -7) (#(" " 0 1 (fontified t)) . 1165)) nil (26029 33185 229948 0) 0 nil])
([nil nil ((#(" x" 0 2 (fontified nil)) . -1256) (1256 . 1258) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1256) (1252 . 1256) 1268 (1259 . 1267) (#("            " 0 12 (fontified nil)) . 1259) (undo-tree-id1694 . -12) (undo-tree-id1695 . -12) (1271 . 1272) (1258 . 1271) (1257 . 1258) (1256 . 1257) (#(" x" 0 2 (fontified nil)) . -1256) (1256 . 1258) (#("else" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 1256) (undo-tree-id1696 . -3) (undo-tree-id1697 . -3) (1252 . 1256) 1256 (1252 . 1256) (1243 . 1252) 1242) nil (26029 33185 229934 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1260) (undo-tree-id1690 . -12) (undo-tree-id1691 . -12) (#(" x" 0 2 (fontified nil)) . -1256) (1256 . 1258) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1256) (1252 . 1256) 1272 (1260 . 1272) (#("            " 0 12 (fontified nil)) . 1259) (undo-tree-id1692 . -12) (undo-tree-id1693 . -12) (1271 . 1272) (1258 . 1271) 1252) nil (26029 33185 229930 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1156)) nil (26029 33185 229928 0) 0 nil])
([nil nil ((1186 . 1188) (1184 . 1186) (#(" " 0 1 (fontified t)) . -1184) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) 1185 (#("+ " 0 1 (fontified t) 1 2 (fontified t)) . -1185) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) 1187 (#("1" 0 1 (fontified t)) . -1187) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) 1188 (1184 . 1188) (1182 . 1184) (1180 . 1182) (#("x" 0 1 (fontified t)) . -1180) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) 1181 (1178 . 1181) (1177 . 1178) (1176 . 1177) (1175 . 1176) (#("{" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -1175) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) 1176 (1175 . 1176) (1169 . 1175) (#("size() == 0)" 0 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-4-face) fontified t) 5 6 (face (rainbow-delimiters-depth-4-face) fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-3-face) fontified t)) . 1169) (undo-tree-id1689 . -11)) nil (26029 33185 229927 0) 0 nil])
([nil nil ((1188 . 1190) (#("-" 0 1 (fontified t)) . -1188) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) 1189 (1184 . 1189) (#("++))" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-4-face) fontified t) 3 4 (face (rainbow-delimiters-depth-3-face) fontified t)) . 1184) (undo-tree-id1678 . -3)) nil (26029 33185 229921 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1267)) nil (26029 33185 229918 0) 0 nil])
([nil nil ((1187 . 1188) (#("1" 0 1 (fontified t)) . 1187)) nil (26029 33185 229918 0) 0 nil])
([nil nil ((1230 . 1243) (#("storle" 0 1 (face font-lock-comment-face fontified t) 1 2 (face font-lock-comment-face fontified t) 2 3 (face font-lock-comment-face fontified t) 3 4 (face font-lock-comment-face fontified t) 4 5 (face font-lock-comment-face fontified t) 5 6 (face font-lock-comment-face fontified t)) . -1230) (undo-tree-id1670 . -6) (undo-tree-id1671 . -6) 1236 (1224 . 1236) (1203 . 1224) (1193 . 1203) (1191 . 1193) (#("*" 0 1 (fontified t)) . -1191) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (#("*" 0 1 (fontified t)) . -1192) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) 1193 (1191 . 1193) (1190 . 1191)) nil (26029 33185 229917 0) 0 nil])
([nil nil ((1243 . 1260) (#("," 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -1243) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) 1244 (1243 . 1244)) nil (26029 33185 229914 0) 0 nil])
([nil nil ((1199 . 1202) (#(">" 0 1 (fontified t)) . -1199) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) 1200 (1199 . 1200) (1190 . 1199) (#("@" 0 1 (fontified t)) . -1190) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (#("@" 0 1 (fontified t)) . -1191) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) 1192 (1189 . 1192)) nil (26029 33185 229912 0) 0 nil])
([nil nil ((#("// om det angivna indexet är större än storleken + 2 är det för stort" 0 1 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 2 3 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face font-lock-comment-face c-in-sws t fontified t) 6 7 (face font-lock-comment-face c-in-sws t fontified t) 7 8 (face font-lock-comment-face c-in-sws t fontified t) 8 9 (face font-lock-comment-face c-in-sws t fontified t) 9 10 (face font-lock-comment-face c-in-sws t fontified t) 10 12 (face font-lock-comment-face c-in-sws t fontified t) 12 13 (face font-lock-comment-face c-in-sws t fontified t) 13 14 (face font-lock-comment-face c-in-sws t fontified t) 14 15 (face font-lock-comment-face c-in-sws t fontified t) 15 16 (face font-lock-comment-face c-in-sws t fontified t) 16 18 (face font-lock-comment-face c-in-sws t fontified t) 18 19 (face font-lock-comment-face c-in-sws t fontified t) 19 20 (face font-lock-comment-face c-in-sws t fontified t) 20 21 (face font-lock-comment-face c-in-sws t fontified t) 21 22 (face font-lock-comment-face c-in-sws t fontified t) 22 23 (face font-lock-comment-face c-in-sws t fontified t) 23 25 (face font-lock-comment-face c-in-sws t fontified t) 25 26 (face font-lock-comment-face c-in-sws t fontified t) 26 27 (face font-lock-comment-face c-in-sws t fontified t) 27 29 (face font-lock-comment-face c-in-sws t fontified t) 29 30 (face font-lock-comment-face c-in-sws t fontified t) 30 31 (face font-lock-comment-face c-in-sws t fontified t) 31 32 (face font-lock-comment-face c-in-sws t fontified t) 32 33 (face font-lock-comment-face c-in-sws t fontified t) 33 34 (face font-lock-comment-face c-in-sws t fontified t) 34 36 (face font-lock-comment-face c-in-sws t fontified t) 36 37 (face font-lock-comment-face c-in-sws t fontified t) 37 38 (face font-lock-comment-face c-in-sws t fontified t) 38 39 (face font-lock-comment-face c-in-sws t fontified t) 39 40 (face font-lock-comment-face c-in-sws t fontified t) 40 41 (face font-lock-comment-face c-in-sws t fontified t) 41 42 (face font-lock-comment-face c-in-sws t fontified t) 42 43 (face font-lock-comment-face c-in-sws t fontified t) 43 44 (face font-lock-comment-face c-in-sws t fontified t) 44 46 (face font-lock-comment-face c-in-sws t fontified t) 46 47 (face font-lock-comment-face c-in-sws t fontified t) 47 48 (face font-lock-comment-face c-in-sws t fontified t) 48 49 (face font-lock-comment-face c-in-sws t fontified t) 49 50 (face font-lock-comment-face c-in-sws t fontified t) 50 51 (face font-lock-comment-face c-in-sws t fontified t) 51 52 (face font-lock-comment-face c-in-sws t fontified t) 52 53 (face font-lock-comment-face c-in-sws t fontified t) 53 54 (face font-lock-comment-face c-in-sws t fontified t) 54 56 (face font-lock-comment-face c-in-sws t fontified t) 56 57 (face font-lock-comment-face c-in-sws t fontified t) 57 58 (face font-lock-comment-face c-in-sws t fontified t) 58 59 (face font-lock-comment-face c-in-sws t fontified t) 59 60 (face font-lock-comment-face c-in-sws t fontified t) 60 61 (face font-lock-comment-face c-in-sws t fontified t) 61 62 (face font-lock-comment-face c-in-sws t fontified t) 62 64 (face font-lock-comment-face c-in-sws t fontified t) 64 65 (face font-lock-comment-face c-in-sws t fontified t) 65 66 (face font-lock-comment-face c-in-sws t fontified t) 66 67 (face font-lock-comment-face c-in-sws t fontified t) 67 68 (face font-lock-comment-face c-in-sws t fontified t) 68 69 (face font-lock-comment-face c-in-sws t fontified t)) . 1204) (undo-tree-id1661 . -68)) nil (26029 33185 229910 0) 0 nil])
([nil nil ((1195 . 1213) (1192 . 1195) (#("strot " 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-face fontified t) 2 4 (c-in-sws t face font-lock-comment-face fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face font-lock-comment-face fontified t)) . -1192) (undo-tree-id1657 . -6) (undo-tree-id1658 . -6) 1198 (1180 . 1198) (#("x" 0 1 (face font-lock-comment-face fontified t)) . -1180) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) 1181 (1167 . 1181) (1165 . 1167) (1156 . 1165) 1156) nil (26029 33185 229909 0) 0 nil])
([nil nil ((#("        Node<E> newNode = new Node<>(element, null);
" 0 8 (fontified t) 8 12 (face font-lock-type-face fontified t) 12 13 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 13 14 (face font-lock-type-face fontified t) 14 15 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 15 16 (fontified t) 16 23 (face font-lock-variable-name-face fontified t) 23 26 (fontified t) 26 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 34 (face font-lock-type-face fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 35 36 (face (rainbow-delimiters-depth-3-face) fontified t category c->-as-paren-syntax) 36 37 (face (rainbow-delimiters-depth-3-face) fontified t) 37 46 (fontified t) 46 50 (face font-lock-constant-face fontified t) 50 51 (face (rainbow-delimiters-depth-3-face) fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 1103) (undo-tree-id1654 . -52) (undo-tree-id1655 . -51) (undo-tree-id1656 . -51) 1154) nil (26029 33185 229906 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1292 . 1293) (#("
" 0 1 (fontified nil)) . -1337) (1284 . 1338) 1270) nil (26029 33185 229903 0) 0 nil])
([nil nil ((1285 . 1297) (#("        " 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t)) . -1285) (undo-tree-id1652 . -8) (undo-tree-id1653 . -8) 1293) nil (26029 33185 229903 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1102)) nil (26029 33185 229901 0) 0 nil])
([nil nil ((#("        int idx = 0;

        // iterera över listan tills det angivna indexet har hittats
        while (iterator().hasNext()) {
            
            E current = iterator().next();  
            
            if (idx == index) { // om noden har hittats...
                // hitta omkringliggande noder
                E previous = get(idx--);
                E next     = get(idx++);

                // kolla om vi är i slutet av listan
                // alltså, kolla om next är tail
                if (tail.equals(next))
                    // gör den nya noden till tail
                    tail = newNode;
                else {
                    // annars, länka om omkringliggande noder
                    // TODO: hur länka om när previous är \"element\", inte nod?
                    newNode.getNext().data = next;
                    //previous.next = newNode;
                }
            } else { // om noden inte hittas...
                // ... öka index
                idx++;
            }
        }
        // öka storleken på listan
        this.size++;
" 0 8 (fontified t) 8 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified t) 11 12 (fontified t) 12 15 (face font-lock-variable-name-face fontified t) 15 17 (fontified t) 17 21 (fontified t) 21 22 (fontified t) 22 30 (fontified t c-is-sws t c-in-sws t) 30 31 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 31 33 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 33 91 (face font-lock-comment-face fontified t c-in-sws t) 91 99 (fontified t c-in-sws t c-is-sws t) 99 100 (face font-lock-keyword-face fontified t c-is-sws t) 100 104 (face font-lock-keyword-face fontified t) 104 105 (fontified t) 105 106 (face (rainbow-delimiters-depth-3-face) fontified t) 106 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-4-face) fontified t) 115 116 (face (rainbow-delimiters-depth-4-face) fontified t) 116 124 (fontified t) 124 125 (face (rainbow-delimiters-depth-4-face) fontified t) 125 126 (face (rainbow-delimiters-depth-4-face) fontified t) 126 127 (face (rainbow-delimiters-depth-3-face) fontified t) 127 128 (fontified t) 128 129 (face (rainbow-delimiters-depth-3-face) fontified t) 129 155 (fontified t) 155 156 (face font-lock-type-face c-type c-decl-id-start fontified t) 156 157 (fontified t) 157 164 (face font-lock-variable-name-face fontified t) 164 175 (fontified t) 175 176 (face (rainbow-delimiters-depth-4-face) fontified t) 176 177 (face (rainbow-delimiters-depth-4-face) fontified t) 177 182 (fontified t) 182 183 (face (rainbow-delimiters-depth-4-face) fontified t) 183 184 (face (rainbow-delimiters-depth-4-face) fontified t) 184 213 (fontified t) 213 215 (face font-lock-keyword-face fontified t) 215 216 (fontified t) 216 217 (face (rainbow-delimiters-depth-4-face) fontified t) 217 229 (fontified t) 229 230 (face (rainbow-delimiters-depth-4-face) fontified t) 230 231 (fontified t) 231 232 (face (rainbow-delimiters-depth-4-face) fontified t) 232 233 (fontified t c-is-sws t c-in-sws t) 233 234 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 234 236 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 236 260 (face font-lock-comment-face fontified t c-in-sws t) 260 276 (fontified t c-in-sws t) 276 279 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 279 306 (face font-lock-comment-face fontified t c-in-sws t) 306 307 (face font-lock-comment-face fontified t c-in-sws t) 307 323 (fontified t c-in-sws t c-is-sws t) 323 324 (face font-lock-type-face c-type c-decl-id-start fontified t c-is-sws t) 324 325 (fontified t) 325 333 (face font-lock-variable-name-face fontified t) 333 339 (fontified t) 339 340 (face (rainbow-delimiters-depth-5-face) fontified t) 340 343 (fontified t) 343 344 (fontified t) 344 345 (fontified t) 345 346 (face (rainbow-delimiters-depth-5-face) fontified t) 346 347 (fontified t) 347 348 (fontified t) 348 364 (fontified t) 364 365 (face font-lock-type-face c-type c-decl-id-start fontified t) 365 366 (fontified t) 366 370 (face font-lock-variable-name-face fontified t) 370 380 (fontified t) 380 381 (face (rainbow-delimiters-depth-5-face) fontified t) 381 386 (fontified t) 386 387 (face (rainbow-delimiters-depth-5-face) fontified t) 387 390 (fontified t) 390 406 (fontified t c-is-sws t c-in-sws t) 406 407 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 407 409 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 409 443 (face font-lock-comment-face fontified t c-in-sws t) 443 448 (fontified t c-in-sws t) 448 449 (fontified t c-in-sws t) 449 459 (fontified t c-in-sws t) 459 462 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 462 491 (face font-lock-comment-face fontified t c-in-sws t) 491 492 (face font-lock-comment-face fontified t c-in-sws t) 492 493 (fontified t c-is-sws t) 493 508 (fontified t c-is-sws t) 508 509 (face font-lock-keyword-face fontified t c-is-sws t) 509 510 (face font-lock-keyword-face fontified t) 510 511 (fontified t) 511 512 (face (rainbow-delimiters-depth-5-face) fontified t) 512 523 (fontified t) 523 524 (face (rainbow-delimiters-depth-6-face) fontified t) 524 528 (fontified t) 528 529 (face (rainbow-delimiters-depth-6-face) fontified t) 529 530 (face (rainbow-delimiters-depth-5-face) fontified t) 530 551 (fontified t) 551 552 (face font-lock-comment-delimiter-face fontified t c-is-sws t) 552 554 (face font-lock-comment-delimiter-face fontified t) 554 582 (face font-lock-comment-face fontified t) 582 602 (fontified t) 602 603 (fontified t c-is-sws t) 603 634 (fontified t) 634 638 (face font-lock-keyword-face fontified t) 638 639 (fontified t) 639 640 (face (rainbow-delimiters-depth-5-face) fontified t) 640 641 (fontified t) 641 661 (fontified t c-is-sws t c-in-sws t) 661 662 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 662 664 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 664 703 (face font-lock-comment-face fontified t c-in-sws t) 703 723 (fontified t c-in-sws t) 723 726 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 726 782 (face font-lock-comment-face fontified t c-in-sws t) 782 802 (fontified t c-in-sws t c-is-sws t) 802 803 (fontified t c-is-sws t) 803 817 (fontified t) 817 818 (face (rainbow-delimiters-depth-6-face) fontified t) 818 819 (face (rainbow-delimiters-depth-6-face) fontified t) 819 853 (fontified t) 853 855 (face font-lock-comment-delimiter-face fontified t) 855 880 (face font-lock-comment-face fontified t) 880 896 (fontified t) 896 897 (face (rainbow-delimiters-depth-5-face) fontified t) 897 910 (fontified t) 910 911 (face (rainbow-delimiters-depth-4-face) fontified t) 911 912 (fontified t) 912 916 (face font-lock-keyword-face fontified t) 916 917 (fontified t) 917 918 (face (rainbow-delimiters-depth-4-face) fontified t) 918 919 (fontified t c-is-sws t c-in-sws t) 919 920 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 920 922 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 922 946 (face font-lock-comment-face fontified t c-in-sws t) 946 962 (fontified t c-in-sws t) 962 965 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 965 979 (face font-lock-comment-face fontified t c-in-sws t) 979 995 (fontified t c-in-sws t c-is-sws t) 995 996 (fontified t c-is-sws t) 996 1014 (fontified t) 1014 1015 (face (rainbow-delimiters-depth-4-face) fontified t) 1015 1024 (fontified t) 1024 1025 (face (rainbow-delimiters-depth-3-face) fontified t) 1025 1034 (fontified t) 1034 1037 (face font-lock-comment-delimiter-face fontified t) 1037 1061 (face font-lock-comment-face fontified t) 1061 1069 (fontified t) 1069 1073 (face font-lock-keyword-face fontified t) 1073 1082 (fontified t)) . 1353) (undo-tree-id1647 . -1061) (undo-tree-id1648 . -1081) (undo-tree-id1649 . -1061) (undo-tree-id1650 . -1061) (undo-tree-id1651 . -1061) 2414) nil (26029 33185 229901 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1348 . 1349) (#("
" 0 1 (fontified nil)) . -2422) (1340 . 2423) 1284) nil (26029 33185 229899 0) 0 nil])
([nil nil ((1349 . 1353) (1371 . 1375) (1440 . 1444) (1471 . 1472) (#("        " 0 8 (fontified t)) . 1471) (#("
" 0 1 (fontified t)) . 1483) 1496 (#("  " 0 2 (fontified t)) . 1526) (1529 . 1530) (#("        " 0 8 (fontified t)) . 1529) (#("
" 0 1 (fontified t)) . 1541) 1554 (1617 . 1621) (1664 . 1668) (1705 . 1709) (#("    " 0 4 (fontified nil)) . -1712) 1716 (1747 . 1751) (1800 . 1804) (1849 . 1853) (1892 . 1896) (1943 . 1947) (1975 . 1979) (2002 . 2006) (2064 . 2068) (2143 . 2147) (2194 . 2198) (2196 . 2197) (2237 . 2241) (2251 . 2255) (2303 . 2307) (2336 . 2340) (2355 . 2359) (2365 . 2369) (2375 . 2379) (2410 . 2414)) nil (26029 33185 229897 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2509) (undo-tree-id1646 . 1)) nil (26029 33185 229894 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2498) (undo-tree-id1645 . -1)) nil (26029 33185 229894 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -1284) (undo-tree-id1643 . -12) (undo-tree-id1644 . -12) (#(" x" 0 2 (fontified nil)) . -1281) (1281 . 1283) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 1281) (1277 . 1281) 1296 (1283 . 1296) 1269) nil (26029 33185 229893 0) 0 nil])
([nil nil ((#("// TODO: hur länka om när previous är \"element\", inte nod?" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 58 (face font-lock-comment-face fontified t c-in-sws t)) . 2099) (undo-tree-id1642 . -57)) nil (26029 33185 229891 0) 0 nil])
([nil nil ((2206 . 2207)) nil (26029 33185 229891 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2264 . 2265) (nil fontified nil 2207 . 2265) (2207 . 2265) 2206) nil (26029 33185 229890 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . 2207)) nil (26029 33185 229890 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-comment-face fontified t)) . 2207)) nil (26029 33185 229889 0) 0 nil])
([nil nil ((2207 . 2208)) nil (26029 33185 229889 0) 0 nil])
([nil nil ((2207 . 2208)) nil (26029 33185 229888 0) 0 nil])
([nil nil ((#("                        
" 0 20 (fontified t c-in-sws t c-is-sws t) 20 24 (fontified t c-in-sws t c-is-sws t) 24 25 (c-is-sws t fontified t)) . 2075) (undo-tree-id1577 . -24) (undo-tree-id1578 . -23) (undo-tree-id1579 . -23) (undo-tree-id1580 . -23) (undo-tree-id1581 . -23) (undo-tree-id1582 . -23) (undo-tree-id1583 . -23) (undo-tree-id1584 . -23) (undo-tree-id1585 . -23) (undo-tree-id1586 . -23) (undo-tree-id1587 . -23) (undo-tree-id1588 . -23) (undo-tree-id1589 . -23) (undo-tree-id1590 . -23) (undo-tree-id1591 . -23) (undo-tree-id1592 . -23) (undo-tree-id1593 . -23) (undo-tree-id1594 . -23) (undo-tree-id1595 . -23) (undo-tree-id1596 . -23) (undo-tree-id1597 . -23) (undo-tree-id1598 . -23) (undo-tree-id1599 . -23) (undo-tree-id1600 . -23) (undo-tree-id1601 . -23) (undo-tree-id1602 . -23) (undo-tree-id1603 . -23) (undo-tree-id1604 . -23) (undo-tree-id1605 . -23) (undo-tree-id1606 . -23) (undo-tree-id1607 . -23) (undo-tree-id1608 . -23) (undo-tree-id1609 . -23) (undo-tree-id1610 . -23) (undo-tree-id1611 . -23) (undo-tree-id1612 . -23) (undo-tree-id1613 . -23) (undo-tree-id1614 . -23) (undo-tree-id1615 . -23) (undo-tree-id1616 . -23) (undo-tree-id1617 . -23) (undo-tree-id1618 . -23) (undo-tree-id1619 . -23) (undo-tree-id1620 . -23) (undo-tree-id1621 . -23) (undo-tree-id1622 . -23) (undo-tree-id1623 . -23) (undo-tree-id1624 . -23) (undo-tree-id1625 . -23) (undo-tree-id1626 . -23) (undo-tree-id1627 . -23) (undo-tree-id1628 . -23) (undo-tree-id1629 . -23) (undo-tree-id1630 . -23) (undo-tree-id1631 . -23) (undo-tree-id1632 . -23) (undo-tree-id1633 . -23) (undo-tree-id1634 . -23) (undo-tree-id1635 . -23) (undo-tree-id1636 . -23) (undo-tree-id1637 . -23) (undo-tree-id1638 . -23) (undo-tree-id1639 . -23) (undo-tree-id1640 . -23) (undo-tree-id1641 . -25) 2098) nil (26029 33185 229887 0) 0 nil])
([nil nil ((2992 . 2995) (#("<" 0 1 (fontified t)) . -2992) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) 2993 (2982 . 2993) (2981 . 2982) (2977 . 2981) (2975 . 2977) (2971 . 2975) (2970 . 2971) (2958 . 2970)) nil (26029 33185 229861 0) 0 nil])
([nil nil (("        " . -4737) ("        " . -4667) (#(" " 0 1 (fontified t c-is-sws t c-in-sws t)) . -1206) (5346 . 5347) 3486) nil (26029 33185 229814 0) 0 nil])
([nil nil ((3779 . 3938) (#("
            if (current == element)
                break;
            else {
                idx++;
                current = iterator().next();
            } // måste break:a igen?" 0 13 (fontified t) 13 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-4-face) fontified t) 17 35 (fontified t) 35 36 (face (rainbow-delimiters-depth-4-face) fontified t) 36 53 (fontified t) 53 58 (face font-lock-keyword-face fontified t) 58 72 (fontified t) 72 76 (face font-lock-keyword-face fontified t) 76 77 (fontified t) 77 78 (face (rainbow-delimiters-depth-4-face) fontified t) 78 136 (fontified t) 136 137 (face (rainbow-delimiters-depth-5-face) fontified t) 137 138 (face (rainbow-delimiters-depth-5-face) fontified t) 138 143 (fontified t) 143 144 (face (rainbow-delimiters-depth-5-face) fontified t) 144 145 (face (rainbow-delimiters-depth-5-face) fontified t) 145 159 (fontified t) 159 160 (face (rainbow-delimiters-depth-4-face) fontified t) 160 161 (fontified t) 161 164 (face font-lock-comment-delimiter-face fontified t) 164 183 (face font-lock-comment-face fontified t)) . 3779) 3 (t 26029 33204 308641 163000)) nil (26029 34313 45936 0) 0 nil])
([nil nil ((#("/**
 * @author Martin Lönn Andersson malo2669
 */

 public class MyALDAList<E> implements ALDAList<E> {

    private int size;
    private Node<E> head;
    private Node<E> tail;

    public MyALDAList() {
        this.size = 0;
    }

    // DONE?
    // lägg till en ny nod i början om listan är tom, annars i slutet
    public void add(E element) {

        Node<E> newNode = new Node<>(element, null);

        // kolla om listan är tom
        if (size() == 0)
            // om ja: noden ska sättas in på första index
            // alltså, länka head till newNode
            head = newNode;
        else {
            // om nej: noden ska sättas in på sista index
            // alltså, länka tail.next till newNode
            // kolla om tail är tom
            if (!(tail == null))
                tail.next = newNode; // peka om nuvaranda tail till newNode
            // gör newNode till tail
            tail = newNode;
        }
        // öka storleken på listan
        this.size++;
    }

    // lägg till en ny nod på det angivna indexet
    public void add(int index, E element) {

        // kolla om indexet är för stort eller för litet
        if (index > (size() + 2) || index < 0)
            throw new java.lang.IndexOutOfBoundsException();
        else {

            Node<E> newNode = new Node<>(element, null);
            int idx = 0;

            // iterera över listan tills det angivna indexet har hittats
            while (iterator().hasNext()) {

                E current = iterator().next();

                if (idx == index) { // om noden har hittats...
                    // hitta omkringliggande noder
                    E previous = get(idx--);
                    E next = get(idx++);

                    // kolla om vi är i slutet av listan
                    // alltså, kolla om next är tail
                    if (tail.equals(next))
                        // gör den nya noden till tail
                        tail = newNode;
                    else {
                        // annars, länka om omkringliggande noder
                        newNode.getNext().data = next;
                        // previous.next = newNode; // TODO: hur länka om när previous är \"element\", inte nod?
                    }
                } else { // om noden inte hittas...
                    // ... öka index
                    idx++;
                }
            }
            // öka storleken på listan
            this.size++;
        }
    }

    // ta bort element på det angivna indexet
    public E remove(int index) {
        // iterera över listan tills indexet har hittats

        // länka om omkringliggande noder
        return null;
    }

    // ta bort det angivna elementet
    public boolean remove(E element) {
        // iterera över listan tills elementet har hittats

        // länka om omkringliggande noder
        return true;
    }

    public E get(int index) {
        if (size() == 0 || index > (size() + 1) || index < 0)
            throw new java.lang.IndexOutOfBoundsException();
        else {
            int idx = 0;
            E element = null;

            while (iterator().hasNext()) {

                E current = iterator().next();

                if (idx == index)
                    element = current;
                else {
                    idx++;
                }
            }
        return element;
        }
    }

    public boolean contains(E element) {

        E current = iterator().next();

        while (iterator().hasNext()) {

            if (current == element)
                return true;
        }
        return false;
    }

    public int indexOf(E element) {

        int idx = 0;
        E current = iterator().next();

        while (iterator().hasNext()) {
            if (current == element)
                break;
            else {
                idx++;
                current = iterator().next();
            }
        }
        return idx;
    }

    public void clear() {
        this.size = 0;
        this.head = null;
        this.tail = null;
    }

    public int size() {
        return this.size;
    }

    @Override
    public String toString() {
        String items = \"\";

        while (iterator().hasNext()) {
            items += iterator().next() + \", \";
        }
        return \"[\" + items + \"]\";
    }

    public java.util.Iterator<E> iterator() {
        return new MyALDAListIterator();
    }

    private static class Node<E> {

        private E data;
        private Node<E> next;

        Node(E data, Node<E> next) {
            this.data = data;
            this.next = next;
        }

        public E getData() {
            return this.data;
        }

        public Node<E> getNext() {
            return this.next;
        }
    }

    private class MyALDAListIterator implements java.util.Iterator<E> {

        private Node<E> current = head;

        public boolean hasNext() {
            return current != tail;
        }

        public E next() {
            if (!hasNext())
                 throw new java.lang.IndexOutOfBoundsException();

            E nextNode = current.getData();
            current = current.next;
            return nextNode;
        }

        // ska ha med?
        //public E remove() {
        //}
    }
}
" 0 1 (face font-lock-doc-face c-in-sws t fontified t c-is-sws t) 1 3 (face font-lock-doc-face c-in-sws t fontified t) 3 7 (face font-lock-doc-face c-in-sws t fontified t) 7 14 (face (font-lock-doc-markup-face font-lock-doc-face) c-in-sws t fontified t) 14 46 (face font-lock-doc-face c-in-sws t fontified t) 46 48 (face font-lock-doc-face c-in-sws t fontified t) 48 49 (c-in-sws t face font-lock-doc-face fontified t) 49 50 (c-is-sws t fontified t) 50 51 (c-is-sws t c-in-sws t fontified t) 51 52 (c-in-sws t c-is-sws t fontified t) 52 53 (face font-lock-keyword-face fontified t c-is-sws t) 53 58 (face font-lock-keyword-face fontified t) 58 59 (fontified t) 59 63 (face font-lock-keyword-face fontified t) 63 64 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 75 (face font-lock-type-face fontified t) 75 76 (face (rainbow-delimiters-depth-1-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 76 77 (face font-lock-type-face fontified t) 77 78 (face (rainbow-delimiters-depth-1-face) fontified t category c->-as-paren-syntax) 78 79 (fontified t) 79 89 (face font-lock-keyword-face fontified t) 89 90 (fontified t) 90 98 (face font-lock-type-face fontified t) 98 99 (face (rainbow-delimiters-depth-1-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 99 100 (face font-lock-type-face fontified t) 100 101 (face (rainbow-delimiters-depth-1-face) fontified t category c->-as-paren-syntax) 101 102 (fontified t) 102 103 (face (rainbow-delimiters-depth-1-face) fontified t) 103 104 (fontified t) 104 109 (fontified t) 109 116 (face font-lock-keyword-face fontified t) 116 117 (fontified t) 117 119 (face font-lock-type-face fontified t) 119 120 (face font-lock-type-face c-type c-decl-id-start fontified t) 120 121 (fontified t) 121 125 (face font-lock-variable-name-face fontified t) 125 131 (fontified t) 131 138 (face font-lock-keyword-face fontified t) 138 139 (fontified t) 139 143 (face font-lock-type-face fontified t) 143 144 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 144 145 (face font-lock-type-face fontified t) 145 146 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 146 147 (fontified t) 147 151 (face font-lock-variable-name-face fontified t) 151 157 (fontified t) 157 164 (face font-lock-keyword-face fontified t) 164 165 (fontified t) 165 169 (face font-lock-type-face fontified t) 169 170 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 170 171 (face font-lock-type-face fontified t) 171 172 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 172 173 (fontified t) 173 177 (face font-lock-variable-name-face fontified t) 177 184 (fontified t) 184 190 (face font-lock-keyword-face fontified t) 190 201 (fontified t) 201 202 (face (rainbow-delimiters-depth-2-face) fontified t) 202 203 (face (rainbow-delimiters-depth-2-face) fontified t) 203 204 (fontified t) 204 205 (face (rainbow-delimiters-depth-2-face) fontified t) 205 214 (fontified t) 214 218 (face font-lock-keyword-face fontified t) 218 233 (fontified t) 233 234 (face (rainbow-delimiters-depth-2-face) fontified t) 234 236 (fontified t) 236 240 (fontified t c-is-sws t c-in-sws t) 240 241 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 241 243 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 243 249 (face font-lock-comment-face fontified t c-in-sws t) 249 253 (fontified t c-in-sws t) 253 256 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 256 318 (face font-lock-comment-face fontified t c-in-sws t) 318 319 (c-in-sws t face font-lock-comment-face fontified t) 319 323 (fontified t c-in-sws t c-is-sws t) 323 324 (face font-lock-keyword-face fontified t c-is-sws t) 324 329 (face font-lock-keyword-face fontified t) 329 330 (fontified t) 330 333 (face font-lock-type-face fontified t) 333 334 (face font-lock-type-face c-type c-decl-id-start fontified t) 334 335 (fontified t) 335 338 (face font-lock-function-name-face fontified t) 338 339 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 339 340 (face font-lock-type-face fontified t) 340 341 (fontified t) 341 348 (face font-lock-variable-name-face fontified t) 348 349 (face (rainbow-delimiters-depth-2-face) fontified t) 349 350 (fontified t) 350 351 (face (rainbow-delimiters-depth-2-face) fontified t) 351 361 (fontified t) 361 365 (face font-lock-type-face fontified t) 365 366 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 366 367 (face font-lock-type-face fontified t) 367 368 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 368 369 (fontified t) 369 376 (face font-lock-variable-name-face fontified t) 376 379 (fontified t) 379 382 (face font-lock-keyword-face fontified t) 382 383 (fontified t) 383 387 (face font-lock-type-face fontified t) 387 388 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 388 389 (face (rainbow-delimiters-depth-3-face) fontified t category c->-as-paren-syntax) 389 390 (face (rainbow-delimiters-depth-3-face) fontified t) 390 399 (fontified t) 399 403 (face font-lock-constant-face fontified t) 403 404 (face (rainbow-delimiters-depth-3-face) fontified t) 404 415 (fontified t) 415 418 (face font-lock-comment-delimiter-face fontified t) 418 441 (face font-lock-comment-face fontified t) 441 449 (fontified t) 449 451 (face font-lock-keyword-face fontified t) 451 452 (fontified t) 452 453 (face (rainbow-delimiters-depth-3-face) fontified t) 453 457 (fontified t) 457 458 (face (rainbow-delimiters-depth-4-face) fontified t) 458 459 (face (rainbow-delimiters-depth-4-face) fontified t) 459 464 (fontified t) 464 465 (face (rainbow-delimiters-depth-3-face) fontified t) 465 478 (fontified t) 478 481 (face font-lock-comment-delimiter-face fontified t) 481 524 (face font-lock-comment-face fontified t) 524 536 (fontified t) 536 539 (face font-lock-comment-delimiter-face fontified t) 539 571 (face font-lock-comment-face fontified t) 571 607 (fontified t) 607 611 (face font-lock-keyword-face fontified t) 611 612 (fontified t) 612 613 (face (rainbow-delimiters-depth-3-face) fontified t) 613 626 (fontified t) 626 629 (face font-lock-comment-delimiter-face fontified t) 629 672 (face font-lock-comment-face fontified t) 672 684 (fontified t) 684 687 (face font-lock-comment-delimiter-face fontified t) 687 724 (face font-lock-comment-face fontified t) 724 736 (fontified t) 736 739 (face font-lock-comment-delimiter-face fontified t) 739 760 (face font-lock-comment-face fontified t) 760 772 (fontified t) 772 774 (face font-lock-keyword-face fontified t) 774 775 (fontified t) 775 776 (face (rainbow-delimiters-depth-4-face) fontified t) 776 777 (face font-lock-negation-char-face fontified t) 777 778 (face (rainbow-delimiters-depth-5-face) fontified t) 778 786 (fontified t) 786 790 (face font-lock-constant-face fontified t) 790 791 (face (rainbow-delimiters-depth-5-face) fontified t) 791 792 (face (rainbow-delimiters-depth-4-face) fontified t) 792 829 (fontified t) 829 830 (fontified t c-is-sws t c-in-sws t) 830 831 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 831 833 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 833 869 (face font-lock-comment-face fontified t c-in-sws t) 869 881 (fontified t c-in-sws t) 881 884 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 884 906 (face font-lock-comment-face fontified t c-in-sws t) 906 918 (fontified t c-in-sws t c-is-sws t) 918 919 (fontified t c-is-sws t) 919 942 (fontified t) 942 943 (face (rainbow-delimiters-depth-3-face) fontified t) 943 952 (fontified t) 952 955 (face font-lock-comment-delimiter-face fontified t) 955 979 (face font-lock-comment-face fontified t) 979 987 (fontified t) 987 991 (face font-lock-keyword-face fontified t) 991 1004 (fontified t) 1004 1005 (face (rainbow-delimiters-depth-2-face) fontified t) 1005 1007 (fontified t) 1007 1011 (fontified t c-is-sws t c-in-sws t) 1011 1012 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1012 1014 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1014 1056 (face font-lock-comment-face fontified t c-in-sws t) 1056 1057 (c-in-sws t face font-lock-comment-face fontified t) 1057 1061 (fontified t c-in-sws t c-is-sws t) 1061 1062 (face font-lock-keyword-face fontified t c-is-sws t) 1062 1067 (face font-lock-keyword-face fontified t) 1067 1068 (fontified t) 1068 1071 (face font-lock-type-face fontified t) 1071 1072 (face font-lock-type-face c-type c-decl-id-start fontified t) 1072 1073 (fontified t) 1073 1076 (face font-lock-function-name-face fontified t) 1076 1077 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 1077 1080 (face font-lock-type-face fontified t) 1080 1081 (fontified t) 1081 1086 (face font-lock-variable-name-face fontified t) 1086 1087 (c-type c-decl-arg-start fontified t) 1087 1088 (fontified t) 1088 1089 (face font-lock-type-face fontified t) 1089 1090 (fontified t) 1090 1097 (face font-lock-variable-name-face fontified t) 1097 1098 (face (rainbow-delimiters-depth-2-face) fontified t) 1098 1099 (fontified t) 1099 1100 (face (rainbow-delimiters-depth-2-face) fontified t) 1100 1101 (fontified t) 1101 1102 (fontified t) 1102 1110 (c-is-sws t c-in-sws t fontified t) 1110 1111 (face font-lock-comment-delimiter-face c-in-sws t c-is-sws t fontified t) 1111 1112 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 1112 1113 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 1113 1115 (face font-lock-comment-face c-in-sws t fontified t) 1115 1116 (face font-lock-comment-face c-in-sws t fontified t) 1116 1117 (face font-lock-comment-face c-in-sws t fontified t) 1117 1119 (face font-lock-comment-face c-in-sws t fontified t) 1119 1120 (face font-lock-comment-face c-in-sws t fontified t) 1120 1121 (face font-lock-comment-face c-in-sws t fontified t) 1121 1122 (face font-lock-comment-face c-in-sws t fontified t) 1122 1123 (face font-lock-comment-face c-in-sws t fontified t) 1123 1124 (face font-lock-comment-face c-in-sws t fontified t) 1124 1125 (face font-lock-comment-face c-in-sws t fontified t) 1125 1126 (face font-lock-comment-face c-in-sws t fontified t) 1126 1127 (face font-lock-comment-face c-in-sws t fontified t) 1127 1129 (face font-lock-comment-face c-in-sws t fontified t) 1129 1130 (face font-lock-comment-face c-in-sws t fontified t) 1130 1131 (face font-lock-comment-face c-in-sws t fontified t) 1131 1133 (face font-lock-comment-face c-in-sws t fontified t) 1133 1135 (face font-lock-comment-face c-in-sws t fontified t) 1135 1137 (face font-lock-comment-face c-in-sws t fontified t) 1137 1138 (face font-lock-comment-face c-in-sws t fontified t) 1138 1139 (face font-lock-comment-face c-in-sws t fontified t) 1139 1140 (face font-lock-comment-face c-in-sws t fontified t) 1140 1141 (face font-lock-comment-face c-in-sws t fontified t) 1141 1142 (face font-lock-comment-face c-in-sws t fontified t) 1142 1143 (face font-lock-comment-face c-in-sws t fontified t) 1143 1144 (face font-lock-comment-face c-in-sws t fontified t) 1144 1145 (face font-lock-comment-face c-in-sws t fontified t) 1145 1146 (face font-lock-comment-face c-in-sws t fontified t) 1146 1147 (face font-lock-comment-face c-in-sws t fontified t) 1147 1149 (face font-lock-comment-face c-in-sws t fontified t) 1149 1150 (face font-lock-comment-face c-in-sws t fontified t) 1150 1151 (face font-lock-comment-face c-in-sws t fontified t) 1151 1153 (face font-lock-comment-face c-in-sws t fontified t) 1153 1154 (face font-lock-comment-face c-in-sws t fontified t) 1154 1155 (face font-lock-comment-face c-in-sws t fontified t) 1155 1156 (face font-lock-comment-face c-in-sws t fontified t) 1156 1158 (face font-lock-comment-face c-in-sws t fontified t) 1158 1159 (c-in-sws t face font-lock-comment-face fontified t) 1159 1160 (fontified t c-is-sws t) 1160 1167 (fontified t c-is-sws t) 1167 1168 (face font-lock-keyword-face fontified t c-is-sws t) 1168 1169 (face font-lock-keyword-face fontified t) 1169 1170 (fontified t) 1170 1171 (face (rainbow-delimiters-depth-3-face) fontified t) 1171 1172 (fontified t) 1172 1173 (fontified t) 1173 1174 (fontified t) 1174 1175 (fontified t) 1175 1176 (fontified t) 1176 1177 (fontified t) 1177 1178 (fontified t) 1178 1179 (fontified t) 1179 1180 (face (rainbow-delimiters-depth-4-face) fontified t) 1180 1182 (fontified t) 1182 1183 (fontified t) 1183 1184 (fontified t) 1184 1185 (face (rainbow-delimiters-depth-5-face) fontified t) 1185 1186 (face (rainbow-delimiters-depth-5-face) fontified t) 1186 1187 (fontified t) 1187 1188 (fontified t) 1188 1189 (fontified t) 1189 1190 (fontified t) 1190 1191 (face (rainbow-delimiters-depth-4-face) fontified t) 1191 1192 (fontified t) 1192 1194 (fontified t) 1194 1195 (fontified t) 1195 1196 (fontified t) 1196 1197 (fontified t) 1197 1198 (fontified t) 1198 1199 (fontified t) 1199 1200 (fontified t) 1200 1201 (fontified t) 1201 1202 (fontified t) 1202 1203 (fontified t) 1203 1204 (fontified t) 1204 1205 (face (rainbow-delimiters-depth-3-face) fontified t) 1205 1206 (fontified t) 1206 1207 (fontified t c-is-sws t) 1207 1218 (fontified t) 1218 1219 (face font-lock-keyword-face fontified t) 1219 1220 (face font-lock-keyword-face fontified t) 1220 1222 (face font-lock-keyword-face fontified t) 1222 1223 (face font-lock-keyword-face fontified t) 1223 1224 (fontified t) 1224 1225 (face font-lock-keyword-face fontified t) 1225 1226 (face font-lock-keyword-face fontified t) 1226 1227 (face font-lock-keyword-face fontified t) 1227 1228 (fontified t) 1228 1232 (face font-lock-constant-face fontified t) 1232 1233 (fontified t) 1233 1237 (face font-lock-constant-face fontified t) 1237 1238 (fontified t) 1238 1263 (face font-lock-type-face fontified t) 1263 1264 (face (rainbow-delimiters-depth-3-face) fontified t) 1264 1265 (face (rainbow-delimiters-depth-3-face) fontified t) 1265 1266 (fontified t) 1266 1267 (fontified t) 1267 1275 (fontified t) 1275 1279 (face font-lock-keyword-face fontified t) 1279 1280 (fontified t) 1280 1281 (face (rainbow-delimiters-depth-3-face) fontified t) 1281 1282 (fontified t) 1282 1283 (fontified t) 1283 1295 (fontified t) 1295 1299 (face font-lock-type-face fontified t) 1299 1300 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1300 1301 (face font-lock-type-face fontified t) 1301 1302 (face (rainbow-delimiters-depth-4-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1302 1303 (fontified t) 1303 1310 (face font-lock-variable-name-face fontified t) 1310 1313 (fontified t) 1313 1316 (face font-lock-keyword-face fontified t) 1316 1317 (fontified t) 1317 1321 (face font-lock-type-face fontified t) 1321 1322 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1322 1323 (face (rainbow-delimiters-depth-4-face) fontified t category c->-as-paren-syntax) 1323 1324 (face (rainbow-delimiters-depth-4-face) fontified t) 1324 1333 (fontified t) 1333 1337 (face font-lock-constant-face fontified t) 1337 1338 (face (rainbow-delimiters-depth-4-face) fontified t) 1338 1339 (fontified t) 1339 1340 (fontified t) 1340 1347 (fontified t) 1347 1348 (fontified t rear-nonsticky t) 1348 1352 (fontified t) 1352 1354 (face font-lock-type-face fontified t) 1354 1355 (face font-lock-type-face c-type c-decl-id-start fontified t) 1355 1356 (fontified t) 1356 1359 (face font-lock-variable-name-face fontified t) 1359 1361 (fontified t) 1361 1364 (fontified t) 1364 1365 (fontified t) 1365 1366 (fontified t) 1366 1374 (fontified t) 1374 1378 (fontified t) 1378 1379 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1379 1381 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1381 1438 (face font-lock-comment-face fontified t c-in-sws t) 1438 1439 (face font-lock-comment-face fontified t c-in-sws t) 1439 1447 (fontified t c-in-sws t c-is-sws t) 1447 1451 (fontified t c-in-sws t c-is-sws t) 1451 1452 (face font-lock-keyword-face fontified t c-is-sws t) 1452 1456 (face font-lock-keyword-face fontified t) 1456 1457 (fontified t) 1457 1458 (face (rainbow-delimiters-depth-4-face) fontified t) 1458 1466 (fontified t) 1466 1467 (face (rainbow-delimiters-depth-5-face) fontified t) 1467 1468 (face (rainbow-delimiters-depth-5-face) fontified t) 1468 1476 (fontified t) 1476 1477 (face (rainbow-delimiters-depth-5-face) fontified t) 1477 1478 (face (rainbow-delimiters-depth-5-face) fontified t) 1478 1479 (face (rainbow-delimiters-depth-4-face) fontified t) 1479 1480 (fontified t) 1480 1481 (face (rainbow-delimiters-depth-4-face) fontified t) 1481 1482 (fontified t) 1482 1483 (fontified t) 1483 1487 (fontified t) 1487 1499 (fontified t) 1499 1500 (face font-lock-type-face c-type c-decl-id-start fontified t) 1500 1501 (fontified t) 1501 1508 (face font-lock-variable-name-face fontified t) 1508 1519 (fontified t) 1519 1520 (face (rainbow-delimiters-depth-5-face) fontified t) 1520 1521 (face (rainbow-delimiters-depth-5-face) fontified t) 1521 1526 (fontified t) 1526 1527 (face (rainbow-delimiters-depth-5-face) fontified t) 1527 1528 (face (rainbow-delimiters-depth-5-face) fontified t) 1528 1529 (fontified t) 1529 1530 (fontified t) 1530 1531 (fontified t) 1531 1535 (fontified t) 1535 1547 (fontified t) 1547 1549 (face font-lock-keyword-face fontified t) 1549 1550 (fontified t) 1550 1551 (face (rainbow-delimiters-depth-5-face) fontified t) 1551 1563 (fontified t) 1563 1564 (face (rainbow-delimiters-depth-5-face) fontified t) 1564 1565 (fontified t) 1565 1566 (face (rainbow-delimiters-depth-5-face) fontified t) 1566 1567 (fontified t c-is-sws t c-in-sws t) 1567 1568 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1568 1570 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1570 1593 (face font-lock-comment-face fontified t c-in-sws t) 1593 1594 (face font-lock-comment-face fontified t c-in-sws t) 1594 1599 (fontified t c-in-sws t) 1599 1600 (c-in-sws t fontified t) 1600 1610 (fontified t c-in-sws t) 1610 1614 (fontified t c-in-sws t) 1614 1615 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1615 1617 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 1617 1644 (fontified t face font-lock-comment-face c-in-sws t) 1644 1645 (c-in-sws t fontified t face font-lock-comment-face) 1645 1646 (fontified t c-is-sws t) 1646 1661 (fontified t c-is-sws t c-in-sws t) 1661 1665 (fontified t c-is-sws t c-in-sws t) 1665 1666 (face font-lock-type-face c-type c-decl-id-start fontified t c-is-sws t) 1666 1667 (fontified t) 1667 1675 (face font-lock-variable-name-face fontified t) 1675 1681 (fontified t) 1681 1682 (face (rainbow-delimiters-depth-6-face) fontified t) 1682 1685 (fontified t) 1685 1686 (fontified t) 1686 1687 (fontified t) 1687 1688 (face (rainbow-delimiters-depth-6-face) fontified t) 1688 1689 (fontified t) 1689 1690 (fontified t) 1690 1706 (fontified t) 1706 1710 (fontified t) 1710 1711 (face font-lock-type-face c-type c-decl-id-start fontified t) 1711 1712 (fontified t) 1712 1716 (face font-lock-variable-name-face fontified t) 1716 1722 (fontified t) 1722 1723 (face (rainbow-delimiters-depth-6-face) fontified t) 1723 1728 (fontified t) 1728 1729 (face (rainbow-delimiters-depth-6-face) fontified t) 1729 1730 (fontified t) 1730 1732 (fontified t) 1732 1748 (fontified t) 1748 1752 (fontified t) 1752 1753 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1753 1755 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1755 1788 (face font-lock-comment-face fontified t c-in-sws t) 1788 1789 (face font-lock-comment-face fontified t c-in-sws t) 1789 1794 (fontified t c-in-sws t c-is-sws t) 1794 1795 (fontified t c-in-sws t c-is-sws t) 1795 1805 (fontified t c-in-sws t c-is-sws t) 1805 1809 (fontified t c-in-sws t c-is-sws t) 1809 1810 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1810 1812 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1812 1841 (face font-lock-comment-face fontified t c-in-sws t) 1841 1842 (face font-lock-comment-face fontified t c-in-sws t) 1842 1843 (fontified t c-in-sws t) 1843 1858 (fontified t c-in-sws t) 1858 1862 (fontified t c-in-sws t) 1862 1863 (face font-lock-keyword-face fontified t c-is-sws t) 1863 1864 (face font-lock-keyword-face fontified t) 1864 1865 (fontified t) 1865 1866 (face (rainbow-delimiters-depth-6-face) fontified t) 1866 1877 (fontified t) 1877 1878 (face (rainbow-delimiters-depth-7-face) fontified t) 1878 1882 (fontified t) 1882 1883 (face (rainbow-delimiters-depth-7-face) fontified t) 1883 1884 (face (rainbow-delimiters-depth-6-face) fontified t) 1884 1885 (fontified t) 1885 1905 (fontified t) 1905 1909 (fontified t) 1909 1910 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1910 1912 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1912 1939 (face font-lock-comment-face fontified t c-in-sws t) 1939 1940 (face font-lock-comment-face fontified t c-in-sws t) 1940 1941 (fontified t c-in-sws t c-is-sws t) 1941 1960 (fontified t c-in-sws t c-is-sws t) 1960 1964 (fontified t c-in-sws t c-is-sws t) 1964 1965 (fontified t c-is-sws t) 1965 1979 (fontified t) 1979 1980 (fontified t) 1980 1996 (fontified t) 1996 2000 (fontified t) 2000 2004 (face font-lock-keyword-face fontified t) 2004 2005 (fontified t) 2005 2006 (face (rainbow-delimiters-depth-6-face) fontified t) 2006 2007 (fontified t) 2007 2027 (fontified t c-is-sws t c-in-sws t) 2027 2031 (fontified t c-is-sws t c-in-sws t) 2031 2032 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2032 2034 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2034 2072 (face font-lock-comment-face fontified t c-in-sws t) 2072 2073 (face font-lock-comment-face fontified t c-in-sws t) 2073 2093 (fontified t c-is-sws t c-in-sws t) 2093 2097 (fontified t c-is-sws t c-in-sws t) 2097 2098 (fontified t c-is-sws t) 2098 2112 (fontified t) 2112 2113 (face (rainbow-delimiters-depth-7-face) fontified t) 2113 2114 (face (rainbow-delimiters-depth-7-face) fontified t) 2114 2127 (fontified t) 2127 2128 (fontified t) 2128 2148 (fontified t c-is-sws t c-in-sws t) 2148 2152 (fontified t c-is-sws t c-in-sws t) 2152 2153 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2153 2154 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2154 2155 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2155 2179 (face font-lock-comment-face fontified t c-in-sws t) 2179 2180 (face font-lock-comment-face fontified t c-in-sws t) 2180 2181 (face font-lock-comment-face fontified t c-in-sws t) 2181 2182 (face font-lock-comment-face fontified t c-in-sws t) 2182 2237 (face font-lock-comment-face fontified t c-in-sws t) 2237 2238 (face font-lock-comment-face fontified t c-in-sws t rear-nonsticky t) 2238 2239 (face font-lock-comment-face fontified t c-in-sws t) 2239 2240 (fontified t c-is-sws t) 2240 2255 (fontified t c-is-sws t c-in-sws t) 2255 2259 (fontified t c-is-sws t c-in-sws t) 2259 2260 (face (rainbow-delimiters-depth-6-face) fontified t c-is-sws t) 2260 2261 (fontified t) 2261 2273 (fontified t) 2273 2277 (fontified t) 2277 2278 (face (rainbow-delimiters-depth-5-face) fontified t) 2278 2279 (fontified t) 2279 2283 (face font-lock-keyword-face fontified t) 2283 2284 (fontified t) 2284 2285 (face (rainbow-delimiters-depth-5-face) fontified t) 2285 2286 (fontified t c-is-sws t c-in-sws t) 2286 2287 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2287 2289 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2289 2312 (face font-lock-comment-face fontified t c-in-sws t) 2312 2313 (face font-lock-comment-face fontified t c-in-sws t) 2313 2329 (fontified t c-in-sws t c-is-sws t) 2329 2333 (fontified t c-in-sws t c-is-sws t) 2333 2334 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2334 2336 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2336 2349 (face font-lock-comment-face fontified t c-in-sws t) 2349 2350 (face font-lock-comment-face fontified t c-in-sws t) 2350 2366 (fontified t c-in-sws t) 2366 2370 (fontified t c-in-sws t) 2370 2371 (fontified t c-is-sws t) 2371 2376 (fontified t) 2376 2377 (fontified t) 2377 2389 (fontified t) 2389 2393 (fontified t) 2393 2394 (face (rainbow-delimiters-depth-5-face) fontified t) 2394 2395 (fontified t) 2395 2403 (fontified t) 2403 2407 (fontified t) 2407 2408 (face (rainbow-delimiters-depth-4-face) fontified t) 2408 2409 (fontified t) 2409 2417 (fontified t) 2417 2421 (fontified t) 2421 2422 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2422 2424 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2424 2447 (face font-lock-comment-face fontified t c-in-sws t) 2447 2448 (face font-lock-comment-face fontified t c-in-sws t) 2448 2449 (fontified t c-in-sws t c-is-sws t) 2449 2456 (fontified t c-in-sws t c-is-sws t) 2456 2460 (fontified t c-in-sws t c-is-sws t) 2460 2461 (face font-lock-keyword-face fontified t c-is-sws t) 2461 2464 (face font-lock-keyword-face fontified t) 2464 2472 (fontified t) 2472 2473 (fontified t) 2473 2481 (fontified t) 2481 2482 (face (rainbow-delimiters-depth-3-face) fontified t) 2482 2483 (fontified t) 2483 2487 (fontified t) 2487 2488 (face (rainbow-delimiters-depth-2-face) fontified t) 2488 2489 (fontified t) 2489 2490 (fontified t) 2490 2494 (fontified t c-is-sws t c-in-sws t) 2494 2495 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2495 2497 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2497 2535 (face font-lock-comment-face fontified t c-in-sws t) 2535 2536 (face font-lock-comment-face fontified t c-in-sws t) 2536 2540 (fontified t c-in-sws t c-is-sws t) 2540 2541 (face font-lock-keyword-face fontified t c-is-sws t) 2541 2546 (face font-lock-keyword-face fontified t) 2546 2547 (fontified t) 2547 2548 (face font-lock-type-face c-type c-decl-id-start fontified t) 2548 2549 (fontified t) 2549 2555 (face font-lock-function-name-face fontified t) 2555 2556 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 2556 2559 (face font-lock-type-face fontified t) 2559 2560 (fontified t) 2560 2565 (face font-lock-variable-name-face fontified t) 2565 2566 (face (rainbow-delimiters-depth-2-face) fontified t) 2566 2567 (fontified t) 2567 2568 (face (rainbow-delimiters-depth-2-face) fontified t) 2568 2577 (fontified t) 2577 2580 (face font-lock-comment-delimiter-face fontified t) 2580 2626 (face font-lock-comment-face fontified t) 2626 2635 (fontified t) 2635 2638 (face font-lock-comment-delimiter-face fontified t) 2638 2669 (face font-lock-comment-face fontified t) 2669 2677 (fontified t) 2677 2683 (face font-lock-keyword-face fontified t) 2683 2684 (fontified t) 2684 2688 (face font-lock-constant-face fontified t) 2688 2694 (fontified t) 2694 2695 (face (rainbow-delimiters-depth-2-face) fontified t) 2695 2697 (fontified t) 2697 2701 (fontified t c-is-sws t c-in-sws t) 2701 2702 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2702 2704 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2704 2733 (face font-lock-comment-face fontified t c-in-sws t) 2733 2734 (face font-lock-comment-face fontified t c-in-sws t) 2734 2738 (fontified t c-in-sws t c-is-sws t) 2738 2739 (face font-lock-keyword-face fontified t c-is-sws t) 2739 2744 (face font-lock-keyword-face fontified t) 2744 2745 (fontified t) 2745 2751 (face font-lock-type-face fontified t) 2751 2752 (face font-lock-type-face c-type c-decl-id-start fontified t) 2752 2753 (fontified t) 2753 2756 (face font-lock-function-name-face fontified t) 2756 2758 (face font-lock-function-name-face fontified t) 2758 2759 (face font-lock-function-name-face fontified t) 2759 2760 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 2760 2761 (face font-lock-type-face fontified t) 2761 2762 (fontified t) 2762 2765 (face font-lock-variable-name-face fontified t) 2765 2769 (face font-lock-variable-name-face fontified t) 2769 2770 (face (rainbow-delimiters-depth-2-face) fontified t) 2770 2771 (fontified t) 2771 2772 (face (rainbow-delimiters-depth-2-face) fontified t) 2772 2773 (fontified t) 2773 2781 (fontified t c-is-sws t c-in-sws t) 2781 2782 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2782 2784 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2784 2787 (face font-lock-comment-face fontified t c-in-sws t) 2787 2812 (face font-lock-comment-face fontified t c-in-sws t) 2812 2813 (face font-lock-comment-face fontified t c-in-sws t) 2813 2821 (face font-lock-comment-face fontified t c-in-sws t) 2821 2831 (face font-lock-comment-face fontified t c-in-sws t) 2831 2832 (face font-lock-comment-face fontified t c-in-sws t) 2832 2833 (fontified t c-is-sws t) 2833 2841 (fontified t c-in-sws t c-is-sws t) 2841 2842 (face font-lock-comment-delimiter-face fontified t c-is-sws t) 2842 2844 (face font-lock-comment-delimiter-face fontified t) 2844 2872 (face font-lock-comment-face fontified t) 2872 2875 (face font-lock-comment-face fontified t) 2875 2883 (fontified t) 2883 2884 (face font-lock-keyword-face fontified t c-is-sws t) 2884 2889 (face font-lock-keyword-face fontified t) 2889 2890 (fontified t) 2890 2894 (face font-lock-constant-face fontified t) 2894 2896 (fontified t) 2896 2900 (fontified t) 2900 2901 (face (rainbow-delimiters-depth-2-face) fontified t) 2901 2902 (fontified t) 2902 2907 (fontified t) 2907 2913 (face font-lock-keyword-face fontified t) 2913 2914 (fontified t) 2914 2915 (face font-lock-type-face c-type c-decl-id-start fontified t) 2915 2916 (fontified t) 2916 2918 (face font-lock-function-name-face fontified t) 2918 2919 (face font-lock-function-name-face fontified t) 2919 2920 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 2920 2922 (face font-lock-type-face fontified t) 2922 2923 (face font-lock-type-face fontified t) 2923 2924 (fontified t) 2924 2929 (face font-lock-variable-name-face fontified t) 2929 2930 (face (rainbow-delimiters-depth-2-face) fontified t) 2930 2931 (fontified t) 2931 2932 (face (rainbow-delimiters-depth-2-face) fontified t) 2932 2933 (fontified t) 2933 2941 (fontified t) 2941 2943 (face font-lock-keyword-face fontified t) 2943 2944 (fontified t) 2944 2945 (face (rainbow-delimiters-depth-3-face) fontified t) 2945 2949 (fontified t) 2949 2950 (face (rainbow-delimiters-depth-4-face) fontified t) 2950 2951 (face (rainbow-delimiters-depth-4-face) fontified t) 2951 2956 (fontified t) 2956 2957 (fontified t) 2957 2958 (fontified t) 2958 2959 (fontified t) 2959 2960 (fontified t) 2960 2961 (fontified t) 2961 2962 (fontified t) 2962 2963 (fontified t) 2963 2964 (fontified t) 2964 2965 (fontified t) 2965 2966 (fontified t) 2966 2967 (fontified t) 2967 2968 (fontified t) 2968 2969 (face (rainbow-delimiters-depth-4-face) fontified t) 2969 2970 (fontified t) 2970 2971 (fontified t) 2971 2972 (fontified t) 2972 2973 (fontified t) 2973 2974 (face (rainbow-delimiters-depth-5-face) fontified t) 2974 2975 (face (rainbow-delimiters-depth-5-face) fontified t) 2975 2976 (fontified t) 2976 2977 (fontified t) 2977 2978 (fontified t) 2978 2979 (fontified t) 2979 2980 (face (rainbow-delimiters-depth-4-face) fontified t) 2980 2981 (fontified t) 2981 2982 (fontified t) 2982 2983 (fontified t) 2983 2984 (fontified t) 2984 2985 (fontified t) 2985 2986 (fontified t) 2986 2987 (fontified t) 2987 2988 (fontified t) 2988 2989 (fontified t) 2989 2990 (fontified t) 2990 2991 (fontified t) 2991 2992 (fontified t) 2992 2993 (fontified t) 2993 2994 (face (rainbow-delimiters-depth-3-face) fontified t) 2994 2995 (fontified t) 2995 3007 (fontified t) 3007 3012 (face font-lock-keyword-face fontified t) 3012 3013 (fontified t) 3013 3016 (face font-lock-keyword-face fontified t) 3016 3017 (fontified t) 3017 3021 (face font-lock-constant-face fontified t) 3021 3022 (fontified t) 3022 3026 (face font-lock-constant-face fontified t) 3026 3027 (fontified t) 3027 3052 (face font-lock-type-face fontified t) 3052 3053 (face (rainbow-delimiters-depth-3-face) fontified t) 3053 3054 (face (rainbow-delimiters-depth-3-face) fontified t) 3054 3055 (fontified t) 3055 3064 (fontified t) 3064 3068 (face font-lock-keyword-face fontified t) 3068 3069 (fontified t) 3069 3070 (face (rainbow-delimiters-depth-3-face) fontified t) 3070 3083 (fontified t) 3083 3085 (face font-lock-type-face fontified t) 3085 3086 (face font-lock-type-face c-type c-decl-id-start fontified t) 3086 3087 (fontified t) 3087 3090 (face font-lock-variable-name-face fontified t) 3090 3108 (fontified t) 3108 3109 (face font-lock-type-face c-type c-decl-id-start fontified t) 3109 3110 (fontified t) 3110 3117 (face font-lock-variable-name-face fontified t) 3117 3120 (fontified t) 3120 3124 (face font-lock-constant-face fontified t) 3124 3139 (fontified t) 3139 3144 (face font-lock-keyword-face fontified t) 3144 3145 (fontified t) 3145 3146 (face (rainbow-delimiters-depth-4-face) fontified t) 3146 3154 (fontified t) 3154 3155 (face (rainbow-delimiters-depth-5-face) fontified t) 3155 3156 (face (rainbow-delimiters-depth-5-face) fontified t) 3156 3164 (fontified t) 3164 3165 (face (rainbow-delimiters-depth-5-face) fontified t) 3165 3166 (face (rainbow-delimiters-depth-5-face) fontified t) 3166 3167 (face (rainbow-delimiters-depth-4-face) fontified t) 3167 3168 (fontified t) 3168 3169 (face (rainbow-delimiters-depth-4-face) fontified t) 3169 3187 (fontified t) 3187 3188 (face font-lock-type-face c-type c-decl-id-start fontified t) 3188 3189 (fontified t) 3189 3196 (face font-lock-variable-name-face fontified t) 3196 3207 (fontified t) 3207 3208 (face (rainbow-delimiters-depth-5-face) fontified t) 3208 3209 (face (rainbow-delimiters-depth-5-face) fontified t) 3209 3214 (fontified t) 3214 3215 (face (rainbow-delimiters-depth-5-face) fontified t) 3215 3216 (face (rainbow-delimiters-depth-5-face) fontified t) 3216 3235 (fontified t) 3235 3237 (face font-lock-keyword-face fontified t) 3237 3238 (fontified t) 3238 3239 (face (rainbow-delimiters-depth-5-face) fontified t) 3239 3251 (fontified t) 3251 3252 (face (rainbow-delimiters-depth-5-face) fontified t) 3252 3285 (fontified t) 3285 3286 (fontified t) 3286 3291 (fontified t) 3291 3308 (fontified t) 3308 3312 (face font-lock-keyword-face fontified t) 3312 3313 (fontified t) 3313 3314 (face (rainbow-delimiters-depth-5-face) fontified t) 3314 3358 (fontified t) 3358 3359 (face (rainbow-delimiters-depth-5-face) fontified t) 3359 3372 (fontified t) 3372 3373 (face (rainbow-delimiters-depth-4-face) fontified t) 3373 3382 (fontified t) 3382 3388 (face font-lock-keyword-face fontified t) 3388 3406 (fontified t) 3406 3407 (face (rainbow-delimiters-depth-3-face) fontified t) 3407 3412 (fontified t) 3412 3413 (face (rainbow-delimiters-depth-2-face) fontified t) 3413 3419 (fontified t) 3419 3425 (face font-lock-keyword-face fontified t) 3425 3426 (fontified t) 3426 3430 (face font-lock-type-face fontified t) 3430 3432 (face font-lock-type-face fontified t) 3432 3433 (face font-lock-type-face c-type c-decl-id-start fontified t) 3433 3434 (fontified t) 3434 3442 (face font-lock-function-name-face fontified t) 3442 3443 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 3443 3444 (face font-lock-type-face fontified t) 3444 3445 (fontified t) 3445 3452 (face font-lock-variable-name-face fontified t) 3452 3453 (face (rainbow-delimiters-depth-2-face) fontified t) 3453 3454 (fontified t) 3454 3455 (face (rainbow-delimiters-depth-2-face) fontified t) 3455 3456 (fontified t) 3456 3465 (fontified t) 3465 3466 (face font-lock-type-face c-type c-decl-id-start fontified t) 3466 3467 (fontified t) 3467 3474 (face font-lock-variable-name-face fontified t) 3474 3485 (fontified t) 3485 3486 (face (rainbow-delimiters-depth-3-face) fontified t) 3486 3487 (face (rainbow-delimiters-depth-3-face) fontified t) 3487 3492 (fontified t) 3492 3493 (face (rainbow-delimiters-depth-3-face) fontified t) 3493 3494 (face (rainbow-delimiters-depth-3-face) fontified t) 3494 3505 (fontified t) 3505 3510 (face font-lock-keyword-face fontified t) 3510 3511 (fontified t) 3511 3512 (face (rainbow-delimiters-depth-3-face) fontified t) 3512 3520 (fontified t) 3520 3521 (face (rainbow-delimiters-depth-4-face) fontified t) 3521 3522 (face (rainbow-delimiters-depth-4-face) fontified t) 3522 3530 (fontified t) 3530 3531 (face (rainbow-delimiters-depth-4-face) fontified t) 3531 3532 (face (rainbow-delimiters-depth-4-face) fontified t) 3532 3533 (face (rainbow-delimiters-depth-3-face) fontified t) 3533 3534 (fontified t) 3534 3535 (face (rainbow-delimiters-depth-3-face) fontified t) 3535 3549 (fontified t) 3549 3551 (face font-lock-keyword-face fontified t) 3551 3552 (fontified t) 3552 3553 (face (rainbow-delimiters-depth-4-face) fontified t) 3553 3571 (fontified t) 3571 3572 (face (rainbow-delimiters-depth-4-face) fontified t) 3572 3589 (fontified t) 3589 3595 (face font-lock-keyword-face fontified t) 3595 3596 (fontified t) 3596 3600 (face font-lock-constant-face fontified t) 3600 3610 (fontified t) 3610 3611 (face (rainbow-delimiters-depth-3-face) fontified t) 3611 3620 (fontified t) 3620 3626 (face font-lock-keyword-face fontified t) 3626 3627 (fontified t) 3627 3632 (face font-lock-constant-face fontified t) 3632 3638 (fontified t) 3638 3639 (face (rainbow-delimiters-depth-2-face) fontified t) 3639 3645 (fontified t) 3645 3651 (face font-lock-keyword-face fontified t) 3651 3652 (fontified t) 3652 3654 (face font-lock-type-face fontified t) 3654 3655 (face font-lock-type-face c-type c-decl-id-start fontified t) 3655 3656 (fontified t) 3656 3663 (face font-lock-function-name-face fontified t) 3663 3664 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified t) 3664 3665 (face font-lock-type-face fontified t) 3665 3666 (fontified t) 3666 3668 (face font-lock-variable-name-face fontified t) 3668 3669 (face font-lock-variable-name-face fontified t) 3669 3673 (face font-lock-variable-name-face fontified t) 3673 3674 (face (rainbow-delimiters-depth-2-face) fontified t) 3674 3675 (fontified t) 3675 3676 (face (rainbow-delimiters-depth-2-face) fontified t) 3676 3686 (fontified t) 3686 3688 (face font-lock-type-face fontified t) 3688 3689 (face font-lock-type-face c-type c-decl-id-start fontified t) 3689 3690 (fontified t) 3690 3693 (face font-lock-variable-name-face fontified t) 3693 3707 (fontified t) 3707 3708 (face font-lock-type-face c-type c-decl-id-start fontified t) 3708 3709 (fontified t) 3709 3716 (face font-lock-variable-name-face fontified t) 3716 3723 (fontified t) 3723 3727 (fontified t) 3727 3728 (face (rainbow-delimiters-depth-3-face) fontified t) 3728 3729 (face (rainbow-delimiters-depth-3-face) fontified t) 3729 3734 (fontified t) 3734 3735 (face (rainbow-delimiters-depth-3-face) fontified t) 3735 3736 (face (rainbow-delimiters-depth-3-face) fontified t) 3736 3747 (fontified t) 3747 3752 (face font-lock-keyword-face fontified t) 3752 3753 (fontified t) 3753 3754 (face (rainbow-delimiters-depth-3-face) fontified t) 3754 3762 (fontified t) 3762 3763 (face (rainbow-delimiters-depth-4-face) fontified t) 3763 3764 (face (rainbow-delimiters-depth-4-face) fontified t) 3764 3772 (fontified t) 3772 3773 (face (rainbow-delimiters-depth-4-face) fontified t) 3773 3774 (face (rainbow-delimiters-depth-4-face) fontified t) 3774 3775 (face (rainbow-delimiters-depth-3-face) fontified t) 3775 3776 (fontified t) 3776 3777 (face (rainbow-delimiters-depth-3-face) fontified t) 3777 3778 (fontified t) 3778 3790 (fontified t) 3790 3792 (face font-lock-keyword-face fontified t) 3792 3793 (fontified t) 3793 3794 (face (rainbow-delimiters-depth-4-face) fontified t) 3794 3812 (fontified t) 3812 3813 (face (rainbow-delimiters-depth-4-face) fontified t) 3813 3830 (fontified t) 3830 3835 (face font-lock-keyword-face fontified t) 3835 3849 (fontified t) 3849 3853 (face font-lock-keyword-face fontified t) 3853 3854 (fontified t) 3854 3855 (face (rainbow-delimiters-depth-4-face) fontified t) 3855 3913 (fontified t) 3913 3914 (face (rainbow-delimiters-depth-5-face) fontified t) 3914 3915 (face (rainbow-delimiters-depth-5-face) fontified t) 3915 3920 (fontified t) 3920 3921 (face (rainbow-delimiters-depth-5-face) fontified t) 3921 3922 (face (rainbow-delimiters-depth-5-face) fontified t) 3922 3936 (fontified t) 3936 3937 (face (rainbow-delimiters-depth-4-face) fontified t) 3937 3938 (fontified t) 3938 3946 (fontified t) 3946 3947 (face (rainbow-delimiters-depth-3-face) fontified t) 3947 3956 (fontified t) 3956 3962 (face font-lock-keyword-face fontified t) 3962 3972 (fontified t) 3972 3973 (face (rainbow-delimiters-depth-2-face) fontified t) 3973 3979 (fontified t) 3979 3984 (face font-lock-keyword-face fontified t) 3984 3985 (face font-lock-keyword-face fontified t) 3985 3986 (fontified t) 3986 3989 (face font-lock-type-face fontified t) 3989 3990 (face font-lock-type-face c-type c-decl-id-start fontified t) 3990 3991 (fontified t) 3991 3996 (face font-lock-function-name-face fontified t) 3996 3997 (face (rainbow-delimiters-depth-2-face) fontified t) 3997 3998 (face (rainbow-delimiters-depth-2-face) fontified t) 3998 3999 (fontified t) 3999 4000 (face (rainbow-delimiters-depth-2-face) fontified t) 4000 4001 (fontified t) 4001 4009 (fontified t) 4009 4013 (face font-lock-keyword-face fontified t) 4013 4032 (fontified t) 4032 4036 (face font-lock-keyword-face fontified t) 4036 4044 (fontified t) 4044 4048 (face font-lock-constant-face fontified t) 4048 4058 (fontified t) 4058 4062 (face font-lock-keyword-face fontified t) 4062 4070 (fontified t) 4070 4074 (face font-lock-constant-face fontified t) 4074 4080 (fontified t) 4080 4081 (face (rainbow-delimiters-depth-2-face) fontified t) 4081 4087 (fontified t) 4087 4093 (face font-lock-keyword-face fontified t) 4093 4094 (fontified t) 4094 4096 (face font-lock-type-face fontified t) 4096 4097 (face font-lock-type-face c-type c-decl-id-start fontified t) 4097 4098 (fontified t) 4098 4102 (face font-lock-function-name-face fontified t) 4102 4103 (face (rainbow-delimiters-depth-2-face) fontified t) 4103 4104 (face (rainbow-delimiters-depth-2-face) fontified t) 4104 4105 (fontified t) 4105 4106 (face (rainbow-delimiters-depth-2-face) fontified t) 4106 4115 (fontified t) 4115 4121 (face font-lock-keyword-face fontified t) 4121 4122 (fontified t) 4122 4126 (face font-lock-keyword-face fontified t) 4126 4137 (fontified t) 4137 4138 (face (rainbow-delimiters-depth-2-face) fontified t) 4138 4144 (fontified t) 4144 4153 (face c-annotation-face fontified t) 4153 4158 (fontified t) 4158 4164 (face font-lock-keyword-face fontified t) 4164 4165 (fontified t) 4165 4170 (face font-lock-type-face fontified t) 4170 4171 (face font-lock-type-face c-type c-decl-id-start fontified t) 4171 4172 (fontified t) 4172 4180 (face font-lock-function-name-face fontified t) 4180 4181 (face (rainbow-delimiters-depth-2-face) fontified t) 4181 4182 (face (rainbow-delimiters-depth-2-face) fontified t) 4182 4183 (fontified t) 4183 4184 (face (rainbow-delimiters-depth-2-face) fontified t) 4184 4185 (fontified t) 4185 4193 (fontified t) 4193 4198 (face font-lock-type-face fontified t) 4198 4199 (face font-lock-type-face c-type c-decl-id-start fontified t) 4199 4200 (fontified t) 4200 4205 (face font-lock-variable-name-face fontified t) 4205 4208 (fontified t) 4208 4210 (face font-lock-string-face fontified t) 4210 4221 (fontified t) 4221 4226 (face font-lock-keyword-face fontified t) 4226 4227 (fontified t) 4227 4228 (face (rainbow-delimiters-depth-3-face) fontified t) 4228 4236 (fontified t) 4236 4237 (face (rainbow-delimiters-depth-4-face) fontified t) 4237 4238 (face (rainbow-delimiters-depth-4-face) fontified t) 4238 4246 (fontified t) 4246 4247 (face (rainbow-delimiters-depth-4-face) fontified t) 4247 4248 (face (rainbow-delimiters-depth-4-face) fontified t) 4248 4249 (face (rainbow-delimiters-depth-3-face) fontified t) 4249 4250 (fontified t) 4250 4251 (face (rainbow-delimiters-depth-3-face) fontified t) 4251 4281 (fontified t) 4281 4282 (face (rainbow-delimiters-depth-4-face) fontified t) 4282 4283 (face (rainbow-delimiters-depth-4-face) fontified t) 4283 4288 (fontified t) 4288 4289 (face (rainbow-delimiters-depth-4-face) fontified t) 4289 4290 (face (rainbow-delimiters-depth-4-face) fontified t) 4290 4293 (fontified t) 4293 4297 (face font-lock-string-face fontified t) 4297 4307 (fontified t) 4307 4308 (face (rainbow-delimiters-depth-3-face) fontified t) 4308 4317 (fontified t) 4317 4323 (face font-lock-keyword-face fontified t) 4323 4324 (fontified t) 4324 4327 (face font-lock-string-face fontified t) 4327 4338 (fontified t) 4338 4341 (face font-lock-string-face fontified t) 4341 4347 (fontified t) 4347 4348 (face (rainbow-delimiters-depth-2-face) fontified t) 4348 4354 (fontified t) 4354 4360 (face font-lock-keyword-face fontified t) 4360 4361 (fontified t) 4361 4365 (face font-lock-constant-face fontified t) 4365 4366 (fontified t) 4366 4370 (face font-lock-constant-face fontified t) 4370 4371 (fontified t) 4371 4379 (face font-lock-type-face fontified t) 4379 4380 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4380 4381 (face font-lock-type-face fontified t) 4381 4382 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4382 4383 (fontified t) 4383 4391 (face font-lock-function-name-face fontified t) 4391 4392 (face (rainbow-delimiters-depth-2-face) fontified t) 4392 4393 (face (rainbow-delimiters-depth-2-face) fontified t) 4393 4394 (fontified t) 4394 4395 (face (rainbow-delimiters-depth-2-face) fontified t) 4395 4404 (fontified t) 4404 4409 (face font-lock-keyword-face fontified t) 4409 4410 (face font-lock-keyword-face fontified t) 4410 4411 (fontified t) 4411 4414 (face font-lock-keyword-face fontified t) 4414 4415 (fontified t) 4415 4433 (face font-lock-type-face fontified t) 4433 4434 (face (rainbow-delimiters-depth-3-face) fontified t) 4434 4435 (face (rainbow-delimiters-depth-3-face) fontified t) 4435 4437 (fontified t) 4437 4441 (fontified t) 4441 4442 (face (rainbow-delimiters-depth-2-face) fontified t) 4442 4448 (fontified t) 4448 4455 (face font-lock-keyword-face fontified t) 4455 4456 (fontified t) 4456 4462 (face font-lock-keyword-face fontified t) 4462 4463 (fontified t) 4463 4467 (face font-lock-keyword-face fontified t) 4467 4468 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 4468 4469 (fontified t) 4469 4471 (face font-lock-type-face fontified t) 4471 4473 (face font-lock-type-face fontified t) 4473 4474 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4474 4475 (face font-lock-type-face fontified t) 4475 4476 (face (rainbow-delimiters-depth-2-face) fontified t category c->-as-paren-syntax) 4476 4477 (fontified t) 4477 4478 (face (rainbow-delimiters-depth-2-face) fontified t) 4478 4488 (fontified t) 4488 4495 (face font-lock-keyword-face fontified t) 4495 4496 (fontified t) 4496 4497 (face font-lock-type-face c-type c-decl-id-start fontified t) 4497 4498 (fontified t) 4498 4502 (face font-lock-variable-name-face fontified t) 4502 4512 (fontified t) 4512 4519 (face font-lock-keyword-face fontified t) 4519 4520 (fontified t) 4520 4524 (face font-lock-type-face fontified t) 4524 4525 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4525 4526 (face font-lock-type-face fontified t) 4526 4527 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4527 4528 (fontified t) 4528 4531 (face font-lock-variable-name-face fontified t) 4531 4532 (face font-lock-variable-name-face fontified t) 4532 4533 (fontified t) 4533 4547 (fontified t) 4547 4548 (face (rainbow-delimiters-depth-3-face) fontified t) 4548 4549 (face font-lock-type-face fontified t) 4549 4550 (fontified t) 4550 4554 (face font-lock-variable-name-face fontified t) 4554 4556 (fontified t) 4556 4560 (face font-lock-type-face fontified t) 4560 4561 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4561 4562 (face font-lock-type-face fontified t) 4562 4563 (face (rainbow-delimiters-depth-4-face) fontified t category c->-as-paren-syntax) 4563 4564 (fontified t) 4564 4568 (face font-lock-variable-name-face fontified t) 4568 4569 (face (rainbow-delimiters-depth-3-face) fontified t) 4569 4570 (fontified t) 4570 4571 (face (rainbow-delimiters-depth-3-face) fontified t) 4571 4584 (fontified t) 4584 4588 (face font-lock-keyword-face fontified t) 4588 4614 (fontified t) 4614 4618 (face font-lock-keyword-face fontified t) 4618 4640 (fontified t) 4640 4641 (face (rainbow-delimiters-depth-3-face) fontified t) 4641 4642 (fontified t) 4642 4643 (fontified t) 4643 4651 (fontified t) 4651 4657 (face font-lock-keyword-face fontified t) 4657 4658 (fontified t) 4658 4659 (face font-lock-type-face c-type c-decl-id-start fontified t) 4659 4660 (fontified t) 4660 4667 (face font-lock-function-name-face fontified t) 4667 4668 (face (rainbow-delimiters-depth-3-face) fontified t) 4668 4669 (face (rainbow-delimiters-depth-3-face) fontified t) 4669 4670 (fontified t) 4670 4671 (face (rainbow-delimiters-depth-3-face) fontified t) 4671 4684 (fontified t) 4684 4690 (face font-lock-keyword-face fontified t) 4690 4691 (fontified t) 4691 4695 (face font-lock-keyword-face fontified t) 4695 4710 (fontified t) 4710 4711 (face (rainbow-delimiters-depth-3-face) fontified t) 4711 4712 (fontified t) 4712 4721 (fontified t) 4721 4727 (face font-lock-keyword-face fontified t) 4727 4728 (fontified t) 4728 4732 (face font-lock-type-face fontified t) 4732 4733 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4733 4734 (face font-lock-type-face fontified t) 4734 4735 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4735 4736 (fontified t) 4736 4743 (face font-lock-function-name-face fontified t) 4743 4744 (face (rainbow-delimiters-depth-3-face) fontified t) 4744 4745 (face (rainbow-delimiters-depth-3-face) fontified t) 4745 4746 (fontified t) 4746 4747 (face (rainbow-delimiters-depth-3-face) fontified t) 4747 4748 (fontified t) 4748 4751 (fontified t) 4751 4760 (fontified t) 4760 4766 (face font-lock-keyword-face fontified t) 4766 4767 (fontified t) 4767 4771 (face font-lock-keyword-face fontified t) 4771 4778 (fontified t) 4778 4786 (fontified t) 4786 4787 (face (rainbow-delimiters-depth-3-face) fontified t) 4787 4792 (fontified t) 4792 4793 (face (rainbow-delimiters-depth-2-face) fontified t) 4793 4799 (fontified t) 4799 4806 (face font-lock-keyword-face fontified t) 4806 4807 (fontified t) 4807 4811 (face font-lock-keyword-face fontified t) 4811 4812 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 4812 4813 (fontified t) 4813 4831 (face font-lock-type-face fontified t) 4831 4832 (fontified t) 4832 4842 (face font-lock-keyword-face fontified t) 4842 4843 (fontified t) 4843 4847 (face font-lock-constant-face fontified t) 4847 4848 (fontified t) 4848 4852 (face font-lock-constant-face fontified t) 4852 4853 (fontified t) 4853 4861 (face font-lock-type-face fontified t) 4861 4862 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4862 4863 (face font-lock-type-face fontified t) 4863 4864 (face (rainbow-delimiters-depth-2-face) fontified t category c->-as-paren-syntax) 4864 4865 (fontified t) 4865 4866 (face (rainbow-delimiters-depth-2-face) fontified t) 4866 4876 (fontified t) 4876 4883 (face font-lock-keyword-face fontified t) 4883 4884 (fontified t) 4884 4888 (face font-lock-type-face fontified t) 4888 4889 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 4889 4890 (face font-lock-type-face fontified t) 4890 4891 (face (rainbow-delimiters-depth-3-face) c-type c-decl-id-start fontified t category c->-as-paren-syntax) 4891 4892 (fontified t) 4892 4899 (face font-lock-variable-name-face fontified t) 4899 4917 (fontified t) 4917 4923 (face font-lock-keyword-face fontified t) 4923 4924 (fontified t) 4924 4930 (face font-lock-type-face fontified t) 4930 4931 (face font-lock-type-face c-type c-decl-id-start fontified t) 4931 4932 (fontified t) 4932 4939 (face font-lock-function-name-face fontified t) 4939 4940 (face (rainbow-delimiters-depth-3-face) fontified t) 4940 4941 (face (rainbow-delimiters-depth-3-face) fontified t) 4941 4942 (fontified t) 4942 4943 (face (rainbow-delimiters-depth-3-face) fontified t) 4943 4956 (fontified t) 4956 4962 (face font-lock-keyword-face fontified t) 4962 4988 (fontified t) 4988 4989 (face (rainbow-delimiters-depth-3-face) fontified t) 4989 4999 (fontified t) 4999 5005 (face font-lock-keyword-face fontified t) 5005 5006 (fontified t) 5006 5007 (face font-lock-type-face c-type c-decl-id-start fontified t) 5007 5008 (fontified t) 5008 5012 (face font-lock-function-name-face fontified t) 5012 5013 (face (rainbow-delimiters-depth-3-face) fontified t) 5013 5014 (face (rainbow-delimiters-depth-3-face) fontified t) 5014 5015 (fontified t) 5015 5016 (face (rainbow-delimiters-depth-3-face) fontified t) 5016 5029 (fontified t) 5029 5031 (face font-lock-keyword-face fontified t) 5031 5032 (fontified t) 5032 5033 (face (rainbow-delimiters-depth-4-face) fontified t) 5033 5034 (face font-lock-negation-char-face fontified t) 5034 5041 (fontified t) 5041 5042 (face (rainbow-delimiters-depth-5-face) fontified t) 5042 5043 (face (rainbow-delimiters-depth-5-face) fontified t) 5043 5044 (face (rainbow-delimiters-depth-4-face) fontified t) 5044 5062 (fontified t) 5062 5063 (face font-lock-keyword-face fontified t) 5063 5067 (face font-lock-keyword-face fontified t) 5067 5068 (fontified t) 5068 5071 (face font-lock-keyword-face fontified t) 5071 5072 (fontified t) 5072 5076 (face font-lock-constant-face fontified t) 5076 5077 (fontified t) 5077 5081 (face font-lock-constant-face fontified t) 5081 5082 (fontified t) 5082 5107 (face font-lock-type-face fontified t) 5107 5108 (face (rainbow-delimiters-depth-4-face) fontified t) 5108 5109 (face (rainbow-delimiters-depth-4-face) fontified t) 5109 5124 (fontified t) 5124 5125 (face font-lock-type-face c-type c-decl-id-start fontified t) 5125 5126 (fontified t) 5126 5134 (face font-lock-variable-name-face fontified t) 5134 5136 (fontified t) 5136 5152 (fontified t) 5152 5153 (face (rainbow-delimiters-depth-4-face) fontified t) 5153 5154 (face (rainbow-delimiters-depth-4-face) fontified t) 5154 5156 (fontified t) 5156 5204 (fontified t) 5204 5210 (face font-lock-keyword-face fontified t) 5210 5229 (fontified t) 5229 5230 (face (rainbow-delimiters-depth-3-face) fontified t) 5230 5232 (fontified t) 5232 5240 (c-is-sws t c-in-sws t fontified t) 5240 5241 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t) 5241 5243 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 5243 5254 (face font-lock-comment-face c-in-sws t fontified t) 5254 5255 (face font-lock-comment-face c-in-sws t fontified t) 5255 5263 (c-in-sws t fontified t) 5263 5264 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5264 5265 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 5265 5278 (c-in-sws t face font-lock-comment-face fontified t) 5278 5284 (c-in-sws t fontified t face font-lock-comment-face) 5284 5285 (c-in-sws t fontified t face font-lock-comment-face) 5285 5286 (c-is-sws t fontified t) 5286 5293 (c-is-sws t fontified t) 5293 5294 (face font-lock-comment-delimiter-face c-is-sws t fontified t) 5294 5295 (face font-lock-comment-delimiter-face fontified t) 5295 5296 (face font-lock-comment-face fontified t) 5296 5297 (face font-lock-comment-face fontified t) 5297 5301 (fontified t) 5301 5302 (face (rainbow-delimiters-depth-2-face) c-is-sws t fontified t) 5302 5303 (fontified t) 5303 5304 (face (rainbow-delimiters-depth-1-face) fontified t) 5304 5305 (fontified t)) . 1) (undo-tree-id3081 . -5305) (undo-tree-id3082 . 2312) (undo-tree-id3083 . -5304) (undo-tree-id3084 . -2) (undo-tree-id3085 . -5305) (undo-tree-id3086 . -1180) (undo-tree-id3087 . -934) (undo-tree-id3088 . -1180) (undo-tree-id3089 . -2) (undo-tree-id3090 . -2) (undo-tree-id3091 . -1348) (undo-tree-id3092 . -2180) (undo-tree-id3093 . 2312) (undo-tree-id3094 . -2180) (undo-tree-id3095 . -3465) (undo-tree-id3096 . -2) (undo-tree-id3097 . -5305) (undo-tree-id3098 . -5305) (undo-tree-id3099 . -4185) (undo-tree-id3100 . -2) 5306 (t 26029 33608 151213 872000)) nil (26029 34313 45935 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 16092 . 16093) (nil fontified nil 13090 . 16093) (nil fontified nil 13089 . 13090) (nil fontified nil 2077 . 13089) (nil fontified nil 2076 . 2077) (nil category c->-as-paren-syntax 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2074 . 2075) (nil category c-<-as-paren-syntax 2074 . 2075) (nil fontified nil 1595 . 2074) (nil fontified nil 1594 . 1595) (nil category c->-as-paren-syntax 1594 . 1595) (nil fontified nil 1588 . 1594) (nil fontified nil 1587 . 1588) (nil category c-<-as-paren-syntax 1587 . 1588) (nil fontified nil 1562 . 1587) (nil fontified nil 1561 . 1562) (nil category c->-as-paren-syntax 1561 . 1562) (nil fontified nil 1554 . 1561) (nil fontified nil 1553 . 1554) (nil category c-<-as-paren-syntax 1553 . 1554) (nil fontified nil 1507 . 1553) (nil fontified nil 1506 . 1507) (nil category c->-as-paren-syntax 1506 . 1507) (nil fontified nil 1499 . 1506) (nil fontified nil 1498 . 1499) (nil category c-<-as-paren-syntax 1498 . 1499) (nil fontified nil 1466 . 1498) (nil fontified nil 1465 . 1466) (nil category c->-as-paren-syntax 1465 . 1466) (nil fontified nil 1459 . 1465) (nil fontified nil 1458 . 1459) (nil category c-<-as-paren-syntax 1458 . 1459) (nil fontified nil 1416 . 1458) (nil fontified nil 1415 . 1416) (nil category c->-as-paren-syntax 1415 . 1416) (nil fontified nil 1409 . 1415) (nil fontified nil 1408 . 1409) (nil category c-<-as-paren-syntax 1408 . 1409) (nil fontified nil 1119 . 1408) (nil fontified nil 1118 . 1119) (nil fontified nil 981 . 1118) (nil fontified nil 980 . 981) (nil fontified nil 849 . 980) (nil fontified nil 848 . 849) (nil fontified nil 742 . 848) (nil fontified nil 741 . 742) (nil fontified nil 1 . 741) (1 . 16093)) nil (26029 34313 45927 0) 0 nil])
([nil nil ((#("import java.util.Iterator;
import java.util.NoSuchElementException;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.*;

/**
 * This class contains JUnit test cases that you can use to test your
 * implementation of the list.
 * 
 * The reason most of the test cases are commented (i.e. hidden) is that it gets
 * too messy if you try to make all of them work at the same time. A better way
 * is to make one test case work, and the uncomment the next one, leaving the
 * ones already working in place to catch any bugs in already working code that
 * might sneak in.
 * 
 * When all the tests go through you will *PROBABLY* have a solution that
 * passes, i.e. if you also fulfills the requirements that can't be tested, such
 * as usage of the correct data structure, etc. Note though that the test cases
 * doesn't cover every nook and cranny, so feel free to test it even more. If we
 * find anything wrong with the code that these tests doesn't cover, then this
 * usually means a failed assignment.
 * 
 * Depending on settings you may get warnings for import statements that isn't
 * used. These are used by tests that originally are commented out, so leave the
 * import statements in place.
 * 
 * @author Henrik
 */
public class ALDAListTest {

	// These two methods are the only places in the code that mentions the name
	// of your class.
	private static ALDAList<String> createNewList() {
		return new MyALDAList<String>();
	}

	private static ALDAList<Integer> createIntegerList() {
		return new MyALDAList<Integer>();
	}

	private ALDAList<String> list = createNewList();

	// Help method, not a test
	private void testField(java.lang.reflect.Field f) {
		assertTrue(java.lang.reflect.Modifier.isPrivate(f.getModifiers()),
				\"All attributes should (probably) be private \");
		assertFalse(f.getType().isArray(), \"There is no reason to use any arrays on this assignment\");
		assertFalse(java.lang.reflect.Modifier.isStatic(f.getModifiers()),
				\"There is (probably) not any reason to use any static attributes\");
		for (Class<?> i : f.getType().getInterfaces()) {
			assertFalse(i.getName().startsWith(\"java.util\"),
					\"You should implement the functionality yourself, not use any of the list implementations already available\");
		}
	}

	// How you work on this assignment is up to you, but a recommendation is to
	// uncomment the test methods below one by one in the order they are
	// presented. Remember though that the tests only are intended to cover
	// obvious errors. Even if all of them works there may still be errors in
	// your code. You are responsible for finding those. You may add as many
	// tests as you like to the test suite, but do NOT remove or change any of
	// the existing ones unless you are absolutely certain that they are wrong.
	// If we find any problems with the tests we will publish information about
	// this in Moodle, and also update the tests there.

	// @Test
	// public void testObviousImplementationErrors() {
	// 	for (java.lang.reflect.Field f : list.getClass().getDeclaredFields()) {
	// 		testField(f);
	// 	}
	// }

	@BeforeEach
	public void setUp() {
		list.add(\"First\");
		list.add(\"Second\");
		list.add(\"Third\");
		list.add(\"Fourth\");
		list.add(\"Fifth\");
	}

	// @Test
	// public void testEmpty() {
	// 	// Since setUp enters a number of items into the list
	// 	list = createNewList();
	// 	assertEquals(0, list.size());
	// 	assertEquals(\"[]\", list.toString());
	// }

	// @Test
	// public void testGetOnEmptyList() {
	// 	// Since setUp enters a number of items into the list
	// 	list = createNewList();
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.get(0);
	// 	});
	// }

	@Test
	public void testSimpleMethodsOnDefaultList() {
		assertEquals(5, list.size());
		assertEquals(\"First\", list.get(0));
		assertEquals(\"Third\", list.get(2));
		assertEquals(\"Fifth\", list.get(4));
		assertEquals(\"[First, Second, Third, Fourth, Fifth]\", list.toString());

		list.add(\"Second\");
		assertEquals(6, list.size());
		assertEquals(\"Second\", list.get(5));
	}

	// @Test
	// public void testIndexBelowZero() {
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.get(-1);
	// 	});
	// }

	// @Test
	// public void testIndexAboveMax() {
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.get(5);
	// 	});
	// }

	// @Test
	// public void addWithIndex() {
	// 	list.add(0, \"A\");
	// 	list.add(6, \"B\");
	// 	list.add(2, \"C\");
	// 	assertEquals(8, list.size());
	// 	assertEquals(\"A\", list.get(0));
	// 	assertEquals(\"C\", list.get(2));
	// 	assertEquals(\"B\", list.get(7));
	// 	assertEquals(\"[A, First, C, Second, Third, Fourth, Fifth, B]\", list.toString());
	// }

	// @Test
	// public void testAddIndexBelowZero() {
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.add(-1, \"ABC\");
	// 	});
	// }

	// @Test
	// public void testAddIndexAboveMax() {
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.add(6, \"ABC\");
	// 	});
	// }

	// @Test
	// public void testClear() {
	// 	list.clear();
	// 	assertEquals(0, list.size());
	// 	list.add(\"First\");
	// 	list.add(0, \"Second\");
	// 	assertEquals(2, list.size());
	// 	assertEquals(\"First\", list.get(1));
	// 	assertEquals(\"Second\", list.get(0));
	// }

	// @Test
	// public void testContains() {
	// 	assertTrue(list.contains(\"First\"));
	// 	assertTrue(list.contains(\"Third\"));
	// 	assertFalse(list.contains(\"ABC\"));
	// 	assertFalse(list.contains(\"\"));
	// }

	// @Test
	// public void testIndexOf() {
	// 	assertEquals(0, list.indexOf(\"First\"));
	// 	assertEquals(4, list.indexOf(\"Fifth\"));
	// 	assertEquals(-1, list.indexOf(\"ABC\"));
	// 	list.add(\"Second\");
	// 	assertEquals(1, list.indexOf(\"Second\"));
	// }

	// @Test
	// public void testRemoveWithIndex() {
	// 	assertEquals(\"Third\", list.remove(2));
	// 	assertEquals(4, list.size());
	// 	assertEquals(\"Second\", list.get(1));
	// 	assertEquals(\"Fourth\", list.get(2));

	// 	assertEquals(\"First\", list.remove(0));
	// 	assertEquals(3, list.size());
	// 	assertEquals(\"Second\", list.get(0));

	// 	assertEquals(\"Fifth\", list.remove(2));
	// 	assertEquals(2, list.size());
	// 	assertEquals(\"Fourth\", list.get(1));
	// }

	// @Test
	// public void testRemoveAtEnd() {
	// 	list.remove(4);
	// 	assertEquals(4, list.size());
	// 	list.remove(3);
	// 	assertEquals(3, list.size());
	// 	assertEquals(\"[First, Second, Third]\", list.toString());

	// 	list.add(\"A\");
	// 	assertEquals(4, list.size());
	// 	assertEquals(\"[First, Second, Third, A]\", list.toString());
	// 	list.add(\"B\");
	// 	assertEquals(5, list.size());
	// 	assertEquals(\"[First, Second, Third, A, B]\", list.toString());

	// 	list.remove(4);
	// 	assertEquals(4, list.size());
	// 	list.remove(3);
	// 	assertEquals(3, list.size());
	// 	assertEquals(\"[First, Second, Third]\", list.toString());

	// 	list.add(3, \"A\");
	// 	assertEquals(4, list.size());
	// 	assertEquals(\"[First, Second, Third, A]\", list.toString());
	// 	list.add(4, \"B\");
	// 	assertEquals(5, list.size());
	// 	assertEquals(\"[First, Second, Third, A, B]\", list.toString());
	// }

	// @Test
	// public void testRemoveIndexBelowZero() {
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.remove(-1);
	// 	});
	// }

	// @Test
	// public void testRemoveIndexAboveMax() {
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.remove(5);
	// 	});
	// }

	// @Test
	// public void testRemoveOnEmptyList() {
	// 	list.clear();
	// 	assertThrows(IndexOutOfBoundsException.class, () -> {
	// 		list.remove(0);
	// 	});
	// }

	// @Test
	// public void testRemoveObject() {
	// 	assertTrue(list.remove(\"Third\"));
	// 	assertEquals(\"Second\", list.get(1));
	// 	assertEquals(\"Fourth\", list.get(2));

	// 	list.remove(\"First\");
	// 	assertEquals(3, list.size());
	// 	assertEquals(\"Second\", list.get(0));

	// 	list.remove(\"Fifth\");
	// 	assertEquals(2, list.size());
	// 	assertEquals(\"Fourth\", list.get(1));

	// 	list.remove(\"ABC\");
	// 	assertEquals(2, list.size());
	// 	assertEquals(\"Second\", list.get(0));
	// 	assertEquals(\"Fourth\", list.get(1));
	// }

	// @Test
	// public void testRemoveDuplicates() {
	// 	list.add(\"First\");
	// 	list.add(\"Third\");
	// 	list.add(\"Fifth\");
	// 	assertEquals(\"[First, Second, Third, Fourth, Fifth, First, Third, Fifth]\", list.toString());

	// 	list.remove(\"Third\");
	// 	assertEquals(\"[First, Second, Fourth, Fifth, First, Third, Fifth]\", list.toString());
	// 	list.remove(\"Third\");
	// 	assertEquals(\"[First, Second, Fourth, Fifth, First, Fifth]\", list.toString());
	// 	list.remove(\"First\");
	// 	assertEquals(\"[Second, Fourth, Fifth, First, Fifth]\", list.toString());
	// 	list.remove(\"Second\");
	// 	assertEquals(\"[Fourth, Fifth, First, Fifth]\", list.toString());
	// 	list.remove(\"Fifth\");
	// 	assertEquals(\"[Fourth, First, Fifth]\", list.toString());
	// 	list.remove(\"Fifth\");
	// 	assertEquals(\"[Fourth, First]\", list.toString());

	// 	list.add(0, \"A\");
	// 	list.add(\"B\");
	// 	assertEquals(\"[A, Fourth, First, B]\", list.toString());
	// }

	// private static final java.util.Random rnd = new java.util.Random();
	// private static final String[] names = { \"Adam\", \"Bertil\", \"Cesar\", \"David\", \"Erik\", \"Filip\", \"Gustav\", \"Helge\",
	// 		\"Ivar\", \"Johan\", \"Kalle\", \"ludvig\", \"Martin\", \"Niklas\" };

	// private String randomName() {
	// 	return names[rnd.nextInt(names.length)];
	// }

	// private void testBeforeAndAfterRandomOperation(java.util.List<String> oracle) {
	// 	// Here you can put test code that should be executed before and after
	// 	// each random operation in the test below.
	// 	assertEquals(oracle.size(), list.size());
	// 	for (int n = 0; n < oracle.size(); n++) {
	// 		assertEquals(oracle.get(n), list.get(n));
	// 	}
	// 	assertEquals(oracle.toString(), list.toString());
	// }

	// @Test
	// public void testMix() {
	// 	list.clear();
	// 	java.util.List<String> oracle = new java.util.ArrayList<String>();

	// 	for (int n = 0; n < 1000; n++) {
	// 		String name = randomName();

	// 		// Random insert
	// 		switch (rnd.nextInt(5)) {
	// 			case 0:
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				list.add(name);
	// 				oracle.add(name);
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				break;
	// 			case 1:
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				list.add(0, name);
	// 				oracle.add(0, name);
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				break;
	// 			case 2:
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				list.add(list.size(), name);
	// 				oracle.add(oracle.size(), name);
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				break;
	// 			case 3:
	// 			case 4:
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				int index = list.size() == 0 ? 0 : rnd.nextInt(list.size());
	// 				list.add(index, name);
	// 				oracle.add(index, name);
	// 				testBeforeAndAfterRandomOperation(oracle);
	// 				break;
	// 		}

	// 		if (oracle.size() > 0) {

	// 			// Random removal 70% of the times
	// 			switch (rnd.nextInt(10)) {
	// 				case 3:
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					list.remove(0);
	// 					oracle.remove(0);
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					break;
	// 				case 4:
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					list.remove(list.size() - 1);
	// 					oracle.remove(oracle.size() - 1);
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					break;
	// 				case 5:
	// 				case 6:
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					int index = rnd.nextInt(list.size());
	// 					list.remove(index);
	// 					oracle.remove(index);
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					break;
	// 				case 7:
	// 				case 8:
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					name = randomName();
	// 					list.remove(name);
	// 					oracle.remove(name);
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					break;
	// 				case 9:
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 					if (rnd.nextInt(10) < 2) {
	// 						list.clear();
	// 						oracle.clear();
	// 					}
	// 					testBeforeAndAfterRandomOperation(oracle);
	// 			}
	// 		}

	// 		if (oracle.size() == 0) {
	// 			assertEquals(0, list.size());
	// 		} else {
	// 			// Random check
	// 			switch (rnd.nextInt(10)) {
	// 				case 0:
	// 					assertEquals(oracle.size(), list.size());
	// 					break;
	// 				case 1:
	// 					assertEquals(oracle.get(0), list.get(0));
	// 					break;
	// 				case 2:
	// 					assertEquals(oracle.get(oracle.size() - 1), list.get(list.size() - 1));
	// 					break;
	// 				case 3:
	// 				case 4:
	// 				case 5:
	// 				case 6:
	// 				case 7:
	// 				case 8:
	// 					int index = rnd.nextInt(list.size());
	// 					assertEquals(oracle.get(index), list.get(index));
	// 					break;
	// 				case 9:
	// 					assertEquals(oracle.toString(), list.toString());
	// 					break;
	// 			}
	// 		}
	// 	}

	// }

	// @Test
	// public void testIsItearble() {
	// 	for (String s : list)
	// 		// This code is not necessay but removes a warning that s isn't
	// 		// used.
	// 		s.length();
	// }

	// @Test
	// public void testBasicIteration() {
	// 	Iterator<String> i = list.iterator();
	// 	assertTrue(i.hasNext());
	// 	assertEquals(\"First\", i.next());
	// 	assertTrue(i.hasNext());
	// 	assertEquals(\"Second\", i.next());
	// 	assertTrue(i.hasNext());
	// 	assertEquals(\"Third\", i.next());
	// 	assertTrue(i.hasNext());
	// 	assertEquals(\"Fourth\", i.next());
	// 	assertTrue(i.hasNext());
	// 	assertEquals(\"Fifth\", i.next());
	// 	assertFalse(i.hasNext());
	// }

	// @Test
	// public void testToLongIteration() {
	// 	Iterator<String> i = list.iterator();
	// 	for (int n = 0; n < list.size(); n++) {
	// 		i.next();
	// 	}
	// 	assertThrows(NoSuchElementException.class, () -> {
	// 		i.next();
	// 	});
	// }

	// @Test
	// public void testIterationOnEmptyList() {
	// 	list.clear();
	// 	Iterator<String> i = list.iterator();
	// 	assertFalse(i.hasNext());
	// 	assertThrows(NoSuchElementException.class, () -> {
	// 		i.next();
	// 	});
	// }

	// @Test
	// public void testMultipleConcurrentIterators() {
	// 	Iterator<String> i1 = list.iterator();
	// 	assertTrue(i1.hasNext());
	// 	assertEquals(\"First\", i1.next());
	// 	assertEquals(\"Second\", i1.next());
	// 	Iterator<String> i2 = list.iterator();
	// 	assertTrue(i2.hasNext());
	// 	assertEquals(\"First\", i2.next());
	// 	assertEquals(\"Third\", i1.next());
	// 	assertEquals(\"Second\", i2.next());
	// 	assertEquals(\"Fourth\", i1.next());
	// 	assertEquals(\"Third\", i2.next());
	// 	assertEquals(\"Fourth\", i2.next());
	// 	assertEquals(\"Fifth\", i2.next());
	// 	assertEquals(\"Fifth\", i1.next());
	// 	assertFalse(i1.hasNext());
	// 	assertFalse(i2.hasNext());
	// }

	// @Test
	// public void testRemoveOnIterator() {
	// 	Iterator<String> i = list.iterator();
	// 	assertEquals(\"First\", i.next());
	// 	i.remove();
	// 	assertEquals(4, list.size());
	// 	assertEquals(\"Second\", list.get(0));
	// 	assertEquals(\"Second\", i.next());
	// 	assertEquals(\"Third\", i.next());
	// 	i.remove();
	// 	assertEquals(3, list.size());
	// 	assertEquals(\"Second\", list.get(0));
	// 	assertEquals(\"Fourth\", list.get(1));
	// 	assertEquals(\"Fourth\", i.next());
	// 	assertEquals(\"Fifth\", i.next());
	// 	i.remove();
	// 	assertEquals(2, list.size());
	// 	assertEquals(\"Second\", list.get(0));
	// 	assertEquals(\"Fourth\", list.get(1));
	// }

	// @Test
	// public void testRemoveOnIteratorWithoutNext() {
	// 	Iterator<String> i = list.iterator();
	// 	assertThrows(IllegalStateException.class, () -> {
	// 		i.remove();
	// 	});
	// }

	// @Test
	// public void testRemoveOnIteratorTwice() {
	// 	Iterator<String> i = list.iterator();
	// 	i.next();
	// 	i.remove();
	// 	assertThrows(IllegalStateException.class, () -> {
	// 		i.remove();
	// 	});
	// }

	// @Test
	// public void testOtherTypesOfData() {
	// 	ALDAList<Integer> l = createIntegerList();
	// 	l.add(5);
	// 	l.add(Integer.valueOf(10));
	// 	assertEquals(Integer.valueOf(5), l.get(0));
	// 	assertEquals(Integer.valueOf(10), l.get(1));
	// }

}" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 11 (face font-lock-constant-face fontified nil) 11 12 (fontified nil) 12 16 (face font-lock-constant-face fontified nil) 16 17 (fontified nil) 17 24 (face font-lock-type-face fontified nil) 24 25 (face font-lock-type-face c-type c-decl-id-start fontified nil) 25 27 (fontified nil) 27 33 (face font-lock-keyword-face fontified nil) 33 34 (fontified nil) 34 38 (face font-lock-constant-face fontified nil) 38 39 (fontified nil) 39 43 (face font-lock-constant-face fontified nil) 43 44 (fontified nil) 44 65 (face font-lock-type-face fontified nil) 65 66 (face font-lock-type-face c-type c-decl-id-start fontified nil) 66 69 (fontified nil) 69 75 (face font-lock-keyword-face fontified nil) 75 76 (fontified nil) 76 82 (face font-lock-keyword-face fontified nil) 82 83 (fontified nil) 83 86 (face font-lock-constant-face fontified nil) 86 87 (fontified nil) 87 92 (face font-lock-constant-face fontified nil) 92 93 (fontified nil) 93 100 (face font-lock-constant-face fontified nil) 100 101 (fontified nil) 101 104 (face font-lock-constant-face fontified nil) 104 105 (fontified nil) 105 115 (face font-lock-constant-face fontified nil) 115 116 (fontified nil) 116 117 (c-type c-decl-id-start fontified nil) 117 120 (fontified nil) 120 126 (face font-lock-keyword-face fontified nil) 126 127 (fontified nil) 127 130 (face font-lock-constant-face fontified nil) 130 131 (fontified nil) 131 136 (face font-lock-constant-face fontified nil) 136 137 (fontified nil) 137 144 (face font-lock-constant-face fontified nil) 144 145 (fontified nil) 145 148 (face font-lock-constant-face fontified nil) 148 149 (fontified nil) 149 150 (c-type c-decl-id-start fontified nil) 150 153 (fontified nil) 153 154 (c-is-sws t c-in-sws t face font-lock-doc-face fontified nil) 154 156 (c-in-sws t face font-lock-doc-face fontified nil) 156 740 (c-in-sws t face font-lock-doc-face fontified nil) 740 741 (c-in-sws t face font-lock-doc-face fontified nil) 741 847 (c-in-sws t face font-lock-doc-face fontified nil) 847 848 (c-in-sws t face font-lock-doc-face fontified nil) 848 979 (c-in-sws t face font-lock-doc-face fontified nil) 979 980 (c-in-sws t face font-lock-doc-face fontified nil) 980 1117 (c-in-sws t face font-lock-doc-face fontified nil) 1117 1118 (c-in-sws t face font-lock-doc-face fontified nil) 1118 1239 (c-in-sws t face font-lock-doc-face fontified nil) 1239 1246 (c-in-sws t face (font-lock-doc-markup-face font-lock-doc-face) fontified nil) 1246 1254 (c-in-sws t face font-lock-doc-face fontified nil) 1254 1257 (c-in-sws t face font-lock-doc-face fontified nil) 1257 1258 (c-is-sws t fontified nil) 1258 1259 (c-is-sws t face font-lock-keyword-face fontified nil) 1259 1264 (face font-lock-keyword-face fontified nil) 1264 1265 (fontified nil) 1265 1269 (face font-lock-keyword-face fontified nil) 1269 1270 (c-type c-decl-type-start face font-lock-keyword-face fontified nil) 1270 1271 (fontified nil) 1271 1283 (face font-lock-type-face fontified nil) 1283 1284 (fontified nil) 1284 1285 (face (rainbow-delimiters-depth-1-face) fontified nil) 1285 1287 (fontified nil) 1287 1288 (c-is-sws t c-in-sws t fontified nil) 1288 1289 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1289 1291 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1291 1364 (c-in-sws t face font-lock-comment-face fontified nil) 1364 1365 (c-in-sws t fontified nil) 1365 1368 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1368 1383 (c-in-sws t face font-lock-comment-face fontified nil) 1383 1384 (c-in-sws t c-is-sws t fontified nil) 1384 1385 (c-is-sws t face font-lock-keyword-face fontified nil) 1385 1391 (face font-lock-keyword-face fontified nil) 1391 1392 (fontified nil) 1392 1398 (face font-lock-keyword-face fontified nil) 1398 1399 (fontified nil) 1399 1407 (face font-lock-type-face fontified nil) 1407 1408 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1408 1414 (face font-lock-type-face fontified nil) 1414 1415 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1415 1416 (fontified nil) 1416 1429 (face font-lock-function-name-face fontified nil) 1429 1430 (face (rainbow-delimiters-depth-2-face) fontified nil) 1430 1431 (face (rainbow-delimiters-depth-2-face) fontified nil) 1431 1432 (fontified nil) 1432 1433 (face (rainbow-delimiters-depth-2-face) fontified nil) 1433 1436 (fontified nil) 1436 1442 (face font-lock-keyword-face fontified nil) 1442 1443 (fontified nil) 1443 1446 (face font-lock-keyword-face fontified nil) 1446 1447 (fontified nil) 1447 1457 (face font-lock-type-face fontified nil) 1457 1458 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1458 1464 (face font-lock-type-face fontified nil) 1464 1465 (face (rainbow-delimiters-depth-3-face) category c->-as-paren-syntax fontified nil) 1465 1466 (face (rainbow-delimiters-depth-3-face) fontified nil) 1466 1467 (face (rainbow-delimiters-depth-3-face) fontified nil) 1467 1470 (fontified nil) 1470 1471 (face (rainbow-delimiters-depth-2-face) fontified nil) 1471 1474 (fontified nil) 1474 1481 (face font-lock-keyword-face fontified nil) 1481 1482 (fontified nil) 1482 1488 (face font-lock-keyword-face fontified nil) 1488 1489 (fontified nil) 1489 1497 (face font-lock-type-face fontified nil) 1497 1498 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1498 1500 (face font-lock-type-face fontified nil) 1500 1505 (face font-lock-type-face fontified nil) 1505 1506 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1506 1507 (fontified nil) 1507 1524 (face font-lock-function-name-face fontified nil) 1524 1525 (face (rainbow-delimiters-depth-2-face) fontified nil) 1525 1526 (face (rainbow-delimiters-depth-2-face) fontified nil) 1526 1527 (fontified nil) 1527 1528 (face (rainbow-delimiters-depth-2-face) fontified nil) 1528 1531 (fontified nil) 1531 1537 (face font-lock-keyword-face fontified nil) 1537 1538 (fontified nil) 1538 1541 (face font-lock-keyword-face fontified nil) 1541 1542 (fontified nil) 1542 1552 (face font-lock-type-face fontified nil) 1552 1553 (face (rainbow-delimiters-depth-3-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1553 1560 (face font-lock-type-face fontified nil) 1560 1561 (face (rainbow-delimiters-depth-3-face) category c->-as-paren-syntax fontified nil) 1561 1562 (face (rainbow-delimiters-depth-3-face) fontified nil) 1562 1563 (face (rainbow-delimiters-depth-3-face) fontified nil) 1563 1566 (fontified nil) 1566 1567 (face (rainbow-delimiters-depth-2-face) fontified nil) 1567 1570 (fontified nil) 1570 1577 (face font-lock-keyword-face fontified nil) 1577 1578 (fontified nil) 1578 1586 (face font-lock-type-face fontified nil) 1586 1587 (face (rainbow-delimiters-depth-2-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1587 1593 (face font-lock-type-face fontified nil) 1593 1594 (face (rainbow-delimiters-depth-2-face) c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1594 1595 (fontified nil) 1595 1599 (face font-lock-variable-name-face fontified nil) 1599 1615 (fontified nil) 1615 1616 (face (rainbow-delimiters-depth-2-face) fontified nil) 1616 1617 (face (rainbow-delimiters-depth-2-face) fontified nil) 1617 1620 (fontified nil) 1620 1621 (c-is-sws t c-in-sws t fontified nil) 1621 1622 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1622 1624 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1624 1648 (c-in-sws t face font-lock-comment-face fontified nil) 1648 1649 (c-in-sws t c-is-sws t fontified nil) 1649 1650 (c-is-sws t face font-lock-keyword-face fontified nil) 1650 1656 (face font-lock-keyword-face fontified nil) 1656 1657 (fontified nil) 1657 1660 (face font-lock-type-face fontified nil) 1660 1661 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1661 1662 (fontified nil) 1662 1671 (face font-lock-function-name-face fontified nil) 1671 1672 (face (rainbow-delimiters-depth-2-face) c-type c-decl-arg-start fontified nil) 1672 1676 (face font-lock-constant-face fontified nil) 1676 1677 (fontified nil) 1677 1681 (face font-lock-constant-face fontified nil) 1681 1682 (fontified nil) 1682 1689 (face font-lock-constant-face fontified nil) 1689 1690 (fontified nil) 1690 1695 (face font-lock-type-face fontified nil) 1695 1696 (fontified nil) 1696 1697 (face font-lock-variable-name-face fontified nil) 1697 1698 (face (rainbow-delimiters-depth-2-face) fontified nil) 1698 1699 (fontified nil) 1699 1700 (face (rainbow-delimiters-depth-2-face) fontified nil) 1700 1713 (fontified nil) 1713 1714 (face (rainbow-delimiters-depth-3-face) fontified nil) 1714 1718 (face font-lock-constant-face fontified nil) 1718 1719 (fontified nil) 1719 1723 (face font-lock-constant-face fontified nil) 1723 1724 (fontified nil) 1724 1731 (face font-lock-constant-face fontified nil) 1731 1750 (fontified nil) 1750 1751 (face (rainbow-delimiters-depth-4-face) fontified nil) 1751 1765 (fontified nil) 1765 1766 (face (rainbow-delimiters-depth-5-face) fontified nil) 1766 1767 (face (rainbow-delimiters-depth-5-face) fontified nil) 1767 1768 (face (rainbow-delimiters-depth-4-face) fontified nil) 1768 1774 (fontified nil) 1774 1820 (face font-lock-string-face fontified nil) 1820 1821 (face (rainbow-delimiters-depth-3-face) fontified nil) 1821 1836 (fontified nil) 1836 1837 (face (rainbow-delimiters-depth-3-face) fontified nil) 1837 1846 (fontified nil) 1846 1847 (face (rainbow-delimiters-depth-4-face) fontified nil) 1847 1848 (face (rainbow-delimiters-depth-4-face) fontified nil) 1848 1856 (fontified nil) 1856 1857 (face (rainbow-delimiters-depth-4-face) fontified nil) 1857 1858 (face (rainbow-delimiters-depth-4-face) fontified nil) 1858 1860 (fontified nil) 1860 1917 (face font-lock-string-face fontified nil) 1917 1918 (face (rainbow-delimiters-depth-3-face) fontified nil) 1918 1933 (fontified nil) 1933 1934 (face (rainbow-delimiters-depth-3-face) fontified nil) 1934 1938 (face font-lock-constant-face fontified nil) 1938 1939 (fontified nil) 1939 1943 (face font-lock-constant-face fontified nil) 1943 1944 (fontified nil) 1944 1951 (face font-lock-constant-face fontified nil) 1951 1969 (fontified nil) 1969 1970 (face (rainbow-delimiters-depth-4-face) fontified nil) 1970 1984 (fontified nil) 1984 1985 (face (rainbow-delimiters-depth-5-face) fontified nil) 1985 1986 (face (rainbow-delimiters-depth-5-face) fontified nil) 1986 1987 (face (rainbow-delimiters-depth-4-face) fontified nil) 1987 1993 (fontified nil) 1993 2058 (face font-lock-string-face fontified nil) 2058 2059 (face (rainbow-delimiters-depth-3-face) fontified nil) 2059 2063 (fontified nil) 2063 2066 (face font-lock-keyword-face fontified nil) 2066 2067 (fontified nil) 2067 2068 (face (rainbow-delimiters-depth-3-face) fontified nil) 2068 2073 (face font-lock-type-face fontified nil) 2073 2074 (face (rainbow-delimiters-depth-4-face) c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 2074 2075 (fontified nil) 2075 2076 (face (rainbow-delimiters-depth-4-face) c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 2076 2077 (fontified nil) 2077 2078 (face font-lock-variable-name-face fontified nil) 2078 2090 (fontified nil) 2090 2091 (face (rainbow-delimiters-depth-4-face) fontified nil) 2091 2092 (face (rainbow-delimiters-depth-4-face) fontified nil) 2092 2106 (fontified nil) 2106 2107 (face (rainbow-delimiters-depth-4-face) fontified nil) 2107 2108 (face (rainbow-delimiters-depth-4-face) fontified nil) 2108 2109 (face (rainbow-delimiters-depth-3-face) fontified nil) 2109 2110 (fontified nil) 2110 2111 (face (rainbow-delimiters-depth-3-face) fontified nil) 2111 2126 (fontified nil) 2126 2127 (face (rainbow-delimiters-depth-4-face) fontified nil) 2127 2136 (fontified nil) 2136 2137 (face (rainbow-delimiters-depth-5-face) fontified nil) 2137 2138 (face (rainbow-delimiters-depth-5-face) fontified nil) 2138 2149 (fontified nil) 2149 2150 (face (rainbow-delimiters-depth-5-face) fontified nil) 2150 2161 (face font-lock-string-face fontified nil) 2161 2162 (face (rainbow-delimiters-depth-5-face) fontified nil) 2162 2169 (fontified nil) 2169 2277 (face font-lock-string-face fontified nil) 2277 2278 (face (rainbow-delimiters-depth-4-face) fontified nil) 2278 2282 (fontified nil) 2282 2283 (face (rainbow-delimiters-depth-3-face) fontified nil) 2283 2285 (fontified nil) 2285 2286 (face (rainbow-delimiters-depth-2-face) fontified nil) 2286 2288 (fontified nil) 2288 2289 (c-is-sws t c-in-sws t fontified nil) 2289 2290 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified nil) 2290 2292 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2292 2365 (face font-lock-comment-face c-in-sws t fontified nil) 2365 2366 (c-in-sws t fontified nil) 2366 2369 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2369 2435 (face font-lock-comment-face c-in-sws t fontified nil) 2435 2436 (c-in-sws t fontified nil) 2436 2439 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2439 2508 (face font-lock-comment-face c-in-sws t fontified nil) 2508 2509 (c-in-sws t fontified nil) 2509 2512 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2512 2583 (face font-lock-comment-face c-in-sws t fontified nil) 2583 2584 (c-in-sws t fontified nil) 2584 2587 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2587 2657 (face font-lock-comment-face c-in-sws t fontified nil) 2657 2658 (c-in-sws t fontified nil) 2658 2661 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2661 2733 (face font-lock-comment-face c-in-sws t fontified nil) 2733 2734 (c-in-sws t fontified nil) 2734 2737 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2737 2810 (face font-lock-comment-face c-in-sws t fontified nil) 2810 2811 (c-in-sws t fontified nil) 2811 2814 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2814 2887 (face font-lock-comment-face c-in-sws t fontified nil) 2887 2888 (c-in-sws t fontified nil) 2888 2891 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2891 2940 (face font-lock-comment-face c-in-sws t fontified nil) 2940 2942 (c-in-sws t fontified nil) 2942 2945 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2945 2951 (face font-lock-comment-face c-in-sws t fontified nil) 2951 2952 (c-in-sws t fontified nil) 2952 2955 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 2955 3003 (face font-lock-comment-face c-in-sws t fontified nil) 3003 3004 (c-in-sws t fontified nil) 3004 3005 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3005 3008 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3008 3028 (c-in-sws t face font-lock-comment-face fontified nil) 3028 3079 (c-in-sws t face font-lock-comment-face fontified nil) 3079 3080 (c-in-sws t face font-lock-comment-face fontified nil) 3080 3081 (c-in-sws t fontified nil) 3081 3082 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3082 3086 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3086 3100 (c-in-sws t face font-lock-comment-face fontified nil) 3100 3101 (c-in-sws t fontified nil) 3101 3105 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3105 3107 (c-in-sws t face font-lock-comment-face fontified nil) 3107 3108 (c-in-sws t fontified nil) 3108 3111 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3111 3113 (c-in-sws t face font-lock-comment-face fontified nil) 3113 3114 (c-in-sws t fontified nil) 3114 3115 (c-is-sws t c-in-sws t fontified nil) 3115 3116 (face c-annotation-face c-is-sws t fontified nil) 3116 3126 (face c-annotation-face fontified nil) 3126 3128 (fontified nil) 3128 3134 (face font-lock-keyword-face fontified nil) 3134 3135 (fontified nil) 3135 3138 (face font-lock-type-face fontified nil) 3138 3139 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3139 3140 (fontified nil) 3140 3145 (face font-lock-function-name-face fontified nil) 3145 3146 (face (rainbow-delimiters-depth-2-face) fontified nil) 3146 3147 (face (rainbow-delimiters-depth-2-face) fontified nil) 3147 3148 (fontified nil) 3148 3149 (face (rainbow-delimiters-depth-2-face) fontified nil) 3149 3160 (fontified nil) 3160 3161 (face (rainbow-delimiters-depth-3-face) fontified nil) 3161 3168 (face font-lock-string-face fontified nil) 3168 3169 (face (rainbow-delimiters-depth-3-face) fontified nil) 3169 3181 (fontified nil) 3181 3182 (face (rainbow-delimiters-depth-3-face) fontified nil) 3182 3190 (face font-lock-string-face fontified nil) 3190 3191 (face (rainbow-delimiters-depth-3-face) fontified nil) 3191 3203 (fontified nil) 3203 3204 (face (rainbow-delimiters-depth-3-face) fontified nil) 3204 3211 (face font-lock-string-face fontified nil) 3211 3212 (face (rainbow-delimiters-depth-3-face) fontified nil) 3212 3224 (fontified nil) 3224 3225 (face (rainbow-delimiters-depth-3-face) fontified nil) 3225 3233 (face font-lock-string-face fontified nil) 3233 3234 (face (rainbow-delimiters-depth-3-face) fontified nil) 3234 3246 (fontified nil) 3246 3247 (face (rainbow-delimiters-depth-3-face) fontified nil) 3247 3254 (face font-lock-string-face fontified nil) 3254 3255 (face (rainbow-delimiters-depth-3-face) fontified nil) 3255 3258 (fontified nil) 3258 3259 (face (rainbow-delimiters-depth-2-face) fontified nil) 3259 3261 (fontified nil) 3261 3262 (c-is-sws t c-in-sws t fontified nil) 3262 3263 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3263 3265 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3265 3271 (c-in-sws t face font-lock-comment-face fontified nil) 3271 3272 (c-in-sws t fontified nil) 3272 3275 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3275 3301 (c-in-sws t face font-lock-comment-face fontified nil) 3301 3302 (c-in-sws t fontified nil) 3302 3306 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3306 3360 (c-in-sws t face font-lock-comment-face fontified nil) 3360 3361 (c-in-sws t fontified nil) 3361 3365 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3365 3389 (c-in-sws t face font-lock-comment-face fontified nil) 3389 3390 (c-in-sws t fontified nil) 3390 3394 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3394 3424 (c-in-sws t face font-lock-comment-face fontified nil) 3424 3425 (c-in-sws t fontified nil) 3425 3429 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3429 3466 (c-in-sws t face font-lock-comment-face fontified nil) 3466 3467 (c-in-sws t fontified nil) 3467 3470 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3470 3472 (c-in-sws t face font-lock-comment-face fontified nil) 3472 3474 (c-in-sws t fontified nil) 3474 3477 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3477 3483 (c-in-sws t face font-lock-comment-face fontified nil) 3483 3484 (c-in-sws t fontified nil) 3484 3487 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3487 3522 (c-in-sws t face font-lock-comment-face fontified nil) 3522 3523 (c-in-sws t fontified nil) 3523 3527 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3527 3581 (c-in-sws t face font-lock-comment-face fontified nil) 3581 3582 (c-in-sws t fontified nil) 3582 3586 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3586 3610 (c-in-sws t face font-lock-comment-face fontified nil) 3610 3611 (c-in-sws t fontified nil) 3611 3615 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3615 3669 (c-in-sws t face font-lock-comment-face fontified nil) 3669 3670 (c-in-sws t fontified nil) 3670 3675 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3675 3688 (c-in-sws t face font-lock-comment-face fontified nil) 3688 3689 (c-in-sws t fontified nil) 3689 3693 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3693 3697 (c-in-sws t face font-lock-comment-face fontified nil) 3697 3698 (c-in-sws t fontified nil) 3698 3699 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3699 3701 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3701 3703 (c-in-sws t face font-lock-comment-face fontified nil) 3703 3704 (c-in-sws t fontified nil) 3704 3705 (c-is-sws t c-in-sws t fontified nil) 3705 3706 (face c-annotation-face c-is-sws t fontified nil) 3706 3710 (face c-annotation-face fontified nil) 3710 3712 (fontified nil) 3712 3718 (face font-lock-keyword-face fontified nil) 3718 3719 (fontified nil) 3719 3722 (face font-lock-type-face fontified nil) 3722 3723 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3723 3724 (fontified nil) 3724 3754 (face font-lock-function-name-face fontified nil) 3754 3755 (face (rainbow-delimiters-depth-2-face) fontified nil) 3755 3756 (face (rainbow-delimiters-depth-2-face) fontified nil) 3756 3757 (fontified nil) 3757 3758 (face (rainbow-delimiters-depth-2-face) fontified nil) 3758 3773 (fontified nil) 3773 3774 (face (rainbow-delimiters-depth-3-face) fontified nil) 3774 3786 (fontified nil) 3786 3787 (face (rainbow-delimiters-depth-4-face) fontified nil) 3787 3788 (face (rainbow-delimiters-depth-4-face) fontified nil) 3788 3789 (face (rainbow-delimiters-depth-3-face) fontified nil) 3789 3805 (fontified nil) 3805 3806 (face (rainbow-delimiters-depth-3-face) fontified nil) 3806 3813 (face font-lock-string-face fontified nil) 3813 3823 (fontified nil) 3823 3824 (face (rainbow-delimiters-depth-4-face) fontified nil) 3824 3825 (fontified nil) 3825 3826 (face (rainbow-delimiters-depth-4-face) fontified nil) 3826 3827 (face (rainbow-delimiters-depth-3-face) fontified nil) 3827 3843 (fontified nil) 3843 3844 (face (rainbow-delimiters-depth-3-face) fontified nil) 3844 3851 (face font-lock-string-face fontified nil) 3851 3861 (fontified nil) 3861 3862 (face (rainbow-delimiters-depth-4-face) fontified nil) 3862 3863 (fontified nil) 3863 3864 (face (rainbow-delimiters-depth-4-face) fontified nil) 3864 3865 (face (rainbow-delimiters-depth-3-face) fontified nil) 3865 3881 (fontified nil) 3881 3882 (face (rainbow-delimiters-depth-3-face) fontified nil) 3882 3889 (face font-lock-string-face fontified nil) 3889 3899 (fontified nil) 3899 3900 (face (rainbow-delimiters-depth-4-face) fontified nil) 3900 3901 (fontified nil) 3901 3902 (face (rainbow-delimiters-depth-4-face) fontified nil) 3902 3903 (face (rainbow-delimiters-depth-3-face) fontified nil) 3903 3919 (fontified nil) 3919 3920 (face (rainbow-delimiters-depth-3-face) fontified nil) 3920 3959 (face font-lock-string-face fontified nil) 3959 3974 (fontified nil) 3974 3975 (face (rainbow-delimiters-depth-4-face) fontified nil) 3975 3976 (face (rainbow-delimiters-depth-4-face) fontified nil) 3976 3977 (face (rainbow-delimiters-depth-3-face) fontified nil) 3977 3990 (fontified nil) 3990 3991 (face (rainbow-delimiters-depth-3-face) fontified nil) 3991 3999 (face font-lock-string-face fontified nil) 3999 4000 (face (rainbow-delimiters-depth-3-face) fontified nil) 4000 4016 (fontified nil) 4016 4017 (face (rainbow-delimiters-depth-3-face) fontified nil) 4017 4029 (fontified nil) 4029 4030 (face (rainbow-delimiters-depth-4-face) fontified nil) 4030 4031 (face (rainbow-delimiters-depth-4-face) fontified nil) 4031 4032 (face (rainbow-delimiters-depth-3-face) fontified nil) 4032 4048 (fontified nil) 4048 4049 (face (rainbow-delimiters-depth-3-face) fontified nil) 4049 4057 (face font-lock-string-face fontified nil) 4057 4067 (fontified nil) 4067 4068 (face (rainbow-delimiters-depth-4-face) fontified nil) 4068 4069 (fontified nil) 4069 4070 (face (rainbow-delimiters-depth-4-face) fontified nil) 4070 4071 (face (rainbow-delimiters-depth-3-face) fontified nil) 4071 4074 (fontified nil) 4074 4075 (face (rainbow-delimiters-depth-2-face) fontified nil) 4075 4077 (fontified nil) 4077 4078 (c-is-sws t c-in-sws t fontified nil) 4078 4079 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 4079 4081 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4081 4087 (face font-lock-comment-face c-in-sws t fontified nil) 4087 4088 (c-in-sws t fontified nil) 4088 4091 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4091 4126 (face font-lock-comment-face c-in-sws t fontified nil) 4126 4127 (c-in-sws t fontified nil) 4127 4131 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4131 4185 (face font-lock-comment-face c-in-sws t fontified nil) 4185 4186 (c-in-sws t fontified nil) 4186 4191 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4191 4205 (face font-lock-comment-face c-in-sws t fontified nil) 4205 4206 (c-in-sws t fontified nil) 4206 4210 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4210 4214 (face font-lock-comment-face c-in-sws t fontified nil) 4214 4215 (c-in-sws t fontified nil) 4215 4218 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4218 4220 (face font-lock-comment-face c-in-sws t fontified nil) 4220 4222 (c-in-sws t fontified nil) 4222 4225 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4225 4231 (face font-lock-comment-face c-in-sws t fontified nil) 4231 4232 (c-in-sws t fontified nil) 4232 4235 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4235 4269 (face font-lock-comment-face c-in-sws t fontified nil) 4269 4270 (c-in-sws t fontified nil) 4270 4274 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4274 4328 (face font-lock-comment-face c-in-sws t fontified nil) 4328 4329 (c-in-sws t fontified nil) 4329 4334 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4334 4347 (face font-lock-comment-face c-in-sws t fontified nil) 4347 4348 (c-in-sws t fontified nil) 4348 4352 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4352 4356 (face font-lock-comment-face c-in-sws t fontified nil) 4356 4357 (c-in-sws t fontified nil) 4357 4360 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4360 4362 (face font-lock-comment-face c-in-sws t fontified nil) 4362 4364 (c-in-sws t fontified nil) 4364 4367 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4367 4373 (face font-lock-comment-face c-in-sws t fontified nil) 4373 4374 (c-in-sws t fontified nil) 4374 4377 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4377 4406 (face font-lock-comment-face c-in-sws t fontified nil) 4406 4407 (c-in-sws t fontified nil) 4407 4411 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4411 4429 (face font-lock-comment-face c-in-sws t fontified nil) 4429 4430 (c-in-sws t fontified nil) 4430 4434 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4434 4452 (face font-lock-comment-face c-in-sws t fontified nil) 4452 4453 (c-in-sws t fontified nil) 4453 4457 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4457 4475 (face font-lock-comment-face c-in-sws t fontified nil) 4475 4476 (c-in-sws t fontified nil) 4476 4480 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4480 4510 (face font-lock-comment-face c-in-sws t fontified nil) 4510 4511 (c-in-sws t fontified nil) 4511 4515 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4515 4547 (face font-lock-comment-face c-in-sws t fontified nil) 4547 4548 (c-in-sws t fontified nil) 4548 4549 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 4549 4552 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 4552 4580 (c-in-sws t face font-lock-comment-face fontified nil) 4580 4583 (c-in-sws t face font-lock-comment-face fontified nil) 4583 4584 (c-in-sws t face font-lock-comment-face fontified nil) 4584 4585 (c-is-sws t c-in-sws t fontified nil) 4585 4586 (c-is-sws t face font-lock-comment-delimiter-face fontified nil) 4586 4589 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4589 4621 (face font-lock-comment-face c-in-sws t fontified nil) 4621 4622 (c-in-sws t fontified nil) 4622 4626 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4626 4707 (face font-lock-comment-face c-in-sws t fontified nil) 4707 4708 (c-in-sws t fontified nil) 4708 4711 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4711 4713 (face font-lock-comment-face c-in-sws t fontified nil) 4713 4715 (c-in-sws t fontified nil) 4715 4718 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4718 4724 (face font-lock-comment-face c-in-sws t fontified nil) 4724 4725 (c-in-sws t fontified nil) 4725 4728 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4728 4766 (face font-lock-comment-face c-in-sws t fontified nil) 4766 4767 (c-in-sws t fontified nil) 4767 4771 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4771 4825 (face font-lock-comment-face c-in-sws t fontified nil) 4825 4826 (c-in-sws t fontified nil) 4826 4831 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4831 4852 (face font-lock-comment-face c-in-sws t fontified nil) 4852 4853 (c-in-sws t fontified nil) 4853 4857 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4857 4861 (face font-lock-comment-face c-in-sws t fontified nil) 4861 4862 (c-in-sws t fontified nil) 4862 4865 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4865 4867 (face font-lock-comment-face c-in-sws t fontified nil) 4867 4869 (c-in-sws t fontified nil) 4869 4872 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4872 4878 (face font-lock-comment-face c-in-sws t fontified nil) 4878 4879 (c-in-sws t fontified nil) 4879 4882 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4882 4919 (face font-lock-comment-face c-in-sws t fontified nil) 4919 4920 (c-in-sws t fontified nil) 4920 4924 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4924 4978 (face font-lock-comment-face c-in-sws t fontified nil) 4978 4979 (c-in-sws t fontified nil) 4979 4984 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 4984 5004 (face font-lock-comment-face c-in-sws t fontified nil) 5004 5005 (c-in-sws t fontified nil) 5005 5009 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5009 5013 (face font-lock-comment-face c-in-sws t fontified nil) 5013 5014 (c-in-sws t fontified nil) 5014 5017 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5017 5019 (face font-lock-comment-face c-in-sws t fontified nil) 5019 5021 (c-in-sws t fontified nil) 5021 5024 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5024 5030 (face font-lock-comment-face c-in-sws t fontified nil) 5030 5031 (c-in-sws t fontified nil) 5031 5034 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5034 5060 (face font-lock-comment-face c-in-sws t fontified nil) 5060 5061 (c-in-sws t fontified nil) 5061 5065 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5065 5079 (face font-lock-comment-face c-in-sws t fontified nil) 5079 5080 (c-in-sws t fontified nil) 5080 5084 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5084 5114 (face font-lock-comment-face c-in-sws t fontified nil) 5114 5115 (c-in-sws t fontified nil) 5115 5119 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5119 5138 (face font-lock-comment-face c-in-sws t fontified nil) 5138 5139 (c-in-sws t fontified nil) 5139 5143 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5143 5166 (face font-lock-comment-face c-in-sws t fontified nil) 5166 5167 (c-in-sws t fontified nil) 5167 5171 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5171 5201 (face font-lock-comment-face c-in-sws t fontified nil) 5201 5202 (c-in-sws t fontified nil) 5202 5206 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5206 5242 (face font-lock-comment-face c-in-sws t fontified nil) 5242 5243 (c-in-sws t fontified nil) 5243 5247 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5247 5284 (face font-lock-comment-face c-in-sws t fontified nil) 5284 5285 (c-in-sws t fontified nil) 5285 5288 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5288 5290 (face font-lock-comment-face c-in-sws t fontified nil) 5290 5292 (c-in-sws t fontified nil) 5292 5295 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5295 5301 (face font-lock-comment-face c-in-sws t fontified nil) 5301 5302 (c-in-sws t fontified nil) 5302 5305 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5305 5334 (face font-lock-comment-face c-in-sws t fontified nil) 5334 5335 (c-in-sws t fontified nil) 5335 5339 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5339 5375 (face font-lock-comment-face c-in-sws t fontified nil) 5375 5376 (c-in-sws t fontified nil) 5376 5380 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5380 5416 (face font-lock-comment-face c-in-sws t fontified nil) 5416 5417 (c-in-sws t fontified nil) 5417 5421 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5421 5456 (face font-lock-comment-face c-in-sws t fontified nil) 5456 5457 (c-in-sws t fontified nil) 5457 5461 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5461 5493 (face font-lock-comment-face c-in-sws t fontified nil) 5493 5494 (c-in-sws t fontified nil) 5494 5497 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5497 5499 (face font-lock-comment-face c-in-sws t fontified nil) 5499 5501 (c-in-sws t fontified nil) 5501 5504 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5504 5510 (face font-lock-comment-face c-in-sws t fontified nil) 5510 5511 (c-in-sws t fontified nil) 5511 5514 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5514 5542 (face font-lock-comment-face c-in-sws t fontified nil) 5542 5543 (c-in-sws t fontified nil) 5543 5547 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5547 5587 (face font-lock-comment-face c-in-sws t fontified nil) 5587 5588 (c-in-sws t fontified nil) 5588 5592 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5592 5632 (face font-lock-comment-face c-in-sws t fontified nil) 5632 5633 (c-in-sws t fontified nil) 5633 5637 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5637 5676 (face font-lock-comment-face c-in-sws t fontified nil) 5676 5677 (c-in-sws t fontified nil) 5677 5681 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5681 5701 (face font-lock-comment-face c-in-sws t fontified nil) 5701 5702 (c-in-sws t fontified nil) 5702 5706 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5706 5747 (face font-lock-comment-face c-in-sws t fontified nil) 5747 5748 (c-in-sws t fontified nil) 5748 5751 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5751 5753 (face font-lock-comment-face c-in-sws t fontified nil) 5753 5755 (c-in-sws t fontified nil) 5755 5758 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5758 5764 (face font-lock-comment-face c-in-sws t fontified nil) 5764 5765 (c-in-sws t fontified nil) 5765 5768 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5768 5804 (face font-lock-comment-face c-in-sws t fontified nil) 5804 5805 (c-in-sws t fontified nil) 5805 5809 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5809 5848 (face font-lock-comment-face c-in-sws t fontified nil) 5848 5849 (c-in-sws t fontified nil) 5849 5853 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5853 5883 (face font-lock-comment-face c-in-sws t fontified nil) 5883 5884 (c-in-sws t fontified nil) 5884 5888 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5888 5925 (face font-lock-comment-face c-in-sws t fontified nil) 5925 5926 (c-in-sws t fontified nil) 5926 5930 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5930 5967 (face font-lock-comment-face c-in-sws t fontified nil) 5967 5969 (c-in-sws t fontified nil) 5969 5973 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 5973 6012 (face font-lock-comment-face c-in-sws t fontified nil) 6012 6013 (c-in-sws t fontified nil) 6013 6017 (face font-lock-comment-delimiter-face c-in-sws t fontified nil) 6017 6047 (face font-lock-comment-face c-in-sws t fontified nil) 6047 6048 (c-in-sws t fontified nil) 6048 6049 (face font-lock-comment-delimiter-face fontified nil) 6049 6052 (face font-lock-comment-delimiter-face fontified nil) 6052 6084 (face font-lock-comment-face fontified nil) 6084 6089 (face font-lock-comment-face fontified nil) 6089 10087 (fontified nil) 10087 10088 (fontified nil) 10088 12959 (fontified nil c-in-sws t) 12959 12960 (fontified nil c-in-sws t) 12960 12961 (fontified nil) 12961 13022 (fontified nil) 13022 13023 (fontified nil) 13023 13088 (fontified nil c-in-sws t) 13088 13089 (fontified nil c-in-sws t) 13089 14655 (fontified nil c-in-sws t) 14655 14656 (fontified nil c-in-sws t) 14656 14657 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14657 14660 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14660 14694 (face font-lock-comment-face fontified nil c-in-sws t) 14694 14695 (fontified nil c-in-sws t) 14695 14699 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14699 14726 (face font-lock-comment-face fontified nil c-in-sws t) 14726 14727 (fontified nil c-in-sws t) 14727 14731 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14731 14758 (face font-lock-comment-face fontified nil c-in-sws t) 14758 14759 (fontified nil c-in-sws t) 14759 14762 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14762 14764 (face font-lock-comment-face fontified nil c-in-sws t) 14764 14766 (fontified nil c-in-sws t) 14766 14769 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14769 14775 (face font-lock-comment-face fontified nil c-in-sws t) 14775 14776 (fontified nil c-in-sws t) 14776 14779 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14779 14816 (face font-lock-comment-face fontified nil c-in-sws t) 14816 14817 (fontified nil c-in-sws t) 14817 14821 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14821 14859 (face font-lock-comment-face fontified nil c-in-sws t) 14859 14860 (fontified nil c-in-sws t) 14860 14864 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14864 14897 (face font-lock-comment-face fontified nil c-in-sws t) 14897 14898 (fontified nil c-in-sws t) 14898 14902 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14902 14914 (face font-lock-comment-face fontified nil c-in-sws t) 14914 14915 (fontified nil c-in-sws t) 14915 14919 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14919 14949 (face font-lock-comment-face fontified nil c-in-sws t) 14949 14950 (fontified nil c-in-sws t) 14950 14954 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14954 14991 (face font-lock-comment-face fontified nil c-in-sws t) 14991 14992 (fontified nil c-in-sws t) 14992 14996 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 14996 15030 (face font-lock-comment-face fontified nil c-in-sws t) 15030 15031 (fontified nil c-in-sws t) 15031 15035 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15035 15068 (face font-lock-comment-face fontified nil c-in-sws t) 15068 15069 (fontified nil c-in-sws t) 15069 15073 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15073 15085 (face font-lock-comment-face fontified nil c-in-sws t) 15085 15086 (fontified nil c-in-sws t) 15086 15090 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15090 15120 (face font-lock-comment-face fontified nil c-in-sws t) 15120 15121 (fontified nil c-in-sws t) 15121 15125 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15125 15162 (face font-lock-comment-face fontified nil c-in-sws t) 15162 15163 (fontified nil c-in-sws t) 15163 15167 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15167 15204 (face font-lock-comment-face fontified nil c-in-sws t) 15204 15205 (fontified nil c-in-sws t) 15205 15209 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15209 15243 (face font-lock-comment-face fontified nil c-in-sws t) 15243 15244 (fontified nil c-in-sws t) 15244 15248 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15248 15281 (face font-lock-comment-face fontified nil c-in-sws t) 15281 15282 (fontified nil c-in-sws t) 15282 15286 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15286 15298 (face font-lock-comment-face fontified nil c-in-sws t) 15298 15299 (fontified nil c-in-sws t) 15299 15303 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15303 15333 (face font-lock-comment-face fontified nil c-in-sws t) 15333 15334 (fontified nil c-in-sws t) 15334 15338 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15338 15375 (face font-lock-comment-face fontified nil c-in-sws t) 15375 15376 (fontified nil c-in-sws t) 15376 15380 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15380 15417 (face font-lock-comment-face fontified nil c-in-sws t) 15417 15418 (fontified nil c-in-sws t) 15418 15421 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15421 15423 (face font-lock-comment-face fontified nil c-in-sws t) 15423 15425 (fontified nil c-in-sws t) 15425 15428 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15428 15434 (face font-lock-comment-face fontified nil c-in-sws t) 15434 15435 (fontified nil c-in-sws t) 15435 15438 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15438 15486 (face font-lock-comment-face fontified nil c-in-sws t) 15486 15487 (fontified nil c-in-sws t) 15487 15491 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15491 15529 (face font-lock-comment-face fontified nil c-in-sws t) 15529 15530 (fontified nil c-in-sws t) 15530 15534 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15534 15584 (face font-lock-comment-face fontified nil c-in-sws t) 15584 15585 (fontified nil c-in-sws t) 15585 15590 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15590 15602 (face font-lock-comment-face fontified nil c-in-sws t) 15602 15603 (fontified nil c-in-sws t) 15603 15607 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15607 15611 (face font-lock-comment-face fontified nil c-in-sws t) 15611 15612 (fontified nil c-in-sws t) 15612 15615 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15615 15617 (face font-lock-comment-face fontified nil c-in-sws t) 15617 15619 (fontified nil c-in-sws t) 15619 15622 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15622 15628 (face font-lock-comment-face fontified nil c-in-sws t) 15628 15629 (fontified nil c-in-sws t) 15629 15632 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15632 15674 (face font-lock-comment-face fontified nil c-in-sws t) 15674 15675 (fontified nil c-in-sws t) 15675 15679 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15679 15717 (face font-lock-comment-face fontified nil c-in-sws t) 15717 15718 (fontified nil c-in-sws t) 15718 15722 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15722 15732 (face font-lock-comment-face fontified nil c-in-sws t) 15732 15733 (fontified nil c-in-sws t) 15733 15737 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15737 15749 (face font-lock-comment-face fontified nil c-in-sws t) 15749 15750 (fontified nil c-in-sws t) 15750 15754 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15754 15804 (face font-lock-comment-face fontified nil c-in-sws t) 15804 15805 (fontified nil c-in-sws t) 15805 15810 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15810 15822 (face font-lock-comment-face fontified nil c-in-sws t) 15822 15823 (fontified nil c-in-sws t) 15823 15827 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15827 15831 (face font-lock-comment-face fontified nil c-in-sws t) 15831 15832 (fontified nil c-in-sws t) 15832 15835 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15835 15837 (face font-lock-comment-face fontified nil c-in-sws t) 15837 15839 (fontified nil c-in-sws t) 15839 15842 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15842 15848 (face font-lock-comment-face fontified nil c-in-sws t) 15848 15849 (fontified nil c-in-sws t) 15849 15852 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15852 15889 (face font-lock-comment-face fontified nil c-in-sws t) 15889 15890 (fontified nil c-in-sws t) 15890 15894 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15894 15937 (face font-lock-comment-face fontified nil c-in-sws t) 15937 15938 (fontified nil c-in-sws t) 15938 15942 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15942 15952 (face font-lock-comment-face fontified nil c-in-sws t) 15952 15953 (fontified nil c-in-sws t) 15953 15957 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15957 15985 (face font-lock-comment-face fontified nil c-in-sws t) 15985 15986 (fontified nil c-in-sws t) 15986 15990 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 15990 16034 (face font-lock-comment-face fontified nil c-in-sws t) 16034 16035 (fontified nil c-in-sws t) 16035 16039 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 16039 16084 (face font-lock-comment-face fontified nil c-in-sws t) 16084 16085 (fontified nil c-in-sws t) 16085 16088 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 16088 16090 (face font-lock-comment-face fontified nil c-in-sws t) 16090 16091 (fontified nil c-in-sws t) 16091 16092 (face (rainbow-delimiters-depth-1-face) fontified nil c-is-sws t rear-nonsticky nil)) . 1) (undo-tree-id3077 . -16091) (undo-tree-id3078 . -16091) (undo-tree-id3079 . -16091) (undo-tree-id3080 . -14655) (nil rear-nonsticky t 16092 . 16093)) nil (26029 34313 45922 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 5305 . 5306) (nil fontified nil 4892 . 5306) (nil fontified nil 4891 . 4892) (nil category c->-as-paren-syntax 4891 . 4892) (nil fontified nil 4890 . 4891) (nil fontified nil 4889 . 4890) (nil category c-<-as-paren-syntax 4889 . 4890) (nil fontified nil 4865 . 4889) (nil fontified nil 4864 . 4865) (nil category c->-as-paren-syntax 4864 . 4865) (nil fontified nil 4863 . 4864) (nil fontified nil 4862 . 4863) (nil category c-<-as-paren-syntax 4862 . 4863) (nil fontified nil 4736 . 4862) (nil fontified nil 4735 . 4736) (nil category c->-as-paren-syntax 4735 . 4736) (nil fontified nil 4734 . 4735) (nil fontified nil 4733 . 4734) (nil category c-<-as-paren-syntax 4733 . 4734) (nil fontified nil 4564 . 4733) (nil fontified nil 4563 . 4564) (nil category c->-as-paren-syntax 4563 . 4564) (nil fontified nil 4562 . 4563) (nil fontified nil 4561 . 4562) (nil category c-<-as-paren-syntax 4561 . 4562) (nil fontified nil 4528 . 4561) (nil fontified nil 4527 . 4528) (nil category c->-as-paren-syntax 4527 . 4528) (nil fontified nil 4526 . 4527) (nil fontified nil 4525 . 4526) (nil category c-<-as-paren-syntax 4525 . 4526) (nil fontified nil 4477 . 4525) (nil fontified nil 4476 . 4477) (nil category c->-as-paren-syntax 4476 . 4477) (nil fontified nil 4475 . 4476) (nil fontified nil 4474 . 4475) (nil category c-<-as-paren-syntax 4474 . 4475) (nil fontified nil 4383 . 4474) (nil fontified nil 4382 . 4383) (nil category c->-as-paren-syntax 4382 . 4383) (nil fontified nil 4381 . 4382) (nil fontified nil 4380 . 4381) (nil category c-<-as-paren-syntax 4380 . 4381) (nil fontified nil 1324 . 4380) (nil fontified nil 1323 . 1324) (nil category c->-as-paren-syntax 1323 . 1324) (nil fontified nil 1322 . 1323) (nil category c-<-as-paren-syntax 1322 . 1323) (nil fontified nil 1303 . 1322) (nil fontified nil 1302 . 1303) (nil category c->-as-paren-syntax 1302 . 1303) (nil fontified nil 1301 . 1302) (nil fontified nil 1300 . 1301) (nil category c-<-as-paren-syntax 1300 . 1301) (nil fontified nil 390 . 1300) (nil fontified nil 389 . 390) (nil category c->-as-paren-syntax 389 . 390) (nil fontified nil 388 . 389) (nil category c-<-as-paren-syntax 388 . 389) (nil fontified nil 369 . 388) (nil fontified nil 368 . 369) (nil category c->-as-paren-syntax 368 . 369) (nil fontified nil 367 . 368) (nil fontified nil 366 . 367) (nil category c-<-as-paren-syntax 366 . 367) (nil fontified nil 173 . 366) (nil fontified nil 172 . 173) (nil category c->-as-paren-syntax 172 . 173) (nil fontified nil 171 . 172) (nil fontified nil 170 . 171) (nil category c-<-as-paren-syntax 170 . 171) (nil fontified nil 147 . 170) (nil fontified nil 146 . 147) (nil category c->-as-paren-syntax 146 . 147) (nil fontified nil 145 . 146) (nil fontified nil 144 . 145) (nil category c-<-as-paren-syntax 144 . 145) (nil fontified nil 102 . 144) (nil fontified nil 101 . 102) (nil category c->-as-paren-syntax 101 . 102) (nil fontified nil 100 . 101) (nil fontified nil 99 . 100) (nil category c-<-as-paren-syntax 99 . 100) (nil fontified nil 79 . 99) (nil fontified nil 78 . 79) (nil category c->-as-paren-syntax 78 . 79) (nil fontified nil 77 . 78) (nil fontified nil 76 . 77) (nil category c-<-as-paren-syntax 76 . 77) (nil fontified nil 54 . 76) (nil fontified nil 53 . 54) (nil fontified nil 2 . 53) (nil fontified nil 1 . 2) (1 . 5306)) nil (26029 34313 45919 0) 0 nil])
([nil nil ((5106 . 5107) (5105 . 5106) (5046 . 5062) (#("                 " 0 17 (fontified nil)) . 5046) (5105 . 5106) (5073 . 5105) (#("java.util.n" 0 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil)) . 5073) (undo-tree-id3045 . -5) (undo-tree-id3046 . -5) (undo-tree-id3047 . -10) (undo-tree-id3048 . -10) (5083 . 5084) (#("NoSuchElementException()" 0 24 (fontified nil)) . -5083) (undo-tree-id3049 . -24) (5083 . 5107) (#("no" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t)) . -5083) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) 5085 (5078 . 5085) (#("l" 0 1 (face font-lock-type-face fontified t)) . -5078) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -5079) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -5080) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -5081) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (#("." 0 1 (fontified t)) . -5082) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) 5083 (#("N" 0 1 (face font-lock-type-face fontified t)) . -5083) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -5084) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) 5085 (5083 . 5085) (#("IndexOutOfBoundsException();" 0 25 (face font-lock-type-face fontified t) 25 26 (face (rainbow-delimiters-depth-4-face) fontified t) 26 27 (face (rainbow-delimiters-depth-4-face) fontified t) 27 28 (fontified t)) . 5083) (undo-tree-id3076 . -27)) nil (26029 34313 45911 0) 0 nil])
([nil nil ((#("next" 0 4 (fontified t)) . -243) (undo-tree-id3040 . -4) (undo-tree-id3041 . -4) 247 (243 . 247) (#("n" 0 1 (fontified nil)) . 243) (243 . 244) (#("next : MyALDAList.Node<E>" 0 22 (fontified nil) 22 23 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 23 24 (fontified nil) 24 25 (fontified nil category c->-as-paren-syntax)) . -243) (undo-tree-id3042 . -25) (243 . 268) (#("next" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -243) (undo-tree-id3043 . -4) (undo-tree-id3044 . -4) 247 (238 . 247) (229 . 238) 228) nil (26029 34313 45897 0) 0 nil])
([nil nil ((4743 . 4751) (#("E" 0 1 (face font-lock-type-face fontified t)) . -4743) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) 4744 (4736 . 4744) (4728 . 4736) (#("        " 0 8 (fontified nil)) . 4727) (undo-tree-id3015 . -8) (undo-tree-id3016 . -8) (undo-tree-id3017 . -8) (undo-tree-id3018 . -8) (undo-tree-id3019 . -8) (undo-tree-id3020 . -8) (undo-tree-id3021 . -8) (undo-tree-id3022 . -8) (undo-tree-id3023 . -8) (undo-tree-id3024 . -8) (undo-tree-id3025 . -8) (undo-tree-id3026 . -8) (undo-tree-id3027 . -8) (undo-tree-id3028 . -8) (undo-tree-id3029 . -8) (undo-tree-id3030 . -8) (undo-tree-id3031 . -8) (undo-tree-id3032 . -8) (undo-tree-id3033 . -8) (undo-tree-id3034 . -8) (undo-tree-id3035 . -8) (undo-tree-id3036 . -8) (undo-tree-id3037 . -8) (undo-tree-id3038 . -8) (undo-tree-id3039 . -8) (4735 . 4736) (4726 . 4735) 4725) nil (26029 34313 45893 0) 0 nil])
([nil nil ((#("        public void set
" 0 8 (fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 13 (face font-lock-keyword-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 17 (face font-lock-type-face fontified t) 17 18 (face font-lock-type-face fontified t) 18 19 (face font-lock-type-face c-type c-decl-id-start fontified t) 19 20 (fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t)) . 4728) (undo-tree-id2215 . 1) (undo-tree-id2216 . -23) (undo-tree-id2217 . -22) (undo-tree-id2218 . -22) (undo-tree-id2219 . -24) (undo-tree-id2220 . -24) (undo-tree-id2221 . -24) (undo-tree-id2222 . -24) (undo-tree-id2223 . -24) (undo-tree-id2224 . -24) (undo-tree-id2225 . -24) (undo-tree-id2226 . -24) (undo-tree-id2227 . -24) (undo-tree-id2228 . -24) (undo-tree-id2229 . -24) (undo-tree-id2230 . -24) (undo-tree-id2231 . -24) (undo-tree-id2232 . -24) (undo-tree-id2233 . -24) (undo-tree-id2234 . -24) (undo-tree-id2235 . -24) (undo-tree-id2236 . -24) (undo-tree-id2237 . -24) (undo-tree-id2238 . -24) (undo-tree-id2239 . -24) (undo-tree-id2240 . -24) (undo-tree-id2241 . -24) (undo-tree-id2242 . -24) (undo-tree-id2243 . -24) (undo-tree-id2244 . -24) (undo-tree-id2245 . -24) (undo-tree-id2246 . -24) (undo-tree-id2247 . -24) (undo-tree-id2248 . -24) (undo-tree-id2249 . -24) (undo-tree-id2250 . -24) (undo-tree-id2251 . -24) (undo-tree-id2252 . -24) (undo-tree-id2253 . -24) (undo-tree-id2254 . -24) (undo-tree-id2255 . -24) (undo-tree-id2256 . -24) (undo-tree-id2257 . -8) (undo-tree-id2258 . -8) (undo-tree-id2259 . -8) (undo-tree-id2260 . -8) (undo-tree-id2261 . -8) (undo-tree-id2262 . -8) (undo-tree-id2263 . -8) (undo-tree-id2264 . -8) (undo-tree-id2265 . -8) (undo-tree-id2266 . -8) (undo-tree-id2267 . -8) (undo-tree-id2268 . -8) (undo-tree-id2269 . -8) (undo-tree-id2270 . -8) (undo-tree-id2271 . -8) (undo-tree-id2272 . -8) (undo-tree-id2273 . -8) (undo-tree-id2274 . -8) (undo-tree-id2275 . -8) (undo-tree-id2276 . -8) (undo-tree-id2277 . -8) (undo-tree-id2278 . -8) (undo-tree-id2279 . -8) (undo-tree-id2280 . -8) (undo-tree-id2281 . -8) (undo-tree-id2282 . -8) (undo-tree-id2283 . -8) (undo-tree-id2284 . -8) (undo-tree-id2285 . -8) (undo-tree-id2286 . -8) (undo-tree-id2287 . -8) (undo-tree-id2288 . -8) (undo-tree-id2289 . -8) (undo-tree-id2290 . -8) (undo-tree-id2291 . -8) (undo-tree-id2292 . -8) (undo-tree-id2293 . -8) (undo-tree-id2294 . -8) (undo-tree-id2295 . -9) (undo-tree-id2296 . -9) (undo-tree-id2297 . -9) (undo-tree-id2298 . -9) (undo-tree-id2299 . -9) (undo-tree-id2300 . -9) (undo-tree-id2301 . -9) (undo-tree-id2302 . -9) (undo-tree-id2303 . -9) (undo-tree-id2304 . -9) (undo-tree-id2305 . -9) (undo-tree-id2306 . -9) (undo-tree-id2307 . -9) (undo-tree-id2308 . -9) (undo-tree-id2309 . -9) (undo-tree-id2310 . -9) (undo-tree-id2311 . -9) (undo-tree-id2312 . -9) (undo-tree-id2313 . -9) (undo-tree-id2314 . -9) (undo-tree-id2315 . -9) (undo-tree-id2316 . -9) (undo-tree-id2317 . -10) (undo-tree-id2318 . -10) (undo-tree-id2319 . -10) (undo-tree-id2320 . -10) (undo-tree-id2321 . -10) (undo-tree-id2322 . -10) (undo-tree-id2323 . -10) (undo-tree-id2324 . -10) (undo-tree-id2325 . -10) (undo-tree-id2326 . -10) (undo-tree-id2327 . -10) (undo-tree-id2328 . -10) (undo-tree-id2329 . -10) (undo-tree-id2330 . -10) (undo-tree-id2331 . -10) (undo-tree-id2332 . -10) (undo-tree-id2333 . -10) (undo-tree-id2334 . -10) (undo-tree-id2335 . -10) (undo-tree-id2336 . -10) (undo-tree-id2337 . -10) (undo-tree-id2338 . -10) (undo-tree-id2339 . -11) (undo-tree-id2340 . -11) (undo-tree-id2341 . -11) (undo-tree-id2342 . -11) (undo-tree-id2343 . -11) (undo-tree-id2344 . -11) (undo-tree-id2345 . -11) (undo-tree-id2346 . -11) (undo-tree-id2347 . -11) (undo-tree-id2348 . -11) (undo-tree-id2349 . -11) (undo-tree-id2350 . -11) (undo-tree-id2351 . -11) (undo-tree-id2352 . -11) (undo-tree-id2353 . -11) (undo-tree-id2354 . -11) (undo-tree-id2355 . -11) (undo-tree-id2356 . -11) (undo-tree-id2357 . -11) (undo-tree-id2358 . -11) (undo-tree-id2359 . -11) (undo-tree-id2360 . -11) (undo-tree-id2361 . -12) (undo-tree-id2362 . -12) (undo-tree-id2363 . -12) (undo-tree-id2364 . -12) (undo-tree-id2365 . -12) (undo-tree-id2366 . -12) (undo-tree-id2367 . -12) (undo-tree-id2368 . -12) (undo-tree-id2369 . -12) (undo-tree-id2370 . -12) (undo-tree-id2371 . -12) (undo-tree-id2372 . -12) (undo-tree-id2373 . -12) (undo-tree-id2374 . -12) (undo-tree-id2375 . -12) (undo-tree-id2376 . -12) (undo-tree-id2377 . -12) (undo-tree-id2378 . -12) (undo-tree-id2379 . -12) (undo-tree-id2380 . -12) (undo-tree-id2381 . -12) (undo-tree-id2382 . -12) (undo-tree-id2383 . -13) (undo-tree-id2384 . -13) (undo-tree-id2385 . -13) (undo-tree-id2386 . -13) (undo-tree-id2387 . -13) (undo-tree-id2388 . -13) (undo-tree-id2389 . -13) (undo-tree-id2390 . -13) (undo-tree-id2391 . -13) (undo-tree-id2392 . -13) (undo-tree-id2393 . -13) (undo-tree-id2394 . -13) (undo-tree-id2395 . -13) (undo-tree-id2396 . -13) (undo-tree-id2397 . -13) (undo-tree-id2398 . -13) (undo-tree-id2399 . -13) (undo-tree-id2400 . -13) (undo-tree-id2401 . -13) (undo-tree-id2402 . -13) (undo-tree-id2403 . -13) (undo-tree-id2404 . -13) (undo-tree-id2405 . -13) (undo-tree-id2406 . -13) (undo-tree-id2407 . -13) (undo-tree-id2408 . -13) (undo-tree-id2409 . -13) (undo-tree-id2410 . -13) (undo-tree-id2411 . -13) (undo-tree-id2412 . -13) (undo-tree-id2413 . -13) (undo-tree-id2414 . -13) (undo-tree-id2415 . -13) (undo-tree-id2416 . -13) (undo-tree-id2417 . -13) (undo-tree-id2418 . -13) (undo-tree-id2419 . -13) (undo-tree-id2420 . -13) (undo-tree-id2421 . -13) (undo-tree-id2422 . -13) (undo-tree-id2423 . -13) (undo-tree-id2424 . -13) (undo-tree-id2425 . -13) (undo-tree-id2426 . -13) (undo-tree-id2427 . -13) (undo-tree-id2428 . -13) (undo-tree-id2429 . -13) (undo-tree-id2430 . -13) (undo-tree-id2431 . -13) (undo-tree-id2432 . -13) (undo-tree-id2433 . -13) (undo-tree-id2434 . -13) (undo-tree-id2435 . -13) (undo-tree-id2436 . -13) (undo-tree-id2437 . -13) (undo-tree-id2438 . -13) (undo-tree-id2439 . -13) (undo-tree-id2440 . -13) (undo-tree-id2441 . -13) (undo-tree-id2442 . -13) (undo-tree-id2443 . -13) (undo-tree-id2444 . -13) (undo-tree-id2445 . -13) (undo-tree-id2446 . -13) (undo-tree-id2447 . -13) (undo-tree-id2448 . -13) (undo-tree-id2449 . -13) (undo-tree-id2450 . -13) (undo-tree-id2451 . -13) (undo-tree-id2452 . -13) (undo-tree-id2453 . -13) (undo-tree-id2454 . -13) (undo-tree-id2455 . -13) (undo-tree-id2456 . -13) (undo-tree-id2457 . -13) (undo-tree-id2458 . -13) (undo-tree-id2459 . -13) (undo-tree-id2460 . -13) (undo-tree-id2461 . -13) (undo-tree-id2462 . -13) (undo-tree-id2463 . -13) (undo-tree-id2464 . -13) (undo-tree-id2465 . -13) (undo-tree-id2466 . -13) (undo-tree-id2467 . -13) (undo-tree-id2468 . -13) (undo-tree-id2469 . -13) (undo-tree-id2470 . -13) (undo-tree-id2471 . -13) (undo-tree-id2472 . -14) (undo-tree-id2473 . -14) (undo-tree-id2474 . -14) (undo-tree-id2475 . -14) (undo-tree-id2476 . -14) (undo-tree-id2477 . -14) (undo-tree-id2478 . -15) (undo-tree-id2479 . -15) (undo-tree-id2480 . -15) (undo-tree-id2481 . -15) (undo-tree-id2482 . -15) (undo-tree-id2483 . -15) (undo-tree-id2484 . -15) (undo-tree-id2485 . -15) (undo-tree-id2486 . -15) (undo-tree-id2487 . -15) (undo-tree-id2488 . -15) (undo-tree-id2489 . -15) (undo-tree-id2490 . -15) (undo-tree-id2491 . -15) (undo-tree-id2492 . -15) (undo-tree-id2493 . -15) (undo-tree-id2494 . -15) (undo-tree-id2495 . -15) (undo-tree-id2496 . -15) (undo-tree-id2497 . -15) (undo-tree-id2498 . -15) (undo-tree-id2499 . -15) (undo-tree-id2500 . -15) (undo-tree-id2501 . -15) (undo-tree-id2502 . -15) (undo-tree-id2503 . -15) (undo-tree-id2504 . -15) (undo-tree-id2505 . -15) (undo-tree-id2506 . -15) (undo-tree-id2507 . -15) (undo-tree-id2508 . -15) (undo-tree-id2509 . -8) (undo-tree-id2510 . -24) (undo-tree-id2511 . -15) (undo-tree-id2512 . -15) (undo-tree-id2513 . -15) (undo-tree-id2514 . -15) (undo-tree-id2515 . -15) (undo-tree-id2516 . -15) (undo-tree-id2517 . -15) (undo-tree-id2518 . -15) (undo-tree-id2519 . -15) (undo-tree-id2520 . -15) (undo-tree-id2521 . -15) (undo-tree-id2522 . -15) (undo-tree-id2523 . -15) (undo-tree-id2524 . -15) (undo-tree-id2525 . -15) (undo-tree-id2526 . -15) (undo-tree-id2527 . -15) (undo-tree-id2528 . -15) (undo-tree-id2529 . -15) (undo-tree-id2530 . -15) (undo-tree-id2531 . -15) (undo-tree-id2532 . -15) (undo-tree-id2533 . -15) (undo-tree-id2534 . -15) (undo-tree-id2535 . -15) (undo-tree-id2536 . -15) (undo-tree-id2537 . -15) (undo-tree-id2538 . -15) (undo-tree-id2539 . -15) (undo-tree-id2540 . -15) (undo-tree-id2541 . -15) (undo-tree-id2542 . -15) (undo-tree-id2543 . -15) (undo-tree-id2544 . -15) (undo-tree-id2545 . -15) (undo-tree-id2546 . -15) (undo-tree-id2547 . -15) (undo-tree-id2548 . -15) (undo-tree-id2549 . -15) (undo-tree-id2550 . -15) (undo-tree-id2551 . -15) (undo-tree-id2552 . -15) (undo-tree-id2553 . -15) (undo-tree-id2554 . -15) (undo-tree-id2555 . -15) (undo-tree-id2556 . -15) (undo-tree-id2557 . -15) (undo-tree-id2558 . -15) (undo-tree-id2559 . -15) (undo-tree-id2560 . -15) (undo-tree-id2561 . -15) (undo-tree-id2562 . -15) (undo-tree-id2563 . -15) (undo-tree-id2564 . -15) (undo-tree-id2565 . -15) (undo-tree-id2566 . -15) (undo-tree-id2567 . -15) (undo-tree-id2568 . -15) (undo-tree-id2569 . -15) (undo-tree-id2570 . -15) (undo-tree-id2571 . -15) (undo-tree-id2572 . -15) (undo-tree-id2573 . -15) (undo-tree-id2574 . -15) (undo-tree-id2575 . -15) (undo-tree-id2576 . -15) (undo-tree-id2577 . -15) (undo-tree-id2578 . -15) (undo-tree-id2579 . -15) (undo-tree-id2580 . -15) (undo-tree-id2581 . -15) (undo-tree-id2582 . -15) (undo-tree-id2583 . -15) (undo-tree-id2584 . -15) (undo-tree-id2585 . -15) (undo-tree-id2586 . -15) (undo-tree-id2587 . -15) (undo-tree-id2588 . -15) (undo-tree-id2589 . -15) (undo-tree-id2590 . -15) (undo-tree-id2591 . -15) (undo-tree-id2592 . -15) (undo-tree-id2593 . -15) (undo-tree-id2594 . -15) (undo-tree-id2595 . -15) (undo-tree-id2596 . -15) (undo-tree-id2597 . -15) (undo-tree-id2598 . -15) (undo-tree-id2599 . -15) (undo-tree-id2600 . -15) (undo-tree-id2601 . -15) (undo-tree-id2602 . -15) (undo-tree-id2603 . -15) (undo-tree-id2604 . -15) (undo-tree-id2605 . -15) (undo-tree-id2606 . -15) (undo-tree-id2607 . -15) (undo-tree-id2608 . -15) (undo-tree-id2609 . -15) (undo-tree-id2610 . -15) (undo-tree-id2611 . -15) (undo-tree-id2612 . -15) (undo-tree-id2613 . -15) (undo-tree-id2614 . -15) (undo-tree-id2615 . -15) (undo-tree-id2616 . -15) (undo-tree-id2617 . -15) (undo-tree-id2618 . -15) (undo-tree-id2619 . -15) (undo-tree-id2620 . -15) (undo-tree-id2621 . -15) (undo-tree-id2622 . -15) (undo-tree-id2623 . -15) (undo-tree-id2624 . -15) (undo-tree-id2625 . -15) (undo-tree-id2626 . -15) (undo-tree-id2627 . -15) (undo-tree-id2628 . -15) (undo-tree-id2629 . -15) (undo-tree-id2630 . -15) (undo-tree-id2631 . -15) (undo-tree-id2632 . -15) (undo-tree-id2633 . -15) (undo-tree-id2634 . -15) (undo-tree-id2635 . -15) (undo-tree-id2636 . -15) (undo-tree-id2637 . -15) (undo-tree-id2638 . -15) (undo-tree-id2639 . -15) (undo-tree-id2640 . -15) (undo-tree-id2641 . -15) (undo-tree-id2642 . -15) (undo-tree-id2643 . -15) (undo-tree-id2644 . -15) (undo-tree-id2645 . -15) (undo-tree-id2646 . -15) (undo-tree-id2647 . -15) (undo-tree-id2648 . -15) (undo-tree-id2649 . -15) (undo-tree-id2650 . -15) (undo-tree-id2651 . -15) (undo-tree-id2652 . -15) (undo-tree-id2653 . -15) (undo-tree-id2654 . -15) (undo-tree-id2655 . -15) (undo-tree-id2656 . -15) (undo-tree-id2657 . -15) (undo-tree-id2658 . -15) (undo-tree-id2659 . -15) (undo-tree-id2660 . -15) (undo-tree-id2661 . -15) (undo-tree-id2662 . -15) (undo-tree-id2663 . -15) (undo-tree-id2664 . -15) (undo-tree-id2665 . -15) (undo-tree-id2666 . -15) (undo-tree-id2667 . -17) (undo-tree-id2668 . -17) (undo-tree-id2669 . -17) (undo-tree-id2670 . -17) (undo-tree-id2671 . -17) (undo-tree-id2672 . -17) (undo-tree-id2673 . -17) (undo-tree-id2674 . -17) (undo-tree-id2675 . -17) (undo-tree-id2676 . -17) (undo-tree-id2677 . -17) (undo-tree-id2678 . -17) (undo-tree-id2679 . -17) (undo-tree-id2680 . -17) (undo-tree-id2681 . -17) (undo-tree-id2682 . -17) (undo-tree-id2683 . -18) (undo-tree-id2684 . -18) (undo-tree-id2685 . -18) (undo-tree-id2686 . -18) (undo-tree-id2687 . -18) (undo-tree-id2688 . -18) (undo-tree-id2689 . -18) (undo-tree-id2690 . -18) (undo-tree-id2691 . -18) (undo-tree-id2692 . -18) (undo-tree-id2693 . -18) (undo-tree-id2694 . -18) (undo-tree-id2695 . -18) (undo-tree-id2696 . -18) (undo-tree-id2697 . -18) (undo-tree-id2698 . -18) (undo-tree-id2699 . -18) (undo-tree-id2700 . -18) (undo-tree-id2701 . -18) (undo-tree-id2702 . -18) (undo-tree-id2703 . -18) (undo-tree-id2704 . -18) (undo-tree-id2705 . -18) (undo-tree-id2706 . -18) (undo-tree-id2707 . -18) (undo-tree-id2708 . -18) (undo-tree-id2709 . -18) (undo-tree-id2710 . -18) (undo-tree-id2711 . -18) (undo-tree-id2712 . -18) (undo-tree-id2713 . -18) (undo-tree-id2714 . -18) (undo-tree-id2715 . -18) (undo-tree-id2716 . -18) (undo-tree-id2717 . -18) (undo-tree-id2718 . -18) (undo-tree-id2719 . -18) (undo-tree-id2720 . -18) (undo-tree-id2721 . -18) (undo-tree-id2722 . -18) (undo-tree-id2723 . -18) (undo-tree-id2724 . -18) (undo-tree-id2725 . -18) (undo-tree-id2726 . -18) (undo-tree-id2727 . -18) (undo-tree-id2728 . -18) (undo-tree-id2729 . -18) (undo-tree-id2730 . -18) (undo-tree-id2731 . -18) (undo-tree-id2732 . -18) (undo-tree-id2733 . -18) (undo-tree-id2734 . -18) (undo-tree-id2735 . -18) (undo-tree-id2736 . -18) (undo-tree-id2737 . -18) (undo-tree-id2738 . -18) (undo-tree-id2739 . -18) (undo-tree-id2740 . -18) (undo-tree-id2741 . -18) (undo-tree-id2742 . -18) (undo-tree-id2743 . -18) (undo-tree-id2744 . -18) (undo-tree-id2745 . -18) (undo-tree-id2746 . -18) (undo-tree-id2747 . -18) (undo-tree-id2748 . -18) (undo-tree-id2749 . -18) (undo-tree-id2750 . -18) (undo-tree-id2751 . -18) (undo-tree-id2752 . -18) (undo-tree-id2753 . -18) (undo-tree-id2754 . -18) (undo-tree-id2755 . -18) (undo-tree-id2756 . -18) (undo-tree-id2757 . -18) (undo-tree-id2758 . -18) (undo-tree-id2759 . -18) (undo-tree-id2760 . -19) (undo-tree-id2761 . -19) (undo-tree-id2762 . -19) (undo-tree-id2763 . -19) (undo-tree-id2764 . -19) (undo-tree-id2765 . -19) (undo-tree-id2766 . -19) (undo-tree-id2767 . -19) (undo-tree-id2768 . -19) (undo-tree-id2769 . -19) (undo-tree-id2770 . -19) (undo-tree-id2771 . -19) (undo-tree-id2772 . -19) (undo-tree-id2773 . -19) (undo-tree-id2774 . -19) (undo-tree-id2775 . -19) (undo-tree-id2776 . -19) (undo-tree-id2777 . -19) (undo-tree-id2778 . -19) (undo-tree-id2779 . -19) (undo-tree-id2780 . -19) (undo-tree-id2781 . -19) (undo-tree-id2782 . -20) (undo-tree-id2783 . -20) (undo-tree-id2784 . -20) (undo-tree-id2785 . -20) (undo-tree-id2786 . -20) (undo-tree-id2787 . -20) (undo-tree-id2788 . -20) (undo-tree-id2789 . -20) (undo-tree-id2790 . -20) (undo-tree-id2791 . -20) (undo-tree-id2792 . -20) (undo-tree-id2793 . -20) (undo-tree-id2794 . -20) (undo-tree-id2795 . -20) (undo-tree-id2796 . -20) (undo-tree-id2797 . -20) (undo-tree-id2798 . -20) (undo-tree-id2799 . -20) (undo-tree-id2800 . -20) (undo-tree-id2801 . -20) (undo-tree-id2802 . -20) (undo-tree-id2803 . -20) (undo-tree-id2804 . -21) (undo-tree-id2805 . -21) (undo-tree-id2806 . -21) (undo-tree-id2807 . -21) (undo-tree-id2808 . -21) (undo-tree-id2809 . -21) (undo-tree-id2810 . -21) (undo-tree-id2811 . -21) (undo-tree-id2812 . -21) (undo-tree-id2813 . -21) (undo-tree-id2814 . -21) (undo-tree-id2815 . -21) (undo-tree-id2816 . -21) (undo-tree-id2817 . -21) (undo-tree-id2818 . -21) (undo-tree-id2819 . -21) (undo-tree-id2820 . 1) (undo-tree-id2821 . -21) (undo-tree-id2822 . -21) (undo-tree-id2823 . -21) (undo-tree-id2824 . -21) (undo-tree-id2825 . -21) (undo-tree-id2826 . -21) (undo-tree-id2827 . -21) (undo-tree-id2828 . -21) (undo-tree-id2829 . -21) (undo-tree-id2830 . -21) (undo-tree-id2831 . -21) (undo-tree-id2832 . -21) (undo-tree-id2833 . -23) (undo-tree-id2834 . -23) (undo-tree-id2835 . -23) (undo-tree-id2836 . -23) (undo-tree-id2837 . -23) (undo-tree-id2838 . -23) (undo-tree-id2839 . -23) (undo-tree-id2840 . -23) (undo-tree-id2841 . -23) (undo-tree-id2842 . -23) (undo-tree-id2843 . -23) (undo-tree-id2844 . -23) (undo-tree-id2845 . -23) (undo-tree-id2846 . -23) (undo-tree-id2847 . -23) (undo-tree-id2848 . -23) (undo-tree-id2849 . -23) (undo-tree-id2850 . -23) (undo-tree-id2851 . -23) (undo-tree-id2852 . -23) (undo-tree-id2853 . -23) (undo-tree-id2854 . -23) (undo-tree-id2855 . -23) (undo-tree-id2856 . -23) (undo-tree-id2857 . -23) (undo-tree-id2858 . -23) (undo-tree-id2859 . -23) (undo-tree-id2860 . -23) (undo-tree-id2861 . -23) (undo-tree-id2862 . -23) (undo-tree-id2863 . -23) (undo-tree-id2864 . -23) (undo-tree-id2865 . -23) (undo-tree-id2866 . -23) (undo-tree-id2867 . -23) (undo-tree-id2868 . -23) (undo-tree-id2869 . -23) (undo-tree-id2870 . -23) (undo-tree-id2871 . -23) (undo-tree-id2872 . -23) (undo-tree-id2873 . -23) (undo-tree-id2874 . -23) (undo-tree-id2875 . -23) (undo-tree-id2876 . -23) (undo-tree-id2877 . -23) (undo-tree-id2878 . -23) (undo-tree-id2879 . -23) (undo-tree-id2880 . -23) (undo-tree-id2881 . -23) (undo-tree-id2882 . -23) (undo-tree-id2883 . -23) (undo-tree-id2884 . -23) (undo-tree-id2885 . -23) (undo-tree-id2886 . -23) (undo-tree-id2887 . -23) (undo-tree-id2888 . -23) (undo-tree-id2889 . -23) (undo-tree-id2890 . -23) (undo-tree-id2891 . -23) (undo-tree-id2892 . -23) (undo-tree-id2893 . -23) (undo-tree-id2894 . -23) (undo-tree-id2895 . -23) (undo-tree-id2896 . -23) (undo-tree-id2897 . -23) (undo-tree-id2898 . -23) (undo-tree-id2899 . -23) (undo-tree-id2900 . -23) (undo-tree-id2901 . -22) (undo-tree-id2902 . -22) (undo-tree-id2903 . -22) (undo-tree-id2904 . -22) (undo-tree-id2905 . -22) (undo-tree-id2906 . -22) (undo-tree-id2907 . -22) (undo-tree-id2908 . -22) (undo-tree-id2909 . -22) (undo-tree-id2910 . -22) (undo-tree-id2911 . -22) (undo-tree-id2912 . -22) (undo-tree-id2913 . -22) (undo-tree-id2914 . -22) (undo-tree-id2915 . -22) (undo-tree-id2916 . -22) (undo-tree-id2917 . -22) (undo-tree-id2918 . -22) (undo-tree-id2919 . -22) (undo-tree-id2920 . -22) (undo-tree-id2921 . -22) (undo-tree-id2922 . -22) (undo-tree-id2923 . -22) (undo-tree-id2924 . -22) (undo-tree-id2925 . -22) (undo-tree-id2926 . -22) (undo-tree-id2927 . -22) (undo-tree-id2928 . -22) (undo-tree-id2929 . -22) (undo-tree-id2930 . -22) (undo-tree-id2931 . -22) (undo-tree-id2932 . -22) (undo-tree-id2933 . -22) (undo-tree-id2934 . -22) (undo-tree-id2935 . -22) (undo-tree-id2936 . -22) (undo-tree-id2937 . -22) (undo-tree-id2938 . -22) (undo-tree-id2939 . -22) (undo-tree-id2940 . -24) 4750) nil (26029 34313 45845 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4728) (undo-tree-id2212 . 1) (undo-tree-id2213 . 1) (undo-tree-id2214 . -1)) nil (26029 34313 45581 0) 0 nil])
([nil nil ((4843 . 4845) (4842 . 4843) (4841 . 4842) (#("(" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -4841) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-4-face) fontified t)) . -4842) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) 4843 (4841 . 4843) (4832 . 4841) (#(")" 0 1 (face (rainbow-delimiters-depth-3-face) fontified t)) . -4832) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) 4833 (4831 . 4833) (#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -4831) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) 4832 (4812 . 4832) (4804 . 4812) (#("        " 0 8 (fontified nil)) . 4803) (undo-tree-id2177 . -8) (undo-tree-id2178 . -8) (undo-tree-id2179 . -8) (undo-tree-id2180 . -8) (undo-tree-id2181 . -8) (undo-tree-id2182 . -8) (undo-tree-id2183 . -8) (undo-tree-id2184 . -8) (undo-tree-id2185 . -8) (undo-tree-id2186 . -8) (undo-tree-id2187 . -8) (undo-tree-id2188 . -8) (undo-tree-id2189 . -8) (undo-tree-id2190 . -8) (undo-tree-id2191 . -8) (undo-tree-id2192 . -8) (undo-tree-id2193 . -8) (undo-tree-id2194 . -8) (undo-tree-id2195 . -8) (undo-tree-id2196 . -8) (undo-tree-id2197 . -8) (undo-tree-id2198 . -8) (undo-tree-id2199 . -8) (undo-tree-id2200 . -8) (undo-tree-id2201 . -8) (undo-tree-id2202 . -8) (undo-tree-id2203 . -8) (undo-tree-id2204 . -8) (undo-tree-id2205 . -8) (undo-tree-id2206 . -8) (undo-tree-id2207 . -8) (undo-tree-id2208 . -8) (undo-tree-id2209 . -8) (undo-tree-id2210 . -8) (undo-tree-id2211 . -8) (4811 . 4812) (4802 . 4811) 4793) nil (26029 34313 45574 0) 0 nil])
([nil nil ((4844 . 4853)) nil (26029 34313 45422 0) 0 nil])
([nil nil ((4877 . 4878) (4873 . 4877) (#("e" 0 1 (fontified t)) . -4873) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) 4874 (4858 . 4874) (4846 . 4858) (#("            " 0 12 (fontified nil)) . 4845) (undo-tree-id1799 . -12) (undo-tree-id1800 . -12) (4857 . 4858) (4844 . 4857) 4811) nil (26029 34313 45420 0) 0 nil])
([nil nil ((4832 . 4837)) nil (26029 34313 45401 0) 0 nil])
([nil nil ((4838 . 4839)) nil (26029 34313 45398 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4851) (undo-tree-id3287 . -1) (t 26029 34313 73939 926000)) nil (26029 34352 129421 0) 0 nil])
([nil nil ((256 . 257) (255 . 256) (251 . 255) (250 . 251) (243 . 250) (#("setNext(Node<E> element) : void" 0 12 (fontified nil) 12 13 (fontified nil c-<>-c-types-set t category c-<-as-paren-syntax) 13 14 (fontified nil) 14 15 (fontified nil category c->-as-paren-syntax) 15 31 (fontified nil)) . -243) (undo-tree-id3101 . -31) (243 . 274) (#("setNe" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -243) (undo-tree-id3102 . -5) (undo-tree-id3103 . -4) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -2) (undo-tree-id3133 . -2) (undo-tree-id3134 . -2) (undo-tree-id3135 . -2) (undo-tree-id3136 . -2) (undo-tree-id3137 . -2) (undo-tree-id3138 . -3) (undo-tree-id3139 . -3) (undo-tree-id3140 . -3) (undo-tree-id3141 . -3) (undo-tree-id3142 . -3) (undo-tree-id3143 . -3) (undo-tree-id3144 . -3) (undo-tree-id3145 . -3) (undo-tree-id3146 . -3) (undo-tree-id3147 . -3) (undo-tree-id3148 . -3) (undo-tree-id3149 . -3) (undo-tree-id3150 . -3) (undo-tree-id3151 . -3) (undo-tree-id3152 . -3) (undo-tree-id3153 . -3) (undo-tree-id3154 . -3) (undo-tree-id3155 . -3) (undo-tree-id3156 . -3) (undo-tree-id3157 . -3) (undo-tree-id3158 . -3) (undo-tree-id3159 . -3) (undo-tree-id3160 . -3) (undo-tree-id3161 . -3) (undo-tree-id3162 . -3) (undo-tree-id3163 . -3) (undo-tree-id3164 . -3) (undo-tree-id3165 . -3) (undo-tree-id3166 . -4) (undo-tree-id3167 . -4) (undo-tree-id3168 . -4) (undo-tree-id3169 . -4) (undo-tree-id3170 . -4) (undo-tree-id3171 . -4) (undo-tree-id3172 . -4) (undo-tree-id3173 . -4) (undo-tree-id3174 . -4) (undo-tree-id3175 . -4) (undo-tree-id3176 . -4) (undo-tree-id3177 . -4) (undo-tree-id3178 . -4) (undo-tree-id3179 . -4) (undo-tree-id3180 . -4) (undo-tree-id3181 . -4) (undo-tree-id3182 . -4) (undo-tree-id3183 . -4) (undo-tree-id3184 . -4) (undo-tree-id3185 . -4) (undo-tree-id3186 . -4) (undo-tree-id3187 . -4) (undo-tree-id3188 . -4) (undo-tree-id3189 . -4) (undo-tree-id3190 . -4) (undo-tree-id3191 . -4) (undo-tree-id3192 . -4) (undo-tree-id3193 . -4) (undo-tree-id3194 . -4) (undo-tree-id3195 . -4) (undo-tree-id3196 . -4) (undo-tree-id3197 . -4) (undo-tree-id3198 . -4) (undo-tree-id3199 . -4) (undo-tree-id3200 . -4) (undo-tree-id3201 . -4) (undo-tree-id3202 . -4) (undo-tree-id3203 . -4) (undo-tree-id3204 . -4) (undo-tree-id3205 . -4) (undo-tree-id3206 . -5) (undo-tree-id3207 . -5) (undo-tree-id3208 . -5) (undo-tree-id3209 . -5) (undo-tree-id3210 . -5) (undo-tree-id3211 . -5) (undo-tree-id3212 . -5) 248 (243 . 248) (#("g" 0 1 (fontified t)) . -243) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) 244 (243 . 244)) nil (26029 34352 129415 0) 0 nil])
([nil nil ((4214 . 4216) (t 26029 34352 152122 245000)) nil (26029 34521 122403 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 4214) (undo-tree-id3337 . -2) (undo-tree-id3338 . -2) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -2) (undo-tree-id3368 . -2) (undo-tree-id3369 . -2) (undo-tree-id3370 . -2) (undo-tree-id3371 . -2) (undo-tree-id3372 . -2) (undo-tree-id3373 . -2) (undo-tree-id3374 . -2) (undo-tree-id3375 . -2) (undo-tree-id3376 . -2) (undo-tree-id3377 . -2) (undo-tree-id3378 . -2) (undo-tree-id3379 . -2) (undo-tree-id3380 . -2) (undo-tree-id3381 . -2) (undo-tree-id3382 . -2) (undo-tree-id3383 . -2) (undo-tree-id3384 . -2) (undo-tree-id3385 . -2) (undo-tree-id3386 . -2) (undo-tree-id3387 . -2) (undo-tree-id3388 . -2) (undo-tree-id3389 . -2) (undo-tree-id3390 . -2) (undo-tree-id3391 . -2) (undo-tree-id3392 . -2) (undo-tree-id3393 . -2) (undo-tree-id3394 . -2) (undo-tree-id3395 . -2) (undo-tree-id3396 . -2) (undo-tree-id3397 . -2) (undo-tree-id3398 . -2) (undo-tree-id3399 . -2) (undo-tree-id3400 . -2) (undo-tree-id3401 . -2) (undo-tree-id3402 . -2) (undo-tree-id3403 . -2) (undo-tree-id3404 . -2) (undo-tree-id3405 . -2) (undo-tree-id3406 . -2) (undo-tree-id3407 . -2) (undo-tree-id3408 . -2) (undo-tree-id3409 . -2) (undo-tree-id3410 . -2) (undo-tree-id3411 . -2) (undo-tree-id3412 . -2) (undo-tree-id3413 . -2) (undo-tree-id3414 . -2) (undo-tree-id3415 . -2) (undo-tree-id3416 . -2) (undo-tree-id3417 . -2) (undo-tree-id3418 . -2) (undo-tree-id3419 . -2) (undo-tree-id3420 . -2) (undo-tree-id3421 . -2) (undo-tree-id3422 . -2) (undo-tree-id3423 . -2) (undo-tree-id3424 . -2) (undo-tree-id3425 . -2) (undo-tree-id3426 . -2) (undo-tree-id3427 . -2) (undo-tree-id3428 . -2) (undo-tree-id3429 . -2) (undo-tree-id3430 . -2) (undo-tree-id3431 . -2) (undo-tree-id3432 . -2) (undo-tree-id3433 . -2) (undo-tree-id3434 . -2) (undo-tree-id3435 . -2) (undo-tree-id3436 . -2) (undo-tree-id3437 . -2) (undo-tree-id3438 . -2) (undo-tree-id3439 . -2) (undo-tree-id3440 . -2) (undo-tree-id3441 . -2) (undo-tree-id3442 . -2) (undo-tree-id3443 . -2) (undo-tree-id3444 . -2) (undo-tree-id3445 . -2) (undo-tree-id3446 . -2) (undo-tree-id3447 . -2) (undo-tree-id3448 . -2) (undo-tree-id3449 . -2) (undo-tree-id3450 . -2) (undo-tree-id3451 . -2) (undo-tree-id3452 . -2) (undo-tree-id3453 . -2) (undo-tree-id3454 . -2) (undo-tree-id3455 . -2) (undo-tree-id3456 . -2)) nil (26029 34521 122401 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -4214) (undo-tree-id3288 . -8) (undo-tree-id3289 . -8) (undo-tree-id3290 . -8) (undo-tree-id3291 . -8) (undo-tree-id3292 . -8) (undo-tree-id3293 . -8) (undo-tree-id3294 . -8) (undo-tree-id3295 . -8) (undo-tree-id3296 . -8) (undo-tree-id3297 . -8) (undo-tree-id3298 . -8) (undo-tree-id3299 . -8) (undo-tree-id3300 . -8) (undo-tree-id3301 . -8) (undo-tree-id3302 . -8) (undo-tree-id3303 . -8) (undo-tree-id3304 . -8) (undo-tree-id3305 . -8) (undo-tree-id3306 . -8) (undo-tree-id3307 . -8) (undo-tree-id3308 . -8) (undo-tree-id3309 . -8) (undo-tree-id3310 . -8) (undo-tree-id3311 . -8) (undo-tree-id3312 . -8) (undo-tree-id3313 . -8) (undo-tree-id3314 . -8) (undo-tree-id3315 . -8) (undo-tree-id3316 . -8) (undo-tree-id3317 . -8) (undo-tree-id3318 . -8) (undo-tree-id3319 . -8) (undo-tree-id3320 . -8) (undo-tree-id3321 . -8) (undo-tree-id3322 . -8) (undo-tree-id3323 . -8) (undo-tree-id3324 . -8) (undo-tree-id3325 . -8) (undo-tree-id3326 . -8) (undo-tree-id3327 . -8) (undo-tree-id3328 . -8) (undo-tree-id3329 . -8) (undo-tree-id3330 . -8) (undo-tree-id3331 . -8) (undo-tree-id3332 . -8) (undo-tree-id3333 . -8) (undo-tree-id3334 . -8) (undo-tree-id3335 . -8) (undo-tree-id3336 . -8) 4222 (4213 . 4222) (t 26029 34352 152122 245000) 4183) nil (26029 34521 122351 0) 0 nil])
([nil nil ((3403 . 3415) (#("        " 0 8 (fontified t)) . 3403) (t 26029 34521 144650 501000)) nil (26029 34704 678736 0) 0 nil])
([nil nil ((3155 . 3167)) nil (26029 34704 678735 0) 0 nil])
([nil nil ((3211 . 3227)) nil (26029 34704 678735 0) 0 nil])
([nil nil ((3275 . 3291)) nil (26029 34704 678734 0) 0 nil])
([nil nil ((249 . 250) (243 . 249) (#("-" 0 1 (fontified t)) . -243) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) 244 (238 . 244) (229 . 238) 215) nil (26029 34704 678732 0) 0 nil])
([nil nil (("                " . -3268) ("                " . -3220) ("            " . -3176) 249) nil (26029 34704 678713 0) 0 nil])
([nil nil ((#("        head = null;
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (face font-lock-constant-face fontified t) 16 17 (face font-lock-constant-face fontified t) 17 18 (face font-lock-constant-face fontified t) 18 19 (face font-lock-constant-face fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 230) (undo-tree-id3482 . -19) (undo-tree-id3483 . 1) (undo-tree-id3484 . -20) (undo-tree-id3485 . 1) (undo-tree-id3486 . -19) (undo-tree-id3487 . -19) (undo-tree-id3488 . -19) (undo-tree-id3489 . -19) (undo-tree-id3490 . -19) 249 (t 26029 34704 702280 44000)) nil (26029 34827 438230 0) 0 nil])
([nil nil ((152 . 159)) nil (26029 34827 438220 0) 0 nil])
([nil nil ((185 . 192)) nil (26029 34827 438217 0) 0 nil])
([nil nil ((252 . 257) (t 26029 34827 463612 662000)) nil (26029 34867 673520 0) 0 nil])
([nil nil ((#("this" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t)) . 252) (undo-tree-id4039 . -3) (t 26029 34867 695705 841000)) nil (26029 34938 32484 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 252)) nil (26029 34938 32483 0) 0 nil])
([nil nil ((#("        head.setNext(tail);
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 20 (fontified t) 20 21 (face (rainbow-delimiters-depth-3-face) fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-3-face) fontified t) 26 27 (fontified t) 27 28 (fontified t)) . 244) (undo-tree-id4025 . -8) (undo-tree-id4026 . 20) (undo-tree-id4027 . -27) (undo-tree-id4028 . -12) (undo-tree-id4029 . -13) (undo-tree-id4030 . 20) (undo-tree-id4031 . -8) (undo-tree-id4032 . -8) (undo-tree-id4033 . -8) (undo-tree-id4034 . -8) (undo-tree-id4035 . -8) (undo-tree-id4036 . -8) (undo-tree-id4037 . -8) (undo-tree-id4038 . -28)) nil (26029 34938 32482 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 621 . 622) (#("
" 0 1 (fontified nil)) . -641) (613 . 642) 586) nil (26029 34938 32476 0) 0 nil])
([nil nil ((481 . 482) (480 . 481)) nil (26029 34938 32475 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -644) (undo-tree-id3934 . -8) (undo-tree-id3935 . -8) (undo-tree-id3936 . -8) (undo-tree-id3937 . -8) (undo-tree-id3938 . -8) (undo-tree-id3939 . -8) (undo-tree-id3940 . -8) (undo-tree-id3941 . -8) (undo-tree-id3942 . -8) (undo-tree-id3943 . -8) (undo-tree-id3944 . -8) (undo-tree-id3945 . -8) (undo-tree-id3946 . -8) (undo-tree-id3947 . -8) (undo-tree-id3948 . -8) (undo-tree-id3949 . -8) (undo-tree-id3950 . -8) (undo-tree-id3951 . -8) (undo-tree-id3952 . -8) (undo-tree-id3953 . -8) (undo-tree-id3954 . -8) (undo-tree-id3955 . -8) (undo-tree-id3956 . -8) (undo-tree-id3957 . -8) (undo-tree-id3958 . -8) (undo-tree-id3959 . -8) (undo-tree-id3960 . -8) (undo-tree-id3961 . -8) (undo-tree-id3962 . -8) (undo-tree-id3963 . -8) (undo-tree-id3964 . -8) (undo-tree-id3965 . -8) (undo-tree-id3966 . -8) (undo-tree-id3967 . -8) (undo-tree-id3968 . -8) (undo-tree-id3969 . -8) (undo-tree-id3970 . -8) (undo-tree-id3971 . -8) (undo-tree-id3972 . -8) (undo-tree-id3973 . -8) (undo-tree-id3974 . -8) (undo-tree-id3975 . -8) (undo-tree-id3976 . -8) (undo-tree-id3977 . -8) (undo-tree-id3978 . -8) (undo-tree-id3979 . -8) (undo-tree-id3980 . -8) (undo-tree-id3981 . -8) (undo-tree-id3982 . -8) (undo-tree-id3983 . -8) (undo-tree-id3984 . -8) (undo-tree-id3985 . -8) (undo-tree-id3986 . -8) (undo-tree-id3987 . -8) (undo-tree-id3988 . -8) (undo-tree-id3989 . -8) (undo-tree-id3990 . -8) (undo-tree-id3991 . -8) (undo-tree-id3992 . -8) (undo-tree-id3993 . -8) (undo-tree-id3994 . -8) (undo-tree-id3995 . -8) (undo-tree-id3996 . -8) (undo-tree-id3997 . -8) (undo-tree-id3998 . -8) (undo-tree-id3999 . -8) (undo-tree-id4000 . -8) (undo-tree-id4001 . -8) (undo-tree-id4002 . -8) (undo-tree-id4003 . -8) (undo-tree-id4004 . -8) (undo-tree-id4005 . -8) (undo-tree-id4006 . -8) (undo-tree-id4007 . -8) (undo-tree-id4008 . -8) (undo-tree-id4009 . -8) (undo-tree-id4010 . -8) (undo-tree-id4011 . -8) (undo-tree-id4012 . -8) (undo-tree-id4013 . -8) (undo-tree-id4014 . -8) (undo-tree-id4015 . -8) (undo-tree-id4016 . -8) (undo-tree-id4017 . -8) (undo-tree-id4018 . -8) (undo-tree-id4019 . -8) (undo-tree-id4020 . -8) (undo-tree-id4021 . -8) (undo-tree-id4022 . -8) (undo-tree-id4023 . -8) (undo-tree-id4024 . -8) 652 (643 . 652) 641) nil (26029 34938 32474 0) 0 nil])
([nil nil ((654 . 655) (653 . 654)) nil (26029 34938 32441 0) 0 nil])
([nil nil ((616 . 628) (#("        " 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t)) . 616) (undo-tree-id3644 . -8) (undo-tree-id3645 . -8) (undo-tree-id3646 . -8) (undo-tree-id3647 . -8) (undo-tree-id3648 . -8) (undo-tree-id3649 . -8) (undo-tree-id3650 . -8) (undo-tree-id3651 . -8) (undo-tree-id3652 . -8) (undo-tree-id3653 . -8) (undo-tree-id3654 . -8) (undo-tree-id3655 . -8) (undo-tree-id3656 . -8) (undo-tree-id3657 . -8) (undo-tree-id3658 . -8) (undo-tree-id3659 . -8) (undo-tree-id3660 . -8) (undo-tree-id3661 . -8) (undo-tree-id3662 . -8) (undo-tree-id3663 . -8) (undo-tree-id3664 . -8) (undo-tree-id3665 . -8) (undo-tree-id3666 . -8) (undo-tree-id3667 . -8) (undo-tree-id3668 . -8) (undo-tree-id3669 . -8) (undo-tree-id3670 . -8) (undo-tree-id3671 . -8) (undo-tree-id3672 . -8) (undo-tree-id3673 . -8) (undo-tree-id3674 . -8) (undo-tree-id3675 . -8) (undo-tree-id3676 . -8) (undo-tree-id3677 . -8) (undo-tree-id3678 . -8) (undo-tree-id3679 . -8) (undo-tree-id3680 . -8) (undo-tree-id3681 . -8) (undo-tree-id3682 . -8) (undo-tree-id3683 . -8) (undo-tree-id3684 . -8) (undo-tree-id3685 . -8) (undo-tree-id3686 . -8) (undo-tree-id3687 . -8) (undo-tree-id3688 . -8) (undo-tree-id3689 . -8) (undo-tree-id3690 . -8) (undo-tree-id3691 . -8) (undo-tree-id3692 . -8) (undo-tree-id3693 . -8) (undo-tree-id3694 . -8) (undo-tree-id3695 . -8) (undo-tree-id3696 . -8) (undo-tree-id3697 . -8) (undo-tree-id3698 . -8) (undo-tree-id3699 . -8) (undo-tree-id3700 . -8) (undo-tree-id3701 . -8) (undo-tree-id3702 . -8) (undo-tree-id3703 . -8) (undo-tree-id3704 . -8) (undo-tree-id3705 . -8) (undo-tree-id3706 . -8) (undo-tree-id3707 . -8) (undo-tree-id3708 . -8) (undo-tree-id3709 . -8) (undo-tree-id3710 . -8) (undo-tree-id3711 . -8) (undo-tree-id3712 . -8) (undo-tree-id3713 . -8) (undo-tree-id3714 . -8) (undo-tree-id3715 . -8) (undo-tree-id3716 . -8) (undo-tree-id3717 . -8) (undo-tree-id3718 . -8) (undo-tree-id3719 . -8) (undo-tree-id3720 . -8) (undo-tree-id3721 . -8) (undo-tree-id3722 . -8) (undo-tree-id3723 . -8) (undo-tree-id3724 . -8) (undo-tree-id3725 . -8) (undo-tree-id3726 . -8) (undo-tree-id3727 . -8) (undo-tree-id3728 . -8) (undo-tree-id3729 . -8) (undo-tree-id3730 . -8) (undo-tree-id3731 . -8) (undo-tree-id3732 . -8) (undo-tree-id3733 . -8) (undo-tree-id3734 . -8) (undo-tree-id3735 . -8) (undo-tree-id3736 . -8) (undo-tree-id3737 . -8) (undo-tree-id3738 . -8) (undo-tree-id3739 . -8) (undo-tree-id3740 . -8) (undo-tree-id3741 . -8) (undo-tree-id3742 . -8) (undo-tree-id3743 . -8) (undo-tree-id3744 . -8) (undo-tree-id3745 . -8) (undo-tree-id3746 . -8) (undo-tree-id3747 . -8) (undo-tree-id3748 . -8) (undo-tree-id3749 . -8) (undo-tree-id3750 . -8) (undo-tree-id3751 . -8) (undo-tree-id3752 . -8) (undo-tree-id3753 . -8) (undo-tree-id3754 . -8) (undo-tree-id3755 . -8) (undo-tree-id3756 . -8) (undo-tree-id3757 . -8) (undo-tree-id3758 . -8) (undo-tree-id3759 . -8) (undo-tree-id3760 . -8) (undo-tree-id3761 . -8) (undo-tree-id3762 . -8) (undo-tree-id3763 . -8) (undo-tree-id3764 . -8) (undo-tree-id3765 . -8) (undo-tree-id3766 . -8) (undo-tree-id3767 . -8) (undo-tree-id3768 . -8) (undo-tree-id3769 . -8) (undo-tree-id3770 . -8) (undo-tree-id3771 . -8) (undo-tree-id3772 . -8) (undo-tree-id3773 . -8) (undo-tree-id3774 . -8) (undo-tree-id3775 . -8) (undo-tree-id3776 . -8) (undo-tree-id3777 . -8) (undo-tree-id3778 . -8) (undo-tree-id3779 . -8) (undo-tree-id3780 . -8) (undo-tree-id3781 . -8) (undo-tree-id3782 . -8) (undo-tree-id3783 . -8) (undo-tree-id3784 . -8) (undo-tree-id3785 . -8) (undo-tree-id3786 . -8) (undo-tree-id3787 . -8) (undo-tree-id3788 . -8) (undo-tree-id3789 . -8) (undo-tree-id3790 . -8) (undo-tree-id3791 . -8) (undo-tree-id3792 . -8) (undo-tree-id3793 . -8) (undo-tree-id3794 . -8) (undo-tree-id3795 . -8) (undo-tree-id3796 . -8) (undo-tree-id3797 . -8) (undo-tree-id3798 . -8) (undo-tree-id3799 . -8) (undo-tree-id3800 . -8) (undo-tree-id3801 . -8) (undo-tree-id3802 . -8) (undo-tree-id3803 . -8) (undo-tree-id3804 . -8) (undo-tree-id3805 . -8) (undo-tree-id3806 . -8) (undo-tree-id3807 . -8) (undo-tree-id3808 . -8) (undo-tree-id3809 . -8) (undo-tree-id3810 . -8) (undo-tree-id3811 . -8) (undo-tree-id3812 . -8) (undo-tree-id3813 . -8) (undo-tree-id3814 . -8) (undo-tree-id3815 . -8) (undo-tree-id3816 . -8) (undo-tree-id3817 . -8) (undo-tree-id3818 . -8) (undo-tree-id3819 . -8) (undo-tree-id3820 . -8) (undo-tree-id3821 . -8) (undo-tree-id3822 . -8) (undo-tree-id3823 . -8) (undo-tree-id3824 . -8) (undo-tree-id3825 . -8) (undo-tree-id3826 . -8) (undo-tree-id3827 . -8) (undo-tree-id3828 . -8) (undo-tree-id3829 . -8) (undo-tree-id3830 . -8) (undo-tree-id3831 . -8) (undo-tree-id3832 . -8) (undo-tree-id3833 . -8) (undo-tree-id3834 . -8) (undo-tree-id3835 . -8) (undo-tree-id3836 . -8) (undo-tree-id3837 . -8) (undo-tree-id3838 . -8) (undo-tree-id3839 . -8) (undo-tree-id3840 . -8) (undo-tree-id3841 . -8) (undo-tree-id3842 . -8) (undo-tree-id3843 . -8) (undo-tree-id3844 . -8) (undo-tree-id3845 . -8) (undo-tree-id3846 . -8) (undo-tree-id3847 . -8) (undo-tree-id3848 . -8) (undo-tree-id3849 . -8) (undo-tree-id3850 . -8) (undo-tree-id3851 . -8) (undo-tree-id3852 . -8) (undo-tree-id3853 . -8) (undo-tree-id3854 . -8) (undo-tree-id3855 . -8) (undo-tree-id3856 . -8) (undo-tree-id3857 . -8) (undo-tree-id3858 . -8) (undo-tree-id3859 . -8) (undo-tree-id3860 . -8) (undo-tree-id3861 . -8) (undo-tree-id3862 . -8) (undo-tree-id3863 . -8) (undo-tree-id3864 . -8) (undo-tree-id3865 . -8) (undo-tree-id3866 . -8) (undo-tree-id3867 . -8) (undo-tree-id3868 . -8) (undo-tree-id3869 . -8) (undo-tree-id3870 . -8) (undo-tree-id3871 . -8) (undo-tree-id3872 . -8) (undo-tree-id3873 . -8) (undo-tree-id3874 . -7) (undo-tree-id3875 . -7) (undo-tree-id3876 . -7) (undo-tree-id3877 . -7) (undo-tree-id3878 . -7) (undo-tree-id3879 . -7) (undo-tree-id3880 . -7) (undo-tree-id3881 . -7) (undo-tree-id3882 . -7) (undo-tree-id3883 . -7) (undo-tree-id3884 . -7) (undo-tree-id3885 . -7) (undo-tree-id3886 . -7) (undo-tree-id3887 . -7) (undo-tree-id3888 . -7) (undo-tree-id3889 . -7) (undo-tree-id3890 . -7) (undo-tree-id3891 . -7) (undo-tree-id3892 . -7) (undo-tree-id3893 . -7) (undo-tree-id3894 . -7) (undo-tree-id3895 . -7) (undo-tree-id3896 . -7) (undo-tree-id3897 . -7) (undo-tree-id3898 . -7) (undo-tree-id3899 . -7) (undo-tree-id3900 . -7) (undo-tree-id3901 . -7) (undo-tree-id3902 . -7) (undo-tree-id3903 . -7) (undo-tree-id3904 . -7) (undo-tree-id3905 . -7) (undo-tree-id3906 . -7) (undo-tree-id3907 . -7) (undo-tree-id3908 . -7) (undo-tree-id3909 . -7) (undo-tree-id3910 . -7) (undo-tree-id3911 . -7) (undo-tree-id3912 . -7) (undo-tree-id3913 . -7) (undo-tree-id3914 . -7) (undo-tree-id3915 . -7) (undo-tree-id3916 . -7) (undo-tree-id3917 . -7) (undo-tree-id3918 . -7) (undo-tree-id3919 . -7) (undo-tree-id3920 . -7) (undo-tree-id3921 . -7) (undo-tree-id3922 . -7) (undo-tree-id3923 . -7) (undo-tree-id3924 . -7) (undo-tree-id3925 . -7) (undo-tree-id3926 . -7) (undo-tree-id3927 . -7) (undo-tree-id3928 . -7) (undo-tree-id3929 . -7) (undo-tree-id3930 . -7) (undo-tree-id3931 . -7) (undo-tree-id3932 . -7) (undo-tree-id3933 . -7) 625) nil (26029 34938 32436 0) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 648) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1)) nil (26029 34938 32329 0) 0 nil])
nil
