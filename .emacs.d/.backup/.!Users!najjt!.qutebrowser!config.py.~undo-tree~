(undo-tree-save-format-version . 1)
"ce81529bafda1e3b50f553951bf7603a59d7ae15"
[nil nil nil nil (26030 31157 392786 0) 0 nil]
([nil nil ((20634 . 20645) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -20634) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -20635) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 20636 (20632 . 20636) (20631 . 20632) (20630 . 20631) (t 26022 34762 375841 599000) 20623) nil (26030 31157 392785 0) 0 nil])
([nil nil ((20668 . 20670) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -20668) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 20669 (20665 . 20669) (20660 . 20665) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -20660) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 20661 (20657 . 20661) (20646 . 20657) (20645 . 20646) 20644) nil (26030 31157 392763 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20670 . 20671) (#("
" 0 1 (fontified nil)) . -20695) (20670 . 20696) 20669) nil (26030 31157 392734 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20695 . 20696) (#("
" 0 1 (fontified nil)) . -20720) (20695 . 20721) 20671) nil (26030 31157 392734 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20720 . 20721) (#("
" 0 1 (fontified nil)) . -20745) (20720 . 20746) 20696) nil (26030 31157 392733 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20745 . 20746) (#("
" 0 1 (fontified nil)) . -20770) (20745 . 20771) 20721) nil (26030 31157 392732 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20770 . 20771) (#("
" 0 1 (fontified nil)) . -20795) (20770 . 20796) 20746) nil (26030 31157 392732 0) 0 nil])
([nil nil ((20691 . 20692) (#("1" 0 1 (face font-lock-string-face fontified t)) . 20691) (undo-tree-id8 . -1)) nil (26030 31157 392731 0) 0 nil])
([nil nil ((20716 . 20717) (#("1" 0 1 (face font-lock-string-face fontified t)) . 20716) (undo-tree-id7 . -1)) nil (26030 31157 392730 0) 0 nil])
([nil nil ((20741 . 20742) (#("1" 0 1 (face font-lock-string-face fontified t)) . 20741) (undo-tree-id6 . -1)) nil (26030 31157 392730 0) 0 nil])
([nil nil ((20766 . 20767) (#("1" 0 1 (face font-lock-string-face fontified t)) . 20766) (undo-tree-id5 . -1)) nil (26030 31157 392729 0) 0 nil])
([nil nil ((20791 . 20792) (#("1" 0 1 (face font-lock-string-face fontified t)) . 20791) (undo-tree-id4 . -1)) nil (26030 31157 392728 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20795 . 20796) (#("
" 0 1 (fontified nil)) . -20820) (20795 . 20821) 20791) nil (26030 31157 392727 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20820 . 20821) (#("
" 0 1 (fontified nil)) . -20845) (20820 . 20846) 20796) nil (26030 31157 392727 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20845 . 20846) (#("
" 0 1 (fontified nil)) . -20870) (20845 . 20871) 20821) nil (26030 31157 392726 0) 0 nil])
([nil nil ((20816 . 20817) (#("6" 0 1 (face font-lock-string-face fontified t)) . 20816) (undo-tree-id3 . -1)) nil (26030 31157 392725 0) 0 nil])
([nil nil ((20841 . 20842) (#("6" 0 1 (face font-lock-string-face fontified t)) . 20841) (undo-tree-id2 . -1)) nil (26030 31157 392724 0) 0 nil])
([nil nil ((20866 . 20867) (#("6" 0 1 (face font-lock-string-face fontified t)) . 20866) (undo-tree-id1 . -1)) nil (26030 31157 392723 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 20645 . 20646) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -20670) (20645 . 20671) 20644) nil (26030 31157 392722 0) 0 nil])
([nil nil ((20666 . 20667) (#("1" 0 1 (face font-lock-string-face fontified t)) . 20666) (undo-tree-id0 . -1)) nil (26030 31157 392719 0) 0 nil])
([nil nil ((#("config.unbind('<Alt+0>')
" 0 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 23 (face font-lock-string-face fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 25 (fontified t)) . 20646) (undo-tree-id136 . -24) (undo-tree-id137 . -20) (undo-tree-id138 . -20) (undo-tree-id139 . -20) 20666 (t 26030 31157 395486 891000)) nil (26030 31225 273361 0) 0 nil])
([nil nil ((20895 . 20896) (20894 . 20895) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -20894) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 20895 (20886 . 20895) (#("C" 0 1 (face font-lock-string-face fontified t)) . -20886) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 20887 (20874 . 20887) (20871 . 20874) (20870 . 20871) (t 26030 31225 279447 749000) 20855) nil (26030 31272 456700 0) 0 nil])
([nil nil ((21373 . 21374) (21354 . 21373) (21353 . 21354) (t 26030 31272 460322 753000) 21353) nil (26030 31657 818920 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 21373)) nil (26030 31657 818920 0) 0 nil])
([nil nil ((21373 . 21374)) nil (26030 31657 818919 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21374 . 21375) (nil fontified nil 21374 . 21375) (21374 . 21375) 21373) nil (26030 31657 818919 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) rear-nonsticky nil fontified nil)) . 21374) (nil rear-nonsticky t 21374 . 21375)) nil (26030 31657 818918 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21373) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1)) nil (26030 31657 818916 0) 0 nil])
([nil nil ((21373 . 21374)) nil (26030 31657 818889 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21374 . 21375) (nil fontified nil 21374 . 21375) (21374 . 21375) 21373) nil (26030 31657 818889 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) rear-nonsticky nil fontified nil)) . 21374) (nil rear-nonsticky t 21374 . 21375)) nil (26030 31657 818888 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 21373) (undo-tree-id245 . -1)) nil (26030 31657 818887 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21392 . 21393) (nil fontified nil 21373 . 21393) (21373 . 21393) 21372) nil (26030 31657 818887 0) 0 nil])
([nil nil ((21393 . 21394) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -21393) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 21394 (21393 . 21394)) nil (26030 31657 818885 0) 0 nil])
([nil nil ((21373 . 21374) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -21373) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 21374 (21373 . 21374)) nil (26030 31657 818866 0) 0 nil])
([nil nil ((21395 . 21396) 21353) nil (26030 31657 818842 0) 0 nil])
([nil nil ((21373 . 21374) (t 26030 31657 823015 86000)) nil (26030 31706 366279 0) 0 nil])
([nil nil ((21408 . 21409) (#("f" 0 1 (fontified t)) . -21408) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("m" 0 1 (fontified t)) . -21409) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 21410 (21408 . 21410) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -21408) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 21409 (21408 . 21409) (#("?" 0 1 (fontified t)) . -21408) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) 21409 (21404 . 21409) (#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -21404) (undo-tree-id411 . -1) 21405 (21404 . 21405) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . -21404) (undo-tree-id412 . -1) 21405 (21404 . 21405) (21403 . 21404) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -21403) (undo-tree-id413 . -1) 21404 (21399 . 21404) (#("m" 0 1 (face font-lock-string-face fontified t)) . -21399) (undo-tree-id414 . -1) 21400 (21396 . 21400)) nil (26030 31706 366273 0) 0 nil])
([nil nil ((#("{" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 21406) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (t 26030 31706 370725 876000)) nil (26030 31717 648927 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-mismatched-face) fontified t)) . 21406) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1)) nil (26030 31717 648920 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 21404) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1)) nil (26030 31717 648898 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21404) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1)) nil (26030 31717 648888 0) 0 nil])
([nil nil ((21404 . 21408) (t 26030 31717 655227 83000)) nil (26030 31743 4725 0) 0 nil])
([nil nil ((21406 . 21407) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -21406) (undo-tree-id567 . -1) 21407 (21406 . 21407) (t 26030 31743 9746 266000)) nil (26030 32153 145940 0) 0 nil])
([nil nil ((21409 . 21410) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -21409) (undo-tree-id566 . -1) 21410 (21409 . 21410)) nil (26030 32153 145938 0) 0 nil])
([nil nil ((21354 . 21355)) nil (26030 32153 145933 0) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 21354)) nil (26030 32153 145932 0) 0 nil])
([nil nil ((21354 . 21355)) nil (26030 32153 145929 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21418 . 21419) (nil fontified nil 21355 . 21419) (21355 . 21419) 21354 (t 26030 32153 150236 320000)) nil (26030 32205 682325 0) 0 nil])
([nil nil ((#("c.editor.command = ['emacsclient', '+{line}:{column}', '{file}']" 0 63 (face font-lock-comment-face fontified nil) 63 64 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 21355) (undo-tree-id693 . -63) (undo-tree-id694 . -63) (undo-tree-id695 . -64) (undo-tree-id696 . -63) (undo-tree-id697 . -63) (undo-tree-id698 . -63) (undo-tree-id699 . -63) (undo-tree-id700 . -63) (undo-tree-id701 . -63) (undo-tree-id702 . -63) (undo-tree-id703 . -63) (undo-tree-id704 . -63) (undo-tree-id705 . -63) (undo-tree-id706 . -63) (undo-tree-id707 . -63) (undo-tree-id708 . -63) (undo-tree-id709 . -63) (undo-tree-id710 . -63) (undo-tree-id711 . -63) (undo-tree-id712 . -63) (undo-tree-id713 . -63) (undo-tree-id714 . -63) (undo-tree-id715 . -63) (undo-tree-id716 . -63) (undo-tree-id717 . -63) (undo-tree-id718 . -63) (undo-tree-id719 . -63) (undo-tree-id720 . -63) (undo-tree-id721 . -63) (undo-tree-id722 . -63) (undo-tree-id723 . -63) (undo-tree-id724 . -63) (undo-tree-id725 . -63) (undo-tree-id726 . -63) (undo-tree-id727 . -63) (undo-tree-id728 . -63) (undo-tree-id729 . -63) (undo-tree-id730 . -63) (undo-tree-id731 . -63) (undo-tree-id732 . -63) (undo-tree-id733 . -63) (undo-tree-id734 . -63) (undo-tree-id735 . -63) (undo-tree-id736 . -63) (nil rear-nonsticky t 21418 . 21419)) nil (26030 32205 682324 0) 0 nil])
([nil nil ((21412 . 21413) (t 26030 32153 150236 320000) 21354) nil (26030 32205 682304 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21476 . 21477) (nil fontified nil 21413 . 21477) (21413 . 21477)) nil (26030 32205 682303 0) 0 nil])
([nil nil ((#("#c.editor.command = ['emacsclient -c -n -a', 'gvim', '{}']
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 10 (face font-lock-comment-face fontified t) 10 17 (face font-lock-comment-face fontified t) 17 18 (face font-lock-comment-face fontified t) 18 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 34 (face font-lock-comment-face fontified t) 34 35 (face font-lock-comment-face fontified t) 35 37 (face font-lock-comment-face fontified t) 37 38 (face font-lock-comment-face fontified t) 38 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t) 41 42 (face font-lock-comment-face rear-nonsticky t fontified t) 42 43 (face font-lock-comment-face fontified t) 43 45 (face font-lock-comment-face fontified t) 45 51 (face font-lock-comment-face fontified t) 51 53 (face font-lock-comment-face fontified t) 53 54 (face font-lock-comment-face fontified t) 54 55 (face font-lock-comment-face fontified t) 55 57 (face font-lock-comment-face fontified t) 57 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t)) . 21354) (undo-tree-id568 . -59) (undo-tree-id569 . -58) (undo-tree-id570 . -19) (undo-tree-id571 . -20) (undo-tree-id572 . -20) (undo-tree-id573 . -20) (undo-tree-id574 . -20) (undo-tree-id575 . -20) (undo-tree-id576 . -19) (undo-tree-id577 . -19) (undo-tree-id578 . -20) (undo-tree-id579 . -20) (undo-tree-id580 . -57) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -59) (undo-tree-id623 . -59) (undo-tree-id624 . -59) (undo-tree-id625 . -59) (undo-tree-id626 . -59) (undo-tree-id627 . -59) (undo-tree-id628 . -59) (undo-tree-id629 . -59) (undo-tree-id630 . -59) (undo-tree-id631 . -59) (undo-tree-id632 . -59) (undo-tree-id633 . -59) (undo-tree-id634 . -59) (undo-tree-id635 . -59) (undo-tree-id636 . -59) (undo-tree-id637 . -59) (undo-tree-id638 . -59) (undo-tree-id639 . -59) (undo-tree-id640 . -59) (undo-tree-id641 . -59) (undo-tree-id642 . -59) (undo-tree-id643 . -59) (undo-tree-id644 . -59) (undo-tree-id645 . -59) (undo-tree-id646 . -59) (undo-tree-id647 . -59) (undo-tree-id648 . -59) (undo-tree-id649 . -59) (undo-tree-id650 . -59) (undo-tree-id651 . -59) (undo-tree-id652 . -59) (undo-tree-id653 . -59) (undo-tree-id654 . -59) (undo-tree-id655 . -59) (undo-tree-id656 . -59) (undo-tree-id657 . -59) (undo-tree-id658 . -59) (undo-tree-id659 . -59) (undo-tree-id660 . -1) (undo-tree-id661 . -59) (undo-tree-id662 . -59) (undo-tree-id663 . -59) (undo-tree-id664 . -59) (undo-tree-id665 . -59) (undo-tree-id666 . -59) (undo-tree-id667 . -59) (undo-tree-id668 . -57) (undo-tree-id669 . -57) (undo-tree-id670 . -57) (undo-tree-id671 . -57) (undo-tree-id672 . -57) (undo-tree-id673 . -57) (undo-tree-id674 . -57) (undo-tree-id675 . -57) (undo-tree-id676 . -57) (undo-tree-id677 . -57) (undo-tree-id678 . -57) (undo-tree-id679 . -57) (undo-tree-id680 . -57) (undo-tree-id681 . -57) (undo-tree-id682 . -57) (undo-tree-id683 . -57) (undo-tree-id684 . -57) (undo-tree-id685 . -57) (undo-tree-id686 . -57) (undo-tree-id687 . -57) (undo-tree-id688 . -57) (undo-tree-id689 . -57) (undo-tree-id690 . -57) (undo-tree-id691 . -57) (undo-tree-id692 . -59) 21411) nil (26030 32205 682298 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21531 . 21532) (nil fontified nil 21353 . 21532) (21353 . 21532) (t 26030 32205 686997 888000)) nil (26030 32249 116875 0) 0 nil])
([nil nil ((21352 . 21353) 21289) nil (26030 32249 116871 0) 0 nil])
([nil nil ((21555 . 21562) (#("emacsclient" 0 11 (face font-lock-string-face fontified t)) . 21555) (undo-tree-id1163 . -10) (undo-tree-id1164 . -11) (undo-tree-id1165 . -11) (t 26030 32249 120799 319000)) nil (26030 32388 292693 0) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1)) nil (26030 32388 292691 0) 0 nil])
([nil nil ((#("{" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1)) nil (26030 32388 292686 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1)) nil (26030 32388 292678 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1)) nil (26030 32388 292677 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1)) nil (26030 32388 292676 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1)) nil (26030 32388 292674 0) 0 nil])
([nil nil ((#("}" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1)) nil (26030 32388 292673 0) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1)) nil (26030 32388 292672 0) 0 nil])
([nil nil ((#("{" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1)) nil (26030 32388 292671 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1)) nil (26030 32388 292669 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1)) nil (26030 32388 292668 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1)) nil (26030 32388 292667 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1)) nil (26030 32388 292666 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1)) nil (26030 32388 292665 0) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1)) nil (26030 32388 292663 0) 0 nil])
([nil nil ((#("}" 0 1 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1)) nil (26030 32388 292662 0) 0 nil])
([nil nil ((21572 . 21574) (#("a" 0 1 (face font-lock-string-face fontified t)) . -21572) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -21573) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) 21574 (21566 . 21574) (#("e" 0 1 (face font-lock-string-face fontified t)) . -21566) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -21567) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -21568) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -21569) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) 21570 (21566 . 21570)) nil (26030 32388 292656 0) 0 nil])
([nil nil ((#("{" 0 1 (face font-lock-string-face fontified t)) . 21578) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1)) nil (26030 32388 292537 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 21578) (undo-tree-id793 . -1) (undo-tree-id794 . -1)) nil (26030 32388 292527 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . 21578) (undo-tree-id791 . -1) (undo-tree-id792 . -1)) nil (26030 32388 292525 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . 21578) (undo-tree-id789 . -1) (undo-tree-id790 . -1)) nil (26030 32388 292524 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 21578) (undo-tree-id787 . -1) (undo-tree-id788 . -1)) nil (26030 32388 292523 0) 0 nil])
([nil nil ((#("}" 0 1 (face font-lock-string-face fontified t)) . 21578) (undo-tree-id785 . -1) (undo-tree-id786 . -1)) nil (26030 32388 292522 0) 0 nil])
([nil nil ((21581 . 21589) (21578 . 21581)) nil (26030 32388 292517 0) 0 nil])
([nil nil ((21595 . 21596) (#("s" 0 1 (face font-lock-string-face fontified t)) . -21595) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -21596) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) 21597 (21590 . 21597)) nil (26030 32388 292514 0) 0 nil])
([nil nil ((#("-c -n -a" 0 8 (face font-lock-string-face fontified t)) . 21566) (undo-tree-id1166 . -7) (undo-tree-id1167 . -7) (undo-tree-id1168 . -7) (undo-tree-id1169 . -6) (undo-tree-id1170 . -6) (undo-tree-id1171 . -6) (undo-tree-id1172 . -6) (undo-tree-id1173 . -6) (undo-tree-id1174 . -6) (undo-tree-id1175 . -6) (undo-tree-id1176 . -6) (undo-tree-id1177 . -6) (undo-tree-id1178 . -6) (undo-tree-id1179 . -6) (undo-tree-id1180 . -6) (undo-tree-id1181 . -6) (undo-tree-id1182 . -6) (undo-tree-id1183 . -6) (undo-tree-id1184 . -6) (undo-tree-id1185 . -6) (undo-tree-id1186 . -6) (undo-tree-id1187 . -6) (undo-tree-id1188 . -6) (undo-tree-id1189 . -6) (undo-tree-id1190 . -6) (undo-tree-id1191 . -6) (undo-tree-id1192 . -6) (undo-tree-id1193 . -6) (undo-tree-id1194 . -6) (undo-tree-id1195 . -6) (undo-tree-id1196 . -6) (undo-tree-id1197 . -6) (undo-tree-id1198 . -6) (undo-tree-id1199 . -6) (undo-tree-id1200 . -6) (undo-tree-id1201 . -6) (undo-tree-id1202 . -6) (undo-tree-id1203 . -6) (undo-tree-id1204 . -6) (undo-tree-id1205 . -6) (undo-tree-id1206 . -6) (undo-tree-id1207 . -6) (undo-tree-id1208 . -6) (undo-tree-id1209 . -8) (undo-tree-id1210 . -8) (undo-tree-id1211 . -8) (undo-tree-id1212 . -8) (undo-tree-id1213 . -8) (undo-tree-id1214 . -8) (undo-tree-id1215 . -8) (undo-tree-id1216 . -8) (undo-tree-id1217 . -8) (undo-tree-id1218 . -8) (undo-tree-id1219 . -8) (undo-tree-id1220 . -8) (undo-tree-id1221 . -8) (undo-tree-id1222 . -8) (undo-tree-id1223 . -8) (undo-tree-id1224 . -8) (undo-tree-id1225 . -8) (undo-tree-id1226 . -8) (undo-tree-id1227 . -8) (undo-tree-id1228 . -8) (undo-tree-id1229 . -8) (undo-tree-id1230 . -7) (undo-tree-id1231 . -7) (undo-tree-id1232 . -7) (undo-tree-id1233 . -7) (undo-tree-id1234 . -7) (undo-tree-id1235 . -7) (undo-tree-id1236 . -7) (undo-tree-id1237 . -7) (undo-tree-id1238 . -7) (undo-tree-id1239 . -7) (undo-tree-id1240 . -7) (undo-tree-id1241 . -6) (undo-tree-id1242 . -6) (undo-tree-id1243 . -6) (undo-tree-id1244 . -6) (undo-tree-id1245 . -6) (undo-tree-id1246 . -6) (undo-tree-id1247 . -6) (undo-tree-id1248 . -6) (undo-tree-id1249 . -6) (undo-tree-id1250 . -6) (undo-tree-id1251 . -6) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -3) (undo-tree-id1264 . -3) (undo-tree-id1265 . -3) (undo-tree-id1266 . -3) (undo-tree-id1267 . -3) (undo-tree-id1268 . -3) (undo-tree-id1269 . -3) (undo-tree-id1270 . -3) (undo-tree-id1271 . -3) (undo-tree-id1272 . -3) (undo-tree-id1273 . -3) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -7) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -2) (undo-tree-id1318 . -2) (undo-tree-id1319 . -2) (undo-tree-id1320 . -2) (undo-tree-id1321 . -2) (undo-tree-id1322 . -2) (undo-tree-id1323 . -2) (undo-tree-id1324 . -2) (undo-tree-id1325 . -2) (undo-tree-id1326 . -2) (undo-tree-id1327 . -2) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) (undo-tree-id1330 . -3) (undo-tree-id1331 . -3) (undo-tree-id1332 . -3) (undo-tree-id1333 . -3) (undo-tree-id1334 . -4) (undo-tree-id1335 . -4) (undo-tree-id1336 . -4) (undo-tree-id1337 . -4) (undo-tree-id1338 . -4) (undo-tree-id1339 . -4) (undo-tree-id1340 . -5) (undo-tree-id1341 . -5) (undo-tree-id1342 . -5) (undo-tree-id1343 . -5) (undo-tree-id1344 . -5) (undo-tree-id1345 . -5) (undo-tree-id1346 . -6) (undo-tree-id1347 . -6) (undo-tree-id1348 . -6) (undo-tree-id1349 . -6) (undo-tree-id1350 . -6) (undo-tree-id1351 . -6) (undo-tree-id1352 . -6) (undo-tree-id1353 . -6) (undo-tree-id1354 . -6) (undo-tree-id1355 . -6) (undo-tree-id1356 . -6) (undo-tree-id1357 . -7) (undo-tree-id1358 . -7) (undo-tree-id1359 . -7) (undo-tree-id1360 . -7) (undo-tree-id1361 . -7) (undo-tree-id1362 . -7) (undo-tree-id1363 . -7) (undo-tree-id1364 . -7) (undo-tree-id1365 . -7) (undo-tree-id1366 . -7) (undo-tree-id1367 . -7) (undo-tree-id1368 . -7) (undo-tree-id1369 . -7) (undo-tree-id1370 . -7) (undo-tree-id1371 . -7) (undo-tree-id1372 . -7) (undo-tree-id1373 . -7) (undo-tree-id1374 . -8) 21573 (t 26030 32388 296626 983000)) nil (26030 32413 750664 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21588 . 21589) (nil fontified nil 21581 . 21589) (21581 . 21589) 21580) nil (26030 32413 750581 0) 0 nil])
([nil nil ((21581 . 21582)) nil (26030 32413 750579 0) 0 nil])
([nil nil ((21566 . 21583)) nil (26030 32413 750576 0) 0 nil])
([nil nil ((#("os.environ['NODE_PATH'] += os.pathsep + '/usr/local/lib/node_modules'
" 0 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 22 (face font-lock-string-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (fontified t) 24 26 (face font-lock-operator-face fontified t) 26 38 (fontified t) 38 39 (face font-lock-operator-face fontified t) 39 40 (fontified t) 40 69 (face font-lock-string-face fontified t) 69 70 (fontified t rear-nonsticky t)) . 21463) (undo-tree-id1375 . -69) (undo-tree-id1376 . -48) (undo-tree-id1377 . -70) (undo-tree-id1378 . -70) (undo-tree-id1379 . -70) (undo-tree-id1380 . -70) (undo-tree-id1381 . -70) (undo-tree-id1382 . -70) (undo-tree-id1383 . -70) (undo-tree-id1384 . -70) (undo-tree-id1385 . -70) (undo-tree-id1386 . -70) (undo-tree-id1387 . -70) (undo-tree-id1388 . -48) (undo-tree-id1389 . -48) (undo-tree-id1390 . -48) (undo-tree-id1391 . -48) (undo-tree-id1392 . -48) (undo-tree-id1393 . -48) (undo-tree-id1394 . -48) (undo-tree-id1395 . -48) (undo-tree-id1396 . -48) (undo-tree-id1397 . -48) (undo-tree-id1398 . -48) (undo-tree-id1399 . -48) (undo-tree-id1400 . -48) (undo-tree-id1401 . -48) (undo-tree-id1402 . -48) (undo-tree-id1403 . -48) (undo-tree-id1404 . -48) (undo-tree-id1405 . -48) (undo-tree-id1406 . -48) (undo-tree-id1407 . -48) (undo-tree-id1408 . -48) (undo-tree-id1409 . -48) (undo-tree-id1410 . -48) (undo-tree-id1411 . -48) (undo-tree-id1412 . -48) (undo-tree-id1413 . -48) (undo-tree-id1414 . -48) (undo-tree-id1415 . -48) (undo-tree-id1416 . -48) (undo-tree-id1417 . -70) 21511 (t 26030 32413 755367 170000)) nil (26030 32429 898879 0) 0 nil])
([nil nil ((#("wezterm" 0 7 (face font-lock-string-face fontified t)) . 21485) (undo-tree-id2046 . -6) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -7) (t 26030 32429 903307 897000)) nil (26030 32468 362243 0) 0 nil])
([nil nil ((21485 . 21492)) nil (26030 32468 362234 0) 0 nil])
([nil nil ((#("c.editor.command = ['wezterm', '--single-instance', 'emacsclient -c -n -a', '{}']
" 0 9 (fontified t) 9 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 21 (face font-lock-string-face fontified t) 21 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 31 (fontified t) 31 50 (face font-lock-string-face fontified t) 50 52 (fontified t) 52 65 (face font-lock-string-face fontified t) 65 72 (face font-lock-string-face fontified t) 72 73 (face font-lock-string-face fontified t rear-nonsticky t) 73 74 (face font-lock-string-face fontified t) 74 76 (fontified t) 76 80 (face font-lock-string-face fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 81 82 (fontified t)) . 21464) (undo-tree-id1773 . -64) (undo-tree-id1774 . 33) (undo-tree-id1775 . -81) (undo-tree-id1776 . -20) (undo-tree-id1777 . -21) (undo-tree-id1778 . -53) (undo-tree-id1779 . -53) (undo-tree-id1780 . -32) (undo-tree-id1781 . 33) (undo-tree-id1782 . -32) (undo-tree-id1783 . -32) (undo-tree-id1784 . -32) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -2) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (undo-tree-id1799 . -2) (undo-tree-id1800 . -2) (undo-tree-id1801 . -2) (undo-tree-id1802 . -2) (undo-tree-id1803 . -2) (undo-tree-id1804 . -2) (undo-tree-id1805 . -2) (undo-tree-id1806 . -2) (undo-tree-id1807 . -8) (undo-tree-id1808 . -8) (undo-tree-id1809 . -8) (undo-tree-id1810 . -8) (undo-tree-id1811 . -8) (undo-tree-id1812 . -8) (undo-tree-id1813 . -8) (undo-tree-id1814 . -8) (undo-tree-id1815 . -8) (undo-tree-id1816 . -8) (undo-tree-id1817 . -8) (undo-tree-id1818 . -9) (undo-tree-id1819 . -9) (undo-tree-id1820 . -9) (undo-tree-id1821 . -9) (undo-tree-id1822 . -9) (undo-tree-id1823 . -9) (undo-tree-id1824 . -9) (undo-tree-id1825 . -9) (undo-tree-id1826 . -9) (undo-tree-id1827 . -9) (undo-tree-id1828 . -9) (undo-tree-id1829 . -17) (undo-tree-id1830 . -17) (undo-tree-id1831 . -17) (undo-tree-id1832 . -17) (undo-tree-id1833 . -17) (undo-tree-id1834 . -17) (undo-tree-id1835 . -17) (undo-tree-id1836 . -17) (undo-tree-id1837 . -17) (undo-tree-id1838 . -17) (undo-tree-id1839 . -17) (undo-tree-id1840 . -19) (undo-tree-id1841 . -19) (undo-tree-id1842 . -19) (undo-tree-id1843 . -19) (undo-tree-id1844 . -19) (undo-tree-id1845 . -19) (undo-tree-id1846 . -19) (undo-tree-id1847 . -19) (undo-tree-id1848 . -19) (undo-tree-id1849 . -19) (undo-tree-id1850 . -19) (undo-tree-id1851 . -19) (undo-tree-id1852 . -19) (undo-tree-id1853 . -19) (undo-tree-id1854 . -19) (undo-tree-id1855 . -19) (undo-tree-id1856 . -19) (undo-tree-id1857 . -19) (undo-tree-id1858 . -19) (undo-tree-id1859 . -19) (undo-tree-id1860 . -19) (undo-tree-id1861 . -20) (undo-tree-id1862 . -20) (undo-tree-id1863 . -20) (undo-tree-id1864 . -20) (undo-tree-id1865 . -20) (undo-tree-id1866 . -20) (undo-tree-id1867 . -20) (undo-tree-id1868 . -20) (undo-tree-id1869 . -20) (undo-tree-id1870 . -20) (undo-tree-id1871 . -20) (undo-tree-id1872 . -21) (undo-tree-id1873 . -21) (undo-tree-id1874 . -21) (undo-tree-id1875 . -21) (undo-tree-id1876 . -21) (undo-tree-id1877 . -21) (undo-tree-id1878 . -22) (undo-tree-id1879 . -22) (undo-tree-id1880 . -22) (undo-tree-id1881 . -22) (undo-tree-id1882 . -22) (undo-tree-id1883 . -22) (undo-tree-id1884 . -22) (undo-tree-id1885 . -22) (undo-tree-id1886 . -22) (undo-tree-id1887 . -22) (undo-tree-id1888 . -22) (undo-tree-id1889 . -22) (undo-tree-id1890 . -22) (undo-tree-id1891 . -22) (undo-tree-id1892 . -22) (undo-tree-id1893 . -22) (undo-tree-id1894 . -21) (undo-tree-id1895 . -21) (undo-tree-id1896 . -21) (undo-tree-id1897 . -21) (undo-tree-id1898 . -21) (undo-tree-id1899 . -21) (undo-tree-id1900 . -21) (undo-tree-id1901 . -21) (undo-tree-id1902 . -21) (undo-tree-id1903 . -21) (undo-tree-id1904 . -21) (undo-tree-id1905 . -21) (undo-tree-id1906 . -21) (undo-tree-id1907 . -21) (undo-tree-id1908 . -21) (undo-tree-id1909 . -21) (undo-tree-id1910 . -21) (undo-tree-id1911 . -21) (undo-tree-id1912 . -21) (undo-tree-id1913 . -21) (undo-tree-id1914 . -21) (undo-tree-id1915 . -21) (undo-tree-id1916 . -21) (undo-tree-id1917 . -21) (undo-tree-id1918 . -21) (undo-tree-id1919 . -21) (undo-tree-id1920 . -21) (undo-tree-id1921 . -21) (undo-tree-id1922 . -21) (undo-tree-id1923 . -21) (undo-tree-id1924 . -21) (undo-tree-id1925 . -21) (undo-tree-id1926 . -21) (undo-tree-id1927 . -21) (undo-tree-id1928 . -21) (undo-tree-id1929 . -21) (undo-tree-id1930 . -21) (undo-tree-id1931 . -21) (undo-tree-id1932 . -21) (undo-tree-id1933 . -19) (undo-tree-id1934 . -19) (undo-tree-id1935 . -19) (undo-tree-id1936 . -19) (undo-tree-id1937 . -21) (undo-tree-id1938 . -21) (undo-tree-id1939 . -21) (undo-tree-id1940 . -21) (undo-tree-id1941 . -21) (undo-tree-id1942 . -21) (undo-tree-id1943 . -21) (undo-tree-id1944 . -21) (undo-tree-id1945 . -21) (undo-tree-id1946 . -21) (undo-tree-id1947 . -21) (undo-tree-id1948 . -21) (undo-tree-id1949 . -21) (undo-tree-id1950 . -21) (undo-tree-id1951 . -21) (undo-tree-id1952 . -21) (undo-tree-id1953 . -21) (undo-tree-id1954 . -21) (undo-tree-id1955 . -21) (undo-tree-id1956 . -21) (undo-tree-id1957 . -21) (undo-tree-id1958 . -21) (undo-tree-id1959 . -21) (undo-tree-id1960 . -21) (undo-tree-id1961 . -21) (undo-tree-id1962 . -21) (undo-tree-id1963 . -21) (undo-tree-id1964 . -21) (undo-tree-id1965 . -21) (undo-tree-id1966 . -21) (undo-tree-id1967 . -21) (undo-tree-id1968 . -21) (undo-tree-id1969 . -21) (undo-tree-id1970 . -21) (undo-tree-id1971 . -21) (undo-tree-id1972 . -21) (undo-tree-id1973 . -19) (undo-tree-id1974 . -19) (undo-tree-id1975 . -19) (undo-tree-id1976 . -19) (undo-tree-id1977 . -21) (undo-tree-id1978 . -21) (undo-tree-id1979 . -21) (undo-tree-id1980 . -21) (undo-tree-id1981 . -21) (undo-tree-id1982 . -21) (undo-tree-id1983 . -21) (undo-tree-id1984 . -21) (undo-tree-id1985 . -21) (undo-tree-id1986 . -21) (undo-tree-id1987 . -21) (undo-tree-id1988 . -21) (undo-tree-id1989 . -21) (undo-tree-id1990 . -21) (undo-tree-id1991 . -21) (undo-tree-id1992 . -21) (undo-tree-id1993 . -21) (undo-tree-id1994 . -21) (undo-tree-id1995 . -21) (undo-tree-id1996 . -21) (undo-tree-id1997 . -21) (undo-tree-id1998 . -21) (undo-tree-id1999 . -21) (undo-tree-id2000 . -21) (undo-tree-id2001 . -21) (undo-tree-id2002 . -21) (undo-tree-id2003 . -21) (undo-tree-id2004 . -21) (undo-tree-id2005 . -21) (undo-tree-id2006 . -21) (undo-tree-id2007 . -21) (undo-tree-id2008 . -21) (undo-tree-id2009 . -21) (undo-tree-id2010 . -21) (undo-tree-id2011 . -21) (undo-tree-id2012 . -21) (undo-tree-id2013 . -21) (undo-tree-id2014 . -21) (undo-tree-id2015 . -21) (undo-tree-id2016 . -21) (undo-tree-id2017 . -21) (undo-tree-id2018 . -21) (undo-tree-id2019 . -21) (undo-tree-id2020 . -21) (undo-tree-id2021 . -21) (undo-tree-id2022 . -21) (undo-tree-id2023 . -21) (undo-tree-id2024 . -21) (undo-tree-id2025 . -21) (undo-tree-id2026 . -21) (undo-tree-id2027 . -21) (undo-tree-id2028 . -21) (undo-tree-id2029 . -21) (undo-tree-id2030 . -21) (undo-tree-id2031 . -21) (undo-tree-id2032 . -21) (undo-tree-id2033 . -21) (undo-tree-id2034 . -21) (undo-tree-id2035 . -21) (undo-tree-id2036 . -21) (undo-tree-id2037 . -21) (undo-tree-id2038 . -21) (undo-tree-id2039 . -21) (undo-tree-id2040 . -21) (undo-tree-id2041 . -21) (undo-tree-id2042 . -21) (undo-tree-id2043 . -21) (undo-tree-id2044 . -21) (undo-tree-id2045 . -82) 21485 (t 26030 32429 903307 897000)) nil (26030 32468 362229 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -21463) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1)) nil (26030 32468 362112 0) 0 nil])
([nil nil ((#("
import os

os.environ['PATH'] += os.pathsep + '/usr/local/bin'
os.environ['PATH'] += os.pathsep + '/usr/bin'
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 15 (fontified t) 15 22 (face font-lock-variable-name-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 29 (face font-lock-string-face fontified t) 29 30 (face (rainbow-delimiters-depth-1-face) fontified t) 30 31 (fontified t) 31 33 (face font-lock-operator-face fontified t) 33 45 (fontified t) 45 46 (face font-lock-operator-face fontified t) 46 47 (fontified t) 47 63 (face font-lock-string-face fontified t) 63 67 (fontified t) 67 74 (face font-lock-variable-name-face fontified t) 74 75 (face (rainbow-delimiters-depth-1-face) fontified t) 75 81 (face font-lock-string-face fontified t) 81 82 (face (rainbow-delimiters-depth-1-face) fontified t) 82 83 (fontified t) 83 85 (face font-lock-operator-face fontified t) 85 97 (fontified t) 97 98 (face font-lock-operator-face fontified t) 98 99 (fontified t) 99 109 (face font-lock-string-face fontified t) 109 110 (fontified t)) . 21353) (undo-tree-id2064 . -64) (undo-tree-id2065 . -109) (undo-tree-id2066 . -110) (undo-tree-id2067 . -110) (undo-tree-id2068 . -110) (undo-tree-id2069 . -110) (undo-tree-id2070 . -110) (undo-tree-id2071 . -110) (undo-tree-id2072 . -110) (undo-tree-id2073 . -110) (undo-tree-id2074 . -110) (undo-tree-id2075 . -110) (undo-tree-id2076 . -110) (undo-tree-id2077 . -110) (undo-tree-id2078 . -110) (undo-tree-id2079 . -110) (undo-tree-id2080 . -110) (undo-tree-id2081 . -110) (undo-tree-id2082 . -110) (undo-tree-id2083 . -64) (undo-tree-id2084 . -110) (undo-tree-id2085 . -110) (undo-tree-id2086 . -110) (undo-tree-id2087 . -110) (undo-tree-id2088 . -110) (undo-tree-id2089 . -110) (undo-tree-id2090 . -110) (undo-tree-id2091 . -110) (undo-tree-id2092 . -110) (undo-tree-id2093 . -110) (undo-tree-id2094 . -110) (undo-tree-id2095 . -110) (undo-tree-id2096 . -110) (undo-tree-id2097 . -110) (undo-tree-id2098 . -110) (undo-tree-id2099 . -110) (undo-tree-id2100 . -110) (undo-tree-id2101 . -110) (undo-tree-id2102 . -110) (undo-tree-id2103 . -110) (undo-tree-id2104 . -110) (undo-tree-id2105 . -110) (undo-tree-id2106 . -110) (undo-tree-id2107 . -110) (undo-tree-id2108 . -110) (undo-tree-id2109 . -110) (undo-tree-id2110 . -110) (undo-tree-id2111 . -110) (undo-tree-id2112 . -110) (undo-tree-id2113 . -110) (undo-tree-id2114 . -110) (undo-tree-id2115 . -110) (undo-tree-id2116 . -110) (undo-tree-id2117 . -110) (undo-tree-id2118 . -110) (undo-tree-id2119 . -110) (undo-tree-id2120 . -110) (undo-tree-id2121 . -110) (undo-tree-id2122 . -110) (undo-tree-id2123 . -110) (undo-tree-id2124 . -110) (undo-tree-id2125 . -110) (undo-tree-id2126 . -110) (undo-tree-id2127 . -110) (undo-tree-id2128 . -110) (undo-tree-id2129 . -110) (undo-tree-id2130 . -110) (undo-tree-id2131 . -110) (undo-tree-id2132 . -110) (undo-tree-id2133 . -110) (undo-tree-id2134 . -110) (undo-tree-id2135 . -110) (undo-tree-id2136 . -110) (undo-tree-id2137 . -110) (undo-tree-id2138 . -110) (undo-tree-id2139 . -110) (undo-tree-id2140 . -110) (undo-tree-id2141 . -110) (undo-tree-id2142 . -110) (undo-tree-id2143 . -110) (undo-tree-id2144 . -110) (undo-tree-id2145 . -110) (undo-tree-id2146 . -110) (undo-tree-id2147 . -110) (undo-tree-id2148 . -110) (undo-tree-id2149 . -110) (undo-tree-id2150 . -110) (undo-tree-id2151 . -110) (undo-tree-id2152 . -110) (undo-tree-id2153 . -110) (undo-tree-id2154 . -110) (undo-tree-id2155 . -110) (undo-tree-id2156 . -110) (undo-tree-id2157 . -110) (undo-tree-id2158 . -110) (undo-tree-id2159 . -110) (undo-tree-id2160 . -110) (undo-tree-id2161 . -110) (undo-tree-id2162 . -110) (undo-tree-id2163 . -110) (undo-tree-id2164 . -110) (undo-tree-id2165 . -110) (undo-tree-id2166 . -110) (undo-tree-id2167 . -110) (undo-tree-id2168 . -110) (undo-tree-id2169 . -110) (undo-tree-id2170 . -110) (undo-tree-id2171 . -110) (undo-tree-id2172 . -110) (undo-tree-id2173 . -110) (undo-tree-id2174 . -110) (undo-tree-id2175 . -110) (undo-tree-id2176 . -110) (undo-tree-id2177 . -110) (undo-tree-id2178 . -110) (undo-tree-id2179 . -110) (undo-tree-id2180 . -110) (undo-tree-id2181 . -110) (undo-tree-id2182 . -110) (undo-tree-id2183 . -110) (undo-tree-id2184 . -110) (undo-tree-id2185 . -110) (undo-tree-id2186 . -110) (undo-tree-id2187 . -110) (undo-tree-id2188 . -110) (undo-tree-id2189 . -110) (undo-tree-id2190 . -110) (undo-tree-id2191 . -110) (undo-tree-id2192 . -110) (undo-tree-id2193 . -110) (undo-tree-id2194 . -110) (undo-tree-id2195 . -110) (undo-tree-id2196 . -110) (undo-tree-id2197 . -110) (undo-tree-id2198 . -110) (undo-tree-id2199 . -110) (undo-tree-id2200 . -110) (undo-tree-id2201 . -110) (undo-tree-id2202 . -110) (undo-tree-id2203 . -110) (undo-tree-id2204 . -110) (undo-tree-id2205 . -110) (undo-tree-id2206 . -110) (undo-tree-id2207 . -110) (undo-tree-id2208 . -110) (undo-tree-id2209 . -110) (undo-tree-id2210 . -110) (undo-tree-id2211 . -110) (undo-tree-id2212 . -110) (undo-tree-id2213 . -110) (undo-tree-id2214 . -110) (undo-tree-id2215 . -110) (undo-tree-id2216 . -110) (undo-tree-id2217 . -110) (undo-tree-id2218 . -110) (undo-tree-id2219 . -110) (undo-tree-id2220 . -110) (undo-tree-id2221 . -110) (undo-tree-id2222 . -110) (undo-tree-id2223 . -110) (undo-tree-id2224 . -110) (undo-tree-id2225 . -110) (undo-tree-id2226 . -110) (undo-tree-id2227 . -110) (undo-tree-id2228 . -110) (undo-tree-id2229 . -110) (undo-tree-id2230 . -110) (undo-tree-id2231 . -110) (undo-tree-id2232 . -110) (undo-tree-id2233 . -110) (undo-tree-id2234 . -110) (undo-tree-id2235 . -110) (undo-tree-id2236 . -110) (undo-tree-id2237 . -110) (undo-tree-id2238 . -110) (undo-tree-id2239 . -110) (undo-tree-id2240 . -110) (undo-tree-id2241 . -110) (undo-tree-id2242 . -110) (undo-tree-id2243 . -110) (undo-tree-id2244 . -110) (undo-tree-id2245 . -110) (undo-tree-id2246 . -110) (undo-tree-id2247 . -110) (undo-tree-id2248 . -110) (undo-tree-id2249 . -110) (undo-tree-id2250 . -110) (undo-tree-id2251 . -110) (undo-tree-id2252 . -110) (undo-tree-id2253 . -110) (undo-tree-id2254 . -110) (undo-tree-id2255 . -110) (undo-tree-id2256 . -110) (undo-tree-id2257 . -110) (undo-tree-id2258 . -110) (undo-tree-id2259 . -110) (undo-tree-id2260 . -110) (undo-tree-id2261 . -110) (undo-tree-id2262 . -110) (undo-tree-id2263 . -110) (undo-tree-id2264 . -110) (undo-tree-id2265 . -110) (undo-tree-id2266 . -110) (undo-tree-id2267 . -110) (undo-tree-id2268 . -110) (undo-tree-id2269 . -110) (undo-tree-id2270 . -110) (undo-tree-id2271 . -110) (undo-tree-id2272 . -110) (undo-tree-id2273 . -110) (undo-tree-id2274 . -110) (undo-tree-id2275 . -110) (undo-tree-id2276 . -110) (undo-tree-id2277 . -110) (undo-tree-id2278 . -110) (undo-tree-id2279 . -110) (undo-tree-id2280 . -110) (undo-tree-id2281 . -110) (undo-tree-id2282 . -110) (undo-tree-id2283 . -110) (undo-tree-id2284 . -110) (undo-tree-id2285 . -110) (undo-tree-id2286 . -110) (undo-tree-id2287 . -110) (undo-tree-id2288 . -110) (undo-tree-id2289 . -110) (undo-tree-id2290 . -110) (undo-tree-id2291 . -110) (undo-tree-id2292 . -110) (undo-tree-id2293 . -110) (undo-tree-id2294 . -110) (undo-tree-id2295 . -110) (undo-tree-id2296 . -110) (undo-tree-id2297 . -110) (undo-tree-id2298 . -110) (undo-tree-id2299 . -110) (undo-tree-id2300 . -110) (undo-tree-id2301 . -110) (undo-tree-id2302 . -110) (undo-tree-id2303 . -110) (undo-tree-id2304 . -110) (undo-tree-id2305 . -110) (undo-tree-id2306 . -110) (undo-tree-id2307 . -110) (undo-tree-id2308 . -110) (undo-tree-id2309 . -110) (undo-tree-id2310 . -110) (undo-tree-id2311 . -110) (undo-tree-id2312 . -110) (undo-tree-id2313 . -110) (undo-tree-id2314 . -110) (undo-tree-id2315 . -110) (undo-tree-id2316 . -110) (undo-tree-id2317 . -110) (undo-tree-id2318 . -110) (undo-tree-id2319 . -110) (undo-tree-id2320 . -110) (undo-tree-id2321 . -110) (undo-tree-id2322 . -110) (undo-tree-id2323 . -110) (undo-tree-id2324 . -110) (undo-tree-id2325 . -110) (undo-tree-id2326 . -110) (undo-tree-id2327 . -110) (undo-tree-id2328 . -110) (undo-tree-id2329 . -110) (undo-tree-id2330 . -110) (undo-tree-id2331 . -110) (undo-tree-id2332 . -110) (undo-tree-id2333 . -110) (undo-tree-id2334 . -110) (undo-tree-id2335 . -110) (undo-tree-id2336 . -110) (undo-tree-id2337 . -110) (undo-tree-id2338 . -110) (undo-tree-id2339 . -110) (undo-tree-id2340 . -110) (undo-tree-id2341 . -110) (undo-tree-id2342 . -110) (undo-tree-id2343 . -110) (undo-tree-id2344 . -110) (undo-tree-id2345 . -110) (undo-tree-id2346 . -110) (undo-tree-id2347 . -110) (undo-tree-id2348 . -110) (undo-tree-id2349 . -110) (undo-tree-id2350 . -110) (undo-tree-id2351 . -110) (undo-tree-id2352 . -110) (undo-tree-id2353 . -110) (undo-tree-id2354 . -110) (undo-tree-id2355 . -110) (undo-tree-id2356 . -110) (undo-tree-id2357 . -110) (undo-tree-id2358 . -110) (undo-tree-id2359 . -110) (undo-tree-id2360 . -110) (undo-tree-id2361 . -110) (undo-tree-id2362 . -110) (undo-tree-id2363 . -110) (undo-tree-id2364 . -110) (undo-tree-id2365 . -110) (undo-tree-id2366 . -110) (undo-tree-id2367 . -110) (undo-tree-id2368 . -110) (undo-tree-id2369 . -110) (undo-tree-id2370 . -110) (undo-tree-id2371 . -110) (undo-tree-id2372 . -110) (undo-tree-id2373 . -110) (undo-tree-id2374 . -110) (undo-tree-id2375 . -110) (undo-tree-id2376 . -110) (undo-tree-id2377 . -110) (undo-tree-id2378 . -110) (undo-tree-id2379 . -110) (undo-tree-id2380 . -110) (undo-tree-id2381 . -110) (undo-tree-id2382 . -110) (undo-tree-id2383 . -110) (undo-tree-id2384 . -110) (undo-tree-id2385 . -110) (undo-tree-id2386 . -110) (undo-tree-id2387 . -110) (undo-tree-id2388 . -110) (undo-tree-id2389 . -110) (undo-tree-id2390 . -110) (undo-tree-id2391 . -110) (undo-tree-id2392 . -110) (undo-tree-id2393 . -110) (undo-tree-id2394 . -110) (undo-tree-id2395 . -110) (undo-tree-id2396 . -110) (undo-tree-id2397 . -110) (undo-tree-id2398 . -110) (undo-tree-id2399 . -110) (undo-tree-id2400 . -110) (undo-tree-id2401 . -110) (undo-tree-id2402 . -110) (undo-tree-id2403 . -110) (undo-tree-id2404 . -110) (undo-tree-id2405 . -110) (undo-tree-id2406 . -110) (undo-tree-id2407 . -110) (undo-tree-id2408 . -110) (undo-tree-id2409 . -110) (undo-tree-id2410 . -110) (undo-tree-id2411 . -110) (undo-tree-id2412 . -110) (undo-tree-id2413 . -110) (undo-tree-id2414 . -110) (undo-tree-id2415 . -110) (undo-tree-id2416 . -110) (undo-tree-id2417 . -110) (undo-tree-id2418 . -110) (undo-tree-id2419 . -110) (undo-tree-id2420 . -110) (undo-tree-id2421 . -110) (undo-tree-id2422 . -110) (undo-tree-id2423 . -110) (undo-tree-id2424 . -110) (undo-tree-id2425 . -110) (undo-tree-id2426 . -110) (undo-tree-id2427 . -110) (undo-tree-id2428 . -110) (undo-tree-id2429 . -110) (undo-tree-id2430 . -110) (undo-tree-id2431 . -110) (undo-tree-id2432 . -110) (undo-tree-id2433 . -110) (undo-tree-id2434 . -110) (undo-tree-id2435 . -110) (undo-tree-id2436 . -110) (undo-tree-id2437 . -110) (undo-tree-id2438 . -110) (undo-tree-id2439 . -110) (undo-tree-id2440 . -110) (undo-tree-id2441 . -110) (undo-tree-id2442 . -110) (undo-tree-id2443 . -110) (undo-tree-id2444 . -110) (undo-tree-id2445 . -110) (undo-tree-id2446 . -110) (undo-tree-id2447 . -110) (undo-tree-id2448 . -110) (undo-tree-id2449 . -110) (undo-tree-id2450 . -110) (undo-tree-id2451 . -110) (undo-tree-id2452 . -110) (undo-tree-id2453 . -110) (undo-tree-id2454 . -110) (undo-tree-id2455 . -64) (undo-tree-id2456 . -64) (undo-tree-id2457 . -64) (undo-tree-id2458 . -64) (undo-tree-id2459 . -64) (undo-tree-id2460 . -64) (undo-tree-id2461 . -64) (undo-tree-id2462 . -64) (undo-tree-id2463 . -64) (undo-tree-id2464 . -64) (undo-tree-id2465 . -64) (undo-tree-id2466 . -64) (undo-tree-id2467 . -64) (undo-tree-id2468 . -64) (undo-tree-id2469 . -64) (undo-tree-id2470 . -64) (undo-tree-id2471 . -64) (undo-tree-id2472 . -64) (undo-tree-id2473 . -64) (undo-tree-id2474 . -64) (undo-tree-id2475 . -64) (undo-tree-id2476 . -64) (undo-tree-id2477 . -64) (undo-tree-id2478 . -64) (undo-tree-id2479 . -64) (undo-tree-id2480 . -64) (undo-tree-id2481 . -64) (undo-tree-id2482 . -64) (undo-tree-id2483 . -64) (undo-tree-id2484 . -64) (undo-tree-id2485 . -64) (undo-tree-id2486 . -64) (undo-tree-id2487 . -12) (undo-tree-id2488 . -12) (undo-tree-id2489 . -12) (undo-tree-id2490 . -12) (undo-tree-id2491 . -12) (undo-tree-id2492 . -12) (undo-tree-id2493 . -12) (undo-tree-id2494 . -12) (undo-tree-id2495 . -12) (undo-tree-id2496 . -12) (undo-tree-id2497 . -11) (undo-tree-id2498 . -11) (undo-tree-id2499 . -11) (undo-tree-id2500 . -11) (undo-tree-id2501 . -11) (undo-tree-id2502 . -11) (undo-tree-id2503 . -11) (undo-tree-id2504 . -11) (undo-tree-id2505 . -11) (undo-tree-id2506 . -11) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -110) (t 26030 32468 366525 487000)) nil (26030 32471 46021 0) 0 nil])
([nil nil ((21353 . 21354) (t 26030 32471 50516 55000) 21353) nil (26030 63245 413405 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21669 . 21670) (nil fontified nil 21354 . 21670) (21354 . 21670)) nil (26030 63245 413404 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21914 . 21915) (nil fontified nil 21670 . 21915) (21670 . 21915)) nil (26030 63245 413403 0) 0 nil])
([nil nil ((#("c.editor.command = ['kitty', '--single-instance', 'nvim', '{}']
" 0 9 (fontified t) 9 16 (face font-lock-variable-name-face fontified t) 16 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 19 (fontified t) 19 20 (face (rainbow-delimiters-depth-1-face) fontified t) 20 27 (face font-lock-string-face fontified t) 27 29 (fontified t) 29 48 (face font-lock-string-face fontified t) 48 50 (fontified t) 50 56 (face font-lock-string-face fontified t) 56 58 (fontified t) 58 62 (face font-lock-string-face fontified t) 62 63 (face (rainbow-delimiters-depth-1-face) fontified t) 63 64 (rear-nonsticky t fontified t)) . 21606) (undo-tree-id3202 . -64) (undo-tree-id3203 . -63) (undo-tree-id3204 . -64) (undo-tree-id3205 . -64) (undo-tree-id3206 . -64) (undo-tree-id3207 . -64) (undo-tree-id3208 . -64) (undo-tree-id3209 . -64) (undo-tree-id3210 . -64) (undo-tree-id3211 . -64) (undo-tree-id3212 . -64) (undo-tree-id3213 . -64) (undo-tree-id3214 . -64) (undo-tree-id3215 . -64) (undo-tree-id3216 . -64) (undo-tree-id3217 . -64) (undo-tree-id3218 . -64) (undo-tree-id3219 . -64) (undo-tree-id3220 . -64) (undo-tree-id3221 . -64) (undo-tree-id3222 . -64) (undo-tree-id3223 . -64) (undo-tree-id3224 . -64) (undo-tree-id3225 . -64) (undo-tree-id3226 . -64) (undo-tree-id3227 . -64) (undo-tree-id3228 . -64) (undo-tree-id3229 . -64) (undo-tree-id3230 . -64) (undo-tree-id3231 . -64) (undo-tree-id3232 . -64) (undo-tree-id3233 . -64) (undo-tree-id3234 . -64) (undo-tree-id3235 . -64) (undo-tree-id3236 . -64) (undo-tree-id3237 . -64) (undo-tree-id3238 . -64) (undo-tree-id3239 . -64) (undo-tree-id3240 . -64) (undo-tree-id3241 . -64) (undo-tree-id3242 . -64) (undo-tree-id3243 . -64) (undo-tree-id3244 . -64) (undo-tree-id3245 . -64) (undo-tree-id3246 . -64) (undo-tree-id3247 . -64) (undo-tree-id3248 . -64) (undo-tree-id3249 . -64) (undo-tree-id3250 . -64) (undo-tree-id3251 . -64) (undo-tree-id3252 . -64) (undo-tree-id3253 . -64) (undo-tree-id3254 . -64) (undo-tree-id3255 . -64) (undo-tree-id3256 . -64) (undo-tree-id3257 . -64) (undo-tree-id3258 . -64) (undo-tree-id3259 . -64)) nil (26030 63245 413401 0) 0 nil])
([nil nil ((#("import os

os.environ['PATH'] += os.pathsep + '/usr/local/bin'
os.environ['PATH'] += os.pathsep + '/usr/bin'
os.environ['NODE_PATH'] += os.pathsep + '/usr/local/lib/node_modules'

" 0 6 (face font-lock-keyword-face fontified t) 6 9 (fontified t) 9 10 (fontified t) 10 14 (fontified t) 14 21 (face font-lock-variable-name-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 28 (face font-lock-string-face fontified t) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t) 29 30 (fontified t) 30 32 (face font-lock-operator-face fontified t) 32 44 (fontified t) 44 45 (face font-lock-operator-face fontified t) 45 46 (fontified t) 46 62 (face font-lock-string-face fontified t) 62 66 (fontified t) 66 73 (face font-lock-variable-name-face fontified t) 73 74 (face (rainbow-delimiters-depth-1-face) fontified t) 74 80 (face font-lock-string-face fontified t) 80 81 (face (rainbow-delimiters-depth-1-face) fontified t) 81 82 (fontified t) 82 84 (face font-lock-operator-face fontified t) 84 96 (fontified t) 96 97 (face font-lock-operator-face fontified t) 97 98 (fontified t) 98 108 (face font-lock-string-face fontified t) 108 112 (fontified t) 112 119 (face font-lock-variable-name-face fontified t) 119 120 (face (rainbow-delimiters-depth-1-face) fontified t) 120 131 (face font-lock-string-face fontified t) 131 132 (face (rainbow-delimiters-depth-1-face) fontified t) 132 133 (fontified t) 133 135 (face font-lock-operator-face fontified t) 135 147 (fontified t) 147 148 (face font-lock-operator-face fontified t) 148 149 (fontified t) 149 178 (face font-lock-string-face fontified t) 178 180 (fontified t)) . 21606) (undo-tree-id3018 . -179) (undo-tree-id3019 . -179) (undo-tree-id3020 . -179) (undo-tree-id3021 . -179) (undo-tree-id3022 . -11) (undo-tree-id3023 . -11) (undo-tree-id3024 . -33) (undo-tree-id3025 . -11) (undo-tree-id3026 . -11) (undo-tree-id3027 . -33) (undo-tree-id3028 . -63) (undo-tree-id3029 . -63) (undo-tree-id3030 . -85) (undo-tree-id3031 . -63) (undo-tree-id3032 . -63) (undo-tree-id3033 . -85) (undo-tree-id3034 . -109) (undo-tree-id3035 . -109) (undo-tree-id3036 . -136) (undo-tree-id3037 . -109) (undo-tree-id3038 . -109) (undo-tree-id3039 . -136) (undo-tree-id3040 . -180) (undo-tree-id3041 . -180) (undo-tree-id3042 . -180) (undo-tree-id3043 . -180) (undo-tree-id3044 . -180) (undo-tree-id3045 . -180) (undo-tree-id3046 . -180) (undo-tree-id3047 . -180) (undo-tree-id3048 . -180) (undo-tree-id3049 . -180) (undo-tree-id3050 . -180) (undo-tree-id3051 . -180) (undo-tree-id3052 . -180) (undo-tree-id3053 . -180) (undo-tree-id3054 . -180) (undo-tree-id3055 . -179) (undo-tree-id3056 . -179) (undo-tree-id3057 . -179) (undo-tree-id3058 . -179) (undo-tree-id3059 . -179) (undo-tree-id3060 . -179) (undo-tree-id3061 . -179) (undo-tree-id3062 . -179) (undo-tree-id3063 . -179) (undo-tree-id3064 . -179) (undo-tree-id3065 . -109) (undo-tree-id3066 . -109) (undo-tree-id3067 . -109) (undo-tree-id3068 . -109) (undo-tree-id3069 . -109) (undo-tree-id3070 . -109) (undo-tree-id3071 . -109) (undo-tree-id3072 . -109) (undo-tree-id3073 . -109) (undo-tree-id3074 . -109) (undo-tree-id3075 . -63) (undo-tree-id3076 . -63) (undo-tree-id3077 . -63) (undo-tree-id3078 . -63) (undo-tree-id3079 . -63) (undo-tree-id3080 . -63) (undo-tree-id3081 . -63) (undo-tree-id3082 . -63) (undo-tree-id3083 . -63) (undo-tree-id3084 . -63) (undo-tree-id3085 . -11) (undo-tree-id3086 . -11) (undo-tree-id3087 . -11) (undo-tree-id3088 . -11) (undo-tree-id3089 . -11) (undo-tree-id3090 . -11) (undo-tree-id3091 . -11) (undo-tree-id3092 . -11) (undo-tree-id3093 . -11) (undo-tree-id3094 . -11) (undo-tree-id3095 . -10) (undo-tree-id3096 . -10) (undo-tree-id3097 . -10) (undo-tree-id3098 . -10) (undo-tree-id3099 . -10) (undo-tree-id3100 . -10) (undo-tree-id3101 . -10) (undo-tree-id3102 . -10) (undo-tree-id3103 . -10) (undo-tree-id3104 . -10) (undo-tree-id3105 . -9) (undo-tree-id3106 . -11) (undo-tree-id3107 . -11) (undo-tree-id3108 . -33) (undo-tree-id3109 . -11) (undo-tree-id3110 . -11) (undo-tree-id3111 . -33) (undo-tree-id3112 . -63) (undo-tree-id3113 . -63) (undo-tree-id3114 . -85) (undo-tree-id3115 . -63) (undo-tree-id3116 . -63) (undo-tree-id3117 . -85) (undo-tree-id3118 . -109) (undo-tree-id3119 . -109) (undo-tree-id3120 . -136) (undo-tree-id3121 . -109) (undo-tree-id3122 . -109) (undo-tree-id3123 . -136) (undo-tree-id3124 . -10) (undo-tree-id3125 . -10) (undo-tree-id3126 . -10) (undo-tree-id3127 . -10) (undo-tree-id3128 . -10) (undo-tree-id3129 . -10) (undo-tree-id3130 . -10) (undo-tree-id3131 . -10) (undo-tree-id3132 . -10) (undo-tree-id3133 . -10) (undo-tree-id3134 . -10) (undo-tree-id3135 . -10) (undo-tree-id3136 . -10) (undo-tree-id3137 . -10) (undo-tree-id3138 . -10) (undo-tree-id3139 . -11) (undo-tree-id3140 . -11) (undo-tree-id3141 . -11) (undo-tree-id3142 . -11) (undo-tree-id3143 . -11) (undo-tree-id3144 . -11) (undo-tree-id3145 . -11) (undo-tree-id3146 . -11) (undo-tree-id3147 . -11) (undo-tree-id3148 . -11) (undo-tree-id3149 . -11) (undo-tree-id3150 . -11) (undo-tree-id3151 . -11) (undo-tree-id3152 . -11) (undo-tree-id3153 . -11) (undo-tree-id3154 . -63) (undo-tree-id3155 . -63) (undo-tree-id3156 . -63) (undo-tree-id3157 . -63) (undo-tree-id3158 . -63) (undo-tree-id3159 . -63) (undo-tree-id3160 . -63) (undo-tree-id3161 . -63) (undo-tree-id3162 . -63) (undo-tree-id3163 . -63) (undo-tree-id3164 . -63) (undo-tree-id3165 . -63) (undo-tree-id3166 . -63) (undo-tree-id3167 . -63) (undo-tree-id3168 . -63) (undo-tree-id3169 . -109) (undo-tree-id3170 . -109) (undo-tree-id3171 . -109) (undo-tree-id3172 . -109) (undo-tree-id3173 . -109) (undo-tree-id3174 . -109) (undo-tree-id3175 . -109) (undo-tree-id3176 . -109) (undo-tree-id3177 . -109) (undo-tree-id3178 . -109) (undo-tree-id3179 . -109) (undo-tree-id3180 . -109) (undo-tree-id3181 . -109) (undo-tree-id3182 . -109) (undo-tree-id3183 . -109) (undo-tree-id3184 . -179) (undo-tree-id3185 . -179) (undo-tree-id3186 . -179) (undo-tree-id3187 . -179) (undo-tree-id3188 . -179) (undo-tree-id3189 . -179) (undo-tree-id3190 . -179) (undo-tree-id3191 . -179) (undo-tree-id3192 . -179) (undo-tree-id3193 . -179) (undo-tree-id3194 . -179) (undo-tree-id3195 . -179) (undo-tree-id3196 . -179) (undo-tree-id3197 . -179) (undo-tree-id3198 . -179) (undo-tree-id3199 . -179) (undo-tree-id3200 . -179) (undo-tree-id3201 . -180) 21785) nil (26030 63245 413364 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21605) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1)) nil (26030 63245 413254 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21605) (undo-tree-id2590 . 1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1)) nil (26030 63245 413027 0) 0 nil])
([nil nil ((#("os.environ['NODE_PATH'] += os.pathsep + '/usr/local/lib/node_modules'
" 0 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 22 (face font-lock-string-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (fontified t) 24 26 (face font-lock-operator-face fontified t) 26 38 (fontified t) 38 39 (face font-lock-operator-face fontified t) 39 40 (fontified t) 40 69 (face font-lock-string-face fontified t) 69 70 (fontified t)) . 21534) (undo-tree-id2559 . -69) (undo-tree-id2560 . -70) (undo-tree-id2561 . -70) (undo-tree-id2562 . -70) (undo-tree-id2563 . -70) (undo-tree-id2564 . -70) (undo-tree-id2565 . -70) (undo-tree-id2566 . -70) (undo-tree-id2567 . -70) (undo-tree-id2568 . -70) (undo-tree-id2569 . -70) (undo-tree-id2570 . -70) (undo-tree-id2571 . -70) (undo-tree-id2572 . -70) (undo-tree-id2573 . -70) (undo-tree-id2574 . -70) (undo-tree-id2575 . -70) (undo-tree-id2576 . -70) (undo-tree-id2577 . -70) (undo-tree-id2578 . -70) (undo-tree-id2579 . -70) (undo-tree-id2580 . -70) (undo-tree-id2581 . -70) (undo-tree-id2582 . -70) (undo-tree-id2583 . -70) (undo-tree-id2584 . -70) (undo-tree-id2585 . -70) (undo-tree-id2586 . -70) (undo-tree-id2587 . -70) (undo-tree-id2588 . -70) (undo-tree-id2589 . -70)) nil (26030 63245 413005 0) 0 nil])
([nil nil ((#("On macOS big sur, I needed all of this to get it working with kitty:
" 0 27 (fontified t) 27 30 (face font-lock-builtin-face fontified t) 30 57 (fontified t) 57 61 (face font-lock-keyword-face fontified t) 61 69 (fontified t)) . 21355) (undo-tree-id2532 . -68) (undo-tree-id2533 . -69) (undo-tree-id2534 . -69) (undo-tree-id2535 . -69) (undo-tree-id2536 . -69) (undo-tree-id2537 . -69) (undo-tree-id2538 . -69) (undo-tree-id2539 . -69) (undo-tree-id2540 . -69) (undo-tree-id2541 . -69) (undo-tree-id2542 . -69) (undo-tree-id2543 . -69) (undo-tree-id2544 . -69) (undo-tree-id2545 . -69) (undo-tree-id2546 . -69) (undo-tree-id2547 . -69) (undo-tree-id2548 . -69) (undo-tree-id2549 . -69) (undo-tree-id2550 . -69) (undo-tree-id2551 . -69) (undo-tree-id2552 . -69) (undo-tree-id2553 . -69) (undo-tree-id2554 . -69) (undo-tree-id2555 . -69) (undo-tree-id2556 . -69) (undo-tree-id2557 . -69) (undo-tree-id2558 . -69)) nil (26030 63245 412987 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21355) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1)) nil (26030 63245 412970 0) 0 nil])
([nil nil ((21516 . 21518) (#("nvim" 0 4 (face font-lock-string-face fontified t)) . 21516) (undo-tree-id2518 . -3) (undo-tree-id2519 . -4) (undo-tree-id2520 . -4)) nil (26030 63245 412960 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21354) (undo-tree-id3260 . -1) (t 26030 63245 423978 566000)) nil (26030 63278 689294 0) 0 nil])
([nil nil ((21462 . 21463) (t 26030 63278 696941 256000) 21417) nil (26030 63300 332222 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21532 . 21533) (nil fontified nil 21463 . 21533) (21463 . 21533)) nil (26030 63300 332221 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21533) (undo-tree-id3261 . 1) (undo-tree-id3262 . -1)) nil (26030 63300 332217 0) 0 nil])
([nil nil ((21505 . 21508) (#("usr" 0 3 (face font-lock-string-face fontified t)) . 21505) (undo-tree-id3265 . -2) (t 26030 63300 339701 501000)) nil (26030 63428 717330 0) 0 nil])
([nil nil ((21509 . 21517) (#("local" 0 5 (face font-lock-string-face fontified t)) . 21509) (undo-tree-id3264 . -4)) nil (26030 63428 717328 0) 0 nil])
([nil nil ((21518 . 21521) (#("lib" 0 3 (face font-lock-string-face fontified t)) . 21518) (undo-tree-id3263 . -2)) nil (26030 63428 717326 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717316 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717316 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717315 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717314 0) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717313 0) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717313 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717311 0) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . 21526)) nil (26030 63428 717306 0) 0 nil])
([nil nil ((21560 . 21564) (#("t" 0 1 (face font-lock-string-face fontified t)) . -21560) (undo-tree-id3276 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -21561) (undo-tree-id3277 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -21562) (undo-tree-id3278 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -21563) (undo-tree-id3279 . -1) 21564 (21550 . 21564) (#("kitty" 0 5 (face font-lock-string-face fontified t)) . 21550) (undo-tree-id3280 . -4) (t 26030 63428 723505 788000)) nil (26030 63631 628439 0) 0 nil])
([nil nil ((#("--" 0 2 (face font-lock-string-face fontified t)) . 21568) (undo-tree-id3275 . -1)) nil (26030 63631 628435 0) 0 nil])
([nil nil ((#("single-" 0 7 (face font-lock-string-face fontified t)) . 21568) (undo-tree-id3273 . 7) (undo-tree-id3274 . -6)) nil (26030 63631 628434 0) 0 nil])
([nil nil ((21569 . 21570) (#("m" 0 1 (face font-lock-string-face fontified t)) . -21569) (undo-tree-id3267 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -21570) (undo-tree-id3268 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -21571) (undo-tree-id3269 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -21572) (undo-tree-id3270 . -1) 21573 (21568 . 21573) (#("instance" 0 8 (face font-lock-string-face fontified t)) . 21568) (undo-tree-id3271 . 8) (undo-tree-id3272 . -7)) nil (26030 63631 628431 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 21574)) nil (26030 63631 628426 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . 21574)) nil (26030 63631 628425 0) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 21573)) nil (26030 63631 628425 0) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 21573)) nil (26030 63631 628424 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 21573)) nil (26030 63631 628423 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 21573)) nil (26030 63631 628422 0) 0 nil])
([nil nil ((21576 . 21579) (#("l" 0 1 (face font-lock-string-face fontified t)) . -21576) (undo-tree-id3266 . -1) 21577 (21575 . 21577)) nil (26030 63631 628418 0) 0 nil])
([nil nil ((#("os.environ['NODE_PATH'] += os.pathsep + '/opt/homebrew/bin/node'
" 0 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 22 (face font-lock-string-face fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) fontified t) 23 24 (fontified t) 24 26 (face font-lock-operator-face fontified t) 26 38 (fontified t) 38 39 (face font-lock-operator-face fontified t) 39 40 (fontified t) 40 64 (face font-lock-string-face fontified t) 64 65 (rear-nonsticky t fontified t)) . 21463) (undo-tree-id3281 . -64) (undo-tree-id3282 . -41) (undo-tree-id3283 . -65) (undo-tree-id3284 . -65) (undo-tree-id3285 . -65) (undo-tree-id3286 . -65) (undo-tree-id3287 . -65) (undo-tree-id3288 . -65) (undo-tree-id3289 . -65) (undo-tree-id3290 . -65) (undo-tree-id3291 . -65) (undo-tree-id3292 . -65) (undo-tree-id3293 . -65) (undo-tree-id3294 . -65) (undo-tree-id3295 . -65) (undo-tree-id3296 . -65) (undo-tree-id3297 . -65) (undo-tree-id3298 . -65) (undo-tree-id3299 . -41) (undo-tree-id3300 . -41) (undo-tree-id3301 . -41) (undo-tree-id3302 . -41) (undo-tree-id3303 . -41) (undo-tree-id3304 . -41) (undo-tree-id3305 . -41) (undo-tree-id3306 . -41) (undo-tree-id3307 . -41) (undo-tree-id3308 . -41) (undo-tree-id3309 . -41) (undo-tree-id3310 . -41) (undo-tree-id3311 . -41) (undo-tree-id3312 . -41) (undo-tree-id3313 . -41) (undo-tree-id3314 . -41) (undo-tree-id3315 . -41) (undo-tree-id3316 . -41) (undo-tree-id3317 . -41) (undo-tree-id3318 . -41) (undo-tree-id3319 . -41) (undo-tree-id3320 . -41) (undo-tree-id3321 . -41) (undo-tree-id3322 . -41) (undo-tree-id3323 . -41) (undo-tree-id3324 . -41) (undo-tree-id3325 . -41) (undo-tree-id3326 . -41) (undo-tree-id3327 . -41) (undo-tree-id3328 . -65) 21504 (t 26030 63631 635965 558000)) nil (26030 63664 386687 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21462 . 21463) (#("
" 0 1 (fontified nil)) . -21508) (21462 . 21509) 21426 (t 26030 63664 393928 892000)) nil (26030 63697 998058 0) 0 nil])
([nil nil ((21500 . 21505) (#("u" 0 1 (face font-lock-string-face fontified t)) . -21500) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) 21501 (21500 . 21501) (#("usr" 0 3 (face font-lock-string-face fontified t)) . 21500) (undo-tree-id3352 . -2) (undo-tree-id3353 . -3) (undo-tree-id3354 . -3)) nil (26030 63697 998056 0) 0 nil])
([nil nil ((21512 . 21532) (21506 . 21512) (#("bin" 0 3 (face font-lock-string-face fontified t)) . 21506) (undo-tree-id3329 . -2) (undo-tree-id3330 . -3) (undo-tree-id3331 . -3)) nil (26030 63697 998038 0) 0 nil])
([nil nil ((#("os.environ['PATH'] += os.pathsep + '/Users/najjt/Projects/kod/scripts'
" 0 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 17 (face font-lock-string-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t) 19 21 (face font-lock-operator-face fontified t) 21 33 (fontified t) 33 34 (face font-lock-operator-face fontified t) 34 35 (fontified t) 35 70 (face font-lock-string-face fontified t) 70 71 (fontified t)) . 21463) (undo-tree-id4094 . -68) (undo-tree-id4095 . 2) (undo-tree-id4096 . -70) (undo-tree-id4097 . -71) (undo-tree-id4098 . -68) (undo-tree-id4099 . -68) (undo-tree-id4100 . -68) (undo-tree-id4101 . -68) (undo-tree-id4102 . -68) (undo-tree-id4103 . -68) (undo-tree-id4104 . -68) (undo-tree-id4105 . -68) (undo-tree-id4106 . -68) (undo-tree-id4107 . -68) (undo-tree-id4108 . -68) (undo-tree-id4109 . -68) (undo-tree-id4110 . -68) (undo-tree-id4111 . -68) (undo-tree-id4112 . -68) (undo-tree-id4113 . -68) (undo-tree-id4114 . -68) (undo-tree-id4115 . -68) (undo-tree-id4116 . -68) (undo-tree-id4117 . -68) (undo-tree-id4118 . -68) (undo-tree-id4119 . -68) (undo-tree-id4120 . -68) (undo-tree-id4121 . -68) (undo-tree-id4122 . -68) (undo-tree-id4123 . -68) (undo-tree-id4124 . -68) (undo-tree-id4125 . -68) (undo-tree-id4126 . -68) (undo-tree-id4127 . -68) (undo-tree-id4128 . -68) (undo-tree-id4129 . -68) (undo-tree-id4130 . -68) (undo-tree-id4131 . -68) (undo-tree-id4132 . -68) (undo-tree-id4133 . -68) (undo-tree-id4134 . -68) (undo-tree-id4135 . -68) (undo-tree-id4136 . -68) (undo-tree-id4137 . -68) (undo-tree-id4138 . -71) 21531 (t 26030 63698 5665 244000)) nil (26030 63778 147399 0) 0 nil])
([nil nil ((#("os.environ['PATH'] += os.pathsep + '/usr/bin'
" 0 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 17 (face font-lock-string-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t) 19 21 (face font-lock-operator-face fontified t) 21 33 (fontified t) 33 34 (face font-lock-operator-face fontified t) 34 35 (fontified t) 35 45 (face font-lock-string-face fontified t) 45 46 (rear-nonsticky t fontified t)) . 21417) (undo-tree-id4025 . -46) (undo-tree-id4026 . -45) (undo-tree-id4027 . -46) (undo-tree-id4028 . -46) (undo-tree-id4029 . -46) (undo-tree-id4030 . -46) (undo-tree-id4031 . -46) (undo-tree-id4032 . -46) (undo-tree-id4033 . -46) (undo-tree-id4034 . -46) (undo-tree-id4035 . -46) (undo-tree-id4036 . -46) (undo-tree-id4037 . -46) (undo-tree-id4038 . -46) (undo-tree-id4039 . -46) (undo-tree-id4040 . -46) (undo-tree-id4041 . -46) (undo-tree-id4042 . -46) (undo-tree-id4043 . -46) (undo-tree-id4044 . -46) (undo-tree-id4045 . -46) (undo-tree-id4046 . -46) (undo-tree-id4047 . -46) (undo-tree-id4048 . -46) (undo-tree-id4049 . -46) (undo-tree-id4050 . -46) (undo-tree-id4051 . -46) (undo-tree-id4052 . -46) (undo-tree-id4053 . -46) (undo-tree-id4054 . -46) (undo-tree-id4055 . -46) (undo-tree-id4056 . -46) (undo-tree-id4057 . -46) (undo-tree-id4058 . -46) (undo-tree-id4059 . -46) (undo-tree-id4060 . -46) (undo-tree-id4061 . -46) (undo-tree-id4062 . -46) (undo-tree-id4063 . -46) (undo-tree-id4064 . -46) (undo-tree-id4065 . -46) (undo-tree-id4066 . -46) (undo-tree-id4067 . -46) (undo-tree-id4068 . -46) (undo-tree-id4069 . -46) (undo-tree-id4070 . -46) (undo-tree-id4071 . -46) (undo-tree-id4072 . -46) (undo-tree-id4073 . -46) (undo-tree-id4074 . -46) (undo-tree-id4075 . -46) (undo-tree-id4076 . -46) (undo-tree-id4077 . -46) (undo-tree-id4078 . -46) (undo-tree-id4079 . -46) (undo-tree-id4080 . -46) (undo-tree-id4081 . -46) (undo-tree-id4082 . -46) (undo-tree-id4083 . -46) (undo-tree-id4084 . -46) (undo-tree-id4085 . -46) (undo-tree-id4086 . -46) (undo-tree-id4087 . -46) (undo-tree-id4088 . -46) (undo-tree-id4089 . -46) (undo-tree-id4090 . -46) (undo-tree-id4091 . -46) (undo-tree-id4092 . -46) (undo-tree-id4093 . -46)) nil (26030 63778 147372 0) 0 nil])
([nil nil ((#("os.environ['PATH'] += os.pathsep + '/usr/local/bin'
" 0 3 (fontified t) 3 10 (face font-lock-variable-name-face fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 17 (face font-lock-string-face fontified t) 17 18 (face (rainbow-delimiters-depth-1-face) fontified t) 18 19 (fontified t) 19 21 (face font-lock-operator-face fontified t) 21 33 (fontified t) 33 34 (face font-lock-operator-face fontified t) 34 35 (fontified t) 35 51 (face font-lock-string-face fontified t) 51 52 (fontified t)) . 21365) (undo-tree-id3897 . -52) (undo-tree-id3898 . -51) (undo-tree-id3899 . -52) (undo-tree-id3900 . -52) (undo-tree-id3901 . -50) (undo-tree-id3902 . -52) (undo-tree-id3903 . -52) (undo-tree-id3904 . -52) (undo-tree-id3905 . -52) (undo-tree-id3906 . -52) (undo-tree-id3907 . -52) (undo-tree-id3908 . -52) (undo-tree-id3909 . -52) (undo-tree-id3910 . -52) (undo-tree-id3911 . -52) (undo-tree-id3912 . -52) (undo-tree-id3913 . -52) (undo-tree-id3914 . -52) (undo-tree-id3915 . -52) (undo-tree-id3916 . -52) (undo-tree-id3917 . -52) (undo-tree-id3918 . -52) (undo-tree-id3919 . -52) (undo-tree-id3920 . -52) (undo-tree-id3921 . -52) (undo-tree-id3922 . -52) (undo-tree-id3923 . -52) (undo-tree-id3924 . -52) (undo-tree-id3925 . -52) (undo-tree-id3926 . -52) (undo-tree-id3927 . -52) (undo-tree-id3928 . -52) (undo-tree-id3929 . -52) (undo-tree-id3930 . -52) (undo-tree-id3931 . -52) (undo-tree-id3932 . -52) (undo-tree-id3933 . -52) (undo-tree-id3934 . -52) (undo-tree-id3935 . -52) (undo-tree-id3936 . -52) (undo-tree-id3937 . -52) (undo-tree-id3938 . -52) (undo-tree-id3939 . -52) (undo-tree-id3940 . -52) (undo-tree-id3941 . -52) (undo-tree-id3942 . -52) (undo-tree-id3943 . -52) (undo-tree-id3944 . -52) (undo-tree-id3945 . -52) (undo-tree-id3946 . -52) (undo-tree-id3947 . -52) (undo-tree-id3948 . -52) (undo-tree-id3949 . -52) (undo-tree-id3950 . -52) (undo-tree-id3951 . -52) (undo-tree-id3952 . -52) (undo-tree-id3953 . -52) (undo-tree-id3954 . -52) (undo-tree-id3955 . -52) (undo-tree-id3956 . -52) (undo-tree-id3957 . -52) (undo-tree-id3958 . -52) (undo-tree-id3959 . -52) (undo-tree-id3960 . -52) (undo-tree-id3961 . -52) (undo-tree-id3962 . -52) (undo-tree-id3963 . -52) (undo-tree-id3964 . -52) (undo-tree-id3965 . -52) (undo-tree-id3966 . -52) (undo-tree-id3967 . -52) (undo-tree-id3968 . -52) (undo-tree-id3969 . -52) (undo-tree-id3970 . -52) (undo-tree-id3971 . -52) (undo-tree-id3972 . -52) (undo-tree-id3973 . -52) (undo-tree-id3974 . -52) (undo-tree-id3975 . -52) (undo-tree-id3976 . -52) (undo-tree-id3977 . -52) (undo-tree-id3978 . -52) (undo-tree-id3979 . -52) (undo-tree-id3980 . -52) (undo-tree-id3981 . -52) (undo-tree-id3982 . -52) (undo-tree-id3983 . -52) (undo-tree-id3984 . -52) (undo-tree-id3985 . -52) (undo-tree-id3986 . -52) (undo-tree-id3987 . -52) (undo-tree-id3988 . -52) (undo-tree-id3989 . -52) (undo-tree-id3990 . -52) (undo-tree-id3991 . -52) (undo-tree-id3992 . -52) (undo-tree-id3993 . -52) (undo-tree-id3994 . -52) (undo-tree-id3995 . -52) (undo-tree-id3996 . -52) (undo-tree-id3997 . -52) (undo-tree-id3998 . -52) (undo-tree-id3999 . -52) (undo-tree-id4000 . -52) (undo-tree-id4001 . -52) (undo-tree-id4002 . -52) (undo-tree-id4003 . -52) (undo-tree-id4004 . -52) (undo-tree-id4005 . -52) (undo-tree-id4006 . -52) (undo-tree-id4007 . -52) (undo-tree-id4008 . -52) (undo-tree-id4009 . -52) (undo-tree-id4010 . -52) (undo-tree-id4011 . -52) (undo-tree-id4012 . -52) (undo-tree-id4013 . -52) (undo-tree-id4014 . -52) (undo-tree-id4015 . -52) (undo-tree-id4016 . -52) (undo-tree-id4017 . -52) (undo-tree-id4018 . -52) (undo-tree-id4019 . -52) (undo-tree-id4020 . -52) (undo-tree-id4021 . -52) (undo-tree-id4022 . -52) (undo-tree-id4023 . -52) (undo-tree-id4024 . -52)) nil (26030 63778 147330 0) 0 nil])
([nil nil ((#("import os
" 0 6 (face font-lock-keyword-face fontified t) 6 9 (fontified t) 9 10 (fontified t)) . 21354) (undo-tree-id3880 . -9) (undo-tree-id3881 . -10) (undo-tree-id3882 . -10) (undo-tree-id3883 . -10) (undo-tree-id3884 . -10) (undo-tree-id3885 . -10) (undo-tree-id3886 . -10) (undo-tree-id3887 . -10) (undo-tree-id3888 . -10) (undo-tree-id3889 . -10) (undo-tree-id3890 . -10) (undo-tree-id3891 . -10) (undo-tree-id3892 . -10) (undo-tree-id3893 . -10) (undo-tree-id3894 . -10) (undo-tree-id3895 . -10) (undo-tree-id3896 . -10)) nil (26030 63778 147262 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21354) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1)) nil (26030 63778 147248 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 21354) (undo-tree-id3689 . 1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1)) nil (26030 63778 147144 0) 0 nil])
([nil nil ((#("qb" 0 2 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3686 . -1) (undo-tree-id3687 . -2) (undo-tree-id3688 . -2)) nil (26030 63778 147140 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3683 . 1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1)) nil (26030 63778 147138 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3680 . 1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1)) nil (26030 63778 147136 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3677 . 1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1)) nil (26030 63778 147133 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3674 . 1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1)) nil (26030 63778 147131 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3671 . 1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1)) nil (26030 63778 147129 0) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3668 . 1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1)) nil (26030 63778 147127 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3665 . 1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1)) nil (26030 63778 147124 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3662 . 1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1)) nil (26030 63778 147122 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3659 . 1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1)) nil (26030 63778 147119 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3656 . 1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1)) nil (26030 63778 147116 0) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3653 . 1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1)) nil (26030 63778 147114 0) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 21375) (undo-tree-id3650 . 1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1)) nil (26030 63778 147112 0) 0 nil])
([nil nil ((21376 . 21380) (#("t" 0 1 (face font-lock-string-face fontified t)) . -21376) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -21377) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) 21378 (21375 . 21378)) nil (26030 63778 147108 0) 0 nil])
([nil nil ((21395 . 21401) (21390 . 21395) (#("e" 0 1 (face font-lock-string-face fontified t)) . -21390) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) 21391 (21387 . 21391) (#("n" 0 1 (face font-lock-string-face fontified t)) . -21387) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) 21388 (21384 . 21388) (#("s" 0 1 (face font-lock-string-face fontified t)) . -21384) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) 21385 (21384 . 21385) (#("ec" 0 2 (face font-lock-string-face fontified t)) . 21384) (undo-tree-id3592 . -1) (undo-tree-id3593 . -2) (undo-tree-id3594 . -2) (undo-tree-id3595 . -2) (undo-tree-id3596 . -2)) nil (26030 63778 147075 0) 0 nil])
([nil nil ((21416 . 21419) (#("s" 0 1 (face font-lock-string-face fontified t)) . -21416) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) 21417 (21416 . 21417) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -21416) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) 21417 (21408 . 21417) (21404 . 21408) (#("s" 0 1 (fontified t)) . -21404) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (#("i" 0 1 (fontified t)) . -21405) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) 21406 (21404 . 21406) (#("s" 0 1 (fontified t)) . -21404) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (#("i" 0 1 (fontified t)) . -21405) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) 21406 (21404 . 21406)) nil (26030 63778 147037 0) 0 nil])
([nil nil ((1 . 26523) (t 26030 64272 740323 491000) (#("# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(True)

# When to show a changelog after qutebrowser was upgraded.
# Type: String
# Valid values:
#   - major: Show changelog for major upgrades (e.g. v2.0.0 -> v3.0.0).
#   - minor: Show changelog for major and minor upgrades (e.g. v2.0.0 -> v2.1.0).
#   - patch: Show changelog for major, minor and patch upgrades (e.g. v2.0.0 -> v2.0.1).
#   - never: Never show changelog after upgrades.
c.changelog_after_upgrade = 'major'

# Time interval (in milliseconds) between auto-saves of
# config/cookies/etc.
# Type: Int
c.auto_save.interval = 15000

# Automatically start playing `<video>` elements.
# Type: Bool
c.content.autoplay = False

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
c.content.cookies.accept = 'no-unknown-3rdparty'

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'devtools://*')

# Value to send in the `Accept-Language` header. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like \"X11; Linux x86_64\". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: \"Qt\" for QtWebKit, \"QtWebEngine\" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: \"Version\" for QtWebKit, \"Chrome\" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112 Safari/537.36', 'https://*.slack.com/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like \"X11; Linux x86_64\". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: \"Qt\" for QtWebKit, \"QtWebEngine\" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: \"Version\" for QtWebKit, \"Chrome\" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like \"X11; Linux x86_64\". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: \"Qt\" for QtWebKit, \"QtWebEngine\" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: \"Version\" for QtWebKit, \"Chrome\" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Allow JavaScript to read from or write to the clipboard. With
# QtWebEngine, writing the clipboard as response to a user interaction
# is always allowed.
# Type: String
# Valid values:
#   - none: Disable access to clipboard.
#   - access: Allow reading from and writing to the clipboard.
#   - access-paste: Allow accessing the clipboard and pasting clipboard content.
config.set('content.javascript.clipboard', 'access', 'chat.openai.com')

# Allow JavaScript to read from or write to the clipboard. With
# QtWebEngine, writing the clipboard as response to a user interaction
# is always allowed.
# Type: String
# Valid values:
#   - none: Disable access to clipboard.
#   - access: Allow reading from and writing to the clipboard.
#   - access-paste: Allow accessing the clipboard and pasting clipboard content.
config.set('content.javascript.clipboard', 'access', 'github.com')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allow locally loaded documents to access remote URLs.
# Type: Bool
config.set('content.local_content_can_access_remote_urls', True, 'file:///Users/najjt/Library/Application%20Support/qutebrowser/userscripts/*')

# Allow locally loaded documents to access other local URLs.
# Type: Bool
config.set('content.local_content_can_access_file_urls', False, 'file:///Users/najjt/Library/Application%20Support/qutebrowser/userscripts/*')

# Allow websites to show notifications.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
c.content.notifications.enabled = False

# Allow websites to register protocol handlers via
# `navigator.registerProtocolHandler`.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
config.set('content.register_protocol_handler', True, 'https://mail.proton.me#mailto=%25s')

# CSS selectors used to determine which elements on a page should have
# hints.
# Type: Dict
c.hints.selectors = {'all': ['a', 'area', 'textarea', 'select', 'input:not([type=\"hidden\"])', 'button', 'frame', 'iframe', 'img', 'link', 'summary', '[contenteditable]:not([contenteditable=\"false\"])', '[onclick]', '[onmousedown]', '[role=\"link\"]', '[role=\"option\"]', '[role=\"button\"]', '[role=\"tab\"]', '[role=\"checkbox\"]', '[role=\"menuitem\"]', '[role=\"menuitemcheckbox\"]', '[role=\"menuitemradio\"]', '[role=\"treeitem\"]', '[aria-haspopup]', '[ng-click]', '[ngClick]', '[data-ng-click]', '[x-ng-click]', '[tabindex]:not([tabindex=\"-1\"])'], 'links': ['a[href]', 'area[href]', 'link[href]', '[role=\"link\"][href]'], 'images': ['img'], 'media': ['audio', 'img', 'video'], 'url': ['[src]', '[href]'], 'inputs': ['input[type=\"text\"]', 'input[type=\"date\"]', 'input[type=\"datetime-local\"]', 'input[type=\"email\"]', 'input[type=\"month\"]', 'input[type=\"number\"]', 'input[type=\"password\"]', 'input[type=\"search\"]', 'input[type=\"tel\"]', 'input[type=\"time\"]', 'input[type=\"url\"]', 'input[type=\"week\"]', 'input:not([type])', '[contenteditable]:not([contenteditable=\"false\"])', 'textarea'], 'code': [':not(pre) > code', 'pre']}

# When/how to show the scrollbar.
# Type: String
# Valid values:
#   - always: Always show the scrollbar.
#   - never: Never show the scrollbar.
#   - when-searching: Show the scrollbar when searching for text in the webpage. With the QtWebKit backend, this is equal to `never`.
#   - overlay: Show an overlay scrollbar. On macOS, this is unavailable and equal to `when-searching`; with the QtWebKit backend, this is equal to `never`. Enabling/disabling overlay scrollbars requires a restart.
c.scrolling.bar = 'never'

# Enable smooth scrolling for web pages. Note smooth scrolling does not
# work with the `:scroll-px` command.
# Type: Bool
c.scrolling.smooth = True

# When to show the statusbar.
# Type: String
# Valid values:
#   - always: Always show the statusbar.
#   - never: Always hide the statusbar.
#   - in-mode: Show the statusbar when in modes other than normal mode.
c.statusbar.show = 'always'

# How to behave when the last tab is closed. If the
# `tabs.tabs_are_windows` setting is set, this is ignored and the
# behavior is always identical to the `close` value.
# Type: String
# Valid values:
#   - ignore: Don't do anything.
#   - blank: Load a blank page.
#   - startpage: Load the start page.
#   - default-page: Load the default page.
#   - close: Close the window.
c.tabs.last_close = 'close'

# Position of the tab bar.
# Type: Position
# Valid values:
#   - top
#   - bottom
#   - left
#   - right
c.tabs.position = 'bottom'

# When to show the tab bar.
# Type: String
# Valid values:
#   - always: Always show the tab bar.
#   - never: Always hide the tab bar.
#   - multiple: Hide the tab bar if only one tab is open.
#   - switching: Show the tab bar when switching tabs.
c.tabs.show = 'multiple'

# Format to use for the tab title. The following placeholders are
# defined:  * `{perc}`: Percentage as a string like `[10%]`. *
# `{perc_raw}`: Raw percentage, e.g. `10`. * `{current_title}`: Title of
# the current web page. * `{title_sep}`: The string `\" - \"` if a title
# is set, empty otherwise. * `{index}`: Index of this tab. *
# `{aligned_index}`: Index of this tab padded with spaces to have the
# same   width. * `{relative_index}`: Index of this tab relative to the
# current tab. * `{id}`: Internal tab ID of this tab. * `{scroll_pos}`:
# Page scroll position. * `{host}`: Host of the current web page. *
# `{backend}`: Either `webkit` or `webengine` * `{private}`: Indicates
# when private mode is enabled. * `{current_url}`: URL of the current
# web page. * `{protocol}`: Protocol (http/https/...) of the current web
# page. * `{audio}`: Indicator for audio/mute status.
# Type: FormatString
c.tabs.title.format = '{index}: {audio}{current_title}'

# Page to open if :open -t/-b/-w is used without URL. Use `about:blank`
# for a blank page.
# Type: FuzzyUrl
c.url.default_page = 'about:blank'

# Search engines which can be used via the address bar.  Maps a search
# engine name (such as `DEFAULT`, or `ddg`) to a URL with a `{}`
# placeholder. The placeholder will be replaced by the search term, use
# `{{` and `}}` for literal `{`/`}` braces.  The following further
# placeholds are defined to configure how special characters in the
# search terms are replaced by safe characters (called 'quoting'):  *
# `{}` and `{semiquoted}` quote everything except slashes; this is the
# most   sensible choice for almost all search engines (for the search
# term   `slash/and&amp` this placeholder expands to `slash/and%26amp`).
# * `{quoted}` quotes all characters (for `slash/and&amp` this
# placeholder   expands to `slash%2Fand%26amp`). * `{unquoted}` quotes
# nothing (for `slash/and&amp` this placeholder   expands to
# `slash/and&amp`). * `{0}` means the same as `{}`, but can be used
# multiple times.  The search engine named `DEFAULT` is used when
# `url.auto_search` is turned on and something else than a URL was
# entered to be opened. Other search engines can be used by prepending
# the search engine name to the search term, e.g. `:open google
# qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://www.google.com/search?q={}'}

# Page(s) to open at the start.
# Type: List of FuzzyUrl, or FuzzyUrl
c.url.start_pages = 'about:blank'

# Hide the window decoration.  This setting requires a restart on
# Wayland.
# Type: Bool
c.window.hide_decoration = False

# Format to use for the window title. The same placeholders like for
# `tabs.title.format` are defined.
# Type: FormatString
c.window.title_format = ' '

# Set the main window background to transparent.  This allows having a
# transparent tab- or statusbar (might require a compositor such as
# picom). However, it breaks some functionality such as dmenu embedding
# via its `-w` option. On some systems, it was additionally reported
# that main window transparency negatively affects performance.  Note
# this setting only affects windows opened after setting it.
# Type: Bool
c.window.transparent = False

# Default zoom level.
# Type: Perc
c.zoom.default = '110%'

# Text color of the completion widget. May be a single color to use for
# all columns or a list of three colors, one for each column.
# Type: List of QtColor, or QtColor
c.colors.completion.fg = '#b7bec9'

# Background color of the completion widget for odd rows.
# Type: QssColor
c.colors.completion.odd.bg = '#000000'

# Background color of the completion widget for even rows.
# Type: QssColor
c.colors.completion.even.bg = '#000000'

# Foreground color of completion widget category headers.
# Type: QtColor
c.colors.completion.category.fg = '#b7bec9'

# Background color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.bg = '#000000'

# Foreground color of the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.fg = '#b7bec9'

# Background color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.bg = '#000000'

# Foreground color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.fg = '#b7bec9'

# Background color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.bg = '#000000'

# Foreground color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.fg = '#b7bec9'

# Background color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.bg = '#000000'

# Color gradient end for the tab indicator.
# Type: QtColor
c.colors.tabs.indicator.stop = '#638e8a'

# Foreground color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.fg = '#b7bec9'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = '#000000'

# Foreground color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.fg = '#b7bec9'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = '#000000'

# Background color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.bg = '#747474'

# Background color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.bg = '#747474'

# Default font families to use. Whenever \"default_family\" is used in a
# font setting, it's replaced with the fonts listed here. If set to an
# empty value, a system-specific monospace default is used.
# Type: List of Font, or Font
c.fonts.default_family = 'JetBrains Mono'

# Default font size to use. Whenever \"default_size\" is used in a font
# setting, it's replaced with the size listed here. Valid values are
# either a float value with a \"pt\" suffix, or an integer value with a
# \"px\" suffix.
# Type: String
c.fonts.default_size = '15pt'

# Default font size (in pixels) for regular text.
# Type: Int
c.fonts.web.size.default = 20

# Bindings for normal mode
config.bind(',c', 'hint code userscript code_select.py')
config.bind(',m', 'spawn --userscript view_in_mpv')
config.bind(',r', 'spawn --userscript readability')
config.bind('<Ctrl+h>', 'cmd-set-text -s :help')
config.bind('<Ctrl+s>', 'cmd-set-text /')
config.bind('<Meta+x>', 'cmd-set-text :')
config.bind('eu', 'edit-url')
config.bind('j', 'scroll-px 0 200')
config.bind('k', 'scroll-px 0 -200')
config.bind('yo', 'yank inline [[{url}][{title}]]')
config.bind('öd', 'download-open')

# Unbind keys
config.unbind('<Alt+1>')
config.unbind('<Alt+2>')
config.unbind('<Alt+3>')
config.unbind('<Alt+4>')
config.unbind('<Alt+5>')
config.unbind('<Alt+6>')
config.unbind('<Alt+7>')
config.unbind('<Alt+8>')
config.unbind('<Alt+9>')
config.unbind('<Ctrl+w>')

# Bindings for insert mode
config.bind('<Ctrl+a>', 'fake-key <Home>', mode='insert')
config.bind('<Ctrl+d>', 'fake-key <Delete>', mode='insert')
config.bind('<Ctrl+e>', 'fake-key <End>', mode='insert')
config.bind('<Ctrl+f>', 'fake-key <Right>', mode='insert')
config.bind('<Ctrl+h>', 'fake-key <Backspace>', mode='insert')
config.bind('<Ctrl+w>', 'fake-key <Alt-backspace>', mode='insert')
config.bind('<Ctrl+y>', 'insert-text {primary}', mode='insert')

c.editor.command = ['kitty', '--single-instance', 'emacsclient', '{file}']
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-delimiter-face fontified t) 27 28 (face font-lock-comment-face fontified t) 28 30 (face font-lock-comment-delimiter-face fontified t) 30 97 (face font-lock-comment-face fontified t) 97 99 (face font-lock-comment-delimiter-face fontified t) 99 167 (face font-lock-comment-face fontified t) 167 169 (face font-lock-comment-delimiter-face fontified t) 169 226 (face font-lock-comment-face fontified t) 226 228 (face font-lock-comment-delimiter-face fontified t) 228 294 (face font-lock-comment-face fontified t) 294 296 (face font-lock-comment-delimiter-face fontified t) 296 302 (face font-lock-comment-face fontified t) 302 303 (face font-lock-comment-delimiter-face fontified t) 303 304 (face font-lock-comment-face fontified t) 304 306 (face font-lock-comment-delimiter-face fontified t) 306 321 (face font-lock-comment-face fontified t) 321 325 (face font-lock-comment-delimiter-face fontified t) 325 354 (face font-lock-comment-face fontified t) 354 358 (face font-lock-comment-delimiter-face fontified t) 358 384 (face font-lock-comment-face fontified t) 384 385 (fontified t) 385 387 (face font-lock-comment-delimiter-face fontified t) 387 468 (face font-lock-comment-face fontified t) 468 490 (fontified t) 490 491 (face (rainbow-delimiters-depth-1-face) fontified t) 491 495 (face font-lock-constant-face fontified t) 495 496 (face (rainbow-delimiters-depth-1-face) fontified t) 496 498 (fontified t) 498 500 (face font-lock-comment-delimiter-face fontified t) 500 557 (face font-lock-comment-face fontified t) 557 559 (face font-lock-comment-delimiter-face fontified t) 559 572 (face font-lock-comment-face fontified t) 572 574 (face font-lock-comment-delimiter-face fontified t) 574 588 (face font-lock-comment-face fontified t) 588 592 (face font-lock-comment-delimiter-face fontified t) 592 660 (face font-lock-comment-face fontified t) 660 664 (face font-lock-comment-delimiter-face fontified t) 664 742 (face font-lock-comment-face fontified t) 742 746 (face font-lock-comment-delimiter-face fontified t) 746 831 (face font-lock-comment-face fontified t) 831 835 (face font-lock-comment-delimiter-face fontified t) 835 881 (face font-lock-comment-face fontified t) 881 883 (fontified t) 883 906 (face font-lock-variable-name-face fontified t) 906 907 (fontified t) 907 908 (face font-lock-operator-face fontified t) 908 909 (fontified t) 909 916 (face font-lock-string-face fontified t) 916 918 (fontified t) 918 920 (face font-lock-comment-delimiter-face fontified t) 920 974 (face font-lock-comment-face fontified t) 974 976 (face font-lock-comment-delimiter-face fontified t) 976 996 (face font-lock-comment-face fontified t) 996 998 (face font-lock-comment-delimiter-face fontified t) 998 1008 (face font-lock-comment-face fontified t) 1008 1020 (fontified t) 1020 1028 (face font-lock-variable-name-face fontified t) 1028 1029 (fontified t) 1029 1030 (face font-lock-operator-face fontified t) 1030 1038 (fontified t) 1038 1040 (face font-lock-comment-delimiter-face fontified t) 1040 1088 (face font-lock-comment-face fontified t) 1088 1090 (face font-lock-comment-delimiter-face fontified t) 1090 1101 (face font-lock-comment-face fontified t) 1101 1111 (fontified t) 1111 1119 (face font-lock-variable-name-face fontified t) 1119 1120 (fontified t) 1120 1121 (face font-lock-operator-face fontified t) 1121 1122 (fontified t) 1122 1127 (face font-lock-constant-face fontified t) 1127 1129 (fontified t) 1129 1131 (face font-lock-comment-delimiter-face fontified t) 1131 1201 (face font-lock-comment-face fontified t) 1201 1203 (face font-lock-comment-delimiter-face fontified t) 1203 1274 (face font-lock-comment-face fontified t) 1274 1276 (face font-lock-comment-delimiter-face fontified t) 1276 1347 (face font-lock-comment-face fontified t) 1347 1349 (face font-lock-comment-delimiter-face fontified t) 1349 1411 (face font-lock-comment-face fontified t) 1411 1413 (face font-lock-comment-delimiter-face fontified t) 1413 1475 (face font-lock-comment-face fontified t) 1475 1477 (face font-lock-comment-delimiter-face fontified t) 1477 1500 (face font-lock-comment-face fontified t) 1500 1547 (face font-lock-comment-face fontified t) 1547 1549 (face font-lock-comment-delimiter-face fontified t) 1549 1616 (face font-lock-comment-face fontified t) 1616 1618 (face font-lock-comment-delimiter-face fontified t) 1618 1688 (face font-lock-comment-face fontified t) 1688 1690 (face font-lock-comment-delimiter-face fontified t) 1690 1760 (face font-lock-comment-face fontified t) 1760 1762 (face font-lock-comment-delimiter-face fontified t) 1762 1822 (face font-lock-comment-face fontified t) 1822 1824 (face font-lock-comment-delimiter-face fontified t) 1824 1894 (face font-lock-comment-face fontified t) 1894 1896 (face font-lock-comment-delimiter-face fontified t) 1896 1967 (face font-lock-comment-face fontified t) 1967 1969 (face font-lock-comment-delimiter-face fontified t) 1969 2039 (face font-lock-comment-face fontified t) 2039 2041 (face font-lock-comment-delimiter-face fontified t) 2041 2108 (face font-lock-comment-face fontified t) 2108 2110 (face font-lock-comment-delimiter-face fontified t) 2110 2176 (face font-lock-comment-face fontified t) 2176 2178 (face font-lock-comment-delimiter-face fontified t) 2178 2197 (face font-lock-comment-face fontified t) 2197 2199 (face font-lock-comment-delimiter-face fontified t) 2199 2212 (face font-lock-comment-face fontified t) 2212 2214 (face font-lock-comment-delimiter-face fontified t) 2214 2228 (face font-lock-comment-face fontified t) 2228 2232 (face font-lock-comment-delimiter-face fontified t) 2232 2259 (face font-lock-comment-face fontified t) 2259 2263 (face font-lock-comment-delimiter-face fontified t) 2263 2370 (face font-lock-comment-face fontified t) 2370 2374 (face font-lock-comment-delimiter-face fontified t) 2374 2535 (face font-lock-comment-face fontified t) 2535 2539 (face font-lock-comment-delimiter-face fontified t) 2539 2577 (face font-lock-comment-face fontified t) 2577 2595 (fontified t) 2595 2601 (face font-lock-variable-name-face fontified t) 2601 2602 (fontified t) 2602 2603 (face font-lock-operator-face fontified t) 2603 2604 (fontified t) 2604 2625 (face font-lock-string-face fontified t) 2625 2627 (fontified t) 2627 2629 (face font-lock-comment-delimiter-face fontified t) 2629 2699 (face font-lock-comment-face fontified t) 2699 2701 (face font-lock-comment-delimiter-face fontified t) 2701 2772 (face font-lock-comment-face fontified t) 2772 2774 (face font-lock-comment-delimiter-face fontified t) 2774 2845 (face font-lock-comment-face fontified t) 2845 2847 (face font-lock-comment-delimiter-face fontified t) 2847 2909 (face font-lock-comment-face fontified t) 2909 2911 (face font-lock-comment-delimiter-face fontified t) 2911 2973 (face font-lock-comment-face fontified t) 2973 2975 (face font-lock-comment-delimiter-face fontified t) 2975 3045 (face font-lock-comment-face fontified t) 3045 3047 (face font-lock-comment-delimiter-face fontified t) 3047 3114 (face font-lock-comment-face fontified t) 3114 3116 (face font-lock-comment-delimiter-face fontified t) 3116 3186 (face font-lock-comment-face fontified t) 3186 3188 (face font-lock-comment-delimiter-face fontified t) 3188 3258 (face font-lock-comment-face fontified t) 3258 3260 (face font-lock-comment-delimiter-face fontified t) 3260 3320 (face font-lock-comment-face fontified t) 3320 3322 (face font-lock-comment-delimiter-face fontified t) 3322 3392 (face font-lock-comment-face fontified t) 3392 3394 (face font-lock-comment-delimiter-face fontified t) 3394 3465 (face font-lock-comment-face fontified t) 3465 3467 (face font-lock-comment-delimiter-face fontified t) 3467 3537 (face font-lock-comment-face fontified t) 3537 3539 (face font-lock-comment-delimiter-face fontified t) 3539 3606 (face font-lock-comment-face fontified t) 3606 3608 (face font-lock-comment-delimiter-face fontified t) 3608 3674 (face font-lock-comment-face fontified t) 3674 3676 (face font-lock-comment-delimiter-face fontified t) 3676 3695 (face font-lock-comment-face fontified t) 3695 3697 (face font-lock-comment-delimiter-face fontified t) 3697 3710 (face font-lock-comment-face fontified t) 3710 3712 (face font-lock-comment-delimiter-face fontified t) 3712 3726 (face font-lock-comment-face fontified t) 3726 3730 (face font-lock-comment-delimiter-face fontified t) 3730 3757 (face font-lock-comment-face fontified t) 3757 3761 (face font-lock-comment-delimiter-face fontified t) 3761 3868 (face font-lock-comment-face fontified t) 3868 3872 (face font-lock-comment-delimiter-face fontified t) 3872 4033 (face font-lock-comment-face fontified t) 4033 4037 (face font-lock-comment-delimiter-face fontified t) 4037 4075 (face font-lock-comment-face fontified t) 4075 4082 (fontified t) 4082 4085 (face font-lock-builtin-face fontified t) 4085 4086 (face (rainbow-delimiters-depth-1-face) fontified t) 4086 4110 (face font-lock-string-face fontified t) 4110 4112 (fontified t) 4112 4117 (face font-lock-string-face fontified t) 4117 4119 (fontified t) 4119 4140 (face font-lock-string-face fontified t) 4140 4141 (face (rainbow-delimiters-depth-1-face) fontified t) 4141 4143 (fontified t) 4143 4145 (face font-lock-comment-delimiter-face fontified t) 4145 4215 (face font-lock-comment-face fontified t) 4215 4217 (face font-lock-comment-delimiter-face fontified t) 4217 4288 (face font-lock-comment-face fontified t) 4288 4290 (face font-lock-comment-delimiter-face fontified t) 4290 4361 (face font-lock-comment-face fontified t) 4361 4363 (face font-lock-comment-delimiter-face fontified t) 4363 4425 (face font-lock-comment-face fontified t) 4425 4427 (face font-lock-comment-delimiter-face fontified t) 4427 4489 (face font-lock-comment-face fontified t) 4489 4491 (face font-lock-comment-delimiter-face fontified t) 4491 4561 (face font-lock-comment-face fontified t) 4561 4563 (face font-lock-comment-delimiter-face fontified t) 4563 4614 (face font-lock-comment-face fontified t) 4614 4630 (face font-lock-comment-face fontified t) 4630 4632 (face font-lock-comment-delimiter-face fontified t) 4632 4702 (face font-lock-comment-face fontified t) 4702 4704 (face font-lock-comment-delimiter-face fontified t) 4704 4774 (face font-lock-comment-face fontified t) 4774 4776 (face font-lock-comment-delimiter-face fontified t) 4776 4836 (face font-lock-comment-face fontified t) 4836 4838 (face font-lock-comment-delimiter-face fontified t) 4838 4908 (face font-lock-comment-face fontified t) 4908 4910 (face font-lock-comment-delimiter-face fontified t) 4910 4981 (face font-lock-comment-face fontified t) 4981 4983 (face font-lock-comment-delimiter-face fontified t) 4983 5053 (face font-lock-comment-face fontified t) 5053 5055 (face font-lock-comment-delimiter-face fontified t) 5055 5122 (face font-lock-comment-face fontified t) 5122 5124 (face font-lock-comment-delimiter-face fontified t) 5124 5190 (face font-lock-comment-face fontified t) 5190 5192 (face font-lock-comment-delimiter-face fontified t) 5192 5211 (face font-lock-comment-face fontified t) 5211 5213 (face font-lock-comment-delimiter-face fontified t) 5213 5226 (face font-lock-comment-face fontified t) 5226 5228 (face font-lock-comment-delimiter-face fontified t) 5228 5242 (face font-lock-comment-face fontified t) 5242 5246 (face font-lock-comment-delimiter-face fontified t) 5246 5273 (face font-lock-comment-face fontified t) 5273 5277 (face font-lock-comment-delimiter-face fontified t) 5277 5384 (face font-lock-comment-face fontified t) 5384 5388 (face font-lock-comment-delimiter-face fontified t) 5388 5549 (face font-lock-comment-face fontified t) 5549 5553 (face font-lock-comment-delimiter-face fontified t) 5553 5591 (face font-lock-comment-face fontified t) 5591 5598 (fontified t) 5598 5601 (face font-lock-builtin-face fontified t) 5601 5602 (face (rainbow-delimiters-depth-1-face) fontified t) 5602 5626 (face font-lock-string-face fontified t) 5626 5628 (fontified t) 5628 5633 (face font-lock-string-face fontified t) 5633 5635 (fontified t) 5635 5649 (face font-lock-string-face fontified t) 5649 5650 (face (rainbow-delimiters-depth-1-face) fontified t) 5650 5652 (fontified t) 5652 5654 (face font-lock-comment-delimiter-face fontified t) 5654 5721 (face font-lock-comment-face fontified t) 5721 5723 (face font-lock-comment-delimiter-face fontified t) 5723 5772 (face font-lock-comment-face fontified t) 5772 5774 (face font-lock-comment-delimiter-face fontified t) 5774 5787 (face font-lock-comment-face fontified t) 5787 5794 (fontified t) 5794 5797 (face font-lock-builtin-face fontified t) 5797 5798 (face (rainbow-delimiters-depth-1-face) fontified t) 5798 5831 (face font-lock-string-face fontified t) 5831 5833 (fontified t) 5833 5835 (face font-lock-string-face fontified t) 5835 5837 (fontified t) 5837 5870 (face font-lock-string-face fontified t) 5870 5871 (face (rainbow-delimiters-depth-1-face) fontified t) 5871 5873 (fontified t) 5873 5875 (face font-lock-comment-delimiter-face fontified t) 5875 5939 (face font-lock-comment-face fontified t) 5939 5941 (face font-lock-comment-delimiter-face fontified t) 5941 6012 (face font-lock-comment-face fontified t) 6012 6014 (face font-lock-comment-delimiter-face fontified t) 6014 6073 (face font-lock-comment-face fontified t) 6073 6075 (face font-lock-comment-delimiter-face fontified t) 6075 6130 (face font-lock-comment-face fontified t) 6130 6140 (face font-lock-comment-face fontified t) 6140 6142 (face font-lock-comment-delimiter-face fontified t) 6142 6202 (face font-lock-comment-face fontified t) 6202 6204 (face font-lock-comment-delimiter-face fontified t) 6204 6267 (face font-lock-comment-face fontified t) 6267 6269 (face font-lock-comment-delimiter-face fontified t) 6269 6332 (face font-lock-comment-face fontified t) 6332 6334 (face font-lock-comment-delimiter-face fontified t) 6334 6398 (face font-lock-comment-face fontified t) 6398 6400 (face font-lock-comment-delimiter-face fontified t) 6400 6464 (face font-lock-comment-face fontified t) 6464 6466 (face font-lock-comment-delimiter-face fontified t) 6466 6533 (face font-lock-comment-face fontified t) 6533 6535 (face font-lock-comment-delimiter-face fontified t) 6535 6601 (face font-lock-comment-face fontified t) 6601 6603 (face font-lock-comment-delimiter-face fontified t) 6603 6668 (face font-lock-comment-face fontified t) 6668 6670 (face font-lock-comment-delimiter-face fontified t) 6670 6701 (face font-lock-comment-face fontified t) 6701 6703 (face font-lock-comment-delimiter-face fontified t) 6703 6722 (face font-lock-comment-face fontified t) 6722 6729 (fontified t) 6729 6732 (face font-lock-builtin-face fontified t) 6732 6733 (face (rainbow-delimiters-depth-1-face) fontified t) 6733 6761 (face font-lock-string-face fontified t) 6761 6763 (fontified t) 6763 6852 (face font-lock-string-face fontified t) 6852 6854 (fontified t) 6854 6877 (face font-lock-string-face fontified t) 6877 6878 (face (rainbow-delimiters-depth-1-face) fontified t) 6878 6880 (fontified t) 6880 6882 (face font-lock-comment-delimiter-face fontified t) 6882 6946 (face font-lock-comment-face fontified t) 6946 6948 (face font-lock-comment-delimiter-face fontified t) 6948 7019 (face font-lock-comment-face fontified t) 7019 7021 (face font-lock-comment-delimiter-face fontified t) 7021 7080 (face font-lock-comment-face fontified t) 7080 7082 (face font-lock-comment-delimiter-face fontified t) 7082 7147 (face font-lock-comment-face fontified t) 7147 7149 (face font-lock-comment-delimiter-face fontified t) 7149 7209 (face font-lock-comment-face fontified t) 7209 7211 (face font-lock-comment-delimiter-face fontified t) 7211 7274 (face font-lock-comment-face fontified t) 7274 7276 (face font-lock-comment-delimiter-face fontified t) 7276 7339 (face font-lock-comment-face fontified t) 7339 7341 (face font-lock-comment-delimiter-face fontified t) 7341 7405 (face font-lock-comment-face fontified t) 7405 7407 (face font-lock-comment-delimiter-face fontified t) 7407 7471 (face font-lock-comment-face fontified t) 7471 7473 (face font-lock-comment-delimiter-face fontified t) 7473 7540 (face font-lock-comment-face fontified t) 7540 7542 (face font-lock-comment-delimiter-face fontified t) 7542 7608 (face font-lock-comment-face fontified t) 7608 7610 (face font-lock-comment-delimiter-face fontified t) 7610 7640 (face font-lock-comment-face fontified t) 7640 7675 (face font-lock-comment-face fontified t) 7675 7677 (face font-lock-comment-delimiter-face fontified t) 7677 7708 (face font-lock-comment-face fontified t) 7708 7710 (face font-lock-comment-delimiter-face fontified t) 7710 7729 (face font-lock-comment-face fontified t) 7729 7736 (fontified t) 7736 7739 (face font-lock-builtin-face fontified t) 7739 7740 (face (rainbow-delimiters-depth-1-face) fontified t) 7740 7768 (face font-lock-string-face fontified t) 7768 7770 (fontified t) 7770 7918 (face font-lock-string-face fontified t) 7918 7920 (fontified t) 7920 7947 (face font-lock-string-face fontified t) 7947 7948 (face (rainbow-delimiters-depth-1-face) fontified t) 7948 7950 (fontified t) 7950 7952 (face font-lock-comment-delimiter-face fontified t) 7952 8016 (face font-lock-comment-face fontified t) 8016 8018 (face font-lock-comment-delimiter-face fontified t) 8018 8089 (face font-lock-comment-face fontified t) 8089 8091 (face font-lock-comment-delimiter-face fontified t) 8091 8150 (face font-lock-comment-face fontified t) 8150 8152 (face font-lock-comment-delimiter-face fontified t) 8152 8217 (face font-lock-comment-face fontified t) 8217 8219 (face font-lock-comment-delimiter-face fontified t) 8219 8279 (face font-lock-comment-face fontified t) 8279 8281 (face font-lock-comment-delimiter-face fontified t) 8281 8344 (face font-lock-comment-face fontified t) 8344 8346 (face font-lock-comment-delimiter-face fontified t) 8346 8409 (face font-lock-comment-face fontified t) 8409 8411 (face font-lock-comment-delimiter-face fontified t) 8411 8475 (face font-lock-comment-face fontified t) 8475 8477 (face font-lock-comment-delimiter-face fontified t) 8477 8541 (face font-lock-comment-face fontified t) 8541 8543 (face font-lock-comment-delimiter-face fontified t) 8543 8610 (face font-lock-comment-face fontified t) 8610 8612 (face font-lock-comment-delimiter-face fontified t) 8612 8678 (face font-lock-comment-face fontified t) 8678 8680 (face font-lock-comment-delimiter-face fontified t) 8680 8745 (face font-lock-comment-face fontified t) 8745 8747 (face font-lock-comment-delimiter-face fontified t) 8747 8778 (face font-lock-comment-face fontified t) 8778 8780 (face font-lock-comment-delimiter-face fontified t) 8780 8799 (face font-lock-comment-face fontified t) 8799 8806 (fontified t) 8806 8809 (face font-lock-builtin-face fontified t) 8809 8810 (face (rainbow-delimiters-depth-1-face) fontified t) 8810 8838 (face font-lock-string-face fontified t) 8838 8840 (fontified t) 8840 8902 (face font-lock-string-face fontified t) 8902 8904 (fontified t) 8904 8935 (face font-lock-string-face fontified t) 8935 8936 (face (rainbow-delimiters-depth-1-face) fontified t) 8936 8938 (fontified t) 8938 8940 (face font-lock-comment-delimiter-face fontified t) 8940 8980 (face font-lock-comment-face fontified t) 8980 8982 (face font-lock-comment-delimiter-face fontified t) 8982 8993 (face font-lock-comment-face fontified t) 8993 9000 (fontified t) 9000 9003 (face font-lock-builtin-face fontified t) 9003 9004 (face (rainbow-delimiters-depth-1-face) fontified t) 9004 9020 (face font-lock-string-face fontified t) 9020 9022 (fontified t) 9022 9026 (face font-lock-constant-face fontified t) 9026 9028 (fontified t) 9028 9049 (face font-lock-string-face fontified t) 9049 9050 (face (rainbow-delimiters-depth-1-face) fontified t) 9050 9052 (fontified t) 9052 9054 (face font-lock-comment-delimiter-face fontified t) 9054 9094 (face font-lock-comment-face fontified t) 9094 9096 (face font-lock-comment-delimiter-face fontified t) 9096 9107 (face font-lock-comment-face fontified t) 9107 9114 (fontified t) 9114 9117 (face font-lock-builtin-face fontified t) 9117 9118 (face (rainbow-delimiters-depth-1-face) fontified t) 9118 9134 (face font-lock-string-face fontified t) 9134 9136 (fontified t) 9136 9140 (face font-lock-constant-face fontified t) 9140 9142 (fontified t) 9142 9156 (face font-lock-string-face fontified t) 9156 9157 (face (rainbow-delimiters-depth-1-face) fontified t) 9157 9159 (fontified t) 9159 9161 (face font-lock-comment-delimiter-face fontified t) 9161 9175 (face font-lock-comment-face fontified t) 9175 9223 (face font-lock-comment-face fontified t) 9223 9225 (face font-lock-comment-delimiter-face fontified t) 9225 9294 (face font-lock-comment-face fontified t) 9294 9296 (face font-lock-comment-delimiter-face fontified t) 9296 9315 (face font-lock-comment-face fontified t) 9315 9317 (face font-lock-comment-delimiter-face fontified t) 9317 9330 (face font-lock-comment-face fontified t) 9330 9332 (face font-lock-comment-delimiter-face fontified t) 9332 9346 (face font-lock-comment-face fontified t) 9346 9350 (face font-lock-comment-delimiter-face fontified t) 9350 9387 (face font-lock-comment-face fontified t) 9387 9391 (face font-lock-comment-delimiter-face fontified t) 9391 9450 (face font-lock-comment-face fontified t) 9450 9454 (face font-lock-comment-delimiter-face fontified t) 9454 9531 (face font-lock-comment-face fontified t) 9531 9538 (fontified t) 9538 9541 (face font-lock-builtin-face fontified t) 9541 9542 (face (rainbow-delimiters-depth-1-face) fontified t) 9542 9572 (face font-lock-string-face fontified t) 9572 9574 (fontified t) 9574 9582 (face font-lock-string-face fontified t) 9582 9584 (fontified t) 9584 9601 (face font-lock-string-face fontified t) 9601 9602 (face (rainbow-delimiters-depth-1-face) fontified t) 9602 9604 (fontified t) 9604 9606 (face font-lock-comment-delimiter-face fontified t) 9606 9668 (face font-lock-comment-face fontified t) 9668 9670 (face font-lock-comment-delimiter-face fontified t) 9670 9739 (face font-lock-comment-face fontified t) 9739 9741 (face font-lock-comment-delimiter-face fontified t) 9741 9760 (face font-lock-comment-face fontified t) 9760 9762 (face font-lock-comment-delimiter-face fontified t) 9762 9775 (face font-lock-comment-face fontified t) 9775 9777 (face font-lock-comment-delimiter-face fontified t) 9777 9791 (face font-lock-comment-face fontified t) 9791 9795 (face font-lock-comment-delimiter-face fontified t) 9795 9832 (face font-lock-comment-face fontified t) 9832 9836 (face font-lock-comment-delimiter-face fontified t) 9836 9895 (face font-lock-comment-face fontified t) 9895 9899 (face font-lock-comment-delimiter-face fontified t) 9899 9976 (face font-lock-comment-face fontified t) 9976 9983 (fontified t) 9983 9986 (face font-lock-builtin-face fontified t) 9986 9987 (face (rainbow-delimiters-depth-1-face) fontified t) 9987 10017 (face font-lock-string-face fontified t) 10017 10019 (fontified t) 10019 10027 (face font-lock-string-face fontified t) 10027 10029 (fontified t) 10029 10041 (face font-lock-string-face fontified t) 10041 10042 (face (rainbow-delimiters-depth-1-face) fontified t) 10042 10044 (fontified t) 10044 10046 (face font-lock-comment-delimiter-face fontified t) 10046 10065 (face font-lock-comment-face fontified t) 10065 10067 (face font-lock-comment-delimiter-face fontified t) 10067 10078 (face font-lock-comment-face fontified t) 10078 10085 (fontified t) 10085 10088 (face font-lock-builtin-face fontified t) 10088 10089 (face (rainbow-delimiters-depth-1-face) fontified t) 10089 10117 (face font-lock-string-face fontified t) 10117 10119 (fontified t) 10119 10123 (face font-lock-constant-face fontified t) 10123 10125 (fontified t) 10125 10146 (face font-lock-string-face fontified t) 10146 10147 (face (rainbow-delimiters-depth-1-face) fontified t) 10147 10149 (fontified t) 10149 10151 (face font-lock-comment-delimiter-face fontified t) 10151 10170 (face font-lock-comment-face fontified t) 10170 10172 (face font-lock-comment-delimiter-face fontified t) 10172 10183 (face font-lock-comment-face fontified t) 10183 10190 (fontified t) 10190 10193 (face font-lock-builtin-face fontified t) 10193 10194 (face (rainbow-delimiters-depth-1-face) fontified t) 10194 10222 (face font-lock-string-face fontified t) 10222 10224 (fontified t) 10224 10228 (face font-lock-constant-face fontified t) 10228 10230 (fontified t) 10230 10244 (face font-lock-string-face fontified t) 10244 10245 (face (rainbow-delimiters-depth-1-face) fontified t) 10245 10247 (fontified t) 10247 10249 (face font-lock-comment-delimiter-face fontified t) 10249 10268 (face font-lock-comment-face fontified t) 10268 10270 (face font-lock-comment-delimiter-face fontified t) 10270 10281 (face font-lock-comment-face fontified t) 10281 10288 (fontified t) 10288 10291 (face font-lock-builtin-face fontified t) 10291 10292 (face (rainbow-delimiters-depth-1-face) fontified t) 10292 10320 (face font-lock-string-face fontified t) 10320 10322 (fontified t) 10322 10326 (face font-lock-constant-face fontified t) 10326 10328 (fontified t) 10328 10342 (face font-lock-string-face fontified t) 10342 10343 (face (rainbow-delimiters-depth-1-face) fontified t) 10343 10345 (fontified t) 10345 10347 (face font-lock-comment-delimiter-face fontified t) 10347 10366 (face font-lock-comment-face fontified t) 10366 10368 (face font-lock-comment-delimiter-face fontified t) 10368 10379 (face font-lock-comment-face fontified t) 10379 10386 (fontified t) 10386 10389 (face font-lock-builtin-face fontified t) 10389 10390 (face (rainbow-delimiters-depth-1-face) fontified t) 10390 10418 (face font-lock-string-face fontified t) 10418 10420 (fontified t) 10420 10424 (face font-lock-constant-face fontified t) 10424 10426 (fontified t) 10426 10438 (face font-lock-string-face fontified t) 10438 10439 (face (rainbow-delimiters-depth-1-face) fontified t) 10439 10441 (fontified t) 10441 10443 (face font-lock-comment-delimiter-face fontified t) 10443 10497 (face font-lock-comment-face fontified t) 10497 10499 (face font-lock-comment-delimiter-face fontified t) 10499 10510 (face font-lock-comment-face fontified t) 10510 10517 (fontified t) 10517 10520 (face font-lock-builtin-face fontified t) 10520 10521 (face (rainbow-delimiters-depth-1-face) fontified t) 10521 10567 (face font-lock-string-face fontified t) 10567 10569 (fontified t) 10569 10573 (face font-lock-constant-face fontified t) 10573 10575 (fontified t) 10575 10652 (face font-lock-string-face fontified t) 10652 10653 (face (rainbow-delimiters-depth-1-face) fontified t) 10653 10655 (fontified t) 10655 10657 (face font-lock-comment-delimiter-face fontified t) 10657 10716 (face font-lock-comment-face fontified t) 10716 10718 (face font-lock-comment-delimiter-face fontified t) 10718 10729 (face font-lock-comment-face fontified t) 10729 10736 (fontified t) 10736 10739 (face font-lock-builtin-face fontified t) 10739 10740 (face (rainbow-delimiters-depth-1-face) fontified t) 10740 10784 (face font-lock-string-face fontified t) 10784 10786 (fontified t) 10786 10791 (face font-lock-constant-face fontified t) 10791 10793 (fontified t) 10793 10870 (face font-lock-string-face fontified t) 10870 10871 (face (rainbow-delimiters-depth-1-face) fontified t) 10871 10873 (fontified t) 10873 10875 (face font-lock-comment-delimiter-face fontified t) 10875 10913 (face font-lock-comment-face fontified t) 10913 10915 (face font-lock-comment-delimiter-face fontified t) 10915 10929 (face font-lock-comment-face fontified t) 10929 10931 (face font-lock-comment-delimiter-face fontified t) 10931 10945 (face font-lock-comment-face fontified t) 10945 10949 (face font-lock-comment-delimiter-face fontified t) 10949 10956 (face font-lock-comment-face fontified t) 10956 10960 (face font-lock-comment-delimiter-face fontified t) 10960 10968 (face font-lock-comment-face fontified t) 10968 10972 (face font-lock-comment-delimiter-face fontified t) 10972 10978 (face font-lock-comment-face fontified t) 10978 11002 (fontified t) 11002 11009 (face font-lock-variable-name-face fontified t) 11009 11010 (fontified t) 11010 11011 (face font-lock-operator-face fontified t) 11011 11012 (fontified t) 11012 11017 (face font-lock-constant-face fontified t) 11017 11019 (fontified t) 11019 11021 (face font-lock-comment-delimiter-face fontified t) 11021 11070 (face font-lock-comment-face fontified t) 11070 11072 (face font-lock-comment-delimiter-face fontified t) 11072 11109 (face font-lock-comment-face fontified t) 11109 11111 (face font-lock-comment-delimiter-face fontified t) 11111 11125 (face font-lock-comment-face fontified t) 11125 11127 (face font-lock-comment-delimiter-face fontified t) 11127 11141 (face font-lock-comment-face fontified t) 11141 11145 (face font-lock-comment-delimiter-face fontified t) 11145 11152 (face font-lock-comment-face fontified t) 11152 11156 (face font-lock-comment-delimiter-face fontified t) 11156 11164 (face font-lock-comment-face fontified t) 11164 11168 (face font-lock-comment-delimiter-face fontified t) 11168 11174 (face font-lock-comment-face fontified t) 11174 11181 (fontified t) 11181 11184 (face font-lock-builtin-face fontified t) 11184 11185 (face (rainbow-delimiters-depth-1-face) fontified t) 11185 11220 (face font-lock-string-face fontified t) 11220 11222 (fontified t) 11222 11226 (face font-lock-constant-face fontified t) 11226 11228 (fontified t) 11228 11264 (face font-lock-string-face fontified t) 11264 11265 (face (rainbow-delimiters-depth-1-face) fontified t) 11265 11267 (fontified t) 11267 11269 (face font-lock-comment-delimiter-face fontified t) 11269 11338 (face font-lock-comment-face fontified t) 11338 11340 (face font-lock-comment-delimiter-face fontified t) 11340 11347 (face font-lock-comment-face fontified t) 11347 11349 (face font-lock-comment-delimiter-face fontified t) 11349 11360 (face font-lock-comment-face fontified t) 11360 11368 (fontified t) 11368 11377 (face font-lock-variable-name-face fontified t) 11377 11378 (fontified t) 11378 11379 (face font-lock-operator-face fontified t) 11379 11380 (fontified t) 11380 11381 (face (rainbow-delimiters-depth-1-face) fontified t) 11381 11386 (face font-lock-string-face fontified t) 11386 11388 (fontified t) 11388 11389 (face (rainbow-delimiters-depth-2-face) fontified t) 11389 11392 (face font-lock-string-face fontified t) 11392 11394 (fontified t) 11394 11400 (face font-lock-string-face fontified t) 11400 11402 (fontified t) 11402 11412 (face font-lock-string-face fontified t) 11412 11414 (fontified t) 11414 11422 (face font-lock-string-face fontified t) 11422 11424 (fontified t) 11424 11452 (face font-lock-string-face fontified t) 11452 11454 (fontified t) 11454 11462 (face font-lock-string-face fontified t) 11462 11464 (fontified t) 11464 11471 (face font-lock-string-face fontified t) 11471 11473 (fontified t) 11473 11481 (face font-lock-string-face fontified t) 11481 11483 (fontified t) 11483 11488 (face font-lock-string-face fontified t) 11488 11490 (fontified t) 11490 11496 (face font-lock-string-face fontified t) 11496 11498 (fontified t) 11498 11507 (face font-lock-string-face fontified t) 11507 11509 (fontified t) 11509 11559 (face font-lock-string-face fontified t) 11559 11561 (fontified t) 11561 11572 (face font-lock-string-face fontified t) 11572 11574 (fontified t) 11574 11589 (face font-lock-string-face fontified t) 11589 11591 (fontified t) 11591 11606 (face font-lock-string-face fontified t) 11606 11608 (fontified t) 11608 11625 (face font-lock-string-face fontified t) 11625 11627 (fontified t) 11627 11644 (face font-lock-string-face fontified t) 11644 11646 (fontified t) 11646 11660 (face font-lock-string-face fontified t) 11660 11662 (fontified t) 11662 11681 (face font-lock-string-face fontified t) 11681 11683 (fontified t) 11683 11702 (face font-lock-string-face fontified t) 11702 11704 (fontified t) 11704 11731 (face font-lock-string-face fontified t) 11731 11733 (fontified t) 11733 11757 (face font-lock-string-face fontified t) 11757 11759 (fontified t) 11759 11778 (face font-lock-string-face fontified t) 11778 11780 (fontified t) 11780 11797 (face font-lock-string-face fontified t) 11797 11799 (fontified t) 11799 11811 (face font-lock-string-face fontified t) 11811 11813 (fontified t) 11813 11824 (face font-lock-string-face fontified t) 11824 11826 (fontified t) 11826 11843 (face font-lock-string-face fontified t) 11843 11845 (fontified t) 11845 11859 (face font-lock-string-face fontified t) 11859 11861 (fontified t) 11861 11894 (face font-lock-string-face fontified t) 11894 11895 (face (rainbow-delimiters-depth-2-face) fontified t) 11895 11897 (fontified t) 11897 11904 (face font-lock-string-face fontified t) 11904 11906 (fontified t) 11906 11907 (face (rainbow-delimiters-depth-2-face) fontified t) 11907 11916 (face font-lock-string-face fontified t) 11916 11918 (fontified t) 11918 11930 (face font-lock-string-face fontified t) 11930 11932 (fontified t) 11932 11944 (face font-lock-string-face fontified t) 11944 11946 (fontified t) 11946 11967 (face font-lock-string-face fontified t) 11967 11968 (face (rainbow-delimiters-depth-2-face) fontified t) 11968 11970 (fontified t) 11970 11978 (face font-lock-string-face fontified t) 11978 11980 (fontified t) 11980 11981 (face (rainbow-delimiters-depth-2-face) fontified t) 11981 11986 (face font-lock-string-face fontified t) 11986 11987 (face (rainbow-delimiters-depth-2-face) fontified t) 11987 11989 (fontified t) 11989 11996 (face font-lock-string-face fontified t) 11996 11998 (fontified t) 11998 11999 (face (rainbow-delimiters-depth-2-face) fontified t) 11999 12006 (face font-lock-string-face fontified t) 12006 12008 (fontified t) 12008 12013 (face font-lock-string-face fontified t) 12013 12015 (fontified t) 12015 12022 (face font-lock-string-face fontified t) 12022 12023 (face (rainbow-delimiters-depth-2-face) fontified t) 12023 12025 (fontified t) 12025 12030 (face font-lock-string-face fontified t) 12030 12032 (fontified t) 12032 12033 (face (rainbow-delimiters-depth-2-face) fontified t) 12033 12040 (face font-lock-string-face fontified t) 12040 12042 (fontified t) 12042 12050 (face font-lock-string-face fontified t) 12050 12051 (face (rainbow-delimiters-depth-2-face) fontified t) 12051 12053 (fontified t) 12053 12061 (face font-lock-string-face fontified t) 12061 12063 (fontified t) 12063 12064 (face (rainbow-delimiters-depth-2-face) fontified t) 12064 12084 (face font-lock-string-face fontified t) 12084 12086 (fontified t) 12086 12106 (face font-lock-string-face fontified t) 12106 12108 (fontified t) 12108 12138 (face font-lock-string-face fontified t) 12138 12140 (fontified t) 12140 12161 (face font-lock-string-face fontified t) 12161 12163 (fontified t) 12163 12184 (face font-lock-string-face fontified t) 12184 12186 (fontified t) 12186 12208 (face font-lock-string-face fontified t) 12208 12210 (fontified t) 12210 12234 (face font-lock-string-face fontified t) 12234 12236 (fontified t) 12236 12258 (face font-lock-string-face fontified t) 12258 12260 (fontified t) 12260 12279 (face font-lock-string-face fontified t) 12279 12281 (fontified t) 12281 12301 (face font-lock-string-face fontified t) 12301 12303 (fontified t) 12303 12322 (face font-lock-string-face fontified t) 12322 12324 (fontified t) 12324 12344 (face font-lock-string-face fontified t) 12344 12346 (fontified t) 12346 12365 (face font-lock-string-face fontified t) 12365 12367 (fontified t) 12367 12417 (face font-lock-string-face fontified t) 12417 12419 (fontified t) 12419 12429 (face font-lock-string-face fontified t) 12429 12430 (face (rainbow-delimiters-depth-2-face) fontified t) 12430 12432 (fontified t) 12432 12438 (face font-lock-string-face fontified t) 12438 12440 (fontified t) 12440 12441 (face (rainbow-delimiters-depth-2-face) fontified t) 12441 12459 (face font-lock-string-face fontified t) 12459 12461 (fontified t) 12461 12466 (face font-lock-string-face fontified t) 12466 12467 (face (rainbow-delimiters-depth-2-face) fontified t) 12467 12468 (face (rainbow-delimiters-depth-1-face) fontified t) 12468 12470 (fontified t) 12470 12472 (face font-lock-comment-delimiter-face fontified t) 12472 12504 (face font-lock-comment-face fontified t) 12504 12506 (face font-lock-comment-delimiter-face fontified t) 12506 12519 (face font-lock-comment-face fontified t) 12519 12521 (face font-lock-comment-delimiter-face fontified t) 12521 12535 (face font-lock-comment-face fontified t) 12535 12539 (face font-lock-comment-delimiter-face fontified t) 12539 12576 (face font-lock-comment-face fontified t) 12576 12580 (face font-lock-comment-delimiter-face fontified t) 12580 12615 (face font-lock-comment-face fontified t) 12615 12619 (face font-lock-comment-delimiter-face fontified t) 12619 12749 (face font-lock-comment-face fontified t) 12749 12753 (face font-lock-comment-delimiter-face fontified t) 12753 12963 (face font-lock-comment-face fontified t) 12963 12975 (fontified t) 12975 12978 (face font-lock-variable-name-face fontified t) 12978 12979 (fontified t) 12979 12980 (face font-lock-operator-face fontified t) 12980 12981 (fontified t) 12981 12988 (face font-lock-string-face fontified t) 12988 12990 (fontified t) 12990 12992 (face font-lock-comment-delimiter-face fontified t) 12992 13062 (face font-lock-comment-face fontified t) 13062 13064 (face font-lock-comment-delimiter-face fontified t) 13064 13100 (face font-lock-comment-face fontified t) 13100 13102 (face font-lock-comment-delimiter-face fontified t) 13102 13113 (face font-lock-comment-face fontified t) 13113 13125 (fontified t) 13125 13131 (face font-lock-variable-name-face fontified t) 13131 13132 (fontified t) 13132 13133 (face font-lock-operator-face fontified t) 13133 13134 (fontified t) 13134 13138 (face font-lock-constant-face fontified t) 13138 13140 (fontified t) 13140 13142 (face font-lock-comment-delimiter-face fontified t) 13142 13170 (face font-lock-comment-face fontified t) 13170 13172 (face font-lock-comment-delimiter-face fontified t) 13172 13185 (face font-lock-comment-face fontified t) 13185 13187 (face font-lock-comment-delimiter-face fontified t) 13187 13201 (face font-lock-comment-face fontified t) 13201 13205 (face font-lock-comment-delimiter-face fontified t) 13205 13242 (face font-lock-comment-face fontified t) 13242 13246 (face font-lock-comment-delimiter-face fontified t) 13246 13282 (face font-lock-comment-face fontified t) 13282 13286 (face font-lock-comment-delimiter-face fontified t) 13286 13354 (face font-lock-comment-face fontified t) 13354 13366 (fontified t) 13366 13370 (face font-lock-variable-name-face fontified t) 13370 13371 (fontified t) 13371 13372 (face font-lock-operator-face fontified t) 13372 13373 (fontified t) 13373 13381 (face font-lock-string-face fontified t) 13381 13383 (fontified t) 13383 13385 (face font-lock-comment-delimiter-face fontified t) 13385 13435 (face font-lock-comment-face fontified t) 13435 13437 (face font-lock-comment-delimiter-face fontified t) 13437 13501 (face font-lock-comment-face fontified t) 13501 13503 (face font-lock-comment-delimiter-face fontified t) 13503 13554 (face font-lock-comment-face fontified t) 13554 13556 (face font-lock-comment-delimiter-face fontified t) 13556 13569 (face font-lock-comment-face fontified t) 13569 13571 (face font-lock-comment-delimiter-face fontified t) 13571 13585 (face font-lock-comment-face fontified t) 13585 13589 (face font-lock-comment-delimiter-face fontified t) 13589 13618 (face font-lock-comment-face fontified t) 13618 13622 (face font-lock-comment-delimiter-face fontified t) 13622 13650 (face font-lock-comment-face fontified t) 13650 13654 (face font-lock-comment-delimiter-face fontified t) 13654 13688 (face font-lock-comment-face fontified t) 13688 13692 (face font-lock-comment-delimiter-face fontified t) 13692 13731 (face font-lock-comment-face fontified t) 13731 13735 (face font-lock-comment-delimiter-face fontified t) 13735 13762 (face font-lock-comment-face fontified t) 13762 13769 (fontified t) 13769 13779 (face font-lock-variable-name-face fontified t) 13779 13780 (fontified t) 13780 13781 (face font-lock-operator-face fontified t) 13781 13782 (fontified t) 13782 13789 (face font-lock-string-face fontified t) 13789 13791 (fontified t) 13791 13793 (face font-lock-comment-delimiter-face fontified t) 13793 13818 (face font-lock-comment-face fontified t) 13818 13820 (face font-lock-comment-delimiter-face fontified t) 13820 13835 (face font-lock-comment-face fontified t) 13835 13837 (face font-lock-comment-delimiter-face fontified t) 13837 13851 (face font-lock-comment-face fontified t) 13851 13855 (face font-lock-comment-delimiter-face fontified t) 13855 13861 (face font-lock-comment-face fontified t) 13861 13865 (face font-lock-comment-delimiter-face fontified t) 13865 13874 (face font-lock-comment-face fontified t) 13874 13878 (face font-lock-comment-delimiter-face fontified t) 13878 13885 (face font-lock-comment-face fontified t) 13885 13889 (face font-lock-comment-delimiter-face fontified t) 13889 13897 (face font-lock-comment-face fontified t) 13897 13904 (fontified t) 13904 13912 (face font-lock-variable-name-face fontified t) 13912 13913 (fontified t) 13913 13914 (face font-lock-operator-face fontified t) 13914 13915 (fontified t) 13915 13923 (face font-lock-string-face fontified t) 13923 13925 (fontified t) 13925 13927 (face font-lock-comment-delimiter-face fontified t) 13927 13953 (face font-lock-comment-face fontified t) 13953 13955 (face font-lock-comment-delimiter-face fontified t) 13955 13968 (face font-lock-comment-face fontified t) 13968 13970 (face font-lock-comment-delimiter-face fontified t) 13970 13984 (face font-lock-comment-face fontified t) 13984 13988 (face font-lock-comment-delimiter-face fontified t) 13988 14023 (face font-lock-comment-face fontified t) 14023 14027 (face font-lock-comment-delimiter-face fontified t) 14027 14061 (face font-lock-comment-face fontified t) 14061 14065 (face font-lock-comment-delimiter-face fontified t) 14065 14119 (face font-lock-comment-face fontified t) 14119 14123 (face font-lock-comment-delimiter-face fontified t) 14123 14174 (face font-lock-comment-face fontified t) 14174 14181 (fontified t) 14181 14185 (face font-lock-variable-name-face fontified t) 14185 14186 (fontified t) 14186 14187 (face font-lock-operator-face fontified t) 14187 14188 (fontified t) 14188 14198 (face font-lock-string-face fontified t) 14198 14200 (fontified t) 14200 14202 (face font-lock-comment-delimiter-face fontified t) 14202 14266 (face font-lock-comment-face fontified t) 14266 14268 (face font-lock-comment-delimiter-face fontified t) 14268 14329 (face font-lock-comment-face fontified t) 14329 14331 (face font-lock-comment-delimiter-face fontified t) 14331 14402 (face font-lock-comment-face fontified t) 14402 14404 (face font-lock-comment-delimiter-face fontified t) 14404 14473 (face font-lock-comment-face fontified t) 14473 14475 (face font-lock-comment-delimiter-face fontified t) 14475 14534 (face font-lock-comment-face fontified t) 14534 14536 (face font-lock-comment-delimiter-face fontified t) 14536 14604 (face font-lock-comment-face fontified t) 14604 14606 (face font-lock-comment-delimiter-face fontified t) 14606 14676 (face font-lock-comment-face fontified t) 14676 14678 (face font-lock-comment-delimiter-face fontified t) 14678 14748 (face font-lock-comment-face fontified t) 14748 14750 (face font-lock-comment-delimiter-face fontified t) 14750 14816 (face font-lock-comment-face fontified t) 14816 14818 (face font-lock-comment-delimiter-face fontified t) 14818 14887 (face font-lock-comment-face fontified t) 14887 14889 (face font-lock-comment-delimiter-face fontified t) 14889 14957 (face font-lock-comment-face fontified t) 14957 14959 (face font-lock-comment-delimiter-face fontified t) 14959 15030 (face font-lock-comment-face fontified t) 15030 15032 (face font-lock-comment-delimiter-face fontified t) 15032 15084 (face font-lock-comment-face fontified t) 15084 15086 (face font-lock-comment-delimiter-face fontified t) 15086 15105 (face font-lock-comment-face fontified t) 15105 15118 (fontified t) 15118 15124 (face font-lock-builtin-face fontified t) 15124 15125 (fontified t) 15125 15126 (face font-lock-operator-face fontified t) 15126 15127 (fontified t) 15127 15160 (face font-lock-string-face fontified t) 15160 15162 (fontified t) 15162 15164 (face font-lock-comment-delimiter-face fontified t) 15164 15234 (face font-lock-comment-face fontified t) 15234 15236 (face font-lock-comment-delimiter-face fontified t) 15236 15254 (face font-lock-comment-face fontified t) 15254 15256 (face font-lock-comment-delimiter-face fontified t) 15256 15271 (face font-lock-comment-face fontified t) 15271 15277 (fontified t) 15277 15289 (face font-lock-variable-name-face fontified t) 15289 15290 (fontified t) 15290 15291 (face font-lock-operator-face fontified t) 15291 15292 (fontified t) 15292 15305 (face font-lock-string-face fontified t) 15305 15307 (fontified t) 15307 15309 (face font-lock-comment-delimiter-face fontified t) 15309 15378 (face font-lock-comment-face fontified t) 15378 15380 (face font-lock-comment-delimiter-face fontified t) 15380 15443 (face font-lock-comment-face fontified t) 15443 15445 (face font-lock-comment-delimiter-face fontified t) 15445 15515 (face font-lock-comment-face fontified t) 15515 15517 (face font-lock-comment-delimiter-face fontified t) 15517 15582 (face font-lock-comment-face fontified t) 15582 15584 (face font-lock-comment-delimiter-face fontified t) 15584 15619 (face font-lock-comment-face fontified t) 15619 15650 (face font-lock-comment-face fontified t) 15650 15652 (face font-lock-comment-delimiter-face fontified t) 15652 15720 (face font-lock-comment-face fontified t) 15720 15722 (face font-lock-comment-delimiter-face fontified t) 15722 15791 (face font-lock-comment-face fontified t) 15791 15793 (face font-lock-comment-delimiter-face fontified t) 15793 15862 (face font-lock-comment-face fontified t) 15862 15864 (face font-lock-comment-delimiter-face fontified t) 15864 15935 (face font-lock-comment-face fontified t) 15935 15937 (face font-lock-comment-delimiter-face fontified t) 15937 15998 (face font-lock-comment-face fontified t) 15998 16000 (face font-lock-comment-delimiter-face fontified t) 16000 16069 (face font-lock-comment-face fontified t) 16069 16071 (face font-lock-comment-delimiter-face fontified t) 16071 16130 (face font-lock-comment-face fontified t) 16130 16132 (face font-lock-comment-delimiter-face fontified t) 16132 16198 (face font-lock-comment-face fontified t) 16198 16200 (face font-lock-comment-delimiter-face fontified t) 16200 16264 (face font-lock-comment-face fontified t) 16264 16266 (face font-lock-comment-delimiter-face fontified t) 16266 16331 (face font-lock-comment-face fontified t) 16331 16333 (face font-lock-comment-delimiter-face fontified t) 16333 16402 (face font-lock-comment-face fontified t) 16402 16404 (face font-lock-comment-delimiter-face fontified t) 16404 16466 (face font-lock-comment-face fontified t) 16466 16468 (face font-lock-comment-delimiter-face fontified t) 16468 16482 (face font-lock-comment-face fontified t) 16482 16484 (face font-lock-comment-delimiter-face fontified t) 16484 16495 (face font-lock-comment-face fontified t) 16495 16501 (fontified t) 16501 16514 (face font-lock-variable-name-face fontified t) 16514 16515 (fontified t) 16515 16516 (face font-lock-operator-face fontified t) 16516 16517 (fontified t) 16517 16518 (face (rainbow-delimiters-depth-1-face) fontified t) 16518 16527 (face font-lock-string-face fontified t) 16527 16529 (fontified t) 16529 16565 (face font-lock-string-face fontified t) 16565 16566 (face (rainbow-delimiters-depth-1-face) fontified t) 16566 16568 (fontified t) 16568 16570 (face font-lock-comment-delimiter-face fontified t) 16570 16600 (face font-lock-comment-face fontified t) 16600 16602 (face font-lock-comment-delimiter-face fontified t) 16602 16638 (face font-lock-comment-face fontified t) 16638 16644 (fontified t) 16644 16655 (face font-lock-variable-name-face fontified t) 16655 16656 (fontified t) 16656 16657 (face font-lock-operator-face fontified t) 16657 16658 (fontified t) 16658 16671 (face font-lock-string-face fontified t) 16671 16673 (fontified t) 16673 16675 (face font-lock-comment-delimiter-face fontified t) 16675 16739 (face font-lock-comment-face fontified t) 16739 16741 (face font-lock-comment-delimiter-face fontified t) 16741 16750 (face font-lock-comment-face fontified t) 16750 16752 (face font-lock-comment-delimiter-face fontified t) 16752 16763 (face font-lock-comment-face fontified t) 16763 16772 (fontified t) 16772 16787 (face font-lock-variable-name-face fontified t) 16787 16788 (fontified t) 16788 16789 (face font-lock-operator-face fontified t) 16789 16790 (fontified t) 16790 16795 (face font-lock-constant-face fontified t) 16795 16797 (fontified t) 16797 16799 (face font-lock-comment-delimiter-face fontified t) 16799 16866 (face font-lock-comment-face fontified t) 16866 16868 (face font-lock-comment-delimiter-face fontified t) 16868 16901 (face font-lock-comment-face fontified t) 16901 16903 (face font-lock-comment-delimiter-face fontified t) 16903 16922 (face font-lock-comment-face fontified t) 16922 16931 (fontified t) 16931 16943 (face font-lock-variable-name-face fontified t) 16943 16944 (fontified t) 16944 16945 (face font-lock-operator-face fontified t) 16945 16946 (fontified t) 16946 16949 (face font-lock-string-face fontified t) 16949 16951 (fontified t) 16951 16953 (face font-lock-comment-delimiter-face fontified t) 16953 17022 (face font-lock-comment-face fontified t) 17022 17024 (face font-lock-comment-delimiter-face fontified t) 17024 17090 (face font-lock-comment-face fontified t) 17090 17092 (face font-lock-comment-delimiter-face fontified t) 17092 17162 (face font-lock-comment-face fontified t) 17162 17164 (face font-lock-comment-delimiter-face fontified t) 17164 17231 (face font-lock-comment-face fontified t) 17231 17233 (face font-lock-comment-delimiter-face fontified t) 17233 17301 (face font-lock-comment-face fontified t) 17301 17303 (face font-lock-comment-delimiter-face fontified t) 17303 17362 (face font-lock-comment-face fontified t) 17362 17364 (face font-lock-comment-delimiter-face fontified t) 17364 17375 (face font-lock-comment-face fontified t) 17375 17384 (fontified t) 17384 17395 (face font-lock-variable-name-face fontified t) 17395 17396 (fontified t) 17396 17397 (face font-lock-operator-face fontified t) 17397 17398 (fontified t) 17398 17403 (face font-lock-constant-face fontified t) 17403 17405 (fontified t) 17405 17407 (face font-lock-comment-delimiter-face fontified t) 17407 17427 (face font-lock-comment-face fontified t) 17427 17429 (face font-lock-comment-delimiter-face fontified t) 17429 17440 (face font-lock-comment-face fontified t) 17440 17447 (fontified t) 17447 17454 (face font-lock-variable-name-face fontified t) 17454 17455 (fontified t) 17455 17456 (face font-lock-operator-face fontified t) 17456 17457 (fontified t) 17457 17463 (face font-lock-string-face fontified t) 17463 17465 (fontified t) 17465 17467 (face font-lock-comment-delimiter-face fontified t) 17467 17537 (face font-lock-comment-face fontified t) 17537 17539 (face font-lock-comment-delimiter-face fontified t) 17539 17599 (face font-lock-comment-face fontified t) 17599 17601 (face font-lock-comment-delimiter-face fontified t) 17601 17635 (face font-lock-comment-face fontified t) 17635 17655 (fontified t) 17655 17657 (face font-lock-variable-name-face fontified t) 17657 17658 (fontified t) 17658 17659 (face font-lock-operator-face fontified t) 17659 17660 (fontified t) 17660 17669 (face font-lock-string-face fontified t) 17669 17671 (fontified t) 17671 17673 (face font-lock-comment-delimiter-face fontified t) 17673 17729 (face font-lock-comment-face fontified t) 17729 17731 (face font-lock-comment-delimiter-face fontified t) 17731 17746 (face font-lock-comment-face fontified t) 17746 17770 (fontified t) 17770 17772 (face font-lock-variable-name-face fontified t) 17772 17773 (fontified t) 17773 17774 (face font-lock-operator-face fontified t) 17774 17775 (fontified t) 17775 17784 (face font-lock-string-face fontified t) 17784 17786 (fontified t) 17786 17788 (face font-lock-comment-delimiter-face fontified t) 17788 17845 (face font-lock-comment-face fontified t) 17845 17847 (face font-lock-comment-delimiter-face fontified t) 17847 17862 (face font-lock-comment-face fontified t) 17862 17887 (fontified t) 17887 17889 (face font-lock-variable-name-face fontified t) 17889 17890 (fontified t) 17890 17891 (face font-lock-operator-face fontified t) 17891 17892 (fontified t) 17892 17901 (face font-lock-string-face fontified t) 17901 17903 (fontified t) 17903 17905 (face font-lock-comment-delimiter-face fontified t) 17905 17961 (face font-lock-comment-face fontified t) 17961 17963 (face font-lock-comment-delimiter-face fontified t) 17963 17977 (face font-lock-comment-face fontified t) 17977 18006 (fontified t) 18006 18008 (face font-lock-variable-name-face fontified t) 18008 18009 (fontified t) 18009 18010 (face font-lock-operator-face fontified t) 18010 18011 (fontified t) 18011 18020 (face font-lock-string-face fontified t) 18020 18022 (fontified t) 18022 18024 (face font-lock-comment-delimiter-face fontified t) 18024 18084 (face font-lock-comment-face fontified t) 18084 18086 (face font-lock-comment-delimiter-face fontified t) 18086 18101 (face font-lock-comment-face fontified t) 18101 18130 (fontified t) 18130 18132 (face font-lock-variable-name-face fontified t) 18132 18133 (fontified t) 18133 18134 (face font-lock-operator-face fontified t) 18134 18135 (fontified t) 18135 18144 (face font-lock-string-face fontified t) 18144 18146 (fontified t) 18146 18148 (face font-lock-comment-delimiter-face fontified t) 18148 18198 (face font-lock-comment-face fontified t) 18198 18200 (face font-lock-comment-delimiter-face fontified t) 18200 18214 (face font-lock-comment-face fontified t) 18214 18248 (fontified t) 18248 18250 (face font-lock-variable-name-face fontified t) 18250 18251 (fontified t) 18251 18252 (face font-lock-operator-face fontified t) 18252 18253 (fontified t) 18253 18262 (face font-lock-string-face fontified t) 18262 18264 (fontified t) 18264 18266 (face font-lock-comment-delimiter-face fontified t) 18266 18290 (face font-lock-comment-face fontified t) 18290 18316 (face font-lock-comment-face fontified t) 18316 18318 (face font-lock-comment-delimiter-face fontified t) 18318 18333 (face font-lock-comment-face fontified t) 18333 18367 (fontified t) 18367 18369 (face font-lock-variable-name-face fontified t) 18369 18370 (fontified t) 18370 18371 (face font-lock-operator-face fontified t) 18371 18372 (fontified t) 18372 18381 (face font-lock-string-face fontified t) 18381 18383 (fontified t) 18383 18385 (face font-lock-comment-delimiter-face fontified t) 18385 18420 (face font-lock-comment-face fontified t) 18420 18422 (face font-lock-comment-delimiter-face fontified t) 18422 18437 (face font-lock-comment-face fontified t) 18437 18463 (fontified t) 18463 18465 (face font-lock-variable-name-face fontified t) 18465 18466 (fontified t) 18466 18467 (face font-lock-operator-face fontified t) 18467 18468 (fontified t) 18468 18477 (face font-lock-string-face fontified t) 18477 18479 (fontified t) 18479 18481 (face font-lock-comment-delimiter-face fontified t) 18481 18516 (face font-lock-comment-face fontified t) 18516 18518 (face font-lock-comment-delimiter-face fontified t) 18518 18533 (face font-lock-comment-face fontified t) 18533 18559 (fontified t) 18559 18561 (face font-lock-variable-name-face fontified t) 18561 18562 (fontified t) 18562 18563 (face font-lock-operator-face fontified t) 18563 18564 (fontified t) 18564 18573 (face font-lock-string-face fontified t) 18573 18575 (fontified t) 18575 18577 (face font-lock-comment-delimiter-face fontified t) 18577 18628 (face font-lock-comment-face fontified t) 18628 18630 (face font-lock-comment-delimiter-face fontified t) 18630 18645 (face font-lock-comment-face fontified t) 18645 18672 (fontified t) 18672 18674 (face font-lock-variable-name-face fontified t) 18674 18675 (fontified t) 18675 18676 (face font-lock-operator-face fontified t) 18676 18677 (fontified t) 18677 18686 (face font-lock-string-face fontified t) 18686 18688 (fontified t) 18688 18690 (face font-lock-comment-delimiter-face fontified t) 18690 18741 (face font-lock-comment-face fontified t) 18741 18743 (face font-lock-comment-delimiter-face fontified t) 18743 18758 (face font-lock-comment-face fontified t) 18758 18785 (fontified t) 18785 18787 (face font-lock-variable-name-face fontified t) 18787 18788 (fontified t) 18788 18789 (face font-lock-operator-face fontified t) 18789 18790 (fontified t) 18790 18799 (face font-lock-string-face fontified t) 18799 18801 (fontified t) 18801 18803 (face font-lock-comment-delimiter-face fontified t) 18803 18845 (face font-lock-comment-face fontified t) 18845 18847 (face font-lock-comment-delimiter-face fontified t) 18847 18861 (face font-lock-comment-face fontified t) 18861 18885 (fontified t) 18885 18889 (face font-lock-variable-name-face fontified t) 18889 18890 (fontified t) 18890 18891 (face font-lock-operator-face fontified t) 18891 18892 (fontified t) 18892 18901 (face font-lock-string-face fontified t) 18901 18903 (fontified t) 18903 18905 (face font-lock-comment-delimiter-face fontified t) 18905 18946 (face font-lock-comment-face fontified t) 18946 18948 (face font-lock-comment-delimiter-face fontified t) 18948 18962 (face font-lock-comment-face fontified t) 18962 18980 (fontified t) 18980 18982 (face font-lock-variable-name-face fontified t) 18982 18983 (fontified t) 18983 18984 (face font-lock-operator-face fontified t) 18984 18985 (fontified t) 18985 18994 (face font-lock-string-face fontified t) 18994 18996 (fontified t) 18996 18998 (face font-lock-comment-delimiter-face fontified t) 18998 19039 (face font-lock-comment-face fontified t) 19039 19041 (face font-lock-comment-delimiter-face fontified t) 19041 19055 (face font-lock-comment-face fontified t) 19055 19073 (fontified t) 19073 19075 (face font-lock-variable-name-face fontified t) 19075 19076 (fontified t) 19076 19077 (face font-lock-operator-face fontified t) 19077 19078 (fontified t) 19078 19087 (face font-lock-string-face fontified t) 19087 19089 (fontified t) 19089 19091 (face font-lock-comment-delimiter-face fontified t) 19091 19133 (face font-lock-comment-face fontified t) 19133 19135 (face font-lock-comment-delimiter-face fontified t) 19135 19149 (face font-lock-comment-face fontified t) 19149 19168 (fontified t) 19168 19170 (face font-lock-variable-name-face fontified t) 19170 19171 (fontified t) 19171 19172 (face font-lock-operator-face fontified t) 19172 19173 (fontified t) 19173 19182 (face font-lock-string-face fontified t) 19182 19184 (fontified t) 19184 19186 (face font-lock-comment-delimiter-face fontified t) 19186 19228 (face font-lock-comment-face fontified t) 19228 19230 (face font-lock-comment-delimiter-face fontified t) 19230 19244 (face font-lock-comment-face fontified t) 19244 19263 (fontified t) 19263 19265 (face font-lock-variable-name-face fontified t) 19265 19266 (fontified t) 19266 19267 (face font-lock-operator-face fontified t) 19267 19268 (fontified t) 19268 19277 (face font-lock-string-face fontified t) 19277 19279 (fontified t) 19279 19281 (face font-lock-comment-delimiter-face fontified t) 19281 19320 (face font-lock-comment-face fontified t) 19320 19322 (face font-lock-comment-delimiter-face fontified t) 19322 19336 (face font-lock-comment-face fontified t) 19336 19363 (fontified t) 19363 19365 (face font-lock-variable-name-face fontified t) 19365 19366 (fontified t) 19366 19367 (face font-lock-operator-face fontified t) 19367 19368 (fontified t) 19368 19377 (face font-lock-string-face fontified t) 19377 19379 (fontified t) 19379 19381 (face font-lock-comment-delimiter-face fontified t) 19381 19421 (face font-lock-comment-face fontified t) 19421 19423 (face font-lock-comment-delimiter-face fontified t) 19423 19437 (face font-lock-comment-face fontified t) 19437 19465 (fontified t) 19465 19467 (face font-lock-variable-name-face fontified t) 19467 19468 (fontified t) 19468 19469 (face font-lock-operator-face fontified t) 19469 19470 (fontified t) 19470 19479 (face font-lock-string-face fontified t) 19479 19481 (fontified t) 19481 19483 (face font-lock-comment-delimiter-face fontified t) 19483 19552 (face font-lock-comment-face fontified t) 19552 19554 (face font-lock-comment-delimiter-face fontified t) 19554 19623 (face font-lock-comment-face fontified t) 19623 19625 (face font-lock-comment-delimiter-face fontified t) 19625 19683 (face font-lock-comment-face fontified t) 19683 19685 (face font-lock-comment-delimiter-face fontified t) 19685 19713 (face font-lock-comment-face fontified t) 19713 19721 (fontified t) 19721 19735 (face font-lock-variable-name-face fontified t) 19735 19736 (fontified t) 19736 19737 (face font-lock-operator-face fontified t) 19737 19738 (fontified t) 19738 19754 (face font-lock-string-face fontified t) 19754 19756 (fontified t) 19756 19758 (face font-lock-comment-delimiter-face fontified t) 19758 19816 (face font-lock-comment-face fontified t) 19816 19826 (face font-lock-comment-face fontified t) 19826 19828 (face font-lock-comment-delimiter-face fontified t) 19828 19895 (face font-lock-comment-face fontified t) 19895 19897 (face font-lock-comment-delimiter-face fontified t) 19897 19965 (face font-lock-comment-face fontified t) 19965 19967 (face font-lock-comment-delimiter-face fontified t) 19967 19980 (face font-lock-comment-face fontified t) 19980 19982 (face font-lock-comment-delimiter-face fontified t) 19982 19995 (face font-lock-comment-face fontified t) 19995 20003 (fontified t) 20003 20015 (face font-lock-variable-name-face fontified t) 20015 20016 (fontified t) 20016 20017 (face font-lock-operator-face fontified t) 20017 20018 (fontified t) 20018 20024 (face font-lock-string-face fontified t) 20024 20026 (fontified t) 20026 20028 (face font-lock-comment-delimiter-face fontified t) 20028 20076 (face font-lock-comment-face fontified t) 20076 20078 (face font-lock-comment-delimiter-face fontified t) 20078 20088 (face font-lock-comment-face fontified t) 20088 20105 (fontified t) 20105 20112 (face font-lock-variable-name-face fontified t) 20112 20113 (fontified t) 20113 20114 (face font-lock-operator-face fontified t) 20114 20119 (fontified t) 20119 20121 (face font-lock-comment-delimiter-face fontified t) 20121 20146 (face font-lock-comment-face fontified t) 20146 20157 (fontified t) 20157 20158 (face (rainbow-delimiters-depth-1-face) fontified t) 20158 20162 (face font-lock-string-face fontified t) 20162 20164 (fontified t) 20164 20201 (face font-lock-string-face fontified t) 20201 20202 (face (rainbow-delimiters-depth-1-face) fontified t) 20202 20214 (fontified t) 20214 20215 (face (rainbow-delimiters-depth-1-face) fontified t) 20215 20219 (face font-lock-string-face fontified t) 20219 20221 (fontified t) 20221 20253 (face font-lock-string-face fontified t) 20253 20254 (face (rainbow-delimiters-depth-1-face) fontified t) 20254 20266 (fontified t) 20266 20267 (face (rainbow-delimiters-depth-1-face) fontified t) 20267 20271 (face font-lock-string-face fontified t) 20271 20273 (fontified t) 20273 20305 (face font-lock-string-face fontified t) 20305 20306 (face (rainbow-delimiters-depth-1-face) fontified t) 20306 20318 (fontified t) 20318 20319 (face (rainbow-delimiters-depth-1-face) fontified t) 20319 20329 (face font-lock-string-face fontified t) 20329 20331 (fontified t) 20331 20354 (face font-lock-string-face fontified t) 20354 20355 (face (rainbow-delimiters-depth-1-face) fontified t) 20355 20367 (fontified t) 20367 20368 (face (rainbow-delimiters-depth-1-face) fontified t) 20368 20378 (face font-lock-string-face fontified t) 20378 20380 (fontified t) 20380 20396 (face font-lock-string-face fontified t) 20396 20397 (face (rainbow-delimiters-depth-1-face) fontified t) 20397 20409 (fontified t) 20409 20410 (face (rainbow-delimiters-depth-1-face) fontified t) 20410 20420 (face font-lock-string-face fontified t) 20420 20422 (fontified t) 20422 20438 (face font-lock-string-face fontified t) 20438 20439 (face (rainbow-delimiters-depth-1-face) fontified t) 20439 20451 (fontified t) 20451 20452 (face (rainbow-delimiters-depth-1-face) fontified t) 20452 20456 (face font-lock-string-face fontified t) 20456 20458 (fontified t) 20458 20468 (face font-lock-string-face fontified t) 20468 20469 (face (rainbow-delimiters-depth-1-face) fontified t) 20469 20481 (fontified t) 20481 20482 (face (rainbow-delimiters-depth-1-face) fontified t) 20482 20485 (face font-lock-string-face fontified t) 20485 20487 (fontified t) 20487 20504 (face font-lock-string-face fontified t) 20504 20505 (face (rainbow-delimiters-depth-1-face) fontified t) 20505 20517 (fontified t) 20517 20518 (face (rainbow-delimiters-depth-1-face) fontified t) 20518 20521 (face font-lock-string-face fontified t) 20521 20523 (fontified t) 20523 20541 (face font-lock-string-face fontified t) 20541 20542 (face (rainbow-delimiters-depth-1-face) fontified t) 20542 20554 (fontified t) 20554 20555 (face (rainbow-delimiters-depth-1-face) fontified t) 20555 20559 (face font-lock-string-face fontified t) 20559 20561 (fontified t) 20561 20593 (face font-lock-string-face fontified t) 20593 20594 (face (rainbow-delimiters-depth-1-face) fontified t) 20594 20595 (fontified t) 20595 20606 (fontified t) 20606 20607 (face (rainbow-delimiters-depth-1-face) fontified t) 20607 20611 (face font-lock-string-face fontified t) 20611 20613 (fontified t) 20613 20628 (face font-lock-string-face fontified t) 20628 20629 (face (rainbow-delimiters-depth-1-face) fontified t) 20629 20630 (fontified t) 20630 20631 (fontified t) 20631 20633 (face font-lock-comment-delimiter-face fontified t) 20633 20644 (face font-lock-comment-face fontified t) 20644 20645 (face font-lock-comment-face rear-nonsticky t fontified t) 20645 20658 (fontified t) 20658 20659 (face (rainbow-delimiters-depth-1-face) fontified t) 20659 20668 (face font-lock-string-face fontified t) 20668 20669 (face (rainbow-delimiters-depth-1-face) fontified t) 20669 20670 (fontified t rear-nonsticky t) 20670 20683 (fontified t) 20683 20684 (face (rainbow-delimiters-depth-1-face) fontified t) 20684 20690 (face font-lock-string-face fontified t) 20690 20691 (face font-lock-string-face fontified t) 20691 20693 (face font-lock-string-face fontified t) 20693 20694 (face (rainbow-delimiters-depth-1-face) fontified t) 20694 20695 (fontified t rear-nonsticky t) 20695 20708 (fontified t) 20708 20709 (face (rainbow-delimiters-depth-1-face) fontified t) 20709 20715 (face font-lock-string-face fontified t) 20715 20716 (face font-lock-string-face fontified t) 20716 20718 (face font-lock-string-face fontified t) 20718 20719 (face (rainbow-delimiters-depth-1-face) fontified t) 20719 20720 (fontified t rear-nonsticky t) 20720 20733 (fontified t) 20733 20734 (face (rainbow-delimiters-depth-1-face) fontified t) 20734 20740 (face font-lock-string-face fontified t) 20740 20741 (face font-lock-string-face fontified t) 20741 20743 (face font-lock-string-face fontified t) 20743 20744 (face (rainbow-delimiters-depth-1-face) fontified t) 20744 20745 (fontified t rear-nonsticky t) 20745 20758 (fontified t) 20758 20759 (face (rainbow-delimiters-depth-1-face) fontified t) 20759 20765 (face font-lock-string-face fontified t) 20765 20766 (face font-lock-string-face fontified t) 20766 20768 (face font-lock-string-face fontified t) 20768 20769 (face (rainbow-delimiters-depth-1-face) fontified t) 20769 20770 (fontified t rear-nonsticky t) 20770 20783 (fontified t) 20783 20784 (face (rainbow-delimiters-depth-1-face) fontified t) 20784 20790 (face font-lock-string-face fontified t) 20790 20791 (face font-lock-string-face fontified t) 20791 20793 (face font-lock-string-face fontified t) 20793 20794 (face (rainbow-delimiters-depth-1-face) fontified t) 20794 20795 (fontified t rear-nonsticky t) 20795 20808 (fontified t) 20808 20809 (face (rainbow-delimiters-depth-1-face) fontified t) 20809 20815 (face font-lock-string-face fontified t) 20815 20816 (face font-lock-string-face fontified t) 20816 20818 (face font-lock-string-face fontified t) 20818 20819 (face (rainbow-delimiters-depth-1-face) fontified t) 20819 20820 (fontified t rear-nonsticky t) 20820 20833 (fontified t) 20833 20834 (face (rainbow-delimiters-depth-1-face) fontified t) 20834 20840 (face font-lock-string-face fontified t) 20840 20841 (face font-lock-string-face fontified t) 20841 20843 (face font-lock-string-face fontified t) 20843 20844 (face (rainbow-delimiters-depth-1-face) fontified t) 20844 20845 (fontified t rear-nonsticky t) 20845 20858 (fontified t) 20858 20859 (face (rainbow-delimiters-depth-1-face) fontified t) 20859 20865 (face font-lock-string-face fontified t) 20865 20866 (face font-lock-string-face fontified t) 20866 20868 (face font-lock-string-face fontified t) 20868 20869 (face (rainbow-delimiters-depth-1-face) fontified t) 20869 20870 (fontified t) 20870 20883 (fontified t) 20883 20884 (face (rainbow-delimiters-depth-1-face) fontified t) 20884 20894 (face font-lock-string-face fontified t) 20894 20895 (face (rainbow-delimiters-depth-1-face) fontified t) 20895 20896 (fontified t) 20896 20897 (fontified t) 20897 20899 (face font-lock-comment-delimiter-face fontified t) 20899 20924 (face font-lock-comment-face fontified t) 20924 20935 (fontified t) 20935 20936 (face (rainbow-delimiters-depth-1-face) fontified t) 20936 20937 (face font-lock-string-face fontified t) 20937 20938 (face font-lock-string-face fontified t) 20938 20942 (face font-lock-string-face fontified t) 20942 20943 (face font-lock-string-face fontified t) 20943 20944 (face font-lock-string-face fontified t) 20944 20945 (face font-lock-string-face fontified t) 20945 20946 (face font-lock-string-face fontified t) 20946 20948 (fontified t) 20948 20949 (face font-lock-string-face fontified t) 20949 20953 (face font-lock-string-face fontified t) 20953 20954 (face font-lock-string-face fontified t) 20954 20958 (face font-lock-string-face fontified t) 20958 20959 (face font-lock-string-face fontified t) 20959 20963 (face font-lock-string-face fontified t) 20963 20964 (face font-lock-string-face fontified t) 20964 20965 (face font-lock-string-face fontified t) 20965 20971 (fontified t) 20971 20972 (face font-lock-operator-face fontified t) 20972 20973 (face font-lock-string-face fontified t) 20973 20979 (face font-lock-string-face fontified t) 20979 20980 (face font-lock-string-face fontified t) 20980 20981 (face (rainbow-delimiters-depth-1-face) fontified t) 20981 20993 (fontified t) 20993 20994 (face (rainbow-delimiters-depth-1-face) fontified t) 20994 20995 (face font-lock-string-face fontified t) 20995 20996 (face font-lock-string-face fontified t) 20996 21000 (face font-lock-string-face fontified t) 21000 21001 (face font-lock-string-face fontified t) 21001 21002 (face font-lock-string-face fontified t) 21002 21003 (face font-lock-string-face fontified t) 21003 21004 (face font-lock-string-face fontified t) 21004 21006 (fontified t) 21006 21007 (face font-lock-string-face fontified t) 21007 21011 (face font-lock-string-face fontified t) 21011 21012 (face font-lock-string-face fontified t) 21012 21016 (face font-lock-string-face fontified t) 21016 21017 (face font-lock-string-face fontified t) 21017 21023 (face font-lock-string-face fontified t) 21023 21024 (face font-lock-string-face fontified t) 21024 21025 (face font-lock-string-face fontified t) 21025 21031 (fontified t) 21031 21032 (face font-lock-operator-face fontified t) 21032 21033 (face font-lock-string-face fontified t) 21033 21039 (face font-lock-string-face fontified t) 21039 21040 (face font-lock-string-face fontified t) 21040 21041 (face (rainbow-delimiters-depth-1-face) fontified t) 21041 21053 (fontified t) 21053 21054 (face (rainbow-delimiters-depth-1-face) fontified t) 21054 21055 (face font-lock-string-face fontified t) 21055 21056 (face font-lock-string-face fontified t) 21056 21060 (face font-lock-string-face fontified t) 21060 21061 (face font-lock-string-face fontified t) 21061 21062 (face font-lock-string-face fontified t) 21062 21063 (face font-lock-string-face fontified t) 21063 21064 (face font-lock-string-face fontified t) 21064 21066 (fontified t) 21066 21067 (face font-lock-string-face fontified t) 21067 21071 (face font-lock-string-face fontified t) 21071 21072 (face font-lock-string-face fontified t) 21072 21076 (face font-lock-string-face fontified t) 21076 21077 (face font-lock-string-face fontified t) 21077 21080 (face font-lock-string-face fontified t) 21080 21081 (face font-lock-string-face fontified t) 21081 21082 (face font-lock-string-face fontified t) 21082 21088 (fontified t) 21088 21089 (face font-lock-operator-face fontified t) 21089 21090 (face font-lock-string-face fontified t) 21090 21096 (face font-lock-string-face fontified t) 21096 21097 (face font-lock-string-face fontified t) 21097 21098 (face (rainbow-delimiters-depth-1-face) fontified t) 21098 21110 (fontified t) 21110 21111 (face (rainbow-delimiters-depth-1-face) fontified t) 21111 21112 (face font-lock-string-face fontified t) 21112 21113 (face font-lock-string-face fontified t) 21113 21117 (face font-lock-string-face fontified t) 21117 21118 (face font-lock-string-face fontified t) 21118 21119 (face font-lock-string-face fontified t) 21119 21120 (face font-lock-string-face fontified t) 21120 21121 (face font-lock-string-face fontified t) 21121 21123 (fontified t) 21123 21124 (face font-lock-string-face fontified t) 21124 21128 (face font-lock-string-face fontified t) 21128 21129 (face font-lock-string-face fontified t) 21129 21133 (face font-lock-string-face fontified t) 21133 21134 (face font-lock-string-face fontified t) 21134 21139 (face font-lock-string-face fontified t) 21139 21140 (face font-lock-string-face fontified t) 21140 21141 (face font-lock-string-face fontified t) 21141 21147 (fontified t) 21147 21148 (face font-lock-operator-face fontified t) 21148 21149 (face font-lock-string-face fontified t) 21149 21155 (face font-lock-string-face fontified t) 21155 21156 (face font-lock-string-face fontified t) 21156 21157 (face (rainbow-delimiters-depth-1-face) fontified t) 21157 21169 (fontified t) 21169 21170 (face (rainbow-delimiters-depth-1-face) fontified t) 21170 21171 (face font-lock-string-face fontified t) 21171 21172 (face font-lock-string-face fontified t) 21172 21176 (face font-lock-string-face fontified t) 21176 21177 (face font-lock-string-face fontified t) 21177 21178 (face font-lock-string-face fontified t) 21178 21179 (face font-lock-string-face fontified t) 21179 21180 (face font-lock-string-face fontified t) 21180 21182 (fontified t) 21182 21183 (face font-lock-string-face fontified t) 21183 21187 (face font-lock-string-face fontified t) 21187 21188 (face font-lock-string-face fontified t) 21188 21192 (face font-lock-string-face fontified t) 21192 21193 (face font-lock-string-face fontified t) 21193 21202 (face font-lock-string-face fontified t) 21202 21203 (face font-lock-string-face fontified t) 21203 21204 (face font-lock-string-face fontified t) 21204 21210 (fontified t) 21210 21211 (face font-lock-operator-face fontified t) 21211 21212 (face font-lock-string-face fontified t) 21212 21218 (face font-lock-string-face fontified t) 21218 21219 (face font-lock-string-face fontified t) 21219 21220 (face (rainbow-delimiters-depth-1-face) fontified t) 21220 21232 (fontified t) 21232 21233 (face (rainbow-delimiters-depth-1-face) fontified t) 21233 21234 (face font-lock-string-face fontified t) 21234 21235 (face font-lock-string-face fontified t) 21235 21239 (face font-lock-string-face fontified t) 21239 21240 (face font-lock-string-face fontified t) 21240 21241 (face font-lock-string-face fontified t) 21241 21242 (face font-lock-string-face fontified t) 21242 21243 (face font-lock-string-face fontified t) 21243 21245 (fontified t) 21245 21246 (face font-lock-string-face fontified t) 21246 21250 (face font-lock-string-face fontified t) 21250 21251 (face font-lock-string-face fontified t) 21251 21255 (face font-lock-string-face fontified t) 21255 21256 (face font-lock-string-face fontified t) 21256 21259 (face font-lock-string-face fontified t) 21259 21260 (face font-lock-string-face fontified t) 21260 21269 (face font-lock-string-face fontified t) 21269 21270 (face font-lock-string-face fontified t) 21270 21271 (face font-lock-string-face fontified t) 21271 21277 (fontified t) 21277 21278 (face font-lock-operator-face fontified t) 21278 21279 (face font-lock-string-face fontified t) 21279 21285 (face font-lock-string-face fontified t) 21285 21286 (face font-lock-string-face fontified t) 21286 21287 (face (rainbow-delimiters-depth-1-face) fontified t) 21287 21288 (fontified t) 21288 21299 (fontified t) 21299 21300 (face (rainbow-delimiters-depth-1-face) fontified t) 21300 21301 (face font-lock-string-face fontified t) 21301 21302 (face font-lock-string-face fontified t) 21302 21306 (face font-lock-string-face fontified t) 21306 21307 (face font-lock-string-face fontified t) 21307 21308 (face font-lock-string-face fontified t) 21308 21309 (face font-lock-string-face fontified t) 21309 21310 (face font-lock-string-face fontified t) 21310 21312 (fontified t) 21312 21313 (face font-lock-string-face fontified t) 21313 21319 (face font-lock-string-face fontified t) 21319 21320 (face font-lock-string-face fontified t) 21320 21325 (face font-lock-string-face fontified t) 21325 21326 (face font-lock-string-face fontified t) 21326 21333 (face font-lock-string-face fontified t) 21333 21334 (face font-lock-string-face fontified t) 21334 21335 (face font-lock-string-face fontified t) 21335 21341 (fontified t) 21341 21342 (face font-lock-operator-face fontified t) 21342 21343 (face font-lock-string-face fontified t) 21343 21349 (face font-lock-string-face fontified t) 21349 21350 (face font-lock-string-face fontified t) 21350 21351 (face (rainbow-delimiters-depth-1-face) fontified t) 21351 21352 (fontified t) 21352 21353 (fontified t) 21353 21362 (fontified t) 21362 21369 (face font-lock-variable-name-face fontified t) 21369 21370 (fontified t) 21370 21371 (face font-lock-operator-face fontified t) 21371 21372 (fontified t) 21372 21373 (face (rainbow-delimiters-depth-1-face) fontified t) 21373 21380 (face font-lock-string-face fontified t) 21380 21382 (fontified t) 21382 21401 (face font-lock-string-face fontified t) 21401 21403 (fontified t) 21403 21416 (face font-lock-string-face fontified t) 21416 21418 (fontified t) 21418 21419 (face font-lock-string-face fontified t) 21419 21420 (face font-lock-string-face fontified t) 21420 21424 (face font-lock-string-face fontified t) 21424 21425 (face font-lock-string-face fontified t) 21425 21426 (face font-lock-string-face fontified t) 21426 21427 (face (rainbow-delimiters-depth-1-face) fontified t) 21427 21428 (fontified t rear-nonsticky t)) . 1) (undo-tree-id4519 . -21353) (undo-tree-id4520 . 10) (undo-tree-id4521 . -21383) (undo-tree-id4522 . -21383) (undo-tree-id4523 . -20645) (undo-tree-id4524 . -20645) (undo-tree-id4525 . -19149) (undo-tree-id4526 . -20026) (undo-tree-id4527 . -21352) (undo-tree-id4528 . -24) (undo-tree-id4529 . -21353) (undo-tree-id4530 . 75) (undo-tree-id4531 . -21353) (undo-tree-id4532 . -21353) (undo-tree-id4533 . -21352) (undo-tree-id4534 . -21352) (undo-tree-id4535 . -21352) (undo-tree-id4536 . -21352) (undo-tree-id4537 . -21352) (undo-tree-id4538 . -21352) (undo-tree-id4539 . -21353) (undo-tree-id4540 . -21353) (undo-tree-id4541 . -21353) (undo-tree-id4542 . -21221) (undo-tree-id4543 . -21353) (undo-tree-id4544 . -21353) (undo-tree-id4545 . -21403) (undo-tree-id4546 . -21403) (undo-tree-id4547 . -21428) (undo-tree-id4548 . -21428) (undo-tree-id4549 . -21428) (undo-tree-id4550 . -21383) (undo-tree-id4551 . -21383) (undo-tree-id4552 . -21353) (undo-tree-id4553 . -21353) (undo-tree-id4554 . -21353) (undo-tree-id4555 . -21418) (undo-tree-id4556 . -21221) (t 26030 63778 155127 691000)) nil (26030 64382 597562 0) 0 nil])
([nil nil ((1966 . 1968) (#("d" 0 1 (fontified t)) . -1966) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (#("o" 0 1 (fontified t)) . -1967) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) 1968 (1966 . 1968) (t 26030 64272 748689 882000)) nil (26030 64382 597539 0) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-comment-face fontified t)) . 1990) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1)) nil (26030 64382 597502 0) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-comment-face fontified t)) . 1990) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1)) nil (26030 64382 597488 0) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-comment-face fontified t)) . 1990) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1)) nil (26030 64382 597451 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 1989) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1)) nil (26030 64382 597430 0) 0 nil])
([nil nil ((1990 . 1992) (#("\"" 0 1 (face font-lock-comment-face fontified t)) . -1990) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) 1991 (1989 . 1991)) nil (26030 64382 597327 0) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 18181) (t 26030 64382 611195 663000)) nil (26031 47990 908123 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 18181)) nil (26031 47990 908122 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . 18181)) nil (26031 47990 908122 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . 18181)) nil (26031 47990 908121 0) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . 18181)) nil (26031 47990 908121 0) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . 18181)) nil (26031 47990 908120 0) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 18181)) nil (26031 47990 908120 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 18181)) nil (26031 47990 908119 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 18181)) nil (26031 47990 908118 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908118 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908117 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908117 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908116 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908116 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908116 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908115 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908115 0) 0 nil])
([nil nil ((18181 . 18182)) nil (26031 47990 908114 0) 0 nil])
([nil nil ((18155 . 18156) (t 26030 64382 611195 663000)) nil (26031 47990 908110 0) 0 nil])
([nil nil ((25208 . 25209) (#("5" 0 1 (face font-lock-string-face fontified t)) . 25208) (undo-tree-id0 . -1) (t 26031 47990 919085 412000)) nil (26034 33707 954268 0) 0 nil])
([nil current ((25208 . 25209) (#("4" 0 1 (face font-lock-string-face fontified t)) . 25208) (undo-tree-id1 . -1) (t 26034 33707 964687 599000)) nil (26034 33725 314186 0) 0 nil])
nil
